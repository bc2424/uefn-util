#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FunctionalTesting

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "FunctionalTesting_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "CoreUObject_classes.hpp"


namespace SDK
{

// Class FunctionalTesting.AutomationViewSettings
// 0x0010 (0x0048 - 0x0038)
class UAutomationViewSettings final : public UDataAsset
{
public:
	bool                                          AntiAliasing;                                      // 0x0038(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          MotionBlur;                                        // 0x0039(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          TemporalAA;                                        // 0x003A(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ScreenSpaceReflections;                            // 0x003B(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ScreenSpaceAO;                                     // 0x003C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          DistanceFieldAO;                                   // 0x003D(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ContactShadows;                                    // 0x003E(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          EyeAdaptation;                                     // 0x003F(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Bloom;                                             // 0x0040(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AutomationViewSettings">();
	}
	static class UAutomationViewSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAutomationViewSettings>();
	}
};

// Class FunctionalTesting.AutomationEditorTask
// 0x0008 (0x0038 - 0x0030)
class UAutomationEditorTask final : public UObject
{
public:
	uint8                                         Pad_30[0x8];                                       // 0x0030(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	bool IsTaskDone() const;
	bool IsValidTask() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AutomationEditorTask">();
	}
	static class UAutomationEditorTask* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAutomationEditorTask>();
	}
};

// Class FunctionalTesting.AutomationBlueprintFunctionLibrary
// 0x0000 (0x0030 - 0x0030)
class UAutomationBlueprintFunctionLibrary final : public UBlueprintFunctionLibrary
{
public:
	static void AddExpectedLogError(const class FString& ExpectedPatternString, int32 Occurrences, bool ExactMatch, bool IsRegex);
	static void AddExpectedLogMessage(const class FString& ExpectedPatternString, int32 Occurrences, bool ExactMatch, bool IsRegex);
	static void AddExpectedPlainLogError(const class FString& ExpectedString, int32 Occurrences, bool ExactMatch);
	static void AddExpectedPlainLogMessage(const class FString& ExpectedString, int32 Occurrences, bool ExactMatch);
	static void AddTestError(const class FString& InLogItem);
	static void AddTestInfo(const class FString& InLogItem);
	static void AddTestTelemetryData(const class FString& DataPoint, float Measurement, const class FString& Context);
	static void AddTestWarning(const class FString& InLogItem);
	static bool AreAutomatedTestsRunning();
	static void AutomationWaitForLoading(class UObject* WorldContextObject, const struct FLatentActionInfo& LatentInfo, const struct FAutomationWaitForLoadingOptions& Options);
	static bool CompareImageAgainstReference(const class FString& ImageFilePath, const class FString& ComparisonName, EComparisonTolerance ComparisonTolerance, const class FString& ComparisonNotes, class UObject* WorldContextObject);
	static void DisableStatGroup(class UObject* WorldContextObject, class FName GroupName);
	static void EnableStatGroup(class UObject* WorldContextObject, class FName GroupName);
	static void FinishLoadingBeforeScreenshot();
	static struct FAutomationScreenshotOptions GetDefaultScreenshotOptionsForGameplay(EComparisonTolerance Tolerance, float Delay);
	static struct FAutomationScreenshotOptions GetDefaultScreenshotOptionsForRendering(EComparisonTolerance Tolerance, float Delay);
	static float GetStatCallCount(class FName StatName);
	static float GetStatExcAverage(class FName StatName);
	static float GetStatExcMax(class FName StatName);
	static float GetStatIncAverage(class FName StatName);
	static float GetStatIncMax(class FName StatName);
	static void SetEditorViewportViewMode(EViewModeIndex Index_0);
	static void SetEditorViewportVisualizeBuffer(class FName BufferName);
	static void SetScalabilityQualityLevelRelativeToMax(class UObject* WorldContextObject, int32 Value);
	static void SetScalabilityQualityToEpic(class UObject* WorldContextObject);
	static void SetScalabilityQualityToLow(class UObject* WorldContextObject);
	static void SetTestTelemetryStorage(const class FString& StorageName);
	static void TakeAutomationScreenshot(class UObject* WorldContextObject, const struct FLatentActionInfo& LatentInfo, const class FString& Name_0, const class FString& Notes, const struct FAutomationScreenshotOptions& Options);
	static void TakeAutomationScreenshotAtCamera(class UObject* WorldContextObject, const struct FLatentActionInfo& LatentInfo, class ACameraActor* Camera, const class FString& NameOverride, const class FString& Notes, const struct FAutomationScreenshotOptions& Options);
	static void TakeAutomationScreenshotOfUI(class UObject* WorldContextObject, const struct FLatentActionInfo& LatentInfo, const class FString& Name_0, const struct FAutomationScreenshotOptions& Options);
	static class UAutomationEditorTask* TakeHighResScreenshot(int32 ResX, int32 ResY, const class FString& Filename, class ACameraActor* Camera, bool bMaskEnabled, bool bCaptureHDR, EComparisonTolerance ComparisonTolerance, const class FString& ComparisonNotes, float Delay, bool bForceGameView);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AutomationBlueprintFunctionLibrary">();
	}
	static class UAutomationBlueprintFunctionLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAutomationBlueprintFunctionLibrary>();
	}
};

// Class FunctionalTesting.FuncTestRenderingComponent
// 0x0000 (0x0570 - 0x0570)
class UFuncTestRenderingComponent final : public UPrimitiveComponent
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FuncTestRenderingComponent">();
	}
	static class UFuncTestRenderingComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFuncTestRenderingComponent>();
	}
};

// Class FunctionalTesting.FunctionalTest
// 0x0148 (0x0568 - 0x0420)
class AFunctionalTest : public AActor
{
public:
	class FString                                 TestLabel;                                         // 0x0420(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Author;                                            // 0x0430(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Description;                                       // 0x0440(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBillboardComponent*                    SpriteComponent;                                   // 0x0450(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         bIsEnabled : 1;                                    // 0x0458(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         Pad_459[0x3];                                      // 0x0459(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	EFunctionalTestLogHandling                    LogErrorHandling;                                  // 0x045C(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EFunctionalTestLogHandling                    LogWarningHandling;                                // 0x045D(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_45E[0x2];                                      // 0x045E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 ObservationPoint;                                  // 0x0460(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         bShouldDelayGarbageCollection : 1;                 // 0x0468(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         Pad_469[0x3];                                      // 0x0469(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRandomStream                          RandomNumbersStream;                               // 0x046C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, AdvancedDisplay, Protected, NativeAccessSpecifierProtected)
	EFunctionalTestResult                         Result;                                            // 0x0474(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_475[0x3];                                      // 0x0475(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         PreparationTimeLimit;                              // 0x0478(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TimeLimit;                                         // 0x047C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   TimesUpMessage;                                    // 0x0480(0x0010)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	EFunctionalTestResult                         TimesUpResult;                                     // 0x0490(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_491[0x7];                                      // 0x0491(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              OnTestPrepare;                                     // 0x0498(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnTestStart;                                       // 0x04A8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnTestFinished;                                    // 0x04B8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<class AActor*>                         AutoDestroyActors;                                 // 0x04C8(0x0010)(ZeroConstructor, Transient, UObjectWrapper, NativeAccessSpecifierPublic)
	uint8                                         Pad_4D8[0x10];                                     // 0x04D8(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class UFuncTestRenderingComponent*            RenderComp;                                        // 0x04E8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, EditorOnly, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextRenderComponent*                   TestName;                                          // 0x04F0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, EditorOnly, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4F8[0x30];                                     // 0x04F8(0x0030)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bIsRunning;                                        // 0x0528(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_529[0x17];                                     // 0x0529(0x0017)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TotalTime;                                         // 0x0540(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_544[0x24];                                     // 0x0544(0x0024)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void AddError(const class FString& Message);
	void AddInfo(const class FString& Message);
	void AddRerun(class FName Reason);
	void AddWarning(const class FString& Message);
	bool AssertEqual_Bool(bool Actual, bool Expected, const class FString& What, const class UObject* ContextObject);
	bool AssertEqual_Box2D(const struct FBox2D& Actual, const struct FBox2D& Expected, const class FString& What, float Tolerance, const class UObject* ContextObject);
	bool AssertEqual_Double(double Actual, double Expected, const class FString& What, double Tolerance, const class UObject* ContextObject);
	bool AssertEqual_Float(float Actual, float Expected, const class FString& What, float Tolerance, const class UObject* ContextObject);
	bool AssertEqual_Int(int32 Actual, int32 Expected, const class FString& What, const class UObject* ContextObject);
	bool AssertEqual_Matrix(const struct FMatrix& Actual, const struct FMatrix& Expected, const class FString& What, float Tolerance, const class UObject* ContextObject);
	bool AssertEqual_Name(class FName Actual, class FName Expected, const class FString& What, const class UObject* ContextObject);
	bool AssertEqual_Object(class UObject* Actual, class UObject* Expected, const class FString& What, const class UObject* ContextObject);
	bool AssertEqual_Plane(const struct FPlane& Actual, const struct FPlane& Expected, const class FString& What, float Tolerance, const class UObject* ContextObject);
	bool AssertEqual_Quat(const struct FQuat& Actual, const struct FQuat& Expected, const class FString& What, float Tolerance, const class UObject* ContextObject);
	bool AssertEqual_Rotator(const struct FRotator& Actual, const struct FRotator& Expected, const class FString& What, float Tolerance, const class UObject* ContextObject);
	bool AssertEqual_RotatorOrientation(const struct FRotator& Actual, const struct FRotator& Expected, const class FString& What, float Tolerance, const class UObject* ContextObject);
	bool AssertEqual_String(const class FString& Actual, const class FString& Expected, const class FString& What, const class UObject* ContextObject);
	bool AssertEqual_TraceQueryResults(const class UTraceQueryTestResults* Actual, const class UTraceQueryTestResults* Expected, const class FString& What, const class UObject* ContextObject);
	bool AssertEqual_Transform(const struct FTransform& Actual, const struct FTransform& Expected, const class FString& What, float Tolerance, const class UObject* ContextObject);
	bool AssertEqual_Vector(const struct FVector& Actual, const struct FVector& Expected, const class FString& What, float Tolerance, const class UObject* ContextObject);
	bool AssertEqual_Vector2D(const struct FVector2D& Actual, const struct FVector2D& Expected, const class FString& What, float Tolerance, const class UObject* ContextObject);
	bool AssertEqual_Vector4(const struct FVector4& Actual, const struct FVector4& Expected, const class FString& What, float Tolerance, const class UObject* ContextObject);
	bool AssertFalse(bool Condition, const class FString& Message, const class UObject* ContextObject);
	bool AssertIsValid(class UObject* Object, const class FString& Message, const class UObject* ContextObject);
	bool AssertNotEqual_Box2D(const struct FBox2D& Actual, const struct FBox2D& NotExpected, const class FString& What, const class UObject* ContextObject);
	bool AssertNotEqual_Matrix(const struct FMatrix& Actual, const struct FMatrix& NotExpected, const class FString& What, const class UObject* ContextObject);
	bool AssertNotEqual_Plane(const struct FPlane& Actual, const struct FPlane& NotExpected, const class FString& What, const class UObject* ContextObject);
	bool AssertNotEqual_Quat(const struct FQuat& Actual, const struct FQuat& NotExpected, const class FString& What, const class UObject* ContextObject);
	bool AssertNotEqual_Rotator(const struct FRotator& Actual, const struct FRotator& NotExpected, const class FString& What, const class UObject* ContextObject);
	bool AssertNotEqual_String(const class FString& Actual, const class FString& NotExpected, const class FString& What, const class UObject* ContextObject);
	bool AssertNotEqual_Transform(const struct FTransform& Actual, const struct FTransform& NotExpected, const class FString& What, const class UObject* ContextObject);
	bool AssertNotEqual_Vector(const struct FVector& Actual, const struct FVector& NotExpected, const class FString& What, const class UObject* ContextObject);
	bool AssertNotEqual_Vector2D(const struct FVector2D& Actual, const struct FVector2D& NotExpected, const class FString& What, const class UObject* ContextObject);
	bool AssertNotEqual_Vector4(const struct FVector4& Actual, const struct FVector4& NotExpected, const class FString& What, const class UObject* ContextObject);
	bool AssertTrue(bool Condition, const class FString& Message, const class UObject* ContextObject);
	bool AssertValue_DateTime(const struct FDateTime& Actual, EComparisonMethod ShouldBe, const struct FDateTime& Expected, const class FString& What, const class UObject* ContextObject);
	bool AssertValue_Double(double Actual, EComparisonMethod ShouldBe, double Expected, const class FString& What, const class UObject* ContextObject);
	bool AssertValue_Float(float Actual, EComparisonMethod ShouldBe, float Expected, const class FString& What, const class UObject* ContextObject);
	bool AssertValue_Int(int32 Actual, EComparisonMethod ShouldBe, int32 Expected, const class FString& What, const class UObject* ContextObject);
	void FinishTest(EFunctionalTestResult TestResult, const class FString& Message);
	bool IsReady();
	void LogMessage(const class FString& Message);
	void ReceivePrepareTest();
	void ReceiveStartTest();
	void RegisterAutoDestroyActor(class AActor* ActorToAutoDestroy);
	void SetConsoleVariable(const class FString& Name_0, const class FString& InValue);
	void SetConsoleVariableFromBoolean(const class FString& Name_0, const bool InValue);
	void SetConsoleVariableFromFloat(const class FString& Name_0, const float InValue);
	void SetConsoleVariableFromInteger(const class FString& Name_0, const int32 InValue);
	void SetTimeLimit(float NewTimeLimit, EFunctionalTestResult ResultWhenTimeRunsOut);

	TArray<class AActor*> DebugGatherRelevantActors() const;
	class FName GetCurrentRerunReason() const;
	bool IsEnabled() const;
	bool IsRunning() const;
	class FString OnAdditionalTestFinishedMessageRequest(EFunctionalTestResult TestResult) const;
	bool OnWantsReRunCheck() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FunctionalTest">();
	}
	static class AFunctionalTest* GetDefaultObj()
	{
		return GetDefaultObjImpl<AFunctionalTest>();
	}
};

// Class FunctionalTesting.FunctionalAITestBase
// 0x00A0 (0x0608 - 0x0568)
class AFunctionalAITestBase : public AFunctionalTest
{
public:
	float                                         SpawnLocationRandomizationRange;                   // 0x0568(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_56C[0x4];                                      // 0x056C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class APawn*>                          SpawnedPawns;                                      // 0x0570(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TArray<struct FPendingDelayedSpawn>           PendingDelayedSpawns;                              // 0x0580(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	int32                                         CurrentSpawnSetIndex;                              // 0x0590(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_594[0x4];                                      // 0x0594(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CurrentSpawnSetName;                               // 0x0598(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMulticastInlineDelegate<void(class AAIController* Controller, class APawn* Pawn)> OnAISpawned;                                       // 0x05A8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	TMulticastInlineDelegate<void()>              OnAllAISPawned;                                    // 0x05B8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	struct FVector                                NavMeshDebugOrigin;                                // 0x05C8(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                NavMeshDebugExtent;                                // 0x05E0(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         bWaitForNavMesh : 1;                               // 0x05F8(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         bDebugNavMeshOnTimeout : 1;                        // 0x05F8(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         Pad_5F9[0xF];                                      // 0x05F9(0x000F)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	bool IsOneOfSpawnedPawns(class AActor* Actor);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FunctionalAITestBase">();
	}
	static class AFunctionalAITestBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<AFunctionalAITestBase>();
	}
};

// Class FunctionalTesting.AutomationPerformaceHelper
// 0x0038 (0x0068 - 0x0030)
class UAutomationPerformaceHelper final : public UObject
{
public:
	uint8                                         Pad_30[0x38];                                      // 0x0030(0x0038)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BeginRecording(const class FString& RecordName, float InGPUBudget, float InRenderThreadBudget, float InGameThreadBudget);
	void BeginRecordingBaseline(const class FString& RecordName);
	void BeginStatsFile(const class FString& RecordName);
	void EndRecording();
	void EndRecordingBaseline();
	void EndStatsFile();
	void OnAllTestsComplete();
	void OnBeginTests();
	void Sample(float DeltaSeconds);
	void StartCPUProfiling();
	void StopCPUProfiling();
	void Tick(float DeltaSeconds);
	void TriggerGPUTraceIfRecordFallsBelowBudget();
	void WriteLogFile(const class FString& CaptureDir, const class FString& CaptureExtension);

	bool IsCurrentRecordWithinGameThreadBudget() const;
	bool IsCurrentRecordWithinGPUBudget() const;
	bool IsCurrentRecordWithinRenderThreadBudget() const;
	bool IsRecording() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AutomationPerformaceHelper">();
	}
	static class UAutomationPerformaceHelper* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAutomationPerformaceHelper>();
	}
};

// Class FunctionalTesting.FunctionalAITest
// 0x0010 (0x0618 - 0x0608)
class AFunctionalAITest final : public AFunctionalAITestBase
{
public:
	TArray<struct FAITestSpawnSet>                SpawnSets;                                         // 0x0608(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FunctionalAITest">();
	}
	static class AFunctionalAITest* GetDefaultObj()
	{
		return GetDefaultObjImpl<AFunctionalAITest>();
	}
};

// Class FunctionalTesting.FunctionalTestGameMode
// 0x0000 (0x04C0 - 0x04C0)
class AFunctionalTestGameMode final : public AGameModeBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FunctionalTestGameMode">();
	}
	static class AFunctionalTestGameMode* GetDefaultObj()
	{
		return GetDefaultObjImpl<AFunctionalTestGameMode>();
	}
};

// Class FunctionalTesting.FunctionalTestingManager
// 0x0098 (0x00C8 - 0x0030)
class UFunctionalTestingManager final : public UBlueprintFunctionLibrary
{
public:
	TArray<class AFunctionalTest*>                TestsLeft;                                         // 0x0030(0x0010)(ZeroConstructor, Transient, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class AFunctionalTest*>                AllTests;                                          // 0x0040(0x0010)(ZeroConstructor, Transient, UObjectWrapper, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnSetupTests;                                      // 0x0050(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnTestsComplete;                                   // 0x0060(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnTestsBegin;                                      // 0x0070(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_80[0x48];                                      // 0x0080(0x0048)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static bool RunAllFunctionalTests(class UObject* WorldContextObject, bool bNewLog, bool bRunLooped, const class FString& FailedTestsReproString);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FunctionalTestingManager">();
	}
	static class UFunctionalTestingManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFunctionalTestingManager>();
	}
};

// Class FunctionalTesting.PhasedAutomationActorBase
// 0x0000 (0x0420 - 0x0420)
class APhasedAutomationActorBase final : public AActor
{
public:
	void OnFunctionalTestingBegin();
	void OnFunctionalTestingComplete();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PhasedAutomationActorBase">();
	}
	static class APhasedAutomationActorBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<APhasedAutomationActorBase>();
	}
};

// Class FunctionalTesting.FunctionalTestLevelScript
// 0x0000 (0x0428 - 0x0428)
class AFunctionalTestLevelScript final : public ALevelScriptActor
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FunctionalTestLevelScript">();
	}
	static class AFunctionalTestLevelScript* GetDefaultObj()
	{
		return GetDefaultObjImpl<AFunctionalTestLevelScript>();
	}
};

// Class FunctionalTesting.FunctionalTestUtilityLibrary
// 0x0000 (0x0030 - 0x0030)
class UFunctionalTestUtilityLibrary final : public UBlueprintFunctionLibrary
{
public:
	static class UTraceQueryTestResults* TraceChannelTestUtil(class UObject* WorldContextObject, const struct FTraceChannelTestBatchOptions& BatchOptions, const struct FVector& Start, const struct FVector& End, float SphereCapsuleRadius, float CapsuleHalfHeight, const struct FVector& BoxHalfSize, const struct FRotator& Orientation, ETraceTypeQuery TraceChannel, const TArray<EObjectTypeQuery>& ObjectTypes, class FName ProfileName, bool bTraceComplex, const TArray<class AActor*>& ActorsToIgnore, bool bIgnoreSelf, EDrawDebugTrace DrawDebugType, const struct FLinearColor& TraceColor, const struct FLinearColor& TraceHitColor, float DrawTime);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FunctionalTestUtilityLibrary">();
	}
	static class UFunctionalTestUtilityLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFunctionalTestUtilityLibrary>();
	}
};

// Class FunctionalTesting.ScreenshotFunctionalTestBase
// 0x0080 (0x05E8 - 0x0568)
class AScreenshotFunctionalTestBase : public AFunctionalTest
{
public:
	class FString                                 Notes;                                             // 0x0568(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCameraComponent*                       ScreenshotCamera;                                  // 0x0578(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FAutomationScreenshotOptions           ScreenshotOptions;                                 // 0x0580(0x0058)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, SimpleDisplay, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_5D8[0x10];                                     // 0x05D8(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ScreenshotFunctionalTestBase">();
	}
	static class AScreenshotFunctionalTestBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<AScreenshotFunctionalTestBase>();
	}
};

// Class FunctionalTesting.FunctionalUIScreenshotTest
// 0x0040 (0x0628 - 0x05E8)
class AFunctionalUIScreenshotTest final : public AScreenshotFunctionalTestBase
{
public:
	TSubclassOf<class UUserWidget>                WidgetClass;                                       // 0x05E8(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUserWidget*                            SpawnedWidget;                                     // 0x05F0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EWidgetTestAppearLocation                     WidgetLocation;                                    // 0x05F8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_5FC[0x4];                                      // 0x05FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextureRenderTarget2D*                 ScreenshotRT;                                      // 0x0600(0x0008)(ZeroConstructor, Transient, DuplicateTransient, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bHideDebugCanvas;                                  // 0x0608(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_609[0x1F];                                     // 0x0609(0x001F)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FunctionalUIScreenshotTest">();
	}
	static class AFunctionalUIScreenshotTest* GetDefaultObj()
	{
		return GetDefaultObjImpl<AFunctionalUIScreenshotTest>();
	}
};

// Class FunctionalTesting.GroundTruthData
// 0x0010 (0x0040 - 0x0030)
class UGroundTruthData final : public UObject
{
public:
	bool                                          bResetGroundTruth;                                 // 0x0030(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                ObjectData;                                        // 0x0038(0x0008)(Edit, ExportObject, ZeroConstructor, EditConst, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	class UObject* LoadObject();
	void ResetObject();
	void SaveObject(class UObject* GroundTruth);

	bool CanModify() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GroundTruthData">();
	}
	static class UGroundTruthData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGroundTruthData>();
	}
};

// Class FunctionalTesting.ScreenshotFunctionalTest
// 0x0048 (0x0630 - 0x05E8)
class AScreenshotFunctionalTest final : public AScreenshotFunctionalTestBase
{
public:
	bool                                          bCameraCutOnScreenshotPrep;                        // 0x05E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, SimpleDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5E9[0x47];                                     // 0x05E9(0x0047)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ScreenshotFunctionalTest">();
	}
	static class AScreenshotFunctionalTest* GetDefaultObj()
	{
		return GetDefaultObjImpl<AScreenshotFunctionalTest>();
	}
};

// Class FunctionalTesting.TestPhaseComponent
// 0x0000 (0x0270 - 0x0270)
class UTestPhaseComponent final : public USceneComponent
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TestPhaseComponent">();
	}
	static class UTestPhaseComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTestPhaseComponent>();
	}
};

// Class FunctionalTesting.TraceQueryTestResults
// 0x1028 (0x1058 - 0x0030)
class UTraceQueryTestResults final : public UObject
{
public:
	struct FTraceQueryTestResultsInner            ChannelResults;                                    // 0x0030(0x0560)(Edit, BlueprintVisible, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTraceQueryTestResultsInner            ObjectResults;                                     // 0x0590(0x0560)(Edit, BlueprintVisible, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTraceQueryTestResultsInner            ProfileResults;                                    // 0x0AF0(0x0560)(Edit, BlueprintVisible, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTraceChannelTestBatchOptions          BatchOptions;                                      // 0x1050(0x0007)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_1057[0x1];                                     // 0x1057(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	class FString ToString();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TraceQueryTestResults">();
	}
	static class UTraceQueryTestResults* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTraceQueryTestResults>();
	}
};

}

