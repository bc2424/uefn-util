#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Emporium

#include "Basic.hpp"

#include "Emporium_classes.hpp"
#include "Emporium_parameters.hpp"


namespace SDK
{

// Function Emporium.EmporiumJavascriptApi.AddSourceToProject
// (Final, Native, Public)
// Parameters:
// class FString                           Url                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           AssetMetadataJson                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEmporiumJavascriptApi::AddSourceToProject(const class FString& Url, const class FString& AssetMetadataJson)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmporiumJavascriptApi", "AddSourceToProject");

	Params::EmporiumJavascriptApi_AddSourceToProject Parms{};

	Parms.Url = std::move(Url);
	Parms.AssetMetadataJson = std::move(AssetMetadataJson);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Emporium.EmporiumJavascriptApi.AddVersePathToProject
// (Final, Native, Public)
// Parameters:
// class FString                           VersePath                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           AssetMetadataJson                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEmporiumJavascriptApi::AddVersePathToProject(const class FString& VersePath, const class FString& AssetMetadataJson)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmporiumJavascriptApi", "AddVersePathToProject");

	Params::EmporiumJavascriptApi_AddVersePathToProject Parms{};

	Parms.VersePath = std::move(VersePath);
	Parms.AssetMetadataJson = std::move(AssetMetadataJson);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Emporium.EmporiumJavascriptApi.AnalyticsOpen3dViewer
// (Final, Native, Public)
// Parameters:
// class FString                           AssetNamespace                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           AssetId                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           OfferId                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEmporiumJavascriptApi::AnalyticsOpen3dViewer(const class FString& AssetNamespace, const class FString& AssetId, const class FString& OfferId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmporiumJavascriptApi", "AnalyticsOpen3dViewer");

	Params::EmporiumJavascriptApi_AnalyticsOpen3dViewer Parms{};

	Parms.AssetNamespace = std::move(AssetNamespace);
	Parms.AssetId = std::move(AssetId);
	Parms.OfferId = std::move(OfferId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Emporium.EmporiumJavascriptApi.AnalyticsPdpPageView
// (Final, Native, Public)
// Parameters:
// class FString                           AssetNamespace                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           AssetId                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           OfferId                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           PointOfOrigin                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEmporiumJavascriptApi::AnalyticsPdpPageView(const class FString& AssetNamespace, const class FString& AssetId, const class FString& OfferId, const class FString& PointOfOrigin)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmporiumJavascriptApi", "AnalyticsPdpPageView");

	Params::EmporiumJavascriptApi_AnalyticsPdpPageView Parms{};

	Parms.AssetNamespace = std::move(AssetNamespace);
	Parms.AssetId = std::move(AssetId);
	Parms.OfferId = std::move(OfferId);
	Parms.PointOfOrigin = std::move(PointOfOrigin);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Emporium.EmporiumJavascriptApi.AnalyticsSearchQueried
// (Final, Native, Public)
// Parameters:
// class FString                           SearchText                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Categories                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Tags                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Filters                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           SortValue                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           SearchResults                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEmporiumJavascriptApi::AnalyticsSearchQueried(const class FString& SearchText, const class FString& Categories, const class FString& Tags, const class FString& Filters, const class FString& SortValue, const class FString& SearchResults)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmporiumJavascriptApi", "AnalyticsSearchQueried");

	Params::EmporiumJavascriptApi_AnalyticsSearchQueried Parms{};

	Parms.SearchText = std::move(SearchText);
	Parms.Categories = std::move(Categories);
	Parms.Tags = std::move(Tags);
	Parms.Filters = std::move(Filters);
	Parms.SortValue = std::move(SortValue);
	Parms.SearchResults = std::move(SearchResults);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Emporium.EmporiumJavascriptApi.CopyToClipboard
// (Final, Native, Public)
// Parameters:
// class FString                           Content                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEmporiumJavascriptApi::CopyToClipboard(const class FString& Content)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmporiumJavascriptApi", "CopyToClipboard");

	Params::EmporiumJavascriptApi_CopyToClipboard Parms{};

	Parms.Content = std::move(Content);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Emporium.EmporiumJavascriptApi.DragStart
// (Final, Native, Public)
// Parameters:
// class FString                           VersePath                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           AssetMetadataJson                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEmporiumJavascriptApi::DragStart(const class FString& VersePath, const class FString& AssetMetadataJson)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmporiumJavascriptApi", "DragStart");

	Params::EmporiumJavascriptApi_DragStart Parms{};

	Parms.VersePath = std::move(VersePath);
	Parms.AssetMetadataJson = std::move(AssetMetadataJson);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Emporium.EmporiumJavascriptApi.GetApiVersion
// (Final, Native, Public)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UEmporiumJavascriptApi::GetApiVersion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmporiumJavascriptApi", "GetApiVersion");

	Params::EmporiumJavascriptApi_GetApiVersion Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Emporium.EmporiumJavascriptApi.GetAuthToken
// (Final, Native, Public)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UEmporiumJavascriptApi::GetAuthToken()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmporiumJavascriptApi", "GetAuthToken");

	Params::EmporiumJavascriptApi_GetAuthToken Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Emporium.EmporiumJavascriptApi.GetProjectVersePaths
// (Final, Native, Public)
// Parameters:
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> UEmporiumJavascriptApi::GetProjectVersePaths()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmporiumJavascriptApi", "GetProjectVersePaths");

	Params::EmporiumJavascriptApi_GetProjectVersePaths Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Emporium.EmporiumJavascriptApi.LocalDownload
// (Final, Native, Public)
// Parameters:
// class FString                           Url                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           AssetMetadataJson                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEmporiumJavascriptApi::LocalDownload(const class FString& Url, const class FString& AssetMetadataJson)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmporiumJavascriptApi", "LocalDownload");

	Params::EmporiumJavascriptApi_LocalDownload Parms{};

	Parms.Url = std::move(Url);
	Parms.AssetMetadataJson = std::move(AssetMetadataJson);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Emporium.EmporiumJavascriptApi.LogDisplay
// (Final, Native, Public)
// Parameters:
// class FString                           Message                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEmporiumJavascriptApi::LogDisplay(const class FString& Message)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmporiumJavascriptApi", "LogDisplay");

	Params::EmporiumJavascriptApi_LogDisplay Parms{};

	Parms.Message = std::move(Message);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Emporium.EmporiumJavascriptApi.LogError
// (Final, Native, Public)
// Parameters:
// class FString                           Message                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEmporiumJavascriptApi::LogError(const class FString& Message)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmporiumJavascriptApi", "LogError");

	Params::EmporiumJavascriptApi_LogError Parms{};

	Parms.Message = std::move(Message);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Emporium.EmporiumJavascriptApi.LogVerbose
// (Final, Native, Public)
// Parameters:
// class FString                           Message                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEmporiumJavascriptApi::LogVerbose(const class FString& Message)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmporiumJavascriptApi", "LogVerbose");

	Params::EmporiumJavascriptApi_LogVerbose Parms{};

	Parms.Message = std::move(Message);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Emporium.EmporiumJavascriptApi.LogWarning
// (Final, Native, Public)
// Parameters:
// class FString                           Message                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEmporiumJavascriptApi::LogWarning(const class FString& Message)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmporiumJavascriptApi", "LogWarning");

	Params::EmporiumJavascriptApi_LogWarning Parms{};

	Parms.Message = std::move(Message);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Emporium.EmporiumJavascriptApi.OpenPluginSettings
// (Final, Native, Public)

void UEmporiumJavascriptApi::OpenPluginSettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmporiumJavascriptApi", "OpenPluginSettings");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Emporium.EmporiumJavascriptApi.OpenURLInBrowser
// (Final, Native, Public)
// Parameters:
// class FString                           Url                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEmporiumJavascriptApi::OpenURLInBrowser(const class FString& Url)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmporiumJavascriptApi", "OpenURLInBrowser");

	Params::EmporiumJavascriptApi_OpenURLInBrowser Parms{};

	Parms.Url = std::move(Url);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Emporium.EmporiumJavascriptApi.SendAnalyticsEvent
// (Final, Native, Public)
// Parameters:
// class FString                           EventName                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           AssetMetadataJson                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEmporiumJavascriptApi::SendAnalyticsEvent(const class FString& EventName, const class FString& AssetMetadataJson)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmporiumJavascriptApi", "SendAnalyticsEvent");

	Params::EmporiumJavascriptApi_SendAnalyticsEvent Parms{};

	Parms.EventName = std::move(EventName);
	Parms.AssetMetadataJson = std::move(AssetMetadataJson);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

