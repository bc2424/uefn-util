#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MeshNetwork

#include "Basic.hpp"

#include "MeshNetwork_structs.hpp"
#include "GameFeatures_classes.hpp"
#include "OnlineSubsystemUtils_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "ReplicationGraph_classes.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// Class MeshNetwork.GameFeatureAction_LoadPluginForMeshNetwork
// 0x0028 (0x0058 - 0x0030)
class UGameFeatureAction_LoadPluginForMeshNetwork final : public UGameFeatureAction
{
public:
	TArray<struct FMeshNetworkPluginLoadData>     PluginsToLoad;                                     // 0x0030(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	bool                                          bEnsureThisPluginIsLoaded;                         // 0x0040(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 RestrictToMapName;                                 // 0x0048(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GameFeatureAction_LoadPluginForMeshNetwork">();
	}
	static class UGameFeatureAction_LoadPluginForMeshNetwork* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGameFeatureAction_LoadPluginForMeshNetwork>();
	}
};

// Class MeshNetwork.MeshBeaconClient
// 0x0080 (0x0538 - 0x04B8)
class AMeshBeaconClient : public AOnlineBeaconClient
{
public:
	uint8                                         Pad_4B8[0x40];                                     // 0x04B8(0x0040)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bConnectedToRoot;                                  // 0x04F8(0x0001)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_4F9[0x7];                                      // 0x04F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDateTime                              MeshPingTime;                                      // 0x0500(0x0008)(Net, ZeroConstructor, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class FString>                         ParentIds;                                         // 0x0508(0x0010)(Net, ZeroConstructor, RepNotify, Protected, NativeAccessSpecifierProtected)
	class FString                                 ClientId;                                          // 0x0518(0x0010)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_528[0x10];                                     // 0x0528(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnRep_ConnectedToRoot();
	void OnRep_MeshPingTime();
	void OnRep_ParentIds();
	void ServerSetClientId(const class FString& NewClientId);
	void ServerUpdateLevelVisibility(const struct FUpdateLevelVisibilityLevelInfo& LevelVisibility);
	void ServerUpdateMultipleLevelsVisibility(const TArray<struct FUpdateLevelVisibilityLevelInfo>& LevelVisibilities);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MeshBeaconClient">();
	}
	static class AMeshBeaconClient* GetDefaultObj()
	{
		return GetDefaultObjImpl<AMeshBeaconClient>();
	}
};

// Class MeshNetwork.MeshBeaconHost
// 0x0008 (0x0570 - 0x0568)
class AMeshBeaconHost : public AOnlineBeaconHost
{
public:
	int32                                         MaxConnections;                                    // 0x0568(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_56C[0x4];                                      // 0x056C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MeshBeaconHost">();
	}
	static class AMeshBeaconHost* GetDefaultObj()
	{
		return GetDefaultObjImpl<AMeshBeaconHost>();
	}
};

// Class MeshNetwork.MeshBeaconHostObject
// 0x0018 (0x0460 - 0x0448)
class AMeshBeaconHostObject : public AOnlineBeaconHostObject
{
public:
	uint8                                         Pad_448[0x18];                                     // 0x0448(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MeshBeaconHostObject">();
	}
	static class AMeshBeaconHostObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<AMeshBeaconHostObject>();
	}
};

// Class MeshNetwork.MeshConnection
// 0x0000 (0x1E38 - 0x1E38)
class UMeshConnection final : public UIpConnection
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MeshConnection">();
	}
	static class UMeshConnection* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMeshConnection>();
	}
};

// Class MeshNetwork.MeshNetDriver
// 0x0018 (0x0970 - 0x0958)
class UMeshNetDriver final : public UIpNetDriver
{
public:
	uint8                                         Pad_958[0x8];                                      // 0x0958(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         ClientDormantDynamicActors;                        // 0x0960(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MeshNetDriver">();
	}
	static class UMeshNetDriver* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMeshNetDriver>();
	}
};

// Class MeshNetwork.MeshNetworkComponent
// 0x00B0 (0x0188 - 0x00D8)
class UMeshNetworkComponent : public UActorComponent
{
public:
	EMeshNetworkRelevancy                         MeshRelevancy;                                     // 0x00D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FString, struct FAggregatedFunction> AggregatedFunctions;                               // 0x00E0(0x0050)(Transient, NativeAccessSpecifierPrivate)
	TMap<class FName, struct FAggregatedFunctionConfig> AggregatedFunctionConfigs;                         // 0x0130(0x0050)(Edit, EditConst, NativeAccessSpecifierPrivate)
	uint8                                         Pad_180[0x8];                                      // 0x0180(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	EMeshNetworkNodeType GetMeshNetworkNodeType() const;
	bool IsConnectedToMeshRoot() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MeshNetworkComponent">();
	}
	static class UMeshNetworkComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMeshNetworkComponent>();
	}
};

// Class MeshNetwork.MeshNetworkSubsystem
// 0x00D8 (0x0110 - 0x0038)
class UMeshNetworkSubsystem final : public UGameInstanceSubsystem
{
public:
	TMulticastInlineDelegate<void(EMeshNetworkNodeType NodeType)> OnMeshNodeTypeChanged;                             // 0x0038(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(bool bConnected)> OnConnectedToRootChanged;                          // 0x0048(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(EMeshNetworkNodeType NodeType)> OnGameServerNodeTypeChanged;                       // 0x0058(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnMeshMetaDataUpdated;                             // 0x0068(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class APlayerController* Player, class FName Tag)> OnMeshPlayerRequested;                             // 0x0078(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_88[0x30];                                      // 0x0088(0x0030)(Fixing Size After Last Property [ Dumper-7 ])
	EMeshNetworkNodeType                          NodeType;                                          // 0x00B8(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EMeshNetworkNodeType                          GameServerNodeType;                                // 0x00B9(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bConnectedToRoot;                                  // 0x00BA(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bMetadataReceived;                                 // 0x00BB(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_BC[0x54];                                      // 0x00BC(0x0054)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void DisableMeshReplication(class AActor* Actor);
	void EnableMeshReplication(class AActor* Actor, TSubclassOf<class UMeshNetworkComponent> MeshComponentClass);
	void GetMetaData(struct FMeshMetaDataStruct& MetaData);
	bool GetMetaDataWithKey(class FName Key, struct FMeshMetaDataStruct& MetaData);
	void SetMetaData(const struct FMeshMetaDataStruct& MetaData);
	void SetMetaDataWithKey(class FName Key, const struct FMeshMetaDataStruct& MetaData);

	bool GetConnectedToRoot() const;
	EMeshNetworkNodeType GetGameServerNodeType() const;
	EMeshNetworkNodeType GetMeshNetworkNodeType() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MeshNetworkSubsystem">();
	}
	static class UMeshNetworkSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMeshNetworkSubsystem>();
	}
};

// Class MeshNetwork.MeshReplicationGraphConnection
// 0x0000 (0x0380 - 0x0380)
class UMeshReplicationGraphConnection final : public UNetReplicationGraphConnection
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MeshReplicationGraphConnection">();
	}
	static class UMeshReplicationGraphConnection* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMeshReplicationGraphConnection>();
	}
};

// Class MeshNetwork.MeshReplicationGraph
// 0x0000 (0x05A0 - 0x05A0)
class UMeshReplicationGraph : public UReplicationGraph
{
public:
	class UReplicationGraphNode_ActorList*        AlwaysRelevantNode;                                // 0x0598(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MeshReplicationGraph">();
	}
	static class UMeshReplicationGraph* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMeshReplicationGraph>();
	}
};

}

