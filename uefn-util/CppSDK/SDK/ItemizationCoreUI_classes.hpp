#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ItemizationCoreUI

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "CoreUObject_classes.hpp"
#include "ModelViewViewModel_classes.hpp"
#include "ItemizationCoreUI_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// Class ItemizationCoreUI.InventoryCollectionViewModel
// 0x00B8 (0x0128 - 0x0070)
class UInventoryCollectionViewModel final : public UMVVMViewModelBase
{
public:
	TArray<class UInventoryViewModel*>            InventoryViewModels;                               // 0x0070(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, UObjectWrapper, NativeAccessSpecifierPrivate)
	class UInventoryItemEntryViewModel*           LastSelectedItemEntryViewModel;                    // 0x0080(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UInventoryItemEntryViewModel*           LastActiveItemEntryViewModel;                      // 0x0088(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UInventoryItemEntryViewModel*           LastAmountChangedItemEntryViewModel;               // 0x0090(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UInventoryItemEntryViewModel*>   LastAddedItemEntryViewModels;                      // 0x0098(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, UObjectWrapper, NativeAccessSpecifierPrivate)
	TMap<struct FGuid, class UInventoryItemEntryViewModel*> ItemEntryIDToItemEntryViewModels;                  // 0x00A8(0x0050)(Transient, UObjectWrapper, NativeAccessSpecifierPrivate)
	uint8                                         Pad_F8[0x30];                                      // 0x00F8(0x0030)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"InventoryCollectionViewModel">();
	}
	static class UInventoryCollectionViewModel* GetDefaultObj()
	{
		return GetDefaultObjImpl<UInventoryCollectionViewModel>();
	}
};

// Class ItemizationCoreUI.InventoryCollectionViewModelResolver
// 0x0000 (0x0050 - 0x0050)
class UInventoryCollectionViewModelResolver final : public UMVVMViewModelContextResolver
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"InventoryCollectionViewModelResolver">();
	}
	static class UInventoryCollectionViewModelResolver* GetDefaultObj()
	{
		return GetDefaultObjImpl<UInventoryCollectionViewModelResolver>();
	}
};

// Class ItemizationCoreUI.InventoryCollectionViewModelsManager
// 0x0110 (0x0148 - 0x0038)
class UInventoryCollectionViewModelsManager final : public UWorldSubsystem
{
public:
	TMap<struct FInventoryCollectionKey, class UInventoryCollectionViewModel*> InventoryCollectionToViewModelMap;                 // 0x0038(0x0050)(Transient, UObjectWrapper, NativeAccessSpecifierPrivate)
	uint8                                         Pad_88[0xC0];                                      // 0x0088(0x00C0)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnInventoryCollectionDestroyed(class AActor* Actor);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"InventoryCollectionViewModelsManager">();
	}
	static class UInventoryCollectionViewModelsManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<UInventoryCollectionViewModelsManager>();
	}
};

// Class ItemizationCoreUI.InventoryItemEntryViewModel
// 0x0100 (0x0170 - 0x0070)
class UInventoryItemEntryViewModel final : public UMVVMViewModelBase
{
public:
	bool                                          bItemSelected;                                     // 0x0070(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bItemBeingSwapped;                                 // 0x0071(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bCanDrop;                                          // 0x0072(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bCanSwap;                                          // 0x0073(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bIsCooldownActive;                                 // 0x0074(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CooldownTimeLeft;                                  // 0x0078(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         CooldownProgress;                                  // 0x007C(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int64                                         ItemAmountChanged;                                 // 0x0080(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTexture2D*                             CachedItemIcon;                                    // 0x0088(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_90[0xE0];                                      // 0x0090(0x00E0)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void DropAll();
	void DropAmount(const int64 Amount);
	void DropHalf();
	void SetEquippableItemActive(const bool bActive);
	void ToggleEquippableItemActive();
	void UpdateCanSwap(const class UInventoryItemEntryViewModel* SwapInventoryItemEntryViewModel);
	void UseItem();

	bool CanItemBeMadeActive() const;
	bool CanItemBeMadeInactive() const;
	bool CanItemBeStacked() const;
	const class UInputAction* GetEquipSlotInputAction() const;
	const struct FGuid GetInventoryID() const;
	int64 GetItemAmount() const;
	const class UItemDefinitionBase* GetItemDefinition() const;
	class FText GetItemDescription() const;
	const struct FGuid GetItemEntryID() const;
	class UTexture2D* GetItemIcon() const;
	EItemIconDisplayTextType GetItemIconDisplayTextType() const;
	class FText GetItemName() const;
	int64 GetItemPrimaryAmmoCount() const;
	const class UItemRarity* GetItemRarity() const;
	int32 GetItemSlotNumber() const;
	const class UItemType* GetItemType() const;
	int64 GetMaxItemAmount() const;
	TSoftObjectPtr<class UTexture2D> GetSoftItemIcon() const;
	bool IsEquipSlotInputBindingVisible() const;
	bool IsItemActive() const;
	bool IsItemIconLoading() const;
	bool IsValidItem() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"InventoryItemEntryViewModel">();
	}
	static class UInventoryItemEntryViewModel* GetDefaultObj()
	{
		return GetDefaultObjImpl<UInventoryItemEntryViewModel>();
	}
};

// Class ItemizationCoreUI.InventoryItemStreamEntryViewModel
// 0x0018 (0x0088 - 0x0070)
class UInventoryItemStreamEntryViewModel final : public UMVVMViewModelBase
{
public:
	class UInventoryItemEntryViewModel*           ItemEntryViewModel;                                // 0x0070(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int64                                         DisplayedAmount;                                   // 0x0078(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_80[0x8];                                       // 0x0080(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"InventoryItemStreamEntryViewModel">();
	}
	static class UInventoryItemStreamEntryViewModel* GetDefaultObj()
	{
		return GetDefaultObjImpl<UInventoryItemStreamEntryViewModel>();
	}
};

// Class ItemizationCoreUI.InventoryItemStreamViewModel
// 0x0030 (0x00A0 - 0x0070)
class UInventoryItemStreamViewModel final : public UMVVMViewModelBase
{
public:
	TArray<class UInventoryItemStreamEntryViewModel*> ItemStreamEntryViewModels;                         // 0x0070(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, UObjectWrapper, NativeAccessSpecifierPrivate)
	int32                                         MaximumDisplayedEntries;                           // 0x0080(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         ExpirationTime;                                    // 0x0084(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bCombineItemEntries;                               // 0x0088(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bShowItemAmountIncreased;                          // 0x0089(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bShowItemAmountDecreased;                          // 0x008A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_8B[0x5];                                       // 0x008B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UItemType*>                      AllowedItemTypes;                                  // 0x0090(0x0010)(Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)

public:
	void AddItemEntries(const TArray<class UInventoryItemEntryViewModel*>& ItemEntryViewModels);
	void AddItemEntry(class UInventoryItemEntryViewModel* ItemEntryViewModel);
	void OnItemEntryAmountChanged(class UInventoryItemEntryViewModel* ItemEntryViewModel);
	void RemoveAllItemEntries();
	void RemoveItemEntry(class UInventoryItemEntryViewModel* ItemEntryViewModel);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"InventoryItemStreamViewModel">();
	}
	static class UInventoryItemStreamViewModel* GetDefaultObj()
	{
		return GetDefaultObjImpl<UInventoryItemStreamViewModel>();
	}
};

// Class ItemizationCoreUI.InventoryViewModel
// 0x0028 (0x0098 - 0x0070)
class UInventoryViewModel final : public UMVVMViewModelBase
{
public:
	TArray<class UInventoryItemEntryViewModel*>   ItemEntryViewModels;                               // 0x0070(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, UObjectWrapper, NativeAccessSpecifierPrivate)
	uint8                                         Pad_80[0x18];                                      // 0x0080(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	class FText GetInventoryDescription() const;
	class FText GetInventoryName() const;
	int32 GetTotalSlots() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"InventoryViewModel">();
	}
	static class UInventoryViewModel* GetDefaultObj()
	{
		return GetDefaultObjImpl<UInventoryViewModel>();
	}
};

// Class ItemizationCoreUI.InventoryViewModelAllowedConversionFunctions
// 0x0000 (0x0030 - 0x0030)
class UInventoryViewModelAllowedConversionFunctions : public UBlueprintFunctionLibrary
{
public:
	static class UInventoryViewModel* FindInventoryViewModel(TSubclassOf<class UObject> InventoryClass, const TArray<class UInventoryViewModel*>& InventoryViewModels);
	static class UInventoryViewModel* FindInventoryViewModelByName(const class FString& InventoryName, const TArray<class UInventoryViewModel*>& InventoryViewModels);
	static TArray<class UInventoryItemEntryViewModel*> GetInventoryItemEntryViewModels(const TArray<class UInventoryItemEntryViewModel*>& InventoryItemEntryViewModels, const bool bIncludeEmptySlots);

	TArray<class UClass*> GetAllowedInventoryClasses() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"InventoryViewModelAllowedConversionFunctions">();
	}
	static class UInventoryViewModelAllowedConversionFunctions* GetDefaultObj()
	{
		return GetDefaultObjImpl<UInventoryViewModelAllowedConversionFunctions>();
	}
};

// Class ItemizationCoreUI.InventoryViewModelConversionFunctions
// 0x0000 (0x0030 - 0x0030)
class UInventoryViewModelConversionFunctions final : public UInventoryViewModelAllowedConversionFunctions
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"InventoryViewModelConversionFunctions">();
	}
	static class UInventoryViewModelConversionFunctions* GetDefaultObj()
	{
		return GetDefaultObjImpl<UInventoryViewModelConversionFunctions>();
	}
};

// Class ItemizationCoreUI.VerseInventoryItemEntryViewModelBase
// 0x0000 (0x0030 - 0x0030)
class UVerseInventoryItemEntryViewModelBase : public UObject
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"VerseInventoryItemEntryViewModelBase">();
	}
	static class UVerseInventoryItemEntryViewModelBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVerseInventoryItemEntryViewModelBase>();
	}
};

// Class ItemizationCoreUI.VerseInventoryViewModelBase
// 0x0000 (0x0030 - 0x0030)
class UVerseInventoryViewModelBase : public UObject
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"VerseInventoryViewModelBase">();
	}
	static class UVerseInventoryViewModelBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVerseInventoryViewModelBase>();
	}
};

}

