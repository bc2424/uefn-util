#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: RazerChromaDevices

#include "Basic.hpp"

#include "RazerChromaDevices_classes.hpp"
#include "RazerChromaDevices_parameters.hpp"


namespace SDK
{

// Function RazerChromaDevices.RazerChromaFunctionLibrary.Conv_RazerChromaDeviceTypesToString
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   DeviceTypes                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString URazerChromaFunctionLibrary::Conv_RazerChromaDeviceTypesToString(const int32 DeviceTypes)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RazerChromaFunctionLibrary", "Conv_RazerChromaDeviceTypesToString");

	Params::RazerChromaFunctionLibrary_Conv_RazerChromaDeviceTypesToString Parms{};

	Parms.DeviceTypes = DeviceTypes;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RazerChromaDevices.RazerChromaFunctionLibrary.GetTotalDuration
// (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable)
// Parameters:
// class URazerChromaAnimationAsset*       Anim                                                   (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float URazerChromaFunctionLibrary::GetTotalDuration(const class URazerChromaAnimationAsset* Anim)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RazerChromaFunctionLibrary", "GetTotalDuration");

	Params::RazerChromaFunctionLibrary_GetTotalDuration Parms{};

	Parms.Anim = Anim;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RazerChromaDevices.RazerChromaFunctionLibrary.IsAnimationPlaying
// (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class URazerChromaAnimationAsset*       Anim                                                   (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URazerChromaFunctionLibrary::IsAnimationPlaying(const class URazerChromaAnimationAsset* Anim)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RazerChromaFunctionLibrary", "IsAnimationPlaying");

	Params::RazerChromaFunctionLibrary_IsAnimationPlaying Parms{};

	Parms.Anim = Anim;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RazerChromaDevices.RazerChromaFunctionLibrary.IsChromaAnimationPaused
// (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class URazerChromaAnimationAsset*       Anim                                                   (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URazerChromaFunctionLibrary::IsChromaAnimationPaused(const class URazerChromaAnimationAsset* Anim)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RazerChromaFunctionLibrary", "IsChromaAnimationPaused");

	Params::RazerChromaFunctionLibrary_IsChromaAnimationPaused Parms{};

	Parms.Anim = Anim;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RazerChromaDevices.RazerChromaFunctionLibrary.IsChromaRuntimeAvailable
// (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URazerChromaFunctionLibrary::IsChromaRuntimeAvailable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RazerChromaFunctionLibrary", "IsChromaRuntimeAvailable");

	Params::RazerChromaFunctionLibrary_IsChromaRuntimeAvailable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RazerChromaDevices.RazerChromaFunctionLibrary.PauseChromaAnimation
// (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable)
// Parameters:
// class URazerChromaAnimationAsset*       AnimToPause                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URazerChromaFunctionLibrary::PauseChromaAnimation(const class URazerChromaAnimationAsset* AnimToPause)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RazerChromaFunctionLibrary", "PauseChromaAnimation");

	Params::RazerChromaFunctionLibrary_PauseChromaAnimation Parms{};

	Parms.AnimToPause = AnimToPause;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RazerChromaDevices.RazerChromaFunctionLibrary.PlayChromaAnimation
// (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable)
// Parameters:
// class URazerChromaAnimationAsset*       AnimToPlay                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bLooping                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URazerChromaFunctionLibrary::PlayChromaAnimation(const class URazerChromaAnimationAsset* AnimToPlay, const bool bLooping)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RazerChromaFunctionLibrary", "PlayChromaAnimation");

	Params::RazerChromaFunctionLibrary_PlayChromaAnimation Parms{};

	Parms.AnimToPlay = AnimToPlay;
	Parms.bLooping = bLooping;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RazerChromaDevices.RazerChromaFunctionLibrary.ResumeChromaAnimation
// (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable)
// Parameters:
// class URazerChromaAnimationAsset*       AnimToResume                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bLoop                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URazerChromaFunctionLibrary::ResumeChromaAnimation(const class URazerChromaAnimationAsset* AnimToResume, const bool bLoop)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RazerChromaFunctionLibrary", "ResumeChromaAnimation");

	Params::RazerChromaFunctionLibrary_ResumeChromaAnimation Parms{};

	Parms.AnimToResume = AnimToResume;
	Parms.bLoop = bLoop;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RazerChromaDevices.RazerChromaFunctionLibrary.SetAllDevicesStaticColor
// (Final, BlueprintCosmetic, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FColor                           ColorToSet                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   DeviceTypes                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URazerChromaFunctionLibrary::SetAllDevicesStaticColor(const struct FColor& ColorToSet, const int32 DeviceTypes)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RazerChromaFunctionLibrary", "SetAllDevicesStaticColor");

	Params::RazerChromaFunctionLibrary_SetAllDevicesStaticColor Parms{};

	Parms.ColorToSet = std::move(ColorToSet);
	Parms.DeviceTypes = DeviceTypes;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RazerChromaDevices.RazerChromaFunctionLibrary.SetEventName
// (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           name                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 URazerChromaFunctionLibrary::SetEventName(const class FString& name)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RazerChromaFunctionLibrary", "SetEventName");

	Params::RazerChromaFunctionLibrary_SetEventName Parms{};

	Parms.name = std::move(name);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RazerChromaDevices.RazerChromaFunctionLibrary.SetIdleAnimation
// (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable)
// Parameters:
// class URazerChromaAnimationAsset*       NewIdleAnimation                                       (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URazerChromaFunctionLibrary::SetIdleAnimation(const class URazerChromaAnimationAsset* NewIdleAnimation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RazerChromaFunctionLibrary", "SetIdleAnimation");

	Params::RazerChromaFunctionLibrary_SetIdleAnimation Parms{};

	Parms.NewIdleAnimation = NewIdleAnimation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RazerChromaDevices.RazerChromaFunctionLibrary.SetUseIdleAnimation
// (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    bUseIdleAnimation                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URazerChromaFunctionLibrary::SetUseIdleAnimation(const bool bUseIdleAnimation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RazerChromaFunctionLibrary", "SetUseIdleAnimation");

	Params::RazerChromaFunctionLibrary_SetUseIdleAnimation Parms{};

	Parms.bUseIdleAnimation = bUseIdleAnimation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RazerChromaDevices.RazerChromaFunctionLibrary.StopAllChromaAnimations
// (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable)

void URazerChromaFunctionLibrary::StopAllChromaAnimations()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RazerChromaFunctionLibrary", "StopAllChromaAnimations");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RazerChromaDevices.RazerChromaFunctionLibrary.StopChromaAnimation
// (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable)
// Parameters:
// class URazerChromaAnimationAsset*       AnimToStop                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URazerChromaFunctionLibrary::StopChromaAnimation(const class URazerChromaAnimationAsset* AnimToStop)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RazerChromaFunctionLibrary", "StopChromaAnimation");

	Params::RazerChromaFunctionLibrary_StopChromaAnimation Parms{};

	Parms.AnimToStop = AnimToStop;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RazerChromaDevices.RazerChromaFunctionLibrary.UseForwardChromaEvents
// (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    bToggle                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URazerChromaFunctionLibrary::UseForwardChromaEvents(const bool bToggle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RazerChromaFunctionLibrary", "UseForwardChromaEvents");

	Params::RazerChromaFunctionLibrary_UseForwardChromaEvents Parms{};

	Parms.bToggle = bToggle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

