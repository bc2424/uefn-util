#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TowHookWeaponRuntime

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "TowHookWeaponRuntime_structs.hpp"
#include "FortniteGame_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK
{

// Class TowHookWeaponRuntime.FortMovementMode_TetheredRuntimeData
// 0x0178 (0x01C0 - 0x0048)
class alignas(0x10) UFortMovementMode_TetheredRuntimeData final : public UFortMovementMode_BaseExtRuntimeData
{
public:
	TWeakObjectPtr<class AActor>                  NetTetheredActor;                                  // 0x0048(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_50[0x48];                                      // 0x0050(0x0048)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector_NetQuantize                    NetLocalTetherLocation;                            // 0x0098(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_B0[0x18];                                      // 0x00B0(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TWeakObjectPtr<class AActor>                  NetProjectile;                                     // 0x00C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D0[0x1];                                       // 0x00D0(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bGrounded;                                         // 0x00D1(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bMountingTarget;                                   // 0x00D2(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsInWater;                                        // 0x00D3(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D4[0x1C];                                      // 0x00D4(0x001C)(Fixing Size After Last Property [ Dumper-7 ])
	ETetherState                                  State;                                             // 0x00F0(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETetherEndReason                              EndReason;                                         // 0x00F1(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_F2[0xC2];                                      // 0x00F2(0x00C2)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TimeAtSlowSpeed;                                   // 0x01B4(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B8[0x8];                                      // 0x01B8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortMovementMode_TetheredRuntimeData">();
	}
	static class UFortMovementMode_TetheredRuntimeData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortMovementMode_TetheredRuntimeData>();
	}
};

// Class TowHookWeaponRuntime.FortMovementMode_ExtLogicTethered
// 0x0B00 (0x0C48 - 0x0148)
class UFortMovementMode_ExtLogicTethered final : public UFortMovementMode_BaseExtLogic
{
public:
	struct FScalableFloat                         LocationTolerance;                                 // 0x0148(0x0038)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                         DefaultTetherDistance;                             // 0x0180(0x0038)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                         MinTetherDistance;                                 // 0x01B8(0x0038)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                         AutoReelOutTetherDistance;                         // 0x01F0(0x0038)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                         MaxTetherDistance;                                 // 0x0228(0x0038)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                         TetherReelAccel;                                   // 0x0260(0x0038)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                         PlayerLateralAccel;                                // 0x0298(0x0038)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                         PlayerLateralAccelMultiplierMinSpeed;              // 0x02D0(0x0038)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                         PlayerLateralAccelMultiplierMaxSpeed;              // 0x0308(0x0038)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                         PlayerLateralAccelMultiplierMinMultiplier;         // 0x0340(0x0038)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                         PlayerLateralAccelMultiplierMaxMultiplier;         // 0x0378(0x0038)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                         GroundedFriction;                                  // 0x03B0(0x0038)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                         GroundedBrakingDeceleration;                       // 0x03E8(0x0038)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                         MinGroundFrictionMultiplier;                       // 0x0420(0x0038)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                         MaxGroundFrictionMultiplier;                       // 0x0458(0x0038)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                         FrictionMultiplierDistance;                        // 0x0490(0x0038)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                         JumpVelocity;                                      // 0x04C8(0x0038)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                         TetherSnapDistance;                                // 0x0500(0x0038)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                         MaxStuckTime;                                      // 0x0538(0x0038)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                         CanReelIn;                                         // 0x0570(0x0038)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                         CanReelOut;                                        // 0x05A8(0x0038)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                         ReelInSpeed;                                       // 0x05E0(0x0038)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                         ReelOutSpeed;                                      // 0x0618(0x0038)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UCurveFloat*                            ReelInSpeedOverTimeMultiplier;                     // 0x0650(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                            ReelOutSpeedOverTimeMultiplier;                    // 0x0658(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScalableFloat                         ReelInDeadZone;                                    // 0x0660(0x0038)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                         ReelInCatchupMinSpeed;                             // 0x0698(0x0038)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                         ReelInCatchupSpeedMultiplier;                      // 0x06D0(0x0038)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                         ReelInCatchupMinDistance;                          // 0x0708(0x0038)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                         CanMount;                                          // 0x0740(0x0038)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                         MountMovementTolerance;                            // 0x0778(0x0038)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                  MountAllowList;                                    // 0x07B0(0x0020)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                  MountDenyList;                                     // 0x07D0(0x0020)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                         MountApexHeight;                                   // 0x07F0(0x0038)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                         TimeToMount;                                       // 0x0828(0x0038)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FVector                                MountTargetOffset;                                 // 0x0860(0x0018)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScalableFloat                         MountingLateralVelocityLimiter;                    // 0x0878(0x0038)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                         MountingUpwardVelocityLimiter;                     // 0x08B0(0x0038)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                         MountingDownwardVelocityLimiter;                   // 0x08E8(0x0038)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                         WalkingSpeedThreshold;                             // 0x0920(0x0038)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                         WalkingTimeThreshold;                              // 0x0958(0x0038)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                         WalkingTetherSnapDistance;                         // 0x0990(0x0038)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                         TetheredActorMinReEnterVelocity;                   // 0x09C8(0x0038)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                  TetheredBlockedTags;                               // 0x0A00(0x0020)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FVector                                MountColliderBoundsExtentsBuffer;                  // 0x0A20(0x0018)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScalableFloat                         WaterBobMinSpeed;                                  // 0x0A38(0x0038)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                         WaterGravityMultiplier;                            // 0x0A70(0x0038)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                         WaterBobTargetImmersionDepth;                      // 0x0AA8(0x0038)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                         LedgeTraceBackwardsOffset;                         // 0x0AE0(0x0038)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                         LedgeTraceStartZOffset;                            // 0x0B18(0x0038)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                         LedgeTraceEndZOffset;                              // 0x0B50(0x0038)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	uint8                                         Pad_B88[0xC0];                                     // 0x0B88(0x00C0)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BP_OnExtensionEnded(const struct FMMERuntimeContext& RuntimeContext);
	void EventCallback_OnJumpInput(bool bPressed);
	void HandleTetheredMovementBegun();
	void HandleTetheredMovementEnded();
	bool ShouldActivateInTetheredMovement(class UFortMovementMode_TetheredRuntimeData* TetheredRuntimeData);
	bool ShouldReEnterTetheredMovement(class UFortMovementMode_TetheredRuntimeData* TetheredRuntimeData);

	class UFortMovementMode_TetheredRuntimeData* BP_GetRuntimeData() const;
	bool IsAnotherTetheredMMEActive(const class UFortMovementMode_TetheredRuntimeData* TetheredRuntimeData) const;
	bool IsAtSlowSpeed(class UFortMovementMode_TetheredRuntimeData* TetheredRuntimeData, const struct FVector& PawnVelocity, float DeltaTime) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortMovementMode_ExtLogicTethered">();
	}
	static class UFortMovementMode_ExtLogicTethered* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortMovementMode_ExtLogicTethered>();
	}
};

// Class TowHookWeaponRuntime.FortPawnComponent_TetheredMovement
// 0x00B0 (0x0190 - 0x00E0)
class UFortPawnComponent_TetheredMovement final : public UFortPawnComponent
{
public:
	TMulticastInlineDelegate<void(bool bGrounded)> OnGroundedStateChanged;                            // 0x00E0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(bool bInWater)> OnWaterStateChanged;                               // 0x00F0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TSubclassOf<class UFortMovementMode_ExtLogicTethered> TetheredMovementModeExtension;                     // 0x0100(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMesh*                            TetherRopeMesh;                                    // 0x0108(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                     TetherRopeMaterial;                                // 0x0110(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                   PawnTetherRopeSocket;                              // 0x0118(0x000C)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                   RopeMaterialWiggleParameter;                       // 0x0124(0x000C)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         RopeMaterialWiggleValue;                           // 0x0130(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         PawnTetherRopeZOffset;                             // 0x0134(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                   ProjectileTetherRopeSocket;                        // 0x0138(0x000C)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_144[0x4];                                      // 0x0144(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FReplicatedRopeData                    ReplicatedRopeData;                                // 0x0148(0x0028)(Net, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_170[0x8];                                      // 0x0170(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   TetherRopeComp;                                    // 0x0178(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_180[0x10];                                     // 0x0180(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void EndTetheredMovement();
	void OnRep_ReplicatedRopeData();
	void StartTetheredMovement(const struct FFortMovementMode_TetheredCreationData& CreationData);

	class UFortMovementMode_TetheredRuntimeData* BP_GetRuntimeData() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortPawnComponent_TetheredMovement">();
	}
	static class UFortPawnComponent_TetheredMovement* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortPawnComponent_TetheredMovement>();
	}
};

// Class TowHookWeaponRuntime.TowHookCameraModifier
// 0x0238 (0x0288 - 0x0050)
class UTowHookCameraModifier final : public UCameraModifier
{
public:
	struct FScalableFloat                         CameraOffsetBlendInSeconds;                        // 0x0050(0x0038)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FScalableFloat                         CameraOffsetBlendOutSeconds;                       // 0x0088(0x0038)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FScalableFloat                         CameraFovBlendInSeconds;                           // 0x00C0(0x0038)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FScalableFloat                         CameraFovBlendOutSeconds;                          // 0x00F8(0x0038)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FScalableFloat                         MinAdditionalFov;                                  // 0x0130(0x0038)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FScalableFloat                         MaxAdditionalFov;                                  // 0x0168(0x0038)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FScalableFloat                         CameraOffsetX;                                     // 0x01A0(0x0038)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FScalableFloat                         CameraOffsetY;                                     // 0x01D8(0x0038)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FScalableFloat                         CameraOffsetZ;                                     // 0x0210(0x0038)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	uint8                                         Pad_248[0x40];                                     // 0x0248(0x0040)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BlendOut();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TowHookCameraModifier">();
	}
	static class UTowHookCameraModifier* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTowHookCameraModifier>();
	}
};

// Class TowHookWeaponRuntime.TowHookLayerAnimInstance
// 0x0170 (0x1610 - 0x14A0)
class UTowHookLayerAnimInstance final : public UFortPlayerAnimInstanceProxy
{
public:
	bool                                          bIsTethered;                                       // 0x1498(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsTetheredJumping;                                // 0x1499(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_149A[0x2];                                     // 0x149A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TetheredDirection;                                 // 0x149C(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TetheredSpeed;                                     // 0x14A0(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsRightLean;                                      // 0x14A4(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsLeftLean;                                       // 0x14A5(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsAnyLean;                                        // 0x14A6(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14A7[0x1];                                     // 0x14A7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         NoisePlayRate;                                     // 0x14A8(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsForward;                                        // 0x14AC(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsBack;                                           // 0x14AD(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsLeft;                                           // 0x14AE(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsRight;                                          // 0x14AF(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsYank;                                           // 0x14B0(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsYankWeak;                                       // 0x14B1(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsYankStrong;                                     // 0x14B2(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14B3[0x1];                                     // 0x14B3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TetherLateralAccel;                                // 0x14B4(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsAttachWait;                                     // 0x14B8(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsMounting;                                       // 0x14B9(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsAltMount;                                       // 0x14BA(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14BB[0x1];                                     // 0x14BB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         JumpPicker;                                        // 0x14BC(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LeanCurve;                                         // 0x14C0(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsAdditiveLeans;                                  // 0x14C4(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsBackwardLean;                                   // 0x14C5(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsForwardLean;                                    // 0x14C6(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14C7[0x1];                                     // 0x14C7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         PoseShift;                                         // 0x14C8(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NoisePicker;                                       // 0x14CC(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsBackOrLeftOrRight;                              // 0x14D0(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14D1[0x3];                                     // 0x14D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         YankInAirAlpha;                                    // 0x14D4(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AttachFullBodyAlpha;                               // 0x14D8(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsAttachSlow;                                     // 0x14DC(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsAttachFast;                                     // 0x14DD(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14DE[0x2];                                     // 0x14DE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           PlayerTetheredTagName;                             // 0x14E0(0x000C)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           WaterTagName;                                      // 0x14EC(0x000C)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14F8[0x118];                                   // 0x14F8(0x0118)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TowHookLayerAnimInstance">();
	}
	static class UTowHookLayerAnimInstance* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTowHookLayerAnimInstance>();
	}
};

// Class TowHookWeaponRuntime.TowHookWeaponAnimInstance
// 0x0010 (0x0410 - 0x0400)
class UTowHookWeaponAnimInstance final : public UAnimInstance
{
public:
	bool                                          bHasAmmo;                                          // 0x03F8(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3F9[0x17];                                     // 0x03F9(0x0017)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TowHookWeaponAnimInstance">();
	}
	static class UTowHookWeaponAnimInstance* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTowHookWeaponAnimInstance>();
	}
};

// Class TowHookWeaponRuntime.TowHookWeaponBlueprintLibrary
// 0x0000 (0x0030 - 0x0030)
class UTowHookWeaponBlueprintLibrary final : public UBlueprintFunctionLibrary
{
public:
	static struct FTowHookWeaponTargetInfo GetTowHookWeaponTargetInfo(class AFortPlayerPawn* SourcePlayerPawn, const struct FTowHookWeaponTargetingConfig& TargetingConfig, float DrawDebugDuration);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TowHookWeaponBlueprintLibrary">();
	}
	static class UTowHookWeaponBlueprintLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTowHookWeaponBlueprintLibrary>();
	}
};

}

