#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: VersePrototypeGameplay_nav_grid_node_2d

#include "Basic.hpp"

#include "EpicGamesTemporary_0_structs.hpp"
#include "CoreUObject_classes.hpp"


namespace SDK
{

// VerseClass VersePrototypeGameplay_nav_grid_node_2d.nav_grid_node_2d
// 0x0038 (0x0068 - 0x0030)
class Unav_grid_node_2d final : public UObject
{
public:
	double                                        __verse_0xE464B930_Distance;                       // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        __verse_0x36D8B416_RootDistance;                   // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        __verse_0x96A0C820_EstimatedNavigationCost;        // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         __verse_0xD9F48086_Discovered : 1;                 // 0x0048(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (InstancedReference, NoDestructor, HasGetValueTypeHash))
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSpatialMath_vector2i                  __verse_0xB0C27E0A_Location;                       // 0x0050(0x0010)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	TOptional<class Unav_grid_node_2d*, true>     __verse_0xD38C1E79_Parent;                         // 0x0060(0x0008)(InstancedReference, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)

public:
	void _Block();
	void _InitCDO();
	void _InitInstance();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"nav_grid_node_2d">();
	}
	static class Unav_grid_node_2d* GetDefaultObj()
	{
		return GetDefaultObjImpl<Unav_grid_node_2d>();
	}
};

}

