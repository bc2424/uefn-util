#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DelMarUI

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "DelMarUI_structs.hpp"
#include "CommonUI_structs.hpp"
#include "CommonUI_classes.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"
#include "DynamicUI_classes.hpp"
#include "InputCore_structs.hpp"
#include "ModelViewViewModel_classes.hpp"
#include "FortniteUI_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "CoreUObject_classes.hpp"
#include "Slate_structs.hpp"
#include "CommonInput_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "DelMarCore_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "FortniteGame_classes.hpp"
#include "ModularGameplay_classes.hpp"
#include "UIChart_classes.hpp"


namespace SDK
{

// Class DelMarUI.DelMarUserWidget
// 0x0078 (0x04B8 - 0x0440)
class UDelMarUserWidget : public UCommonUserWidget
{
public:
	uint8                                         Pad_440[0x58];                                     // 0x0440(0x0058)(Fixing Size After Last Property [ Dumper-7 ])
	EWidgetTransitionerInitialStatus              InitialTransitionStatus;                           // 0x0498(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	ESlateVisibility                              HiddenVisibility;                                  // 0x0499(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bAlwaysReverseInterruptedAnimations;               // 0x049A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_49B[0x5];                                      // 0x049B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetTransitioner*                    WidgetTransitioner;                                // 0x04A0(0x0008)(ZeroConstructor, Transient, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                       NormalTransitionIn;                                // 0x04A8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                       NormalTransitionOut;                               // 0x04B0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void BP_Hide(bool bSkipAnimation);
	void BP_Show(bool bSkipAnimation);
	class UUIStateChartManager* GetUIStateChartManager();
	void HandleWidgetTransitionerStatusChanged(class UWidgetTransitioner* InTransitioner, EWidgetTransitionerStatus InStatus);
	void SetDisplayEnabled(bool bEnabled, bool bSkipAnimation);

	class UWidgetTransitioner* GetWidgetTransitioner() const;
	bool IsDisplayEnabled() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarUserWidget">();
	}
	static class UDelMarUserWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarUserWidget>();
	}
};

// Class DelMarUI.DelMarCountdownTimerWidget
// 0x0040 (0x04F8 - 0x04B8)
class UDelMarCountdownTimerWidget final : public UDelMarUserWidget
{
public:
	class UTextBlock*                             TextBlock_RemainingTime;                           // 0x04B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        InitialCoundownTime;                               // 0x04C0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(double TimeSeconds)> OnCountdownTimeChanged;                            // 0x04C8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnCountdownTimeSet;                                // 0x04D8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnCountdownTimeEnded;                              // 0x04E8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	void SetInitialCountdownTime(double InTime);

	double GetTimeRemainingSeconds() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarCountdownTimerWidget">();
	}
	static class UDelMarCountdownTimerWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarCountdownTimerWidget>();
	}
};

// Class DelMarUI.DelMarCreativeUIDirector
// 0x0020 (0x0470 - 0x0450)
class ADelMarCreativeUIDirector final : public ADynamicUIDirectorBase
{
public:
	class ADelMarVehicle*                         CachedDelMarVehicle;                               // 0x0450(0x0008)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDynamicUIScene*                        CreativeDelMarUI;                                  // 0x0458(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTag                           VehicleInAirTag;                                   // 0x0460(0x000C)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_46C[0x4];                                      // 0x046C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnVehicleAnyWheelsOnGroundChanged(const TScriptInterface<class IDelMarVehicleInterface>& VehicleRef, bool bAnyWheelsOnGround);
	void OnVehicleEnter();
	void OnVehicleExit();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarCreativeUIDirector">();
	}
	static class ADelMarCreativeUIDirector* GetDefaultObj()
	{
		return GetDefaultObjImpl<ADelMarCreativeUIDirector>();
	}
};

// Class DelMarUI.DelMarDriverCameraWidget
// 0x0128 (0x05E0 - 0x04B8)
class UDelMarDriverCameraWidget final : public UDelMarUserWidget
{
public:
	class UWidgetAnimation*                       DefaultIntercomAnimation;                          // 0x04B8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                       ReactiveDriverCamera_Persistent;                   // 0x04C0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReactiveWidgetOutroDelay;                          // 0x04C8(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReactiveWidgetMaxActiveTime;                       // 0x04CC(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<struct FGameplayTag, class FName>        MainChannelAnimationTagTable;                      // 0x04D0(0x0050)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TMap<int32, struct FDelMarReactiveWidgetAnimation> ReactiveAnimationTable;                            // 0x0520(0x0050)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TMap<class FName, class UWidgetAnimation*>    AnimationNameTable;                                // 0x0570(0x0050)(BlueprintVisible, BlueprintReadOnly, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	class UUMGSequencePlayer*                     IntercomSequencePlayer;                            // 0x05C0(0x0008)(ZeroConstructor, Transient, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGSequencePlayer*                     ReactiveSequencePlayer;                            // 0x05C8(0x0008)(ZeroConstructor, Transient, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_5D0[0x10];                                     // 0x05D0(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	TArray<class FName> GetAnimationNames() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarDriverCameraWidget">();
	}
	static class UDelMarDriverCameraWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarDriverCameraWidget>();
	}
};

// Class DelMarUI.DelMarInputActionRichTextBlockDecorator
// 0x0130 (0x0160 - 0x0030)
class UDelMarInputActionRichTextBlockDecorator final : public URichTextBlockDecorator
{
public:
	class UInputAction*                           InputAction;                                       // 0x0030(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   DisplayName;                                       // 0x0038(0x0010)(Transient, NativeAccessSpecifierPublic)
	struct FKey                                   Key;                                               // 0x0048(0x0020)(Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_68[0x8];                                       // 0x0068(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            Icon;                                              // 0x0070(0x00D0)(Transient, NativeAccessSpecifierPublic)
	class URichTextBlock*                         OwnerWidget;                                       // 0x0140(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class ULocalPlayer>            OwningLocalPlayer;                                 // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class UCommonInputSubsystem>   CommonInputSubsystem;                              // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class UEnhancedInputLocalPlayerSubsystem> EnhancedInputSubsystem;                            // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarInputActionRichTextBlockDecorator">();
	}
	static class UDelMarInputActionRichTextBlockDecorator* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarInputActionRichTextBlockDecorator>();
	}
};

// Class DelMarUI.DelMarListView
// 0x0010 (0x0D90 - 0x0D80)
class UDelMarListView final : public UCommonListView
{
public:
	uint8                                         Pad_D78[0x10];                                     // 0x0D78(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bTreatNavigationAsScrolling;                       // 0x0D88(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_D89[0x7];                                      // 0x0D89(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarListView">();
	}
	static class UDelMarListView* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarListView>();
	}
};

// Class DelMarUI.DelMarListViewModel
// 0x0010 (0x0080 - 0x0070)
class UDelMarListViewModel : public UMVVMViewModelBase
{
public:
	TArray<class UMVVMViewModelBase*>             Elements;                                          // 0x0070(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)

public:
	class UMVVMViewModelBase* GetElementAt(int32 InIndex) const;
	const TArray<class UMVVMViewModelBase*> GetElements() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarListViewModel">();
	}
	static class UDelMarListViewModel* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarListViewModel>();
	}
};

// Class DelMarUI.DelMarViewModelBase
// 0x0000 (0x0078 - 0x0078)
class UDelMarViewModelBase : public UFortPerUserViewModel
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarViewModelBase">();
	}
	static class UDelMarViewModelBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarViewModelBase>();
	}
};

// Class DelMarUI.DelMarMatchEventViewModel
// 0x0010 (0x0088 - 0x0078)
class UDelMarMatchEventViewModel final : public UDelMarViewModelBase
{
public:
	TMulticastInlineDelegate<void(class AFortPlayerState* PlayerState, const struct FGameplayTag& EventTag, const class FString& Context)> OnMatchEventOccured;                               // 0x0078(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarMatchEventViewModel">();
	}
	static class UDelMarMatchEventViewModel* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarMatchEventViewModel>();
	}
};

// Class DelMarUI.DelMarPlayerIndicatorsContainer
// 0x0158 (0x0610 - 0x04B8)
class UDelMarPlayerIndicatorsContainer final : public UDelMarUserWidget
{
public:
	class UCanvasPanel*                           IndicatorCanvas;                                   // 0x04B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UDelMarPlayerIndicatorWidget> IndicatorWidgetClass;                              // 0x04C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                IndicatorOffset;                                   // 0x04C8(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         RearVerticalHintThreshold;                         // 0x04E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         RearIndicatorMaxDistance;                          // 0x04E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         RearIndicatorMinDistance;                          // 0x04E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         RearIndicatorRangeWidth;                           // 0x04EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         RearIndicatorRangeDegree;                          // 0x04F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         ForwardIndicatorMaxDistance;                       // 0x04F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FAnchors                               IndicatorAnchors;                                  // 0x04F8(0x0020)(Edit, BlueprintVisible, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FVector2D                              IndicatorAlignment;                                // 0x0518(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                              RearIndicatorSize;                                 // 0x0528(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveFloat*                            RearDistanceScaleCurve;                            // 0x0538(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveFloat*                            RearDistanceOpacityCurve;                          // 0x0540(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveFloat*                            ForwardDistanceScaleCurve;                         // 0x0548(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveFloat*                            ForwardDistanceOpacityCurve;                       // 0x0550(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         MaxRearIndicators;                                 // 0x0558(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         MaxForwardIndicators;                              // 0x055C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UDelMarVehicleManager>   VehicleManager;                                    // 0x0560(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class ADelMarVehicle>          ViewingVehicle;                                    // 0x0568(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class AFortPlayerState>        ViewingPlayerState;                                // 0x0570(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FDelMarPlayerIndicatorData>     IndicatorsData;                                    // 0x0578(0x0010)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TMap<class AFortPlayerState*, class UDelMarPlayerIndicatorWidget*> IndicatorWidgets;                                  // 0x0588(0x0050)(ExportObject, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<class UDelMarPlayerIndicatorWidget*>   IndicatorPool;                                     // 0x05D8(0x0010)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UDelMarPositionalTrackerComponent> PositionalTrackerComponent;                        // 0x05E8(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_5F0[0x20];                                     // 0x05F0(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void HandleIconOnlySettingChanged(bool bUseIconOnly);
	void HandleRacePlayersChanged(const TMap<int32, class UDelMarPlayerViewModel*>& RacePlayers);
	void HandleViewTargetChanged(class AFortPlayerController* InController, class AActor* OldViewTarget, class AActor* NewViewTarget);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarPlayerIndicatorsContainer">();
	}
	static class UDelMarPlayerIndicatorsContainer* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarPlayerIndicatorsContainer>();
	}
};

// Class DelMarUI.DelMarPlayerIndicatorWidget
// 0x0058 (0x0470 - 0x0418)
class UDelMarPlayerIndicatorWidget final : public UUserWidget
{
public:
	uint8                                         Pad_418[0x8];                                      // 0x0418(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class USizeBox*                               AvatarSizeBox;                                     // 0x0420(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortLazyImage*                         AvatarLazyImage;                                   // 0x0428(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USizeBox*                               PlayerNameSizeBox;                                 // 0x0430(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                 UpArrowImage;                                      // 0x0438(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                 DownArrowImage;                                    // 0x0440(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOverlay*                               BackgroundOverlay;                                 // 0x0448(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_450[0x4];                                      // 0x0450(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         BehindAvatarSizeBoxWidth;                          // 0x0454(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AheadAvatarSizeBoxWidth;                           // 0x0458(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bBehindAvatarImageIsExpanded;                      // 0x045C(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAheadAvatarImageIsExpanded;                       // 0x045D(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_45E[0x2];                                      // 0x045E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         BehindPlayerNameSizeBoxMaxWidth;                   // 0x0460(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AheadPlayerNameSizeBoxMaxWidth;                    // 0x0464(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BehindBackgroundOverlaySlotPadding;                // 0x0468(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AheadBackgroundOverlaySlotPadding;                 // 0x046C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void BP_HideIndicator();
	void BP_SetViewModel(class UDelMarPlayerViewModel* ViewModel);
	void BP_UpdateIndicator(float Scale, float Opacity, bool bRearIndicator, EDelMarRearAlertVerticalHint VerticalHint);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarPlayerIndicatorWidget">();
	}
	static class UDelMarPlayerIndicatorWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarPlayerIndicatorWidget>();
	}
};

// Class DelMarUI.DelMarExpandableHudWidget
// 0x00B8 (0x0570 - 0x04B8)
class UDelMarExpandableHudWidget : public UDelMarUserWidget
{
public:
	class UImage*                                 NavigateEntriesBindingImage;                       // 0x04B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4C0[0x18];                                     // 0x04C0(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UDelMarUserWidget>          ExpandableHudWidgetEntryClass;                     // 0x04D8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         NumDesignerPreviewEntries;                         // 0x04E0(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         EntrySpacing;                                      // 0x04E4(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bExpanded;                                         // 0x04E8(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bNavigationEnabled;                                // 0x04E9(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_4EA[0x6];                                      // 0x04EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             NavigateEntriesGamepadTexture;                     // 0x04F0(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTexture2D*                             NavigateEntriesPCTexture;                          // 0x04F8(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDelMarPlayerPreferencesComponent*      PlayerPreferences;                                 // 0x0500(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOverlay*                               EntryOverlay;                                      // 0x0508(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URetainerBox*                           EdgeFadeRetainerBox;                               // 0x0510(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USizeBox*                               ContentSizeBox;                                    // 0x0518(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMulticastInlineDelegate<void()>              OnExpandToggled;                                   // 0x0520(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	TMulticastInlineDelegate<void(bool bNavigationEnabled)> OnNavigationEnabledChanged;                        // 0x0530(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	TMulticastInlineDelegate<void(bool bExpandable)> OnExpandableChanged;                               // 0x0540(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	TArray<class UDelMarUserWidget*>              DisplayedHudWidgetEntries;                         // 0x0550(0x0010)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	uint8                                         Pad_560[0x10];                                     // 0x0560(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BP_HandlePlayerPreferencesAdded(class UDelMarPlayerPreferencesComponent* InPlayerPreferences);
	void HandleToggleAction();
	void HandleToggleSettingChanged(bool bUseToggle);
	void SetTargetInterpTransformY(float InTargetInterpTransformY);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarExpandableHudWidget">();
	}
	static class UDelMarExpandableHudWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarExpandableHudWidget>();
	}
};

// Class DelMarUI.DelMarPositionalTrackerWidget
// 0x0020 (0x0590 - 0x0570)
class UDelMarPositionalTrackerWidget final : public UDelMarExpandableHudWidget
{
public:
	int32                                         MinPlayersToStart;                                 // 0x0570(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_574[0x4];                                      // 0x0574(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UDelMarPlayerViewModel*>         DisplayedPlayers;                                  // 0x0578(0x0010)(ZeroConstructor, Transient, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	uint8                                         Pad_588[0x8];                                      // 0x0588(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnInputMethodChanged(ECommonInputType InputMethod);
	void UpdatePlayerPositions(const TArray<class UDelMarPlayerViewModel*>& InPlayers);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarPositionalTrackerWidget">();
	}
	static class UDelMarPositionalTrackerWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarPositionalTrackerWidget>();
	}
};

// Class DelMarUI.DelMarScreenBase
// 0x0080 (0x05F8 - 0x0578)
class UDelMarScreenBase : public UCommonActivatableWidget
{
public:
	uint8                                         Pad_578[0x58];                                     // 0x0578(0x0058)(Fixing Size After Last Property [ Dumper-7 ])
	EWidgetTransitionerInitialStatus              InitialTransitionStatus;                           // 0x05D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_5D1[0x7];                                      // 0x05D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetTransitioner*                    WidgetTransitioner;                                // 0x05D8(0x0008)(ZeroConstructor, Transient, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bActivateOnShow;                                   // 0x05E0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_5E1[0x7];                                      // 0x05E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetAnimation*                       NormalTransitionIn;                                // 0x05E8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                       NormalTransitionOut;                               // 0x05F0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void BP_Hide(bool bSkipAnimation);
	void BP_Show(bool bSkipAnimation);
	class UUIStateChartManager* GetUIStateChartManager();
	void HandleWidgetTransitionerStatusChanged(class UWidgetTransitioner* InTransitioner, EWidgetTransitionerStatus InStatus);
	void SetDisplayEnabled(bool bEnabled, bool bSkipAnimation);

	class UWidgetTransitioner* GetWidgetTransitioner() const;
	bool IsDisplayEnabled() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarScreenBase">();
	}
	static class UDelMarScreenBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarScreenBase>();
	}
};

// Class DelMarUI.DelMarPostRaceLeaderboard
// 0x0020 (0x0618 - 0x05F8)
class UDelMarPostRaceLeaderboard final : public UDelMarScreenBase
{
public:
	struct FDataTableRowHandle                    FilterDataTableRow;                                // 0x05F8(0x0018)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_610[0x8];                                      // 0x0610(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BP_UpdateLeaderboardFilter();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarPostRaceLeaderboard">();
	}
	static class UDelMarPostRaceLeaderboard* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarPostRaceLeaderboard>();
	}
};

// Class DelMarUI.DelMarPostRaceScreen
// 0x00C0 (0x06B8 - 0x05F8)
class UDelMarPostRaceScreen final : public UDelMarScreenBase
{
public:
	struct FDataTableRowHandle                    TabNavLeftDataTableRow;                            // 0x05F8(0x0018)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                    TabNavRightDataTableRow;                           // 0x0610(0x0018)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                    ReadyUpDataTableRow;                               // 0x0628(0x0018)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                    SpectateDataTableRow;                              // 0x0640(0x0018)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                    ResetRunDataTableRow;                              // 0x0658(0x0018)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                    ReturnToLobbyDataTableRow;                         // 0x0670(0x0018)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	class UCommonButtonGroupBase*                 ButtonGroup_PostMatchNavigation;                   // 0x0688(0x0008)(BlueprintVisible, ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class ADelMarRaceManager>      CachedRaceManager;                                 // 0x0690(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_698[0x20];                                     // 0x0698(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BP_OnReadyUpChanged(bool bReady);
	void RequestCountdown();
	void ResetRun();
	void UpdateVote(EDelMarPostRaceVote NewVote);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarPostRaceScreen">();
	}
	static class UDelMarPostRaceScreen* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarPostRaceScreen>();
	}
};

// Class DelMarUI.DelMarPostRaceVoteWidget
// 0x0000 (0x04B8 - 0x04B8)
class UDelMarPostRaceVoteWidget final : public UDelMarUserWidget
{
public:
	void BP_OnPostRaceVoteChanged(EDelMarPostRaceVote Vote);
	void UpdateVote(EDelMarPostRaceVote NewVote);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarPostRaceVoteWidget">();
	}
	static class UDelMarPostRaceVoteWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarPostRaceVoteWidget>();
	}
};

// Class DelMarUI.DelMarQuestScreenContainer
// 0x0018 (0x04D0 - 0x04B8)
class UDelMarQuestScreenContainer final : public UDelMarUserWidget
{
public:
	class FName                                   QuestTabID;                                        // 0x04B8(0x000C)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_4C4[0x4];                                      // 0x04C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAthenaMapScreenContainer*              AthenaScreenContainer;                             // 0x04C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void HandleAthenaScreenDeactivated();
	void HandleMapPanelExitButtonPressed();
	void HandleToggleQuestList();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarQuestScreenContainer">();
	}
	static class UDelMarQuestScreenContainer* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarQuestScreenContainer>();
	}
};

// Class DelMarUI.DelMarRichTextInputSwitcher
// 0x00D8 (0x04F0 - 0x0418)
class UDelMarRichTextInputSwitcher final : public UUserWidget
{
public:
	bool                                          bUseFormattedText;                                 // 0x0418(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_419[0x7];                                      // 0x0419(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   TextFormat;                                        // 0x0420(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TMap<class FString, struct FDelMarKeyPair>    Args;                                              // 0x0430(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                   TextKBM;                                           // 0x0480(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                   TextGamepad;                                       // 0x0490(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                   TextTouch;                                         // 0x04A0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class UCommonRichTextBlock*                   Widget_RichText;                                   // 0x04B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 FormattedTextPreviewKBM;                           // 0x04B8(0x0010)(Edit, ZeroConstructor, EditConst, EditorOnly, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 FormattedTextPreviewGamepad;                       // 0x04C8(0x0010)(Edit, ZeroConstructor, EditConst, EditorOnly, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 FormattedTextPreviewTouch;                         // 0x04D8(0x0010)(Edit, ZeroConstructor, EditConst, EditorOnly, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4E8[0x8];                                      // 0x04E8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void SetInputText(const class FText& InTextKBM, const class FText& InTextGamepad, const class FText& InTextTouch);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarRichTextInputSwitcher">();
	}
	static class UDelMarRichTextInputSwitcher* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarRichTextInputSwitcher>();
	}
};

// Class DelMarUI.DelMarSelectionListViewModel
// 0x0020 (0x00A0 - 0x0080)
class UDelMarSelectionListViewModel final : public UDelMarListViewModel
{
public:
	int32                                         SelectedIndex;                                     // 0x0080(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_84[0x1C];                                      // 0x0084(0x001C)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void ClearSelection();
	void SelectNextElement(bool bAllowWrap);
	void SelectPreviousElement(bool bAllowWrap);
	void SetSelectedElement(class UMVVMViewModelBase* InSelectedElement);
	void SetSelectedIndex(int32 InIndex);

	int32 GetSelectedIndex() const;
	bool HasSelection() const;
	class UMVVMViewModelBase* SelectedElement() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarSelectionListViewModel">();
	}
	static class UDelMarSelectionListViewModel* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarSelectionListViewModel>();
	}
};

// Class DelMarUI.DelMarTouchWidgetBase
// 0x0028 (0x04E0 - 0x04B8)
class UDelMarTouchWidgetBase : public UDelMarUserWidget
{
public:
	TArray<struct FDelMarTouchInputDefinition>    InputActionsData;                                  // 0x04B8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	bool                                          bTrackInputPastBounds;                             // 0x04C8(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bTrackInputFromEnter;                              // 0x04C9(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bIsInjectingInput;                                 // 0x04CA(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EDelMarTouchInputTrackingState                CurrentInputTrackingState;                         // 0x04CB(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	ECommonInputMode                              RequiredInputMode;                                 // 0x04CC(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_4CD[0x13];                                     // 0x04CD(0x0013)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static float GetMobileContentScaleFactor();
	static int32 GetPixelsPerInch();
	static float GetTouchJoystickInputValueMultiplier();
	static bool ShouldTouchJoystickIgnoreContentScaleFactor();

	void CancelInputTracking();
	void OnActiveInputModeChanged(ECommonInputMode NewInputMode);
	void OnInputInjectionEnded(const struct FPointerEvent& InGestureEvent, EDelMarInputInjectionState InInjectedState);
	void OnInputInjectionStarted(const struct FPointerEvent& InGestureEvent, EDelMarInputInjectionState InInjectedState);
	void OnTrackedInputEnded(const struct FPointerEvent& InGestureEvent, bool bCancelled);
	void OnTrackedInputStarted(const struct FPointerEvent& InGestureEvent);
	void OnTrackedInputUpdated(const struct FPointerEvent& InGestureEvent);

	struct FGeometry GetHitboxGeometry() const;
	bool IsGestureInsideHitbox(const struct FPointerEvent& InGestureEvent) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarTouchWidgetBase">();
	}
	static class UDelMarTouchWidgetBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarTouchWidgetBase>();
	}
};

// Class DelMarUI.DelMarTouchActionButton
// 0x0078 (0x0558 - 0x04E0)
class UDelMarTouchActionButton final : public UDelMarTouchWidgetBase
{
public:
	EDelMarTouchActionButtonState                 State;                                             // 0x04E0(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_4E1[0x7];                                      // 0x04E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<EDelMarTouchActionButtonState, struct FDelMarTouchActionButtonStateData> ButtonStateData;                                   // 0x04E8(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	bool                                          bHighlightActive;                                  // 0x0538(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_539[0x7];                                      // 0x0539(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class UDelMarTouchActionButton* Button, bool bHighlightActive)> OnHighlightChanged;                                // 0x0540(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	bool                                          bIsUpdatingState;                                  // 0x0550(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_551[0x7];                                      // 0x0551(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	bool CanSetState(EDelMarTouchActionButtonState NewState);
	void SetBackgroundBrush(const struct FSlateBrush& Brush);
	bool SetButtonState(EDelMarTouchActionButtonState NewState);
	void SetHighlightActive(bool bValue);
	void SetIconBrush(const struct FSlateBrush& Brush);

	EDelMarTouchActionButtonState GetState() const;
	EDelMarTouchActionButtonState GetStateOnStopInputTracking(bool bInputCancelled) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarTouchActionButton">();
	}
	static class UDelMarTouchActionButton* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarTouchActionButton>();
	}
};

// Class DelMarUI.DelMarTouchRegion
// 0x0010 (0x04F0 - 0x04E0)
class UDelMarTouchRegion final : public UDelMarTouchWidgetBase
{
public:
	TArray<class UDelMarTouchActionButton*>       TouchActionButtons;                                // 0x04E0(0x0010)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)

public:
	class UDelMarTouchActionButton* FindButtonByInputAction(class UInputAction* InputAction);
	void SetHighlightForInputAction(class UInputAction* InputAction);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarTouchRegion">();
	}
	static class UDelMarTouchRegion* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarTouchRegion>();
	}
};

// Class DelMarUI.DelMarUICheatManager
// 0x0058 (0x0088 - 0x0030)
class UDelMarUICheatManager final : public UChildCheatManager
{
public:
	class UDynamicUIScene*                        DriverCameraHiddenScene;                           // 0x0030(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDynamicUIScene*                        PlayerIndicatorHiddenScene;                        // 0x0038(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDynamicUIScene*                        PointsDebugWidgetVisibleScene;                     // 0x0040(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDynamicUIScene*                        RubberbandingWidgetVisibleScene;                   // 0x0048(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDynamicUIScene*                        StaticVehicleMeterHiddenScene;                     // 0x0050(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDynamicUIScene*                        VehicleDebugVisibleScene;                          // 0x0058(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDynamicUIScene*                        VehicleHealthDebugVisibleScene;                    // 0x0060(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDynamicUIScene*                        CheckpointDebugWidgetScene;                        // 0x0068(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDynamicUIScene*                        MapNameDebugWidgetScene;                           // 0x0070(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDynamicUIScene*                        GameplayTrackList;                                 // 0x0078(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bAttachedWidgetEnabled;                            // 0x0080(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void DelMarAttachedWidgetSetEnabled(bool bEnabled);
	void DelMarCheckpointDebugWidgetSetVisible(bool bVisible);
	void DelMarCloseTrackList();
	void DelMarDismissDialog();
	void DelMarDriverCameraSetHidden(bool bHidden);
	void DelMarDriverCameraSetReactiveType(int32 Type);
	void DelMarMapNameDebugWidgetSetVisible(bool bVisible);
	void DelMarOpenTrackList();
	void DelMarPlayerIndicatorsVisible(bool bVisible);
	void DelMarPointsDebugWidgetSetVisible(bool bVisible);
	void DelMarRequestDialogByTag(const struct FGameplayTag& Tag);
	void DelMarRubberbandingWidgetSetVisible(bool bVisible);
	void DelMarSetHint(const class FText& HintText, float RemoveAfterDelay);
	void DelMarTouchHUD(const class FString& TouchHUDType);
	void DelMarUISetVisible(bool bVisible);
	void DelMarUseToggleForExpandableHudWidget(bool bUseToggle);
	void DelMarVehicleDebugWidgetSetVisible(bool bVisible);
	void DelMarVehicleHealthDebugWidgetSetVisible(bool bVisible);
	void OnAddedToCheatManagerNative();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarUICheatManager">();
	}
	static class UDelMarUICheatManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarUICheatManager>();
	}
};

// Class DelMarUI.UIAnimationController
// 0x0010 (0x0040 - 0x0030)
class UUIAnimationController : public UObject
{
public:
	uint8                                         Pad_30[0x10];                                      // 0x0030(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void FastForward();
	float GetDuration();
	void JumpToBeginning();
	void JumpToEnd();
	void PlayBackward();
	void PlayForward();
	void Rewind();
	void Stop();
	void SwitchPlayDirection();

	bool IsPlaying() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UIAnimationController">();
	}
	static class UUIAnimationController* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUIAnimationController>();
	}
};

// Class DelMarUI.UITimelineAnimationController
// 0x0020 (0x0060 - 0x0040)
class UUITimelineAnimationController final : public UUIAnimationController
{
public:
	class UUserWidget*                            WidgetTarget;                                      // 0x0040(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                       Animation;                                         // 0x0048(0x0008)(ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGSequencePlayer*                     ActivePlayer;                                      // 0x0050(0x0008)(ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_58[0x8];                                       // 0x0058(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UUITimelineAnimationController* CreateInstance(class UUserWidget* WidgetTarget_0, class UWidgetAnimation* Animation_0);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UITimelineAnimationController">();
	}
	static class UUITimelineAnimationController* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUITimelineAnimationController>();
	}
};

// Class DelMarUI.UIAnimationControllerEntry
// 0x0010 (0x0040 - 0x0030)
class UUIAnimationControllerEntry final : public UObject
{
public:
	class UUIAnimationController*                 AnimationController;                               // 0x0030(0x0008)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsInverted;                                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UIAnimationControllerEntry">();
	}
	static class UUIAnimationControllerEntry* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUIAnimationControllerEntry>();
	}
};

// Class DelMarUI.WidgetTransitioner
// 0x00E0 (0x0110 - 0x0030)
class UWidgetTransitioner final : public UObject
{
public:
	TMulticastInlineDelegate<void(class UWidgetTransitioner* Transitioner, EWidgetTransitionerStatus Status)> OnTransitionerStatusChanged;                       // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UWidget*                                TargetWidget;                                      // 0x0040(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	ESlateVisibility                              HiddenVisibility;                                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	ESlateVisibility                              ShownVisibility;                                   // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EWidgetTransitionerStatus                     TransitionerStatus;                                // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_4B[0x5];                                       // 0x004B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UUIAnimationControllerEntry*            NormalTransitionIn;                                // 0x0050(0x0008)(ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUIAnimationControllerEntry*            NormalTransitionOut;                               // 0x0058(0x0008)(ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<struct FGameplayTag, class UUIAnimationControllerEntry*> HintedTransitionsIn;                               // 0x0060(0x0050)(Transient, Protected, NativeAccessSpecifierProtected)
	TMap<struct FGameplayTag, class UUIAnimationControllerEntry*> HintedTransitionsOut;                              // 0x00B0(0x0050)(Transient, Protected, NativeAccessSpecifierProtected)
	class UUIAnimationControllerEntry*            ActiveEntry;                                       // 0x0100(0x0008)(ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bAlwaysReverseInterruptedAnimations;               // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UWidgetTransitioner* CreateInstance(class UWidget* TargetWidget_0, EWidgetTransitionerInitialStatus InitialStatus, ESlateVisibility HiddenVisibility_0, ESlateVisibility ShownVisibility_0, bool AlwaysReverseInterruptedAnimations);

	void AddHintedTransitionIn(const struct FGameplayTag& InAnimationHint, class UUIAnimationController* InAnimationIn, const bool bInvert);
	void AddHintedTransitionOut(const struct FGameplayTag& InAnimationHint, class UUIAnimationController* InAnimationOut, const bool bInvert);
	void AddHintedTransitionPair(const struct FGameplayTag& InAnimationHint, class UUIAnimationController* InAnimation, const bool bIsTransitionIn);
	void BP_Hide(const bool bSkipAnimation, const struct FGameplayTagContainer& AnimationHints);
	class UWidgetTransitioner* BP_Initialize(class UWidget* TargetWidget_0, EWidgetTransitionerInitialStatus InitialStatus, ESlateVisibility HiddenVisibility_0, ESlateVisibility ShownVisibility_0, bool AlwaysReverseInterruptedAnimations);
	void BP_Show(const bool bSkipAnimation, const struct FGameplayTagContainer& AnimationHints);
	void SetNormalTransitionIn(class UUIAnimationController* InAnimationIn, const bool bInvert);
	void SetNormalTransitionOut(class UUIAnimationController* InAnimationOut, const bool bInvert);
	void SetNormalTransitionPair(class UUIAnimationController* InAnimation, const bool bIsTransitionIn);

	EWidgetTransitionerStatus GetTransitionerStatus() const;
	bool IsHidden() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"WidgetTransitioner">();
	}
	static class UWidgetTransitioner* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWidgetTransitioner>();
	}
};

// Class DelMarUI.DelMarActionWidget
// 0x0320 (0x0570 - 0x0250)
class UDelMarActionWidget final : public UWidget
{
public:
	TMulticastInlineDelegate<void(bool bUsingGamepad)> OnInputMethodChanged;                              // 0x0250(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FSlateBrush                            ProgressMaterialBrush;                             // 0x0260(0x00D0)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class FName                                   ProgressMaterialParam;                             // 0x0330(0x000C)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_33C[0x4];                                      // 0x033C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            IconRimBrush;                                      // 0x0340(0x00D0)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TArray<struct FDataTableRowHandle>            InputActions;                                      // 0x0410(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class UInputAction*                           EnhancedInputAction;                               // 0x0420(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_428[0x8];                                      // 0x0428(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDataTableRowHandle                    InputActionDataRow;                                // 0x0430(0x0018)(Deprecated, EditorOnly, NoDestructor, Protected, NativeAccessSpecifierProtected)
	class UMaterialInstanceDynamic*               ProgressDynamicMaterial;                           // 0x0448(0x0008)(ZeroConstructor, Transient, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_450[0x120];                                    // 0x0450(0x0120)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void SetEnhancedInputAction(class UInputAction* InInputAction);
	void SetIconRimBrush(const struct FSlateBrush& InIconRimBrush);
	void SetInputAction(const struct FDataTableRowHandle& InputActionRow);
	void SetInputActions(const TArray<struct FDataTableRowHandle>& NewInputActions);
	void UpdateActionWidget();

	class FText GetDisplayText() const;
	struct FSlateBrush GetIcon() const;
	bool IsHeldAction() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarActionWidget">();
	}
	static class UDelMarActionWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarActionWidget>();
	}
};

// Class DelMarUI.DelMarDialogBase
// 0x0018 (0x0590 - 0x0578)
class UDelMarDialogBase final : public UCommonActivatableWidget
{
public:
	uint8                                         Pad_578[0x18];                                     // 0x0578(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void DismissDialog();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarDialogBase">();
	}
	static class UDelMarDialogBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarDialogBase>();
	}
};

// Class DelMarUI.DelMarDialogHelper
// 0x0050 (0x0080 - 0x0030)
class UDelMarDialogHelper final : public UObject
{
public:
	TMap<struct FGameplayTag, TSoftClassPtr<class UClass>> DialogMapping;                                     // 0x0030(0x0050)(Edit, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarDialogHelper">();
	}
	static class UDelMarDialogHelper* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarDialogHelper>();
	}
};

// Class DelMarUI.DelMarInputConfigWidgetBase
// 0x0008 (0x0580 - 0x0578)
class UDelMarInputConfigWidgetBase final : public UCommonActivatableWidget
{
public:
	struct FUIInputConfig                         DesiredInputConfig;                                // 0x0578(0x0006)(Edit, BlueprintVisible, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                          bFlushPlayerInputWhenActivating;                   // 0x057E(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bFlushPlayerInputWhenDeactivating;                 // 0x057F(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarInputConfigWidgetBase">();
	}
	static class UDelMarInputConfigWidgetBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarInputConfigWidgetBase>();
	}
};

// Class DelMarUI.DelMarLoadingScreenHelper
// 0x0120 (0x0150 - 0x0030)
class UDelMarLoadingScreenHelper final : public UObject
{
public:
	struct FVector2D                              BackgroundDesiredSize;                             // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UClass>                   CustomLoadingWidget;                               // 0x0040(0x0030)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FZoneLoadingScreenConfig               ZoneConfig;                                        // 0x0070(0x00E0)(Edit, NativeAccessSpecifierPublic)

public:
	void PrepareDelMarLoadingScreen(class UObject* WorldContextObject);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarLoadingScreenHelper">();
	}
	static class UDelMarLoadingScreenHelper* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarLoadingScreenHelper>();
	}
};

// Class DelMarUI.DelMarUIDirector
// 0x0018 (0x0468 - 0x0450)
class ADelMarUIDirector final : public ADynamicUIDirectorBase
{
public:
	TSubclassOf<class UDelMarDialogHelper>        DialogHelperClass;                                 // 0x0450(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_458[0x8];                                      // 0x0458(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UDelMarDialogHelper*                    DialogHelper;                                      // 0x0460(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void SetLoadingScreenVisibiliy(bool bVisible);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarUIDirector">();
	}
	static class ADelMarUIDirector* GetDefaultObj()
	{
		return GetDefaultObjImpl<ADelMarUIDirector>();
	}
};

// Class DelMarUI.DelMarUIGlobals
// 0x0000 (0x0030 - 0x0030)
class UDelMarUIGlobals final : public UObject
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarUIGlobals">();
	}
	static class UDelMarUIGlobals* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarUIGlobals>();
	}
};

// Class DelMarUI.DelMarAttachedWidgetActor
// 0x0058 (0x0478 - 0x0420)
class ADelMarAttachedWidgetActor final : public AActor
{
public:
	float                                         DriftFollowDampening;                              // 0x0420(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         WallFollowDampening;                               // 0x0424(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RotateDampeningRate;                               // 0x0428(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class APlayerState>            ViewPlayerState;                                   // 0x042C(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class USceneComponent>         AttachedTarget;                                    // 0x0434(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class ADelMarVehicle>          AttachedVehicle;                                   // 0x043C(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class APlayerCameraManager>    CameraManager;                                     // 0x0444(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_44C[0x4];                                      // 0x044C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        AttachmentBaseComponent;                           // 0x0450(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDelMarWidgetComponent*                 SpeedometerWidget;                                 // 0x0458(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDelMarWidgetComponent*                 DriftBoostWidget;                                  // 0x0460(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDelMarWidgetComponent*                 UnderthrustWidget;                                 // 0x0468(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_470[0x8];                                      // 0x0470(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarAttachedWidgetActor">();
	}
	static class ADelMarAttachedWidgetActor* GetDefaultObj()
	{
		return GetDefaultObjImpl<ADelMarAttachedWidgetActor>();
	}
};

// Class DelMarUI.DelMarAttachedWidgetComponent
// 0x0020 (0x00F8 - 0x00D8)
class UDelMarAttachedWidgetComponent final : public UControllerComponent
{
public:
	TArray<TSubclassOf<class ADelMarAttachedWidgetActor>> AttachedWidgetActorsClass;                         // 0x00D8(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class ADelMarAttachedWidgetActor*>     AttachedWidgetActors;                              // 0x00E8(0x0010)(ZeroConstructor, Transient, Protected, UObjectWrapper, NativeAccessSpecifierProtected)

public:
	void HandleViewTargetChanged(class AFortPlayerController* InController, class AActor* OldViewTarget, class AActor* NewViewTarget);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarAttachedWidgetComponent">();
	}
	static class UDelMarAttachedWidgetComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarAttachedWidgetComponent>();
	}
};

// Class DelMarUI.DelMarWidgetComponent
// 0x0020 (0x0710 - 0x06F0)
class UDelMarWidgetComponent final : public UWidgetComponent
{
public:
	struct FVector2D                              LeftTopPadding;                                    // 0x06E8(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                              RightBottomPadding;                                // 0x06F8(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_708[0x8];                                      // 0x0708(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarWidgetComponent">();
	}
	static class UDelMarWidgetComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarWidgetComponent>();
	}
};

// Class DelMarUI.DelMarDebugCountdown
// 0x0040 (0x0638 - 0x05F8)
class UDelMarDebugCountdown final : public UDelMarScreenBase
{
public:
	class UCommonRichTextBlock*                   CountdownText;                                     // 0x05F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_600[0x38];                                     // 0x0600(0x0038)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarDebugCountdown">();
	}
	static class UDelMarDebugCountdown* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarDebugCountdown>();
	}
};

// Class DelMarUI.DelMarStartlineCountdownWidget
// 0x0048 (0x0500 - 0x04B8)
class UDelMarStartlineCountdownWidget final : public UDelMarUserWidget
{
public:
	TWeakObjectPtr<class ADelMarVehicle>          CachedDelMarVehicle;                               // 0x04B8(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class AActor>                  CurrentViewTarget;                                 // 0x04C0(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_4C8[0x38];                                     // 0x04C8(0x0038)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BP_OnActiveIntervalsChanged(int32 NumActiveIntervals);
	void BP_OnCountdownStarted(int32 TotalIntervals);
	void BP_OnStartlineBoostActivated(float PercentageMaxBonusSpeedEarned);
	void BP_OnStartlineBoostFailed();
	void HandleViewTargetChanged(class AFortPlayerController* PC, class AActor* Old, class AActor* NewViewTarget);

	int32 GetNumActiveIntervals() const;
	int32 GetNumTotalIntervals() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarStartlineCountdownWidget">();
	}
	static class UDelMarStartlineCountdownWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarStartlineCountdownWidget>();
	}
};

// Class DelMarUI.DelMarCheckpointTrackerEntryWidget
// 0x0020 (0x04D8 - 0x04B8)
class UDelMarCheckpointTrackerEntryWidget final : public UDelMarUserWidget
{
public:
	class UWidgetAnimation*                       AnimTransitionIn;                                  // 0x04B8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4C0[0x18];                                     // 0x04C0(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BP_OnDisplayedCheckpointChanged(const struct FDelMarSectionData& InSectionData, const bool bNewEntry);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarCheckpointTrackerEntryWidget">();
	}
	static class UDelMarCheckpointTrackerEntryWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarCheckpointTrackerEntryWidget>();
	}
};

// Class DelMarUI.DelMarCheckpointTrackerWidget
// 0x0048 (0x0500 - 0x04B8)
class UDelMarCheckpointTrackerWidget final : public UDelMarUserWidget
{
public:
	TSubclassOf<class UDelMarCheckpointTrackerEntryWidget> CheckpointTrackerEntryClass;                       // 0x04B8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         NumDesignerPreviewEntries;                         // 0x04C0(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         EntrySpacing;                                      // 0x04C4(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         MaxEntriesToDisplay;                               // 0x04C8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_4CC[0x4];                                      // 0x04CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UOverlay*                               CheckpointEntryOverlay;                            // 0x04D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URetainerBox*                           EdgeFadeRetainerBox;                               // 0x04D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USizeBox*                               TrackerSizeBox;                                    // 0x04E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UDelMarCheckpointTrackerEntryWidget*> DisplayedCheckpointTrackerEntries;                 // 0x04E8(0x0010)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	uint8                                         Pad_4F8[0x8];                                      // 0x04F8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void UpdateCheckpoints(const TArray<struct FDelMarSectionData>& InCheckpoints);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarCheckpointTrackerWidget">();
	}
	static class UDelMarCheckpointTrackerWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarCheckpointTrackerWidget>();
	}
};

// Class DelMarUI.DelMarBladeMenuContainer
// 0x0018 (0x0610 - 0x05F8)
class UDelMarBladeMenuContainer final : public UDelMarScreenBase
{
public:
	class UFortDualBladeMenu*                     DualBladeMenu;                                     // 0x05F8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                           CloseBladeMenuTriggerTag;                          // 0x0600(0x000C)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_60C[0x4];                                      // 0x060C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarBladeMenuContainer">();
	}
	static class UDelMarBladeMenuContainer* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarBladeMenuContainer>();
	}
};

// Class DelMarUI.DelMarCheckpointTimer
// 0x0030 (0x0628 - 0x05F8)
class UDelMarCheckpointTimer final : public UDelMarScreenBase
{
public:
	class UCommonTextBlock*                       Text_LapCount;                                     // 0x05F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonTextBlock*                       Text_CheckpointIndex;                              // 0x0600(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonTextBlock*                       Text_Timestamp;                                    // 0x0608(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonTextBlock*                       Text_LapTimestamp;                                 // 0x0610(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_618[0x10];                                     // 0x0618(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarCheckpointTimer">();
	}
	static class UDelMarCheckpointTimer* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarCheckpointTimer>();
	}
};

// Class DelMarUI.DelMarDebugPointWidget
// 0x0060 (0x0518 - 0x04B8)
class UDelMarDebugPointWidget final : public UDelMarUserWidget
{
public:
	class FString                                 PlayerPointsString;                                // 0x04B8(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_4C8[0x50];                                     // 0x04C8(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BP_OnPointsUpdated();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarDebugPointWidget">();
	}
	static class UDelMarDebugPointWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarDebugPointWidget>();
	}
};

// Class DelMarUI.DelMarDebugRubberbandingWidget
// 0x0048 (0x0500 - 0x04B8)
class UDelMarDebugRubberbandingWidget final : public UDelMarUserWidget
{
public:
	bool                                          bRubberbandingEnabled;                             // 0x04B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4B9[0x3];                                      // 0x04B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         PackDistance;                                      // 0x04BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MinPackDistance;                                   // 0x04C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxPackDistance;                                   // 0x04C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DistanceToPack;                                    // 0x04C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MinDistanceFromPack;                               // 0x04CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxDistanceFromPack;                               // 0x04D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MinSpeed;                                          // 0x04D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         StableSpeed;                                       // 0x04D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AppliedBonusSpeed;                                 // 0x04DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DistanceToPackRatio;                               // 0x04E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxBonusSpeedAtPosition;                           // 0x04E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxSpeedAtPosition;                                // 0x04E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxAllowedBonusSpeed;                              // 0x04EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BonusSpeedGainedPerSecond;                         // 0x04F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BonusSpeedLostPerSecond;                           // 0x04F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MMRUsed;                                           // 0x04F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxBonusSpeedScalar;                               // 0x04FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void BP_OnRubberbandingUpdated();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarDebugRubberbandingWidget">();
	}
	static class UDelMarDebugRubberbandingWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarDebugRubberbandingWidget>();
	}
};

// Class DelMarUI.DelMarDebugVehicleHealthWidget
// 0x0010 (0x04C8 - 0x04B8)
class UDelMarDebugVehicleHealthWidget final : public UDelMarUserWidget
{
public:
	float                                         CurrentHealth;                                     // 0x04B8(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         MaxHealth;                                         // 0x04BC(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_4C0[0x8];                                      // 0x04C0(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BP_OnHealthUpdated();
	void HandleVehicleHealthChanged();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarDebugVehicleHealthWidget">();
	}
	static class UDelMarDebugVehicleHealthWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarDebugVehicleHealthWidget>();
	}
};

// Class DelMarUI.DelMarDebugVehicleWidget
// 0x00C0 (0x0578 - 0x04B8)
class UDelMarDebugVehicleWidget final : public UDelMarUserWidget
{
public:
	float                                         BaseTargetSpeed;                                   // 0x04B8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FinalTargetSpeed;                                  // 0x04BC(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         OversteerPercentage;                               // 0x04C0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHasValidDraftingTarget;                           // 0x04C4(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EDelmarDraftingState                          DraftingState;                                     // 0x04C5(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4C6[0x2];                                      // 0x04C6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DraftingBonusSpeed;                                // 0x04C8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DraftingTargetDegrees;                             // 0x04CC(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DraftingCurrentBonusSpeedPercentage;               // 0x04D0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DraftingMaxBonusSpeedPercentage;                   // 0x04D4(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SecondsInDrift;                                    // 0x04D8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AccumulatedWaitingPeriodSeconds;                   // 0x04DC(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DriftBoostBonusSpeed;                              // 0x04E0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DriftBoostDuration;                                // 0x04E4(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DriftBoostDurationSecondsLeft;                     // 0x04E8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PotentialDriftBoostBonusSpeed;                     // 0x04EC(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PotentialDriftBoostDuration;                       // 0x04F0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         QueuedDriftBoostBonusSpeed;                        // 0x04F4(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         StartlineBonusSpeed;                               // 0x04F8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TurboBonusSpeed;                                   // 0x04FC(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TurboZoneBonusSpeed;                               // 0x0500(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TurboSecondsRemaining;                             // 0x0504(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TurboCharges;                                      // 0x0508(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         WorldBonusSpeed;                                   // 0x050C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TotalBonusSpeed;                                   // 0x0510(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDelMarTerrainData                     TerrainData;                                       // 0x0514(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
	int32                                         NumWheelWorldContacts;                             // 0x052C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                AverageWheelWorldContactNormal;                    // 0x0530(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MinimumLandingSpeed;                               // 0x0548(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BaseForwardSpeed;                                  // 0x054C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         StableSpeed;                                       // 0x0550(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         UpwardSpeed;                                       // 0x0554(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         VehicleSpeed;                                      // 0x0558(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bInvertedSteeringActive;                           // 0x055C(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_55D[0x3];                                      // 0x055D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MaxForwardSpeed;                                   // 0x0560(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SecondsSinceTerrainPenalty;                        // 0x0564(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         KickflipActivationCharges;                         // 0x0568(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bStrafeDisabled;                                   // 0x056C(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCanActivateStrafe;                                // 0x056D(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_56E[0x2];                                      // 0x056E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         StrafeCooldownSeconds;                             // 0x0570(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         StrafeCooldownPercentage;                          // 0x0574(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void BP_OnVehicleUpdated();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarDebugVehicleWidget">();
	}
	static class UDelMarDebugVehicleWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarDebugVehicleWidget>();
	}
};

// Class DelMarUI.DelMarEmotePickerContainer
// 0x0010 (0x0608 - 0x05F8)
class UDelMarEmotePickerContainer final : public UDelMarScreenBase
{
public:
	struct FGameplayTag                           CloseEmotePickerTriggerTag;                        // 0x05F8(0x000C)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_604[0x4];                                      // 0x0604(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void CloseEmotePickerContainer();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarEmotePickerContainer">();
	}
	static class UDelMarEmotePickerContainer* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarEmotePickerContainer>();
	}
};

// Class DelMarUI.DelMarReadyUpWidget
// 0x0000 (0x0418 - 0x0418)
class UDelMarReadyUpWidget final : public UUserWidget
{
public:
	void BP_OnReadyUpChanged(bool bReady);
	void BP_ReadyUp(const bool bReady);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarReadyUpWidget">();
	}
	static class UDelMarReadyUpWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarReadyUpWidget>();
	}
};

// Class DelMarUI.DelMarTurboBonusZoneWidget
// 0x0008 (0x04C0 - 0x04B8)
class UDelMarTurboBonusZoneWidget final : public UDelMarUserWidget
{
public:
	TWeakObjectPtr<class ADelMarVehicle>          CachedDelMarVehicle;                               // 0x04B8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void BP_OnTurboZoneStateChanged(EDelMarTurboZoneState NewState);
	void HandleTurboStateChange(EDelMarTurboZoneState NewState);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarTurboBonusZoneWidget">();
	}
	static class UDelMarTurboBonusZoneWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarTurboBonusZoneWidget>();
	}
};

// Class DelMarUI.DelMarInteractionIndicatorContainer
// 0x0008 (0x0490 - 0x0488)
class UDelMarInteractionIndicatorContainer final : public UFortHUDElementWidget
{
public:
	class UFortActorCanvas*                       VehicleIndicators;                                 // 0x0488(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void HandleIndicatorModeChanged(bool bIndicatorsEnabled);
	void OnTargetChangedNative(bool bTargeting);
	void OnTargetingChanged(bool bTargeting);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarInteractionIndicatorContainer">();
	}
	static class UDelMarInteractionIndicatorContainer* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarInteractionIndicatorContainer>();
	}
};

// Class DelMarUI.DelMarPositionalTrackerEntryWidget
// 0x0030 (0x04E8 - 0x04B8)
class UDelMarPositionalTrackerEntryWidget final : public UDelMarUserWidget
{
public:
	TMulticastInlineDelegate<void(class UDelMarPlayerViewModel* InPlayerViewModel)> OnDisplayedPlayerSet;                              // 0x04B8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(bool IsEnabled)> OnNavigationEnabledChanged;                        // 0x04C8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                       AnimIsTargetPlayer;                                // 0x04D8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bTargetPlayer;                                     // 0x04E0(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_4E1[0x7];                                      // 0x04E1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void RefreshPlayerInfo(bool IsTargetPlayer);
	void SetDisplayedPlayer(class UDelMarPlayerViewModel* InPlayerModel);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarPositionalTrackerEntryWidget">();
	}
	static class UDelMarPositionalTrackerEntryWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarPositionalTrackerEntryWidget>();
	}
};

// Class DelMarUI.DelMarLoadingScreenWidget
// 0x0018 (0x0458 - 0x0440)
class UDelMarLoadingScreenWidget final : public UCommonUserWidget
{
public:
	uint8                                         Pad_440[0x8];                                      // 0x0440(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FText>                           LoadingScreenTips;                                 // 0x0448(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarLoadingScreenWidget">();
	}
	static class UDelMarLoadingScreenWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarLoadingScreenWidget>();
	}
};

// Class DelMarUI.DelMarPostRaceRankedRecap
// 0x0000 (0x0578 - 0x0578)
class UDelMarPostRaceRankedRecap final : public UCommonActivatableWidget
{
public:
	float GetFailsafeDelayDuration() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarPostRaceRankedRecap">();
	}
	static class UDelMarPostRaceRankedRecap* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarPostRaceRankedRecap>();
	}
};

// Class DelMarUI.DelMarDebugTrackEntry
// 0x0018 (0x0430 - 0x0418)
class UDelMarDebugTrackEntry : public UUserWidget
{
public:
	uint8                                         Pad_418[0x8];                                      // 0x0418(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonTextBlock*                       TrackNameText;                                     // 0x0420(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDelMarLevelDataAsset*                  LevelDataAsset;                                    // 0x0428(0x0008)(ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void BP_OnTrackButtonPressed();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarDebugTrackEntry">();
	}
	static class UDelMarDebugTrackEntry* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarDebugTrackEntry>();
	}
};

// Class DelMarUI.DelMarDebugGameplayTrackEntry
// 0x0008 (0x0438 - 0x0430)
class UDelMarDebugGameplayTrackEntry final : public UDelMarDebugTrackEntry
{
public:
	class UDynamicUIScene*                        GameplayTrackListScene;                            // 0x0430(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarDebugGameplayTrackEntry">();
	}
	static class UDelMarDebugGameplayTrackEntry* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarDebugGameplayTrackEntry>();
	}
};

// Class DelMarUI.DelMarDebugTrackList
// 0x0010 (0x0608 - 0x05F8)
class UDelMarDebugTrackList final : public UDelMarScreenBase
{
public:
	class UCommonListView*                        TrackView;                                         // 0x05F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bOnlyReturnAllowedLevels;                          // 0x0600(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_601[0x7];                                      // 0x0601(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BP_OnExitButtonPressed();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarDebugTrackList">();
	}
	static class UDelMarDebugTrackList* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarDebugTrackList>();
	}
};

// Class DelMarUI.DelMarBoundActionBar
// 0x0000 (0x0360 - 0x0360)
class UDelMarBoundActionBar final : public UCommonBoundActionBar
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarBoundActionBar">();
	}
	static class UDelMarBoundActionBar* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarBoundActionBar>();
	}
};

// Class DelMarUI.DelMarBoundActionButton
// 0x0020 (0x1820 - 0x1800)
class UDelMarBoundActionButton final : public UCommonButtonBase
{
public:
	uint8                                         Pad_1800[0x8];                                     // 0x1800(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Text;                                              // 0x1808(0x0010)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	uint8                                         Pad_1818[0x8];                                     // 0x1818(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BP_OnActionProgress(const float HoldPercentage);
	void BP_OnInputActionUpdated();
	void BP_SetText(const class FText& ButtonText);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarBoundActionButton">();
	}
	static class UDelMarBoundActionButton* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarBoundActionButton>();
	}
};

// Class DelMarUI.DelMarBladeMenuTriggerUIStateComponent
// 0x0010 (0x0060 - 0x0050)
class UDelMarBladeMenuTriggerUIStateComponent final : public UUIStateComponent
{
public:
	class UDelMarBladeMenuTriggerUIStateComponentConfiguration* Configuration;                                     // 0x0050(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortHUDContext*                        HudContext;                                        // 0x0058(0x0008)(ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void NativeHandleCursorModeChanged(bool bCursorModeEnabled, class FName ActionName, class UUserWidget* CursorModeContentWidget);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarBladeMenuTriggerUIStateComponent">();
	}
	static class UDelMarBladeMenuTriggerUIStateComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarBladeMenuTriggerUIStateComponent>();
	}
};

// Class DelMarUI.DelMarBladeMenuTriggerUIStateComponentConfiguration
// 0x0010 (0x0040 - 0x0030)
class UDelMarBladeMenuTriggerUIStateComponentConfiguration final : public UUIStateComponentConfiguration
{
public:
	struct FGameplayTag                           BladeMenuTriggerTag;                               // 0x0030(0x000C)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarBladeMenuTriggerUIStateComponentConfiguration">();
	}
	static class UDelMarBladeMenuTriggerUIStateComponentConfiguration* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarBladeMenuTriggerUIStateComponentConfiguration>();
	}
};

// Class DelMarUI.DelMarEmotePickerTriggerUIStateComponent
// 0x0008 (0x0058 - 0x0050)
class UDelMarEmotePickerTriggerUIStateComponent final : public UUIStateComponent
{
public:
	class UDelMarEmotePickerTriggerUIStateComponentConfiguration* Configuration;                                     // 0x0050(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void HandlePickerOpenRequest(EFortPickerMode Mode, int32 InitialOption, bool bIgnoreFirstAccept);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarEmotePickerTriggerUIStateComponent">();
	}
	static class UDelMarEmotePickerTriggerUIStateComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarEmotePickerTriggerUIStateComponent>();
	}
};

// Class DelMarUI.DelMarEmotePickerTriggerUIStateComponentConfiguration
// 0x0018 (0x0048 - 0x0030)
class UDelMarEmotePickerTriggerUIStateComponentConfiguration final : public UUIStateComponentConfiguration
{
public:
	struct FGameplayTag                           EmotePickerOpenTriggerTag;                         // 0x0030(0x000C)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortPickerData*                        PickerData;                                        // 0x0040(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarEmotePickerTriggerUIStateComponentConfiguration">();
	}
	static class UDelMarEmotePickerTriggerUIStateComponentConfiguration* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarEmotePickerTriggerUIStateComponentConfiguration>();
	}
};

// Class DelMarUI.DelMarGameplayContextUpdaterUIStateComponent
// 0x00A8 (0x00F8 - 0x0050)
class UDelMarGameplayContextUpdaterUIStateComponent final : public UUIStateComponent
{
public:
	TMap<struct FGameplayTag, class FString>      GameStateToUITagMap;                               // 0x0050(0x0050)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTag                           CurrentRacerState;                                 // 0x00A0(0x000C)(BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                           CurrentGameState;                                  // 0x00AC(0x000C)(BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                           CurrentRaceMode;                                   // 0x00B8(0x000C)(BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class AFortPlayerState>        OwnerPlayerState;                                  // 0x00C4(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class AFortPlayerState>        SpectatedPlayerState;                              // 0x00CC(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class AFortPlayerController>   OwnerPlayerController;                             // 0x00D4(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UDelMarPlayerPreferencesComponent> CachedPreferences;                                 // 0x00DC(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UDelMarLevelManagerComponent> LevelManager;                                      // 0x00E4(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class ADelMarVehicle>          CachedVehicle;                                     // 0x00EC(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_F4[0x4];                                       // 0x00F4(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void HandleEnterVehicle();
	void HandleExitVehicle();
	void HandleSpectatorViewTargetChange(class AFortPlayerController* PlayerController, class AActor* OldViewTarget, class AActor* NewViewTarget);
	void HandleTouchControlsLayoutChanged(const struct FGameplayTag& Layout);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarGameplayContextUpdaterUIStateComponent">();
	}
	static class UDelMarGameplayContextUpdaterUIStateComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarGameplayContextUpdaterUIStateComponent>();
	}
};

// Class DelMarUI.DelMarGameplayContextUpdaterUIStateComponentConfiguration
// 0x0000 (0x0030 - 0x0030)
class UDelMarGameplayContextUpdaterUIStateComponentConfiguration final : public UUIStateComponentConfiguration
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarGameplayContextUpdaterUIStateComponentConfiguration">();
	}
	static class UDelMarGameplayContextUpdaterUIStateComponentConfiguration* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarGameplayContextUpdaterUIStateComponentConfiguration>();
	}
};

// Class DelMarUI.DelMarIdleMonitorUIStateComponent
// 0x0020 (0x0070 - 0x0050)
class UDelMarIdleMonitorUIStateComponent final : public UUIStateComponent
{
public:
	class UDelMarIdleMonitorUIStateComponentConfiguration* Configuration;                                     // 0x0050(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDelMarRequestComponent*                CachedRequestComponent;                            // 0x0058(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_60[0x10];                                      // 0x0060(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarIdleMonitorUIStateComponent">();
	}
	static class UDelMarIdleMonitorUIStateComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarIdleMonitorUIStateComponent>();
	}
};

// Class DelMarUI.DelMarIdleMonitorUIStateComponentConfiguration
// 0x0008 (0x0038 - 0x0030)
class UDelMarIdleMonitorUIStateComponentConfiguration final : public UUIStateComponentConfiguration
{
public:
	float                                         ActivityCheckPeriod;                               // 0x0030(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarIdleMonitorUIStateComponentConfiguration">();
	}
	static class UDelMarIdleMonitorUIStateComponentConfiguration* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarIdleMonitorUIStateComponentConfiguration>();
	}
};

// Class DelMarUI.DelMarGlobalLeaderboardEntryViewModel
// 0x0088 (0x0100 - 0x0078)
class UDelMarGlobalLeaderboardEntryViewModel final : public UDelMarViewModelBase
{
public:
	class FString                                 PlayerAccountId;                                   // 0x0078(0x0010)(Edit, BlueprintVisible, ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 PlayerName;                                        // 0x0088(0x0010)(Edit, BlueprintVisible, ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        RunDuration;                                       // 0x0098(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         Rank;                                              // 0x00A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsLocalPlayer;                                    // 0x00A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDelMarGlobalLeaderboardEntry          GlobalLeaderboardEntry;                            // 0x00B0(0x0040)(Edit, BlueprintVisible, Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_F0[0x10];                                      // 0x00F0(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarGlobalLeaderboardEntryViewModel">();
	}
	static class UDelMarGlobalLeaderboardEntryViewModel* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarGlobalLeaderboardEntryViewModel>();
	}
};

// Class DelMarUI.DelMarLoadingScreenViewModel
// 0x0078 (0x00F0 - 0x0078)
class UDelMarLoadingScreenViewModel final : public UDelMarViewModelBase
{
public:
	bool                                          bHasValidTrackData;                                // 0x0078(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   MapName;                                           // 0x0080(0x0010)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class FText                                   MapCreator;                                        // 0x0090(0x0010)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class FText                                   MapDescription;                                    // 0x00A0(0x0010)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FGameplayTag                           RaceMode;                                          // 0x00B0(0x000C)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              LoadingBackgroundImage;                            // 0x00C0(0x0030)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarLoadingScreenViewModel">();
	}
	static class UDelMarLoadingScreenViewModel* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarLoadingScreenViewModel>();
	}
};

// Class DelMarUI.DelMarLocalPlayerSettingsViewModel
// 0x0010 (0x0088 - 0x0078)
class UDelMarLocalPlayerSettingsViewModel final : public UDelMarViewModelBase
{
public:
	bool                                          bUseIconOnlyPlayerNameplates;                      // 0x0078(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TWeakObjectPtr<class UDelMarPlayerPreferencesComponent> CachedPreferences;                                 // 0x007C(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void HandleNameplatesSettingChanged(bool NewValue);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarLocalPlayerSettingsViewModel">();
	}
	static class UDelMarLocalPlayerSettingsViewModel* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarLocalPlayerSettingsViewModel>();
	}
};

// Class DelMarUI.DelMarPlayerRaceStateViewModel
// 0x00A8 (0x0120 - 0x0078)
class UDelMarPlayerRaceStateViewModel final : public UDelMarViewModelBase
{
public:
	bool                                          bHasValidData;                                     // 0x0078(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CurrentLap;                                        // 0x007C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bHasCompletedRace;                                 // 0x0080(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimespan                              RaceCompletionTime;                                // 0x0088(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         SpectatorCount;                                    // 0x0090(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         CurrentPlacement;                                  // 0x0094(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         CurrentPlacementByBestRun;                         // 0x0098(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CurrentRunStartTimestamp;                          // 0x00A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         LastCompletedSectionIndex;                         // 0x00A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bIsNewBestRun;                                     // 0x00AC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bRunActive;                                        // 0x00AD(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bIsSubsequentRun;                                  // 0x00AE(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bIsPedestrian;                                     // 0x00AF(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bIsSpectator;                                      // 0x00B0(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDelMarRunRecordViewModel*              CurrentRunRecord;                                  // 0x00B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDelMarRunRecordViewModel*              BestRunRecord;                                     // 0x00C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDelMarRunRecordViewModel*              PreviousBestRunRecord;                             // 0x00C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UDelMarRunRecordViewModel*>      MatchRunRecords;                                   // 0x00D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	class UDelMarGlobalLeaderboardEntryViewModel* PersonalBestLeaderboardEntry;                      // 0x00E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDelMarGlobalLeaderboardEntryViewModel* NewPersonalBestLeaderboardEntry;                   // 0x00E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDelMarVehicleViewModel*                Vehicle;                                           // 0x00F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                           PreviousRacerState;                                // 0x00F8(0x000C)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class ADelMarRaceManager>      RaceManager;                                       // 0x0104(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class AFortPlayerState>        PlayerState;                                       // 0x010C(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UDelMarPositionalTrackerComponent> PositionalTrackerComponent;                        // 0x0114(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_11C[0x4];                                      // 0x011C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void HandleRaceReset();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarPlayerRaceStateViewModel">();
	}
	static class UDelMarPlayerRaceStateViewModel* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarPlayerRaceStateViewModel>();
	}
};

// Class DelMarUI.DelMarPlayerViewModel
// 0x0098 (0x0110 - 0x0078)
class UDelMarPlayerViewModel final : public UDelMarViewModelBase
{
public:
	class FText                                   DisplayName;                                       // 0x0078(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UTexture2D>              AvatarLargeImage;                                  // 0x0088(0x0030)(BlueprintVisible, BlueprintReadOnly, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UTexture2D>              AvatarSmallImage;                                  // 0x00B8(0x0030)(BlueprintVisible, BlueprintReadOnly, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FColor                                 AvatarBackgroundColor;                             // 0x00E8(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FColor                                 AvatarHighlightColor;                              // 0x00EC(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextureRenderTarget2D*                 DriverCameraRT;                                    // 0x00F0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDelMarPlayerRaceStateViewModel*        PlayerRaceState;                                   // 0x00F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class AFortPlayerState>        PlayerState;                                       // 0x0100(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class ADelMarRaceManager>      RaceManager;                                       // 0x0108(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	class AFortPlayerState* GetPlayerState() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarPlayerViewModel">();
	}
	static class UDelMarPlayerViewModel* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarPlayerViewModel>();
	}
};

// Class DelMarUI.DelMarRaceViewModel
// 0x01D8 (0x0250 - 0x0078)
class UDelMarRaceViewModel final : public UDelMarViewModelBase
{
public:
	int32                                         TotalLaps;                                         // 0x0078(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         TotalPlayers;                                      // 0x007C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         TotalReadyPlayers;                                 // 0x0080(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         TotalLoadedPlayers;                                // 0x0084(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         TotalJoiningPlayers;                               // 0x0088(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         TotalPlacements;                                   // 0x008C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FText                                   MapName;                                           // 0x0090(0x0010)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	class FText                                   MapCreator;                                        // 0x00A0(0x0010)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	class FText                                   MapDescription;                                    // 0x00B0(0x0010)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTag                           RaceMode;                                          // 0x00C0(0x000C)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                           DelMarGameplayState;                               // 0x00CC(0x000C)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UTexture2D>              LoadingBackgroundImage;                            // 0x00D8(0x0030)(Edit, BlueprintVisible, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	double                                        TimeUntilRaceStart;                                // 0x0108(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	double                                        RaceEndTimestamp;                                  // 0x0110(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         MatchTimeLimitSeconds;                             // 0x0118(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bIsOvertime;                                       // 0x011C(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_11D[0x3];                                      // 0x011D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        TimeUntilTrackChange;                              // 0x0120(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	double                                        FirstPlayerFinishedServerTimestamp;                // 0x0128(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	double                                        FirstPlayerFinishedRaceEndServerTimestamp;         // 0x0130(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         CurrentMatchmakingState;                           // 0x0138(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bIsRaceFinished;                                   // 0x0139(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bIsRaceStarted;                                    // 0x013A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bHasPreRaceSocial;                                 // 0x013B(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_13C[0x4];                                      // 0x013C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UDelMarMatchEventViewModel*             MatchEventViewModel;                               // 0x0140(0x0008)(BlueprintVisible, ZeroConstructor, Transient, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDelMarTrackInfoViewModel*              TrackInfoViewModel;                                // 0x0148(0x0008)(BlueprintVisible, ZeroConstructor, Transient, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDelMarPlayerViewModel*                 LocalPlayer;                                       // 0x0150(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDelMarPlayerViewModel*                 TargetPlayer;                                      // 0x0158(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDelMarPlayerViewModel*                 LastTargetPlayer;                                  // 0x0160(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UDelMarPlayerViewModel*>         PositionPlayers;                                   // 0x0168(0x0010)(Edit, BlueprintVisible, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TArray<class UDelMarPlayerViewModel*>         FinalPlacements;                                   // 0x0178(0x0010)(Edit, BlueprintVisible, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TMap<int32, class UDelMarPlayerViewModel*>    RacePlayers;                                       // 0x0188(0x0050)(Edit, BlueprintVisible, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TArray<class UDelMarGlobalLeaderboardEntryViewModel*> TopLeaderboardEntries;                             // 0x01D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TArray<class UDelMarGlobalLeaderboardEntryViewModel*> FocusedLeaderboardEntries;                         // 0x01E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TArray<class UDelMarGlobalLeaderboardEntryViewModel*> FriendLeaderboardEntries;                          // 0x01F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	class FString                                 GameSessionId;                                     // 0x0208(0x0010)(Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                 IslandCode;                                        // 0x0218(0x0010)(Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class ADelMarRaceManager>      RaceManager;                                       // 0x0228(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class AFortPlayerController>   LocalPlayerController;                             // 0x0230(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class AFortPlayerState>        ViewTargetPlayerState;                             // 0x0238(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UDelMarPositionalTrackerComponent> PositionalTrackerComponent;                        // 0x0240(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDelMarPlayerViewModel*                 EmptyPlayerViewModel;                              // 0x0248(0x0008)(ZeroConstructor, Transient, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void HandleFinalRacePositionsChanged(const TArray<struct FDelMarFinalRacePositionEntry>& FinalRacePositions, const struct FDelMarEvent_RunRecorded& RecordedRun);
	void HandleViewTargetChanged(class AFortPlayerController* PC, class AActor* Old, class AActor* NewViewTarget);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarRaceViewModel">();
	}
	static class UDelMarRaceViewModel* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarRaceViewModel>();
	}
};

// Class DelMarUI.DelMarRunRecordViewModel
// 0x0038 (0x00B0 - 0x0078)
class UDelMarRunRecordViewModel final : public UDelMarViewModelBase
{
public:
	struct FDelMarRunRecord                       Record;                                            // 0x0078(0x0020)(Edit, BlueprintVisible, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<struct FDelMarSectionData>             RunRecordSectionData;                              // 0x0098(0x0010)(Edit, BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	bool                                          bHasValidData;                                     // 0x00A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarRunRecordViewModel">();
	}
	static class UDelMarRunRecordViewModel* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarRunRecordViewModel>();
	}
};

// Class DelMarUI.DelMarTrackInfoViewModel
// 0x0070 (0x00E8 - 0x0078)
class UDelMarTrackInfoViewModel final : public UDelMarViewModelBase
{
public:
	bool                                          bHasValidTrackData;                                // 0x0078(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   TrackName;                                         // 0x0080(0x0010)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class FText                                   TrackDescription;                                  // 0x0090(0x0010)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              LoadingBackgroundImage;                            // 0x00A0(0x0030)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   CreatorName;                                       // 0x00D0(0x0010)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	bool                                          bIsEpicCreated;                                    // 0x00E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHasValidCreatorData;                              // 0x00E1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E2[0x6];                                       // 0x00E2(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarTrackInfoViewModel">();
	}
	static class UDelMarTrackInfoViewModel* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarTrackInfoViewModel>();
	}
};

// Class DelMarUI.DelMarTutorialViewModel
// 0x0040 (0x00B8 - 0x0078)
class UDelMarTutorialViewModel final : public UDelMarViewModelBase
{
public:
	class FText                                   SectionTitle;                                      // 0x0078(0x0010)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	int32                                         CurrentSection;                                    // 0x0088(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TotalSections;                                     // 0x008C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UInputAction*>                   CurrentTutorialAnnouncementInputActions;           // 0x0090(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class UInputAction*>                   CurrentTutorialHintInputActions;                   // 0x00A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FTimespan                              FinishTargetTime;                                  // 0x00B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarTutorialViewModel">();
	}
	static class UDelMarTutorialViewModel* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarTutorialViewModel>();
	}
};

// Class DelMarUI.DelMarVehicleViewModel
// 0x0080 (0x00F8 - 0x0078)
class UDelMarVehicleViewModel final : public UDelMarViewModelBase
{
public:
	bool                                          bHasValidData;                                     // 0x0078(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bIsTurboEnabled;                                   // 0x0079(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_7A[0x2];                                       // 0x007A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bIsDrifting;                                       // 0x007C(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bIsDriftingRight;                                  // 0x007D(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bWheelsOnGround;                                   // 0x007E(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bAnyWheelsOnGround;                                // 0x007F(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<double>                                DriftRanges;                                       // 0x0080(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	float                                         DriftSlipAngleRatio;                               // 0x0090(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EDelMarDriftSteerState                        DriftSteerState;                                   // 0x0094(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_95[0x3];                                       // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         PotentialDriftBoostPercent;                        // 0x0098(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         StartlineBoostBonus;                               // 0x009C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EDelMarSpeedometerState                       SpeedometerState;                                  // 0x00A0(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CurrentSpeed;                                      // 0x00A4(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         NumTurboMaxCharges;                                // 0x00A8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         NumTurboCurrentCharges;                            // 0x00AC(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EDelMarTurboZoneState                         TurboBonusZoneState;                               // 0x00B0(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         UnderthrustPercent;                                // 0x00B4(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	double                                        MissedCheckpointDemoTimestamp;                     // 0x00B8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	double                                        ReturnToTrackDemoTimestamp;                        // 0x00C0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bIsHeadingWrongWay;                                // 0x00C8(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bToggleThrottle;                                   // 0x00C9(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_CA[0x2];                                       // 0x00CA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ThrottleInputValue;                                // 0x00CC(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bDemolished;                                       // 0x00D0(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_D1[0x3];                                       // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DemolishActionPressedPercent;                      // 0x00D4(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bDemolishActionEnabled;                            // 0x00D8(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_D9[0x3];                                       // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TWeakObjectPtr<class AFortPlayerState>        PlayerState;                                       // 0x00DC(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class ADelMarVehicle>          CurrentVehicle;                                    // 0x00E4(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UDelMarGlobalInputDisabler> GlobalInputDisabler;                               // 0x00EC(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_F4[0x4];                                       // 0x00F4(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void HandleAnyWheelsOnGroundChanged(const TScriptInterface<class IDelMarVehicleInterface>& VehicleRef, bool bValue);
	void HandleDemolishPressDurationUpdated(float PressedDurationPercentage);
	void HandleDriftActivated();
	void HandleDriftDeactivated();
	void HandleDriftSlipAngleRatioChanged(float InValue);
	void HandleMissedCheckpointCountdownCancelled();
	void HandleMissedCheckpointCountdownInitiated(const struct FDelMarEvent_MissedCheckpointDemoCountdown& Event);
	void HandleOnThrottleInput(float Value);
	void HandleOnVehicleDemolished(const struct FGameplayTag& CausedByTag);
	void HandlePotentialDriftBoostChanged(float InValue);
	void HandleReturnToTrackCountdownCancelled();
	void HandleReturnToTrackCountdownInitiated(const struct FDelMarEvent_ReturnToTrackDemoCountdown& Event);
	void HandleSpeedometerSpeedChanged(float InValue);
	void HandleStartlineBoostActivated(float InValue);
	void HandleStartlineBoostFailed();
	void HandleToggleThrottleSettingChanged(bool bValue);
	void HandleTurboBonusZoneChanged(EDelMarTurboZoneState InTurboBonusZoneState);
	void HandleTurboChargesUpdated();
	void HandleUnderthrustPercentChanged(float InValue);
	void HandleVehicleWheelsLeftGround();
	void HandleWrongwayIndication(const struct FDelMarEvent_VehicleWrongwayStatus& Event);
	void Initialize(class AFortPlayerState* InPlayerState);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarVehicleViewModel">();
	}
	static class UDelMarVehicleViewModel* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarVehicleViewModel>();
	}
};

// Class DelMarUI.DelMarRankedPlacementChangeVM
// 0x0018 (0x0088 - 0x0070)
class UDelMarRankedPlacementChangeVM final : public UMVVMViewModelBase
{
public:
	class UDelMarRankedPlacementVM*               InitialPlacement;                                  // 0x0070(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDelMarRankedPlacementVM*               CurrentPlacement;                                  // 0x0078(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         PositionDelta;                                     // 0x0080(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bIsDataValid;                                      // 0x0084(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_85[0x3];                                       // 0x0085(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	class UDelMarRankedPlacementVM* GetCurrentPlacement() const;
	class UDelMarRankedPlacementVM* GetInitialPlacement() const;
	bool GetIsDataValid() const;
	int32 GetPositionDelta() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarRankedPlacementChangeVM">();
	}
	static class UDelMarRankedPlacementChangeVM* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarRankedPlacementChangeVM>();
	}
};

// Class DelMarUI.DelMarRankedPlacementVM
// 0x0178 (0x01E8 - 0x0070)
class UDelMarRankedPlacementVM final : public UMVVMViewModelBase
{
public:
	bool                                          bIsUnranked;                                       // 0x0070(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         TierIndex;                                         // 0x0074(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         PlayerPosition;                                    // 0x0078(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         ProgressTowardNextTier;                            // 0x007C(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bIsDataValid;                                      // 0x0080(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFortHabaneroTier>              TierList;                                          // 0x0088(0x0010)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPrivate)
	class UFortHabaneroDisplayData*               RankedDisplayData;                                 // 0x0098(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_A0[0x148];                                     // 0x00A0(0x0148)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	bool GetIsDataValid() const;
	bool GetIsUnranked() const;
	int32 GetPlayerPosition() const;
	float GetProgressTowardNextTier() const;
	int32 GetTierIndex() const;
	struct FFortHabaneroTier TierDisplayData() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarRankedPlacementVM">();
	}
	static class UDelMarRankedPlacementVM* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarRankedPlacementVM>();
	}
};

// Class DelMarUI.DelMarRankedRecapVM
// 0x0050 (0x00C0 - 0x0070)
class UDelMarRankedRecapVM final : public UMVVMViewModelBase
{
public:
	class UDelMarRankedPlacementChangeVM*         PlacementChange;                                   // 0x0070(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EDelMarRankedProgressError                    ErrorState;                                        // 0x0078(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 OptionalErrorText;                                 // 0x0080(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class ULocalPlayer>            OwningLocalPlayer;                                 // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class AFortPlayerControllerAthena> OwningPlayerController;                            // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortHabaneroDisplayData*               RankedDisplayData;                                 // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_A8[0x18];                                      // 0x00A8(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	bool GetUnrankedTierData(struct FFortHabaneroTier* OutUnrankedTierData);
	void QueryProgress();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarRankedRecapVM">();
	}
	static class UDelMarRankedRecapVM* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarRankedRecapVM>();
	}
};

// Class DelMarUI.DelMarRankedVMContextResolver
// 0x0018 (0x0068 - 0x0050)
class UDelMarRankedVMContextResolver final : public UMVVMViewModelContextResolver
{
public:
	class UFortHabaneroDisplayData*               RankedDisplayData;                                 // 0x0050(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                 DevelopmentRankedKey;                              // 0x0058(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarRankedVMContextResolver">();
	}
	static class UDelMarRankedVMContextResolver* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarRankedVMContextResolver>();
	}
};

}

