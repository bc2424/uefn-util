#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: USDExporter

#include "Basic.hpp"

#include "USDExporter_classes.hpp"
#include "USDExporter_parameters.hpp"


namespace SDK
{

// Function USDExporter.LevelExporterUSDOptions.GetUsdExtensions
// (Final, Native, Static, Private)
// Parameters:
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> ULevelExporterUSDOptions::GetUsdExtensions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LevelExporterUSDOptions", "GetUsdExtensions");

	Params::LevelExporterUSDOptions_GetUsdExtensions Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.StaticMeshExporterUsd.IsUsdAvailable
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UStaticMeshExporterUsd::IsUsdAvailable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("StaticMeshExporterUsd", "IsUsdAvailable");

	Params::StaticMeshExporterUsd_IsUsdAvailable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintContext.Cleanup
// (Final, Native, Public, BlueprintCallable)

void UUsdConversionBlueprintContext::Cleanup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UsdConversionBlueprintContext", "Cleanup");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function USDExporter.UsdConversionBlueprintContext.ConvertAudioComponent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UAudioComponent*                  Component                                              (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           PrimPath                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeCode                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bFilePathOnly                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUsdConversionBlueprintContext::ConvertAudioComponent(const class UAudioComponent* Component, const class FString& PrimPath, float TimeCode, bool bFilePathOnly)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UsdConversionBlueprintContext", "ConvertAudioComponent");

	Params::UsdConversionBlueprintContext_ConvertAudioComponent Parms{};

	Parms.Component = Component;
	Parms.PrimPath = std::move(PrimPath);
	Parms.TimeCode = TimeCode;
	Parms.bFilePathOnly = bFilePathOnly;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintContext.ConvertCineCameraComponent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UCineCameraComponent*             Component                                              (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           PrimPath                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeCode                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUsdConversionBlueprintContext::ConvertCineCameraComponent(const class UCineCameraComponent* Component, const class FString& PrimPath, float TimeCode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UsdConversionBlueprintContext", "ConvertCineCameraComponent");

	Params::UsdConversionBlueprintContext_ConvertCineCameraComponent Parms{};

	Parms.Component = Component;
	Parms.PrimPath = std::move(PrimPath);
	Parms.TimeCode = TimeCode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintContext.ConvertDirectionalLightComponent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UDirectionalLightComponent*       Component                                              (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           PrimPath                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeCode                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUsdConversionBlueprintContext::ConvertDirectionalLightComponent(const class UDirectionalLightComponent* Component, const class FString& PrimPath, float TimeCode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UsdConversionBlueprintContext", "ConvertDirectionalLightComponent");

	Params::UsdConversionBlueprintContext_ConvertDirectionalLightComponent Parms{};

	Parms.Component = Component;
	Parms.PrimPath = std::move(PrimPath);
	Parms.TimeCode = TimeCode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintContext.ConvertDrawModeComponent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUsdDrawModeComponent*            Component                                              (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           PrimPath                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeCode                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUsdConversionBlueprintContext::ConvertDrawModeComponent(const class UUsdDrawModeComponent* Component, const class FString& PrimPath, float TimeCode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UsdConversionBlueprintContext", "ConvertDrawModeComponent");

	Params::UsdConversionBlueprintContext_ConvertDrawModeComponent Parms{};

	Parms.Component = Component;
	Parms.PrimPath = std::move(PrimPath);
	Parms.TimeCode = TimeCode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintContext.ConvertHismComponent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UHierarchicalInstancedStaticMeshComponent*Component                                              (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           PrimPath                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeCode                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUsdConversionBlueprintContext::ConvertHismComponent(const class UHierarchicalInstancedStaticMeshComponent* Component, const class FString& PrimPath, float TimeCode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UsdConversionBlueprintContext", "ConvertHismComponent");

	Params::UsdConversionBlueprintContext_ConvertHismComponent Parms{};

	Parms.Component = Component;
	Parms.PrimPath = std::move(PrimPath);
	Parms.TimeCode = TimeCode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintContext.ConvertInstancedFoliageActor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AInstancedFoliageActor*           Actor                                                  (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           PrimPath                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ULevel*                           InstancesLevel                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeCode                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUsdConversionBlueprintContext::ConvertInstancedFoliageActor(const class AInstancedFoliageActor* Actor, const class FString& PrimPath, class ULevel* InstancesLevel, float TimeCode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UsdConversionBlueprintContext", "ConvertInstancedFoliageActor");

	Params::UsdConversionBlueprintContext_ConvertInstancedFoliageActor Parms{};

	Parms.Actor = Actor;
	Parms.PrimPath = std::move(PrimPath);
	Parms.InstancesLevel = InstancesLevel;
	Parms.TimeCode = TimeCode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintContext.ConvertLandscapeProxyActorMaterial
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class ALandscapeProxy*                  Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           PrimPath                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FPropertyEntry>           PropertiesToBake                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FIntPoint                        DefaultTextureSize                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDirectoryPath                   TexturesDir                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeCode                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUsdConversionBlueprintContext::ConvertLandscapeProxyActorMaterial(class ALandscapeProxy* Actor, const class FString& PrimPath, const TArray<struct FPropertyEntry>& PropertiesToBake, const struct FIntPoint& DefaultTextureSize, const struct FDirectoryPath& TexturesDir, float TimeCode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UsdConversionBlueprintContext", "ConvertLandscapeProxyActorMaterial");

	Params::UsdConversionBlueprintContext_ConvertLandscapeProxyActorMaterial Parms{};

	Parms.Actor = Actor;
	Parms.PrimPath = std::move(PrimPath);
	Parms.PropertiesToBake = std::move(PropertiesToBake);
	Parms.DefaultTextureSize = std::move(DefaultTextureSize);
	Parms.TexturesDir = std::move(TexturesDir);
	Parms.TimeCode = TimeCode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintContext.ConvertLandscapeProxyActorMesh
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ALandscapeProxy*                  Actor                                                  (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           PrimPath                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   LowestLOD                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   HighestLOD                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeCode                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUsdConversionBlueprintContext::ConvertLandscapeProxyActorMesh(const class ALandscapeProxy* Actor, const class FString& PrimPath, int32 LowestLOD, int32 HighestLOD, float TimeCode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UsdConversionBlueprintContext", "ConvertLandscapeProxyActorMesh");

	Params::UsdConversionBlueprintContext_ConvertLandscapeProxyActorMesh Parms{};

	Parms.Actor = Actor;
	Parms.PrimPath = std::move(PrimPath);
	Parms.LowestLOD = LowestLOD;
	Parms.HighestLOD = HighestLOD;
	Parms.TimeCode = TimeCode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintContext.ConvertLightComponent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ULightComponentBase*              Component                                              (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           PrimPath                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeCode                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUsdConversionBlueprintContext::ConvertLightComponent(const class ULightComponentBase* Component, const class FString& PrimPath, float TimeCode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UsdConversionBlueprintContext", "ConvertLightComponent");

	Params::UsdConversionBlueprintContext_ConvertLightComponent Parms{};

	Parms.Component = Component;
	Parms.PrimPath = std::move(PrimPath);
	Parms.TimeCode = TimeCode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintContext.ConvertMaterialOverrides
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          MeshAsset                                              (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UMaterialInterface*>       MaterialOverrides                                      (ConstParm, Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// class FString                           PrimPath                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   LowestLOD                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   HighestLOD                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUsdConversionBlueprintContext::ConvertMaterialOverrides(const class UObject* MeshAsset, const TArray<class UMaterialInterface*>& MaterialOverrides, const class FString& PrimPath, int32 LowestLOD, int32 HighestLOD)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UsdConversionBlueprintContext", "ConvertMaterialOverrides");

	Params::UsdConversionBlueprintContext_ConvertMaterialOverrides Parms{};

	Parms.MeshAsset = MeshAsset;
	Parms.MaterialOverrides = std::move(MaterialOverrides);
	Parms.PrimPath = std::move(PrimPath);
	Parms.LowestLOD = LowestLOD;
	Parms.HighestLOD = HighestLOD;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintContext.ConvertMeshComponent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UMeshComponent*                   Component                                              (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           PrimPath                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUsdConversionBlueprintContext::ConvertMeshComponent(const class UMeshComponent* Component, const class FString& PrimPath)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UsdConversionBlueprintContext", "ConvertMeshComponent");

	Params::UsdConversionBlueprintContext_ConvertMeshComponent Parms{};

	Parms.Component = Component;
	Parms.PrimPath = std::move(PrimPath);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintContext.ConvertPointLightComponent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UPointLightComponent*             Component                                              (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           PrimPath                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeCode                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUsdConversionBlueprintContext::ConvertPointLightComponent(const class UPointLightComponent* Component, const class FString& PrimPath, float TimeCode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UsdConversionBlueprintContext", "ConvertPointLightComponent");

	Params::UsdConversionBlueprintContext_ConvertPointLightComponent Parms{};

	Parms.Component = Component;
	Parms.PrimPath = std::move(PrimPath);
	Parms.TimeCode = TimeCode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintContext.ConvertRectLightComponent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class URectLightComponent*              Component                                              (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           PrimPath                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeCode                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUsdConversionBlueprintContext::ConvertRectLightComponent(const class URectLightComponent* Component, const class FString& PrimPath, float TimeCode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UsdConversionBlueprintContext", "ConvertRectLightComponent");

	Params::UsdConversionBlueprintContext_ConvertRectLightComponent Parms{};

	Parms.Component = Component;
	Parms.PrimPath = std::move(PrimPath);
	Parms.TimeCode = TimeCode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintContext.ConvertSceneComponent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USceneComponent*                  Component                                              (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           PrimPath                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUsdConversionBlueprintContext::ConvertSceneComponent(const class USceneComponent* Component, const class FString& PrimPath)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UsdConversionBlueprintContext", "ConvertSceneComponent");

	Params::UsdConversionBlueprintContext_ConvertSceneComponent Parms{};

	Parms.Component = Component;
	Parms.PrimPath = std::move(PrimPath);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintContext.ConvertSkyLightComponent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USkyLightComponent*               Component                                              (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           PrimPath                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeCode                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUsdConversionBlueprintContext::ConvertSkyLightComponent(const class USkyLightComponent* Component, const class FString& PrimPath, float TimeCode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UsdConversionBlueprintContext", "ConvertSkyLightComponent");

	Params::UsdConversionBlueprintContext_ConvertSkyLightComponent Parms{};

	Parms.Component = Component;
	Parms.PrimPath = std::move(PrimPath);
	Parms.TimeCode = TimeCode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintContext.ConvertSpotLightComponent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USpotLightComponent*              Component                                              (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           PrimPath                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeCode                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUsdConversionBlueprintContext::ConvertSpotLightComponent(const class USpotLightComponent* Component, const class FString& PrimPath, float TimeCode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UsdConversionBlueprintContext", "ConvertSpotLightComponent");

	Params::UsdConversionBlueprintContext_ConvertSpotLightComponent Parms{};

	Parms.Component = Component;
	Parms.PrimPath = std::move(PrimPath);
	Parms.TimeCode = TimeCode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintContext.GetEditTarget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FFilePath                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FFilePath UUsdConversionBlueprintContext::GetEditTarget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UsdConversionBlueprintContext", "GetEditTarget");

	Params::UsdConversionBlueprintContext_GetEditTarget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintContext.GetPrimAssetInfo
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           PrimPath                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FUsdUnrealAssetInfo              ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FUsdUnrealAssetInfo UUsdConversionBlueprintContext::GetPrimAssetInfo(const class FString& PrimPath)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UsdConversionBlueprintContext", "GetPrimAssetInfo");

	Params::UsdConversionBlueprintContext_GetPrimAssetInfo Parms{};

	Parms.PrimPath = std::move(PrimPath);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintContext.GetPrimMetadata
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           PrimPath                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>                   BlockedPrefixFilter                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    bInvertFilter                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bCollectFromEntireSubtrees                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FUsdCombinedPrimMetadata         ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FUsdCombinedPrimMetadata UUsdConversionBlueprintContext::GetPrimMetadata(const class FString& PrimPath, const TArray<class FString>& BlockedPrefixFilter, bool bInvertFilter, bool bCollectFromEntireSubtrees)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UsdConversionBlueprintContext", "GetPrimMetadata");

	Params::UsdConversionBlueprintContext_GetPrimMetadata Parms{};

	Parms.PrimPath = std::move(PrimPath);
	Parms.BlockedPrefixFilter = std::move(BlockedPrefixFilter);
	Parms.bInvertFilter = bInvertFilter;
	Parms.bCollectFromEntireSubtrees = bCollectFromEntireSubtrees;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintContext.GetStageRootLayer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FFilePath                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FFilePath UUsdConversionBlueprintContext::GetStageRootLayer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UsdConversionBlueprintContext", "GetStageRootLayer");

	Params::UsdConversionBlueprintContext_GetStageRootLayer Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintContext.GetUsdStageNumFrames
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UUsdConversionBlueprintContext::GetUsdStageNumFrames()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UsdConversionBlueprintContext", "GetUsdStageNumFrames");

	Params::UsdConversionBlueprintContext_GetUsdStageNumFrames Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintContext.RemoveUnrealSurfaceOutput
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           PrimPath                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFilePath                        LayerToAuthorIn                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUsdConversionBlueprintContext::RemoveUnrealSurfaceOutput(const class FString& PrimPath, const struct FFilePath& LayerToAuthorIn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UsdConversionBlueprintContext", "RemoveUnrealSurfaceOutput");

	Params::UsdConversionBlueprintContext_RemoveUnrealSurfaceOutput Parms{};

	Parms.PrimPath = std::move(PrimPath);
	Parms.LayerToAuthorIn = std::move(LayerToAuthorIn);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintContext.ReplaceUnrealMaterialsWithBaked
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FFilePath                        LayerToAuthorIn                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TMap<class FString, class FString>      BakedMaterials                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    bIsAssetLayer                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bUsePayload                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bRemoveUnrealMaterials                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUsdConversionBlueprintContext::ReplaceUnrealMaterialsWithBaked(const struct FFilePath& LayerToAuthorIn, const TMap<class FString, class FString>& BakedMaterials, bool bIsAssetLayer, bool bUsePayload, bool bRemoveUnrealMaterials)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UsdConversionBlueprintContext", "ReplaceUnrealMaterialsWithBaked");

	Params::UsdConversionBlueprintContext_ReplaceUnrealMaterialsWithBaked Parms{};

	Parms.LayerToAuthorIn = std::move(LayerToAuthorIn);
	Parms.BakedMaterials = std::move(BakedMaterials);
	Parms.bIsAssetLayer = bIsAssetLayer;
	Parms.bUsePayload = bUsePayload;
	Parms.bRemoveUnrealMaterials = bRemoveUnrealMaterials;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function USDExporter.UsdConversionBlueprintContext.SetEditTarget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FFilePath                        EditTargetLayerPath                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUsdConversionBlueprintContext::SetEditTarget(const struct FFilePath& EditTargetLayerPath)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UsdConversionBlueprintContext", "SetEditTarget");

	Params::UsdConversionBlueprintContext_SetEditTarget Parms{};

	Parms.EditTargetLayerPath = std::move(EditTargetLayerPath);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function USDExporter.UsdConversionBlueprintContext.SetPrimAssetInfo
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           PrimPath                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FUsdUnrealAssetInfo              Info                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UUsdConversionBlueprintContext::SetPrimAssetInfo(const class FString& PrimPath, const struct FUsdUnrealAssetInfo& Info)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UsdConversionBlueprintContext", "SetPrimAssetInfo");

	Params::UsdConversionBlueprintContext_SetPrimAssetInfo Parms{};

	Parms.PrimPath = std::move(PrimPath);
	Parms.Info = std::move(Info);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function USDExporter.UsdConversionBlueprintContext.SetPrimMetadata
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           PrimPath                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FUsdCombinedPrimMetadata         Metadata                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<class FString>                   BlockedPrefixFilter                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    bInvertFilter                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUsdConversionBlueprintContext::SetPrimMetadata(const class FString& PrimPath, const struct FUsdCombinedPrimMetadata& Metadata, const TArray<class FString>& BlockedPrefixFilter, bool bInvertFilter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UsdConversionBlueprintContext", "SetPrimMetadata");

	Params::UsdConversionBlueprintContext_SetPrimMetadata Parms{};

	Parms.PrimPath = std::move(PrimPath);
	Parms.Metadata = std::move(Metadata);
	Parms.BlockedPrefixFilter = std::move(BlockedPrefixFilter);
	Parms.bInvertFilter = bInvertFilter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function USDExporter.UsdConversionBlueprintContext.SetPrimMetadataFromUserData
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           PrimPath                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUsdAssetUserData*                UserData                                               (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>                   BlockedPrefixFilter                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    bInvertFilter                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUsdConversionBlueprintContext::SetPrimMetadataFromUserData(const class FString& PrimPath, const class UUsdAssetUserData* UserData, const TArray<class FString>& BlockedPrefixFilter, bool bInvertFilter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UsdConversionBlueprintContext", "SetPrimMetadataFromUserData");

	Params::UsdConversionBlueprintContext_SetPrimMetadataFromUserData Parms{};

	Parms.PrimPath = std::move(PrimPath);
	Parms.UserData = UserData;
	Parms.BlockedPrefixFilter = std::move(BlockedPrefixFilter);
	Parms.bInvertFilter = bInvertFilter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function USDExporter.UsdConversionBlueprintContext.SetStageRootLayer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FFilePath                        StageRootLayerPath                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUsdConversionBlueprintContext::SetStageRootLayer(const struct FFilePath& StageRootLayerPath)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UsdConversionBlueprintContext", "SetStageRootLayer");

	Params::UsdConversionBlueprintContext_SetStageRootLayer Parms{};

	Parms.StageRootLayerPath = std::move(StageRootLayerPath);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function USDExporter.UsdConversionBlueprintLibrary.AddPayload
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           ReferencingStagePath                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReferencingPrimPath                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           TargetStagePath                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUsdConversionBlueprintLibrary::AddPayload(const class FString& ReferencingStagePath, const class FString& ReferencingPrimPath, const class FString& TargetStagePath)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "AddPayload");

	Params::UsdConversionBlueprintLibrary_AddPayload Parms{};

	Parms.ReferencingStagePath = std::move(ReferencingStagePath);
	Parms.ReferencingPrimPath = std::move(ReferencingPrimPath);
	Parms.TargetStagePath = std::move(TargetStagePath);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function USDExporter.UsdConversionBlueprintLibrary.AddReference
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           ReferencingStagePath                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReferencingPrimPath                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           TargetStagePath                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUsdConversionBlueprintLibrary::AddReference(const class FString& ReferencingStagePath, const class FString& ReferencingPrimPath, const class FString& TargetStagePath)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "AddReference");

	Params::UsdConversionBlueprintLibrary_AddReference Parms{};

	Parms.ReferencingStagePath = std::move(ReferencingStagePath);
	Parms.ReferencingPrimPath = std::move(ReferencingPrimPath);
	Parms.TargetStagePath = std::move(TargetStagePath);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function USDExporter.UsdConversionBlueprintLibrary.CanExportToLayer
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           TargetFilePath                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUsdConversionBlueprintLibrary::CanExportToLayer(const class FString& TargetFilePath)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "CanExportToLayer");

	Params::UsdConversionBlueprintLibrary_CanExportToLayer Parms{};

	Parms.TargetFilePath = std::move(TargetFilePath);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.CanPastePrims
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUsdConversionBlueprintLibrary::CanPastePrims()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "CanPastePrims");

	Params::UsdConversionBlueprintLibrary_CanPastePrims Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.ClearMetadataField
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UUsdAssetUserData*                AssetUserData                                          (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           StageIdentifier                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           PrimPath                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bTriggerPropertyChangeEvents                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUsdConversionBlueprintLibrary::ClearMetadataField(class UUsdAssetUserData* AssetUserData, const class FString& Key, const class FString& StageIdentifier, const class FString& PrimPath, bool bTriggerPropertyChangeEvents)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "ClearMetadataField");

	Params::UsdConversionBlueprintLibrary_ClearMetadataField Parms{};

	Parms.AssetUserData = AssetUserData;
	Parms.Key = std::move(Key);
	Parms.StageIdentifier = std::move(StageIdentifier);
	Parms.PrimPath = std::move(PrimPath);
	Parms.bTriggerPropertyChangeEvents = bTriggerPropertyChangeEvents;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.ClearPrimClipboard
// (Final, Native, Static, Public, BlueprintCallable)

void UUsdConversionBlueprintLibrary::ClearPrimClipboard()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "ClearPrimClipboard");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function USDExporter.UsdConversionBlueprintLibrary.CopyPrims
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           StageRootLayer                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>                   PrimPaths                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUsdConversionBlueprintLibrary::CopyPrims(const class FString& StageRootLayer, const TArray<class FString>& PrimPaths)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "CopyPrims");

	Params::UsdConversionBlueprintLibrary_CopyPrims Parms{};

	Parms.StageRootLayer = std::move(StageRootLayer);
	Parms.PrimPaths = std::move(PrimPaths);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.CutPrims
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           StageRootLayer                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>                   PrimPaths                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUsdConversionBlueprintLibrary::CutPrims(const class FString& StageRootLayer, const TArray<class FString>& PrimPaths)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "CutPrims");

	Params::UsdConversionBlueprintLibrary_CutPrims Parms{};

	Parms.StageRootLayer = std::move(StageRootLayer);
	Parms.PrimPaths = std::move(PrimPaths);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.DuplicatePrims
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           StageRootLayer                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>                   PrimPaths                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// EUsdDuplicateType                       DuplicateType                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           TargetLayer                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> UUsdConversionBlueprintLibrary::DuplicatePrims(const class FString& StageRootLayer, const TArray<class FString>& PrimPaths, EUsdDuplicateType DuplicateType, const class FString& TargetLayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "DuplicatePrims");

	Params::UsdConversionBlueprintLibrary_DuplicatePrims Parms{};

	Parms.StageRootLayer = std::move(StageRootLayer);
	Parms.PrimPaths = std::move(PrimPaths);
	Parms.DuplicateType = DuplicateType;
	Parms.TargetLayer = std::move(TargetLayer);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.GenerateObjectVersionString
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          ObjectToExport                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          ExportOptions                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UUsdConversionBlueprintLibrary::GenerateObjectVersionString(const class UObject* ObjectToExport, class UObject* ExportOptions)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "GenerateObjectVersionString");

	Params::UsdConversionBlueprintLibrary_GenerateObjectVersionString Parms{};

	Parms.ObjectToExport = ObjectToExport;
	Parms.ExportOptions = ExportOptions;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.GetActorsToConvert
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UWorld*                           World                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSet<class AActor*>                     ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

TSet<class AActor*> UUsdConversionBlueprintLibrary::GetActorsToConvert(class UWorld* World)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "GetActorsToConvert");

	Params::UsdConversionBlueprintLibrary_GetActorsToConvert Parms{};

	Parms.World = World;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.GetAnalyticsAttributes
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class ULevelExporterUSDOptions*         Options                                                (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FAnalyticsEventAttr>      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FAnalyticsEventAttr> UUsdConversionBlueprintLibrary::GetAnalyticsAttributes(const class ULevelExporterUSDOptions* Options)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "GetAnalyticsAttributes");

	Params::UsdConversionBlueprintLibrary_GetAnalyticsAttributes Parms{};

	Parms.Options = Options;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.GetInstancedFoliageActorForLevel
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    bCreateIfNone                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ULevel*                           Level                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AInstancedFoliageActor*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AInstancedFoliageActor* UUsdConversionBlueprintLibrary::GetInstancedFoliageActorForLevel(bool bCreateIfNone, class ULevel* Level)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "GetInstancedFoliageActorForLevel");

	Params::UsdConversionBlueprintLibrary_GetInstancedFoliageActorForLevel Parms{};

	Parms.bCreateIfNone = bCreateIfNone;
	Parms.Level = Level;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.GetInstanceTransforms
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AInstancedFoliageActor*           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFoliageType*                     FoliageType                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ULevel*                           InstancesLevel                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FTransform>               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FTransform> UUsdConversionBlueprintLibrary::GetInstanceTransforms(class AInstancedFoliageActor* Actor, class UFoliageType* FoliageType, class ULevel* InstancesLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "GetInstanceTransforms");

	Params::UsdConversionBlueprintLibrary_GetInstanceTransforms Parms{};

	Parms.Actor = Actor;
	Parms.FoliageType = FoliageType;
	Parms.InstancesLevel = InstancesLevel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.GetLoadedLevelNames
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UWorld*                           World                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> UUsdConversionBlueprintLibrary::GetLoadedLevelNames(class UWorld* World)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "GetLoadedLevelNames");

	Params::UsdConversionBlueprintLibrary_GetLoadedLevelNames Parms{};

	Parms.World = World;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.GetMetadataField
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UUsdAssetUserData*                AssetUserData                                          (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           StageIdentifier                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           PrimPath                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FUsdMetadataValue                ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FUsdMetadataValue UUsdConversionBlueprintLibrary::GetMetadataField(class UUsdAssetUserData* AssetUserData, const class FString& Key, const class FString& StageIdentifier, const class FString& PrimPath)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "GetMetadataField");

	Params::UsdConversionBlueprintLibrary_GetMetadataField Parms{};

	Parms.AssetUserData = AssetUserData;
	Parms.Key = std::move(Key);
	Parms.StageIdentifier = std::move(StageIdentifier);
	Parms.PrimPath = std::move(PrimPath);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.GetNumLevelsToExport
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UWorld*                           World                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSet<class FString>                     LevelsToIgnore                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UUsdConversionBlueprintLibrary::GetNumLevelsToExport(class UWorld* World, const TSet<class FString>& LevelsToIgnore)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "GetNumLevelsToExport");

	Params::UsdConversionBlueprintLibrary_GetNumLevelsToExport Parms{};

	Parms.World = World;
	Parms.LevelsToIgnore = std::move(LevelsToIgnore);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.GetPrimPathForObject
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          ActorOrComponent                                       (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ParentPrimPath                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bUseActorFolders                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UUsdConversionBlueprintLibrary::GetPrimPathForObject(const class UObject* ActorOrComponent, const class FString& ParentPrimPath, bool bUseActorFolders)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "GetPrimPathForObject");

	Params::UsdConversionBlueprintLibrary_GetPrimPathForObject Parms{};

	Parms.ActorOrComponent = ActorOrComponent;
	Parms.ParentPrimPath = std::move(ParentPrimPath);
	Parms.bUseActorFolders = bUseActorFolders;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.GetSchemaNameForComponent
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class USceneComponent*                  Component                                              (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UUsdConversionBlueprintLibrary::GetSchemaNameForComponent(const class USceneComponent* Component)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "GetSchemaNameForComponent");

	Params::UsdConversionBlueprintLibrary_GetSchemaNameForComponent Parms{};

	Parms.Component = Component;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.GetSource
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UFoliageType*                     FoliageType                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UObject* UUsdConversionBlueprintLibrary::GetSource(class UFoliageType* FoliageType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "GetSource");

	Params::UsdConversionBlueprintLibrary_GetSource Parms{};

	Parms.FoliageType = FoliageType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.GetUsdAssetUserData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          Object                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUsdAssetUserData*                ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUsdAssetUserData* UUsdConversionBlueprintLibrary::GetUsdAssetUserData(class UObject* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "GetUsdAssetUserData");

	Params::UsdConversionBlueprintLibrary_GetUsdAssetUserData Parms{};

	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.GetUsedFoliageTypes
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AInstancedFoliageActor*           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UFoliageType*>             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UFoliageType*> UUsdConversionBlueprintLibrary::GetUsedFoliageTypes(class AInstancedFoliageActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "GetUsedFoliageTypes");

	Params::UsdConversionBlueprintLibrary_GetUsedFoliageTypes Parms{};

	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.GetVisibleInEditorLevelNames
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UWorld*                           World                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> UUsdConversionBlueprintLibrary::GetVisibleInEditorLevelNames(class UWorld* World)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "GetVisibleInEditorLevelNames");

	Params::UsdConversionBlueprintLibrary_GetVisibleInEditorLevelNames Parms{};

	Parms.World = World;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.HasMetadataField
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UUsdAssetUserData*                AssetUserData                                          (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           StageIdentifier                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           PrimPath                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUsdConversionBlueprintLibrary::HasMetadataField(class UUsdAssetUserData* AssetUserData, const class FString& Key, const class FString& StageIdentifier, const class FString& PrimPath)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "HasMetadataField");

	Params::UsdConversionBlueprintLibrary_HasMetadataField Parms{};

	Parms.AssetUserData = AssetUserData;
	Parms.Key = std::move(Key);
	Parms.StageIdentifier = std::move(StageIdentifier);
	Parms.PrimPath = std::move(PrimPath);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.InsertSubLayer
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           ParentLayerPath                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           SubLayerPath                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUsdConversionBlueprintLibrary::InsertSubLayer(const class FString& ParentLayerPath, const class FString& SubLayerPath, int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "InsertSubLayer");

	Params::UsdConversionBlueprintLibrary_InsertSubLayer Parms{};

	Parms.ParentLayerPath = std::move(ParentLayerPath);
	Parms.SubLayerPath = std::move(SubLayerPath);
	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function USDExporter.UsdConversionBlueprintLibrary.MakePathRelativeToLayer
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           AnchorLayerPath                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           PathToMakeRelative                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UUsdConversionBlueprintLibrary::MakePathRelativeToLayer(const class FString& AnchorLayerPath, const class FString& PathToMakeRelative)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "MakePathRelativeToLayer");

	Params::UsdConversionBlueprintLibrary_MakePathRelativeToLayer Parms{};

	Parms.AnchorLayerPath = std::move(AnchorLayerPath);
	Parms.PathToMakeRelative = std::move(PathToMakeRelative);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.PastePrims
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           StageRootLayer                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ParentPrimPath                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> UUsdConversionBlueprintLibrary::PastePrims(const class FString& StageRootLayer, const class FString& ParentPrimPath)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "PastePrims");

	Params::UsdConversionBlueprintLibrary_PastePrims Parms{};

	Parms.StageRootLayer = std::move(StageRootLayer);
	Parms.ParentPrimPath = std::move(ParentPrimPath);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.ReapplySequencerAnimations
// (Final, Native, Static, Public, BlueprintCallable)

void UUsdConversionBlueprintLibrary::ReapplySequencerAnimations()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "ReapplySequencerAnimations");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function USDExporter.UsdConversionBlueprintLibrary.RemoveAllPrimSpecs
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           StageRootLayer                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           PrimPath                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           TargetLayer                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUsdConversionBlueprintLibrary::RemoveAllPrimSpecs(const class FString& StageRootLayer, const class FString& PrimPath, const class FString& TargetLayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "RemoveAllPrimSpecs");

	Params::UsdConversionBlueprintLibrary_RemoveAllPrimSpecs Parms{};

	Parms.StageRootLayer = std::move(StageRootLayer);
	Parms.PrimPath = std::move(PrimPath);
	Parms.TargetLayer = std::move(TargetLayer);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function USDExporter.UsdConversionBlueprintLibrary.RevertSequencerAnimations
// (Final, Native, Static, Public, BlueprintCallable)

void UUsdConversionBlueprintLibrary::RevertSequencerAnimations()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "RevertSequencerAnimations");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function USDExporter.UsdConversionBlueprintLibrary.SendAnalytics
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FAnalyticsEventAttr>      Attrs                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// class FString                           EventName                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAutomated                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// double                                  ElapsedSeconds                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// double                                  NumberOfFrames                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Extension                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUsdConversionBlueprintLibrary::SendAnalytics(const TArray<struct FAnalyticsEventAttr>& Attrs, const class FString& EventName, bool bAutomated, double ElapsedSeconds, double NumberOfFrames, const class FString& Extension)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "SendAnalytics");

	Params::UsdConversionBlueprintLibrary_SendAnalytics Parms{};

	Parms.Attrs = std::move(Attrs);
	Parms.EventName = std::move(EventName);
	Parms.bAutomated = bAutomated;
	Parms.ElapsedSeconds = ElapsedSeconds;
	Parms.NumberOfFrames = NumberOfFrames;
	Parms.Extension = std::move(Extension);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function USDExporter.UsdConversionBlueprintLibrary.SetMetadataField
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UUsdAssetUserData*                AssetUserData                                          (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Value                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ValueTypeName                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           StageIdentifier                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           PrimPath                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bTriggerPropertyChangeEvents                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUsdConversionBlueprintLibrary::SetMetadataField(class UUsdAssetUserData* AssetUserData, const class FString& Key, const class FString& Value, const class FString& ValueTypeName, const class FString& StageIdentifier, const class FString& PrimPath, bool bTriggerPropertyChangeEvents)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "SetMetadataField");

	Params::UsdConversionBlueprintLibrary_SetMetadataField Parms{};

	Parms.AssetUserData = AssetUserData;
	Parms.Key = std::move(Key);
	Parms.Value = std::move(Value);
	Parms.ValueTypeName = std::move(ValueTypeName);
	Parms.StageIdentifier = std::move(StageIdentifier);
	Parms.PrimPath = std::move(PrimPath);
	Parms.bTriggerPropertyChangeEvents = bTriggerPropertyChangeEvents;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.SetUsdAssetUserData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          Object                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUsdAssetUserData*                AssetUserData                                          (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUsdConversionBlueprintLibrary::SetUsdAssetUserData(class UObject* Object, class UUsdAssetUserData* AssetUserData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "SetUsdAssetUserData");

	Params::UsdConversionBlueprintLibrary_SetUsdAssetUserData Parms{};

	Parms.Object = Object;
	Parms.AssetUserData = AssetUserData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.StreamInRequiredLevels
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UWorld*                           World                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSet<class FString>                     LevelsToIgnore                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UUsdConversionBlueprintLibrary::StreamInRequiredLevels(class UWorld* World, const TSet<class FString>& LevelsToIgnore)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "StreamInRequiredLevels");

	Params::UsdConversionBlueprintLibrary_StreamInRequiredLevels Parms{};

	Parms.World = World;
	Parms.LevelsToIgnore = std::move(LevelsToIgnore);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function USDExporter.UsdConversionBlueprintLibrary.StreamOutLevels
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UWorld*                           OwningWorld                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>                   LevelNamesToStreamOut                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<class FString>                   LevelNamesToHide                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UUsdConversionBlueprintLibrary::StreamOutLevels(class UWorld* OwningWorld, const TArray<class FString>& LevelNamesToStreamOut, const TArray<class FString>& LevelNamesToHide)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "StreamOutLevels");

	Params::UsdConversionBlueprintLibrary_StreamOutLevels Parms{};

	Parms.OwningWorld = OwningWorld;
	Parms.LevelNamesToStreamOut = std::move(LevelNamesToStreamOut);
	Parms.LevelNamesToHide = std::move(LevelNamesToHide);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function USDExporter.UsdConversionBlueprintLibrary.StringifyAsAssetPath
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           Value                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UUsdConversionBlueprintLibrary::StringifyAsAssetPath(const class FString& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "StringifyAsAssetPath");

	Params::UsdConversionBlueprintLibrary_StringifyAsAssetPath Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.StringifyAsAssetPathArray
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class FString>                   Value                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UUsdConversionBlueprintLibrary::StringifyAsAssetPathArray(const TArray<class FString>& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "StringifyAsAssetPathArray");

	Params::UsdConversionBlueprintLibrary_StringifyAsAssetPathArray Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.StringifyAsBool
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UUsdConversionBlueprintLibrary::StringifyAsBool(bool Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "StringifyAsBool");

	Params::UsdConversionBlueprintLibrary_StringifyAsBool Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.StringifyAsBoolArray
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<bool>                            Value                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UUsdConversionBlueprintLibrary::StringifyAsBoolArray(const TArray<bool>& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "StringifyAsBoolArray");

	Params::UsdConversionBlueprintLibrary_StringifyAsBoolArray Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.StringifyAsDouble
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// double                                  Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UUsdConversionBlueprintLibrary::StringifyAsDouble(double Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "StringifyAsDouble");

	Params::UsdConversionBlueprintLibrary_StringifyAsDouble Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.StringifyAsDouble2
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector2D                        Value                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UUsdConversionBlueprintLibrary::StringifyAsDouble2(const struct FVector2D& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "StringifyAsDouble2");

	Params::UsdConversionBlueprintLibrary_StringifyAsDouble2 Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.StringifyAsDouble2Array
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FVector2D>                Value                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UUsdConversionBlueprintLibrary::StringifyAsDouble2Array(const TArray<struct FVector2D>& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "StringifyAsDouble2Array");

	Params::UsdConversionBlueprintLibrary_StringifyAsDouble2Array Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.StringifyAsDouble3
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          Value                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UUsdConversionBlueprintLibrary::StringifyAsDouble3(const struct FVector& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "StringifyAsDouble3");

	Params::UsdConversionBlueprintLibrary_StringifyAsDouble3 Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.StringifyAsDouble3Array
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FVector>                  Value                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UUsdConversionBlueprintLibrary::StringifyAsDouble3Array(const TArray<struct FVector>& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "StringifyAsDouble3Array");

	Params::UsdConversionBlueprintLibrary_StringifyAsDouble3Array Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.StringifyAsDouble4
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector4                         Value                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UUsdConversionBlueprintLibrary::StringifyAsDouble4(const struct FVector4& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "StringifyAsDouble4");

	Params::UsdConversionBlueprintLibrary_StringifyAsDouble4 Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.StringifyAsDouble4Array
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FVector4>                 Value                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UUsdConversionBlueprintLibrary::StringifyAsDouble4Array(const TArray<struct FVector4>& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "StringifyAsDouble4Array");

	Params::UsdConversionBlueprintLibrary_StringifyAsDouble4Array Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.StringifyAsDoubleArray
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<double>                          Value                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UUsdConversionBlueprintLibrary::StringifyAsDoubleArray(const TArray<double>& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "StringifyAsDoubleArray");

	Params::UsdConversionBlueprintLibrary_StringifyAsDoubleArray Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.StringifyAsFloat
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UUsdConversionBlueprintLibrary::StringifyAsFloat(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "StringifyAsFloat");

	Params::UsdConversionBlueprintLibrary_StringifyAsFloat Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.StringifyAsFloat2
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector2D                        Value                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UUsdConversionBlueprintLibrary::StringifyAsFloat2(const struct FVector2D& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "StringifyAsFloat2");

	Params::UsdConversionBlueprintLibrary_StringifyAsFloat2 Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.StringifyAsFloat2Array
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FVector2D>                Value                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UUsdConversionBlueprintLibrary::StringifyAsFloat2Array(const TArray<struct FVector2D>& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "StringifyAsFloat2Array");

	Params::UsdConversionBlueprintLibrary_StringifyAsFloat2Array Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.StringifyAsFloat3
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          Value                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UUsdConversionBlueprintLibrary::StringifyAsFloat3(const struct FVector& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "StringifyAsFloat3");

	Params::UsdConversionBlueprintLibrary_StringifyAsFloat3 Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.StringifyAsFloat3Array
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FVector>                  Value                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UUsdConversionBlueprintLibrary::StringifyAsFloat3Array(const TArray<struct FVector>& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "StringifyAsFloat3Array");

	Params::UsdConversionBlueprintLibrary_StringifyAsFloat3Array Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.StringifyAsFloat4
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector4                         Value                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UUsdConversionBlueprintLibrary::StringifyAsFloat4(const struct FVector4& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "StringifyAsFloat4");

	Params::UsdConversionBlueprintLibrary_StringifyAsFloat4 Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.StringifyAsFloat4Array
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FVector4>                 Value                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UUsdConversionBlueprintLibrary::StringifyAsFloat4Array(const TArray<struct FVector4>& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "StringifyAsFloat4Array");

	Params::UsdConversionBlueprintLibrary_StringifyAsFloat4Array Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.StringifyAsFloatArray
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<float>                           Value                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UUsdConversionBlueprintLibrary::StringifyAsFloatArray(const TArray<float>& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "StringifyAsFloatArray");

	Params::UsdConversionBlueprintLibrary_StringifyAsFloatArray Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.StringifyAsHalf
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UUsdConversionBlueprintLibrary::StringifyAsHalf(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "StringifyAsHalf");

	Params::UsdConversionBlueprintLibrary_StringifyAsHalf Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.StringifyAsHalf2
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector2D                        Value                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UUsdConversionBlueprintLibrary::StringifyAsHalf2(const struct FVector2D& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "StringifyAsHalf2");

	Params::UsdConversionBlueprintLibrary_StringifyAsHalf2 Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.StringifyAsHalf2Array
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FVector2D>                Value                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UUsdConversionBlueprintLibrary::StringifyAsHalf2Array(const TArray<struct FVector2D>& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "StringifyAsHalf2Array");

	Params::UsdConversionBlueprintLibrary_StringifyAsHalf2Array Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.StringifyAsHalf3
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          Value                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UUsdConversionBlueprintLibrary::StringifyAsHalf3(const struct FVector& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "StringifyAsHalf3");

	Params::UsdConversionBlueprintLibrary_StringifyAsHalf3 Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.StringifyAsHalf3Array
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FVector>                  Value                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UUsdConversionBlueprintLibrary::StringifyAsHalf3Array(const TArray<struct FVector>& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "StringifyAsHalf3Array");

	Params::UsdConversionBlueprintLibrary_StringifyAsHalf3Array Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.StringifyAsHalf4
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector4                         Value                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UUsdConversionBlueprintLibrary::StringifyAsHalf4(const struct FVector4& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "StringifyAsHalf4");

	Params::UsdConversionBlueprintLibrary_StringifyAsHalf4 Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.StringifyAsHalf4Array
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FVector4>                 Value                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UUsdConversionBlueprintLibrary::StringifyAsHalf4Array(const TArray<struct FVector4>& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "StringifyAsHalf4Array");

	Params::UsdConversionBlueprintLibrary_StringifyAsHalf4Array Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.StringifyAsHalfArray
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<float>                           Value                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UUsdConversionBlueprintLibrary::StringifyAsHalfArray(const TArray<float>& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "StringifyAsHalfArray");

	Params::UsdConversionBlueprintLibrary_StringifyAsHalfArray Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.StringifyAsInt
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UUsdConversionBlueprintLibrary::StringifyAsInt(int32 Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "StringifyAsInt");

	Params::UsdConversionBlueprintLibrary_StringifyAsInt Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.StringifyAsInt2
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FIntPoint                        Value                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UUsdConversionBlueprintLibrary::StringifyAsInt2(const struct FIntPoint& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "StringifyAsInt2");

	Params::UsdConversionBlueprintLibrary_StringifyAsInt2 Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.StringifyAsInt2Array
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FIntPoint>                Value                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UUsdConversionBlueprintLibrary::StringifyAsInt2Array(const TArray<struct FIntPoint>& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "StringifyAsInt2Array");

	Params::UsdConversionBlueprintLibrary_StringifyAsInt2Array Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.StringifyAsInt3
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FIntVector                       Value                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UUsdConversionBlueprintLibrary::StringifyAsInt3(const struct FIntVector& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "StringifyAsInt3");

	Params::UsdConversionBlueprintLibrary_StringifyAsInt3 Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.StringifyAsInt3Array
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FIntVector>               Value                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UUsdConversionBlueprintLibrary::StringifyAsInt3Array(const TArray<struct FIntVector>& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "StringifyAsInt3Array");

	Params::UsdConversionBlueprintLibrary_StringifyAsInt3Array Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.StringifyAsInt4
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FIntVector4                      Value                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UUsdConversionBlueprintLibrary::StringifyAsInt4(const struct FIntVector4& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "StringifyAsInt4");

	Params::UsdConversionBlueprintLibrary_StringifyAsInt4 Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.StringifyAsInt4Array
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FIntVector4>              Value                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UUsdConversionBlueprintLibrary::StringifyAsInt4Array(const TArray<struct FIntVector4>& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "StringifyAsInt4Array");

	Params::UsdConversionBlueprintLibrary_StringifyAsInt4Array Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.StringifyAsInt64
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int64                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UUsdConversionBlueprintLibrary::StringifyAsInt64(int64 Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "StringifyAsInt64");

	Params::UsdConversionBlueprintLibrary_StringifyAsInt64 Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.StringifyAsInt64Array
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<int64>                           Value                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UUsdConversionBlueprintLibrary::StringifyAsInt64Array(const TArray<int64>& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "StringifyAsInt64Array");

	Params::UsdConversionBlueprintLibrary_StringifyAsInt64Array Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.StringifyAsIntArray
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<int32>                           Value                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UUsdConversionBlueprintLibrary::StringifyAsIntArray(const TArray<int32>& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "StringifyAsIntArray");

	Params::UsdConversionBlueprintLibrary_StringifyAsIntArray Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.StringifyAsListOpTokens
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class FString>                   Value                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UUsdConversionBlueprintLibrary::StringifyAsListOpTokens(const TArray<class FString>& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "StringifyAsListOpTokens");

	Params::UsdConversionBlueprintLibrary_StringifyAsListOpTokens Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.StringifyAsMatrix2d
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FMatrix2D                        Value                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UUsdConversionBlueprintLibrary::StringifyAsMatrix2d(const struct FMatrix2D& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "StringifyAsMatrix2d");

	Params::UsdConversionBlueprintLibrary_StringifyAsMatrix2d Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.StringifyAsMatrix2dArray
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FMatrix2D>                Value                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UUsdConversionBlueprintLibrary::StringifyAsMatrix2dArray(const TArray<struct FMatrix2D>& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "StringifyAsMatrix2dArray");

	Params::UsdConversionBlueprintLibrary_StringifyAsMatrix2dArray Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.StringifyAsMatrix3d
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FMatrix3D                        Value                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UUsdConversionBlueprintLibrary::StringifyAsMatrix3d(const struct FMatrix3D& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "StringifyAsMatrix3d");

	Params::UsdConversionBlueprintLibrary_StringifyAsMatrix3d Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.StringifyAsMatrix3dArray
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FMatrix3D>                Value                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UUsdConversionBlueprintLibrary::StringifyAsMatrix3dArray(const TArray<struct FMatrix3D>& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "StringifyAsMatrix3dArray");

	Params::UsdConversionBlueprintLibrary_StringifyAsMatrix3dArray Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.StringifyAsMatrix4d
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FMatrix                          Value                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UUsdConversionBlueprintLibrary::StringifyAsMatrix4d(const struct FMatrix& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "StringifyAsMatrix4d");

	Params::UsdConversionBlueprintLibrary_StringifyAsMatrix4d Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.StringifyAsMatrix4dArray
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FMatrix>                  Value                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UUsdConversionBlueprintLibrary::StringifyAsMatrix4dArray(const TArray<struct FMatrix>& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "StringifyAsMatrix4dArray");

	Params::UsdConversionBlueprintLibrary_StringifyAsMatrix4dArray Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.StringifyAsQuatd
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FQuat                            Value                                                  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UUsdConversionBlueprintLibrary::StringifyAsQuatd(const struct FQuat& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "StringifyAsQuatd");

	Params::UsdConversionBlueprintLibrary_StringifyAsQuatd Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.StringifyAsQuatdArray
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FQuat>                    Value                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UUsdConversionBlueprintLibrary::StringifyAsQuatdArray(const TArray<struct FQuat>& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "StringifyAsQuatdArray");

	Params::UsdConversionBlueprintLibrary_StringifyAsQuatdArray Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.StringifyAsQuatf
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FQuat                            Value                                                  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UUsdConversionBlueprintLibrary::StringifyAsQuatf(const struct FQuat& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "StringifyAsQuatf");

	Params::UsdConversionBlueprintLibrary_StringifyAsQuatf Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.StringifyAsQuatfArray
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FQuat>                    Value                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UUsdConversionBlueprintLibrary::StringifyAsQuatfArray(const TArray<struct FQuat>& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "StringifyAsQuatfArray");

	Params::UsdConversionBlueprintLibrary_StringifyAsQuatfArray Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.StringifyAsQuath
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FQuat                            Value                                                  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UUsdConversionBlueprintLibrary::StringifyAsQuath(const struct FQuat& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "StringifyAsQuath");

	Params::UsdConversionBlueprintLibrary_StringifyAsQuath Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.StringifyAsQuathArray
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FQuat>                    Value                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UUsdConversionBlueprintLibrary::StringifyAsQuathArray(const TArray<struct FQuat>& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "StringifyAsQuathArray");

	Params::UsdConversionBlueprintLibrary_StringifyAsQuathArray Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.StringifyAsString
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           Value                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UUsdConversionBlueprintLibrary::StringifyAsString(const class FString& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "StringifyAsString");

	Params::UsdConversionBlueprintLibrary_StringifyAsString Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.StringifyAsStringArray
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class FString>                   Value                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UUsdConversionBlueprintLibrary::StringifyAsStringArray(const TArray<class FString>& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "StringifyAsStringArray");

	Params::UsdConversionBlueprintLibrary_StringifyAsStringArray Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.StringifyAsTimeCode
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// double                                  Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UUsdConversionBlueprintLibrary::StringifyAsTimeCode(double Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "StringifyAsTimeCode");

	Params::UsdConversionBlueprintLibrary_StringifyAsTimeCode Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.StringifyAsTimeCodeArray
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<double>                          Value                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UUsdConversionBlueprintLibrary::StringifyAsTimeCodeArray(const TArray<double>& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "StringifyAsTimeCodeArray");

	Params::UsdConversionBlueprintLibrary_StringifyAsTimeCodeArray Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.StringifyAsToken
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           Value                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UUsdConversionBlueprintLibrary::StringifyAsToken(const class FString& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "StringifyAsToken");

	Params::UsdConversionBlueprintLibrary_StringifyAsToken Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.StringifyAsTokenArray
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class FString>                   Value                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UUsdConversionBlueprintLibrary::StringifyAsTokenArray(const TArray<class FString>& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "StringifyAsTokenArray");

	Params::UsdConversionBlueprintLibrary_StringifyAsTokenArray Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.StringifyAsUChar
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// uint8                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UUsdConversionBlueprintLibrary::StringifyAsUChar(uint8 Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "StringifyAsUChar");

	Params::UsdConversionBlueprintLibrary_StringifyAsUChar Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.StringifyAsUCharArray
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<uint8>                           Value                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UUsdConversionBlueprintLibrary::StringifyAsUCharArray(const TArray<uint8>& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "StringifyAsUCharArray");

	Params::UsdConversionBlueprintLibrary_StringifyAsUCharArray Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.StringifyAsUInt
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UUsdConversionBlueprintLibrary::StringifyAsUInt(int32 Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "StringifyAsUInt");

	Params::UsdConversionBlueprintLibrary_StringifyAsUInt Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.StringifyAsUInt64
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int64                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UUsdConversionBlueprintLibrary::StringifyAsUInt64(int64 Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "StringifyAsUInt64");

	Params::UsdConversionBlueprintLibrary_StringifyAsUInt64 Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.StringifyAsUInt64Array
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<int64>                           Value                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UUsdConversionBlueprintLibrary::StringifyAsUInt64Array(const TArray<int64>& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "StringifyAsUInt64Array");

	Params::UsdConversionBlueprintLibrary_StringifyAsUInt64Array Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.StringifyAsUIntArray
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<int32>                           Value                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UUsdConversionBlueprintLibrary::StringifyAsUIntArray(const TArray<int32>& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "StringifyAsUIntArray");

	Params::UsdConversionBlueprintLibrary_StringifyAsUIntArray Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.UnstringifyAsAssetPath
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           String                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UUsdConversionBlueprintLibrary::UnstringifyAsAssetPath(const class FString& String)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "UnstringifyAsAssetPath");

	Params::UsdConversionBlueprintLibrary_UnstringifyAsAssetPath Parms{};

	Parms.String = std::move(String);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.UnstringifyAsAssetPathArray
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           String                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> UUsdConversionBlueprintLibrary::UnstringifyAsAssetPathArray(const class FString& String)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "UnstringifyAsAssetPathArray");

	Params::UsdConversionBlueprintLibrary_UnstringifyAsAssetPathArray Parms{};

	Parms.String = std::move(String);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.UnstringifyAsBool
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           String                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUsdConversionBlueprintLibrary::UnstringifyAsBool(const class FString& String)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "UnstringifyAsBool");

	Params::UsdConversionBlueprintLibrary_UnstringifyAsBool Parms{};

	Parms.String = std::move(String);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.UnstringifyAsBoolArray
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           String                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<bool>                            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<bool> UUsdConversionBlueprintLibrary::UnstringifyAsBoolArray(const class FString& String)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "UnstringifyAsBoolArray");

	Params::UsdConversionBlueprintLibrary_UnstringifyAsBoolArray Parms{};

	Parms.String = std::move(String);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.UnstringifyAsDouble
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           String                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// double                                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

double UUsdConversionBlueprintLibrary::UnstringifyAsDouble(const class FString& String)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "UnstringifyAsDouble");

	Params::UsdConversionBlueprintLibrary_UnstringifyAsDouble Parms{};

	Parms.String = std::move(String);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.UnstringifyAsDouble2
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class FString                           String                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UUsdConversionBlueprintLibrary::UnstringifyAsDouble2(const class FString& String)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "UnstringifyAsDouble2");

	Params::UsdConversionBlueprintLibrary_UnstringifyAsDouble2 Parms{};

	Parms.String = std::move(String);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.UnstringifyAsDouble2Array
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           String                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FVector2D>                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FVector2D> UUsdConversionBlueprintLibrary::UnstringifyAsDouble2Array(const class FString& String)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "UnstringifyAsDouble2Array");

	Params::UsdConversionBlueprintLibrary_UnstringifyAsDouble2Array Parms{};

	Parms.String = std::move(String);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.UnstringifyAsDouble3
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class FString                           String                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UUsdConversionBlueprintLibrary::UnstringifyAsDouble3(const class FString& String)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "UnstringifyAsDouble3");

	Params::UsdConversionBlueprintLibrary_UnstringifyAsDouble3 Parms{};

	Parms.String = std::move(String);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.UnstringifyAsDouble3Array
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           String                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FVector>                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FVector> UUsdConversionBlueprintLibrary::UnstringifyAsDouble3Array(const class FString& String)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "UnstringifyAsDouble3Array");

	Params::UsdConversionBlueprintLibrary_UnstringifyAsDouble3Array Parms{};

	Parms.String = std::move(String);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.UnstringifyAsDouble4
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class FString                           String                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector4                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector4 UUsdConversionBlueprintLibrary::UnstringifyAsDouble4(const class FString& String)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "UnstringifyAsDouble4");

	Params::UsdConversionBlueprintLibrary_UnstringifyAsDouble4 Parms{};

	Parms.String = std::move(String);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.UnstringifyAsDouble4Array
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           String                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FVector4>                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FVector4> UUsdConversionBlueprintLibrary::UnstringifyAsDouble4Array(const class FString& String)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "UnstringifyAsDouble4Array");

	Params::UsdConversionBlueprintLibrary_UnstringifyAsDouble4Array Parms{};

	Parms.String = std::move(String);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.UnstringifyAsDoubleArray
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           String                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<double>                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<double> UUsdConversionBlueprintLibrary::UnstringifyAsDoubleArray(const class FString& String)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "UnstringifyAsDoubleArray");

	Params::UsdConversionBlueprintLibrary_UnstringifyAsDoubleArray Parms{};

	Parms.String = std::move(String);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.UnstringifyAsFloat
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           String                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UUsdConversionBlueprintLibrary::UnstringifyAsFloat(const class FString& String)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "UnstringifyAsFloat");

	Params::UsdConversionBlueprintLibrary_UnstringifyAsFloat Parms{};

	Parms.String = std::move(String);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.UnstringifyAsFloat2
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class FString                           String                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UUsdConversionBlueprintLibrary::UnstringifyAsFloat2(const class FString& String)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "UnstringifyAsFloat2");

	Params::UsdConversionBlueprintLibrary_UnstringifyAsFloat2 Parms{};

	Parms.String = std::move(String);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.UnstringifyAsFloat2Array
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           String                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FVector2D>                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FVector2D> UUsdConversionBlueprintLibrary::UnstringifyAsFloat2Array(const class FString& String)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "UnstringifyAsFloat2Array");

	Params::UsdConversionBlueprintLibrary_UnstringifyAsFloat2Array Parms{};

	Parms.String = std::move(String);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.UnstringifyAsFloat3
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class FString                           String                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UUsdConversionBlueprintLibrary::UnstringifyAsFloat3(const class FString& String)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "UnstringifyAsFloat3");

	Params::UsdConversionBlueprintLibrary_UnstringifyAsFloat3 Parms{};

	Parms.String = std::move(String);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.UnstringifyAsFloat3Array
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           String                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FVector>                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FVector> UUsdConversionBlueprintLibrary::UnstringifyAsFloat3Array(const class FString& String)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "UnstringifyAsFloat3Array");

	Params::UsdConversionBlueprintLibrary_UnstringifyAsFloat3Array Parms{};

	Parms.String = std::move(String);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.UnstringifyAsFloat4
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class FString                           String                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector4                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector4 UUsdConversionBlueprintLibrary::UnstringifyAsFloat4(const class FString& String)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "UnstringifyAsFloat4");

	Params::UsdConversionBlueprintLibrary_UnstringifyAsFloat4 Parms{};

	Parms.String = std::move(String);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.UnstringifyAsFloat4Array
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           String                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FVector4>                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FVector4> UUsdConversionBlueprintLibrary::UnstringifyAsFloat4Array(const class FString& String)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "UnstringifyAsFloat4Array");

	Params::UsdConversionBlueprintLibrary_UnstringifyAsFloat4Array Parms{};

	Parms.String = std::move(String);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.UnstringifyAsFloatArray
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           String                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<float>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<float> UUsdConversionBlueprintLibrary::UnstringifyAsFloatArray(const class FString& String)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "UnstringifyAsFloatArray");

	Params::UsdConversionBlueprintLibrary_UnstringifyAsFloatArray Parms{};

	Parms.String = std::move(String);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.UnstringifyAsHalf
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           String                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UUsdConversionBlueprintLibrary::UnstringifyAsHalf(const class FString& String)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "UnstringifyAsHalf");

	Params::UsdConversionBlueprintLibrary_UnstringifyAsHalf Parms{};

	Parms.String = std::move(String);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.UnstringifyAsHalf2
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class FString                           String                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UUsdConversionBlueprintLibrary::UnstringifyAsHalf2(const class FString& String)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "UnstringifyAsHalf2");

	Params::UsdConversionBlueprintLibrary_UnstringifyAsHalf2 Parms{};

	Parms.String = std::move(String);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.UnstringifyAsHalf2Array
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           String                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FVector2D>                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FVector2D> UUsdConversionBlueprintLibrary::UnstringifyAsHalf2Array(const class FString& String)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "UnstringifyAsHalf2Array");

	Params::UsdConversionBlueprintLibrary_UnstringifyAsHalf2Array Parms{};

	Parms.String = std::move(String);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.UnstringifyAsHalf3
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class FString                           String                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UUsdConversionBlueprintLibrary::UnstringifyAsHalf3(const class FString& String)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "UnstringifyAsHalf3");

	Params::UsdConversionBlueprintLibrary_UnstringifyAsHalf3 Parms{};

	Parms.String = std::move(String);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.UnstringifyAsHalf3Array
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           String                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FVector>                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FVector> UUsdConversionBlueprintLibrary::UnstringifyAsHalf3Array(const class FString& String)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "UnstringifyAsHalf3Array");

	Params::UsdConversionBlueprintLibrary_UnstringifyAsHalf3Array Parms{};

	Parms.String = std::move(String);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.UnstringifyAsHalf4
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class FString                           String                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector4                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector4 UUsdConversionBlueprintLibrary::UnstringifyAsHalf4(const class FString& String)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "UnstringifyAsHalf4");

	Params::UsdConversionBlueprintLibrary_UnstringifyAsHalf4 Parms{};

	Parms.String = std::move(String);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.UnstringifyAsHalf4Array
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           String                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FVector4>                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FVector4> UUsdConversionBlueprintLibrary::UnstringifyAsHalf4Array(const class FString& String)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "UnstringifyAsHalf4Array");

	Params::UsdConversionBlueprintLibrary_UnstringifyAsHalf4Array Parms{};

	Parms.String = std::move(String);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.UnstringifyAsHalfArray
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           String                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<float>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<float> UUsdConversionBlueprintLibrary::UnstringifyAsHalfArray(const class FString& String)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "UnstringifyAsHalfArray");

	Params::UsdConversionBlueprintLibrary_UnstringifyAsHalfArray Parms{};

	Parms.String = std::move(String);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.UnstringifyAsInt
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           String                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UUsdConversionBlueprintLibrary::UnstringifyAsInt(const class FString& String)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "UnstringifyAsInt");

	Params::UsdConversionBlueprintLibrary_UnstringifyAsInt Parms{};

	Parms.String = std::move(String);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.UnstringifyAsInt2
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class FString                           String                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FIntPoint                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FIntPoint UUsdConversionBlueprintLibrary::UnstringifyAsInt2(const class FString& String)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "UnstringifyAsInt2");

	Params::UsdConversionBlueprintLibrary_UnstringifyAsInt2 Parms{};

	Parms.String = std::move(String);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.UnstringifyAsInt2Array
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           String                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FIntPoint>                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FIntPoint> UUsdConversionBlueprintLibrary::UnstringifyAsInt2Array(const class FString& String)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "UnstringifyAsInt2Array");

	Params::UsdConversionBlueprintLibrary_UnstringifyAsInt2Array Parms{};

	Parms.String = std::move(String);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.UnstringifyAsInt3
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class FString                           String                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FIntVector                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FIntVector UUsdConversionBlueprintLibrary::UnstringifyAsInt3(const class FString& String)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "UnstringifyAsInt3");

	Params::UsdConversionBlueprintLibrary_UnstringifyAsInt3 Parms{};

	Parms.String = std::move(String);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.UnstringifyAsInt3Array
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           String                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FIntVector>               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FIntVector> UUsdConversionBlueprintLibrary::UnstringifyAsInt3Array(const class FString& String)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "UnstringifyAsInt3Array");

	Params::UsdConversionBlueprintLibrary_UnstringifyAsInt3Array Parms{};

	Parms.String = std::move(String);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.UnstringifyAsInt4
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class FString                           String                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FIntVector4                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FIntVector4 UUsdConversionBlueprintLibrary::UnstringifyAsInt4(const class FString& String)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "UnstringifyAsInt4");

	Params::UsdConversionBlueprintLibrary_UnstringifyAsInt4 Parms{};

	Parms.String = std::move(String);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.UnstringifyAsInt4Array
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           String                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FIntVector4>              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FIntVector4> UUsdConversionBlueprintLibrary::UnstringifyAsInt4Array(const class FString& String)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "UnstringifyAsInt4Array");

	Params::UsdConversionBlueprintLibrary_UnstringifyAsInt4Array Parms{};

	Parms.String = std::move(String);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.UnstringifyAsInt64
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           String                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UUsdConversionBlueprintLibrary::UnstringifyAsInt64(const class FString& String)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "UnstringifyAsInt64");

	Params::UsdConversionBlueprintLibrary_UnstringifyAsInt64 Parms{};

	Parms.String = std::move(String);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.UnstringifyAsInt64Array
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           String                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<int64>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int64> UUsdConversionBlueprintLibrary::UnstringifyAsInt64Array(const class FString& String)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "UnstringifyAsInt64Array");

	Params::UsdConversionBlueprintLibrary_UnstringifyAsInt64Array Parms{};

	Parms.String = std::move(String);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.UnstringifyAsIntArray
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           String                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UUsdConversionBlueprintLibrary::UnstringifyAsIntArray(const class FString& String)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "UnstringifyAsIntArray");

	Params::UsdConversionBlueprintLibrary_UnstringifyAsIntArray Parms{};

	Parms.String = std::move(String);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.UnstringifyAsListOpTokens
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           String                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> UUsdConversionBlueprintLibrary::UnstringifyAsListOpTokens(const class FString& String)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "UnstringifyAsListOpTokens");

	Params::UsdConversionBlueprintLibrary_UnstringifyAsListOpTokens Parms{};

	Parms.String = std::move(String);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.UnstringifyAsMatrix2d
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           String                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMatrix2D                        ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FMatrix2D UUsdConversionBlueprintLibrary::UnstringifyAsMatrix2d(const class FString& String)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "UnstringifyAsMatrix2d");

	Params::UsdConversionBlueprintLibrary_UnstringifyAsMatrix2d Parms{};

	Parms.String = std::move(String);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.UnstringifyAsMatrix2dArray
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           String                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FMatrix2D>                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FMatrix2D> UUsdConversionBlueprintLibrary::UnstringifyAsMatrix2dArray(const class FString& String)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "UnstringifyAsMatrix2dArray");

	Params::UsdConversionBlueprintLibrary_UnstringifyAsMatrix2dArray Parms{};

	Parms.String = std::move(String);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.UnstringifyAsMatrix3d
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           String                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMatrix3D                        ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FMatrix3D UUsdConversionBlueprintLibrary::UnstringifyAsMatrix3d(const class FString& String)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "UnstringifyAsMatrix3d");

	Params::UsdConversionBlueprintLibrary_UnstringifyAsMatrix3d Parms{};

	Parms.String = std::move(String);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.UnstringifyAsMatrix3dArray
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           String                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FMatrix3D>                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FMatrix3D> UUsdConversionBlueprintLibrary::UnstringifyAsMatrix3dArray(const class FString& String)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "UnstringifyAsMatrix3dArray");

	Params::UsdConversionBlueprintLibrary_UnstringifyAsMatrix3dArray Parms{};

	Parms.String = std::move(String);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.UnstringifyAsMatrix4d
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class FString                           String                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMatrix                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FMatrix UUsdConversionBlueprintLibrary::UnstringifyAsMatrix4d(const class FString& String)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "UnstringifyAsMatrix4d");

	Params::UsdConversionBlueprintLibrary_UnstringifyAsMatrix4d Parms{};

	Parms.String = std::move(String);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.UnstringifyAsMatrix4dArray
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           String                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FMatrix>                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FMatrix> UUsdConversionBlueprintLibrary::UnstringifyAsMatrix4dArray(const class FString& String)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "UnstringifyAsMatrix4dArray");

	Params::UsdConversionBlueprintLibrary_UnstringifyAsMatrix4dArray Parms{};

	Parms.String = std::move(String);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.UnstringifyAsQuatd
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class FString                           String                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQuat                            ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FQuat UUsdConversionBlueprintLibrary::UnstringifyAsQuatd(const class FString& String)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "UnstringifyAsQuatd");

	Params::UsdConversionBlueprintLibrary_UnstringifyAsQuatd Parms{};

	Parms.String = std::move(String);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.UnstringifyAsQuatdArray
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           String                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FQuat>                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FQuat> UUsdConversionBlueprintLibrary::UnstringifyAsQuatdArray(const class FString& String)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "UnstringifyAsQuatdArray");

	Params::UsdConversionBlueprintLibrary_UnstringifyAsQuatdArray Parms{};

	Parms.String = std::move(String);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.UnstringifyAsQuatf
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class FString                           String                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQuat                            ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FQuat UUsdConversionBlueprintLibrary::UnstringifyAsQuatf(const class FString& String)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "UnstringifyAsQuatf");

	Params::UsdConversionBlueprintLibrary_UnstringifyAsQuatf Parms{};

	Parms.String = std::move(String);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.UnstringifyAsQuatfArray
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           String                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FQuat>                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FQuat> UUsdConversionBlueprintLibrary::UnstringifyAsQuatfArray(const class FString& String)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "UnstringifyAsQuatfArray");

	Params::UsdConversionBlueprintLibrary_UnstringifyAsQuatfArray Parms{};

	Parms.String = std::move(String);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.UnstringifyAsQuath
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class FString                           String                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQuat                            ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FQuat UUsdConversionBlueprintLibrary::UnstringifyAsQuath(const class FString& String)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "UnstringifyAsQuath");

	Params::UsdConversionBlueprintLibrary_UnstringifyAsQuath Parms{};

	Parms.String = std::move(String);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.UnstringifyAsQuathArray
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           String                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FQuat>                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FQuat> UUsdConversionBlueprintLibrary::UnstringifyAsQuathArray(const class FString& String)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "UnstringifyAsQuathArray");

	Params::UsdConversionBlueprintLibrary_UnstringifyAsQuathArray Parms{};

	Parms.String = std::move(String);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.UnstringifyAsString
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           String                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UUsdConversionBlueprintLibrary::UnstringifyAsString(const class FString& String)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "UnstringifyAsString");

	Params::UsdConversionBlueprintLibrary_UnstringifyAsString Parms{};

	Parms.String = std::move(String);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.UnstringifyAsStringArray
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           String                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> UUsdConversionBlueprintLibrary::UnstringifyAsStringArray(const class FString& String)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "UnstringifyAsStringArray");

	Params::UsdConversionBlueprintLibrary_UnstringifyAsStringArray Parms{};

	Parms.String = std::move(String);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.UnstringifyAsTimeCode
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           String                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// double                                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

double UUsdConversionBlueprintLibrary::UnstringifyAsTimeCode(const class FString& String)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "UnstringifyAsTimeCode");

	Params::UsdConversionBlueprintLibrary_UnstringifyAsTimeCode Parms{};

	Parms.String = std::move(String);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.UnstringifyAsTimeCodeArray
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           String                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<double>                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<double> UUsdConversionBlueprintLibrary::UnstringifyAsTimeCodeArray(const class FString& String)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "UnstringifyAsTimeCodeArray");

	Params::UsdConversionBlueprintLibrary_UnstringifyAsTimeCodeArray Parms{};

	Parms.String = std::move(String);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.UnstringifyAsToken
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           String                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UUsdConversionBlueprintLibrary::UnstringifyAsToken(const class FString& String)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "UnstringifyAsToken");

	Params::UsdConversionBlueprintLibrary_UnstringifyAsToken Parms{};

	Parms.String = std::move(String);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.UnstringifyAsTokenArray
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           String                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> UUsdConversionBlueprintLibrary::UnstringifyAsTokenArray(const class FString& String)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "UnstringifyAsTokenArray");

	Params::UsdConversionBlueprintLibrary_UnstringifyAsTokenArray Parms{};

	Parms.String = std::move(String);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.UnstringifyAsUChar
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           String                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

uint8 UUsdConversionBlueprintLibrary::UnstringifyAsUChar(const class FString& String)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "UnstringifyAsUChar");

	Params::UsdConversionBlueprintLibrary_UnstringifyAsUChar Parms{};

	Parms.String = std::move(String);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.UnstringifyAsUCharArray
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           String                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<uint8>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<uint8> UUsdConversionBlueprintLibrary::UnstringifyAsUCharArray(const class FString& String)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "UnstringifyAsUCharArray");

	Params::UsdConversionBlueprintLibrary_UnstringifyAsUCharArray Parms{};

	Parms.String = std::move(String);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.UnstringifyAsUInt
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           String                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UUsdConversionBlueprintLibrary::UnstringifyAsUInt(const class FString& String)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "UnstringifyAsUInt");

	Params::UsdConversionBlueprintLibrary_UnstringifyAsUInt Parms{};

	Parms.String = std::move(String);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.UnstringifyAsUInt64
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           String                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UUsdConversionBlueprintLibrary::UnstringifyAsUInt64(const class FString& String)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "UnstringifyAsUInt64");

	Params::UsdConversionBlueprintLibrary_UnstringifyAsUInt64 Parms{};

	Parms.String = std::move(String);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.UnstringifyAsUInt64Array
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           String                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<int64>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int64> UUsdConversionBlueprintLibrary::UnstringifyAsUInt64Array(const class FString& String)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "UnstringifyAsUInt64Array");

	Params::UsdConversionBlueprintLibrary_UnstringifyAsUInt64Array Parms{};

	Parms.String = std::move(String);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDExporter.UsdConversionBlueprintLibrary.UnstringifyAsUIntArray
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           String                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UUsdConversionBlueprintLibrary::UnstringifyAsUIntArray(const class FString& String)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UsdConversionBlueprintLibrary", "UnstringifyAsUIntArray");

	Params::UsdConversionBlueprintLibrary_UnstringifyAsUIntArray Parms{};

	Parms.String = std::move(String);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

