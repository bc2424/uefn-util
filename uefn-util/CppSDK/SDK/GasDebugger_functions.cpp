#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GasDebugger

#include "Basic.hpp"

#include "GasDebugger_classes.hpp"
#include "GasDebugger_parameters.hpp"


namespace SDK
{

// Function GasDebugger.GasDebuggerMenu.ClientReceiveCallStack
// (Final, Net, NetReliable, Native, Event, Private, NetClient)
// Parameters:
// struct FGasDebugReplicatableCallStack   CallStack                                              (Parm, NativeAccessSpecifierPublic)

void AGasDebuggerMenu::ClientReceiveCallStack(const struct FGasDebugReplicatableCallStack& CallStack)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GasDebuggerMenu", "ClientReceiveCallStack");

	Params::GasDebuggerMenu_ClientReceiveCallStack Parms{};

	Parms.CallStack = std::move(CallStack);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GasDebugger.GasDebuggerMenu.ServerClose
// (Final, Net, NetReliable, Native, Event, Private, NetServer)

void AGasDebuggerMenu::ServerClose()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GasDebuggerMenu", "ServerClose");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GasDebugger.GasDebuggerMenu.ServerRemoveEffect
// (Final, Net, NetReliable, Native, Event, Private, NetServer)
// Parameters:
// class FString                           EffectUsefulName                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AGasDebuggerMenu::ServerRemoveEffect(const class FString& EffectUsefulName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GasDebuggerMenu", "ServerRemoveEffect");

	Params::GasDebuggerMenu_ServerRemoveEffect Parms{};

	Parms.EffectUsefulName = std::move(EffectUsefulName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GasDebugger.GasDebuggerMenu.ServerRemoveTag
// (Final, Net, NetReliable, Native, Event, Private, NetServer)
// Parameters:
// struct FGameplayTag                     Tag                                                    (ConstParm, Parm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AGasDebuggerMenu::ServerRemoveTag(const struct FGameplayTag& Tag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GasDebuggerMenu", "ServerRemoveTag");

	Params::GasDebuggerMenu_ServerRemoveTag Parms{};

	Parms.Tag = std::move(Tag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GasDebugger.GasDebuggerMenu.ServerRequestCallStack
// (Final, Net, NetReliable, Native, Event, Private, NetServer)
// Parameters:
// uint16                                  Id                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AGasDebuggerMenu::ServerRequestCallStack(uint16 Id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GasDebuggerMenu", "ServerRequestCallStack");

	Params::GasDebuggerMenu_ServerRequestCallStack Parms{};

	Parms.Id = Id;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GasDebugger.GasDebuggerMenu.ServerSetAttribute
// (Final, Net, NetReliable, Native, Event, Private, NetServer)
// Parameters:
// class FString                           AttributeName                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AGasDebuggerMenu::ServerSetAttribute(const class FString& AttributeName, float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GasDebuggerMenu", "ServerSetAttribute");

	Params::GasDebuggerMenu_ServerSetAttribute Parms{};

	Parms.AttributeName = std::move(AttributeName);
	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GasDebugger.GasDebuggerMenu.ServerSetMonitoredActor
// (Final, Net, NetReliable, Native, Event, Private, NetServer)
// Parameters:
// class AActor*                           ActorToMonitor                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AGasDebuggerMenu::ServerSetMonitoredActor(class AActor* ActorToMonitor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GasDebuggerMenu", "ServerSetMonitoredActor");

	Params::GasDebuggerMenu_ServerSetMonitoredActor Parms{};

	Parms.ActorToMonitor = ActorToMonitor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GasDebugger.GasDebuggerMenu.ServerTogglePause
// (Final, Net, NetReliable, Native, Event, Private, NetServer)

void AGasDebuggerMenu::ServerTogglePause()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GasDebuggerMenu", "ServerTogglePause");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GasDebugger.GasDebuggerCheatManager.GasDebugger
// (Final, Exec, Native, Protected, Const)

void UGasDebuggerCheatManager::GasDebugger() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GasDebuggerCheatManager", "GasDebugger");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}

}

