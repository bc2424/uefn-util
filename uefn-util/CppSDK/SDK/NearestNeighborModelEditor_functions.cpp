#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: NearestNeighborModelEditor

#include "Basic.hpp"

#include "NearestNeighborModelEditor_classes.hpp"
#include "NearestNeighborModelEditor_parameters.hpp"


namespace SDK
{

// Function NearestNeighborModelEditor.NearestNeighborAnimStream.AppendFrames
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UAnimSequence*                    Anim                                                   (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<int32>                           Frames                                                 (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UNearestNeighborAnimStream::AppendFrames(const class UAnimSequence* Anim, const TArray<int32>& Frames)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NearestNeighborAnimStream", "AppendFrames");

	Params::NearestNeighborAnimStream_AppendFrames Parms{};

	Parms.Anim = Anim;
	Parms.Frames = std::move(Frames);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function NearestNeighborModelEditor.NearestNeighborAnimStream.Init
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USkeleton*                        InSkeleton                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNearestNeighborAnimStream::Init(class USkeleton* InSkeleton)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NearestNeighborAnimStream", "Init");

	Params::NearestNeighborAnimStream_Init Parms{};

	Parms.InSkeleton = InSkeleton;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NearestNeighborModelEditor.NearestNeighborAnimStream.IsValid
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UNearestNeighborAnimStream::IsValid() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NearestNeighborAnimStream", "IsValid");

	Params::NearestNeighborAnimStream_IsValid Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function NearestNeighborModelEditor.NearestNeighborAnimStream.ToAnim
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UAnimSequence*                    OutAnim                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UNearestNeighborAnimStream::ToAnim(class UAnimSequence* OutAnim) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NearestNeighborAnimStream", "ToAnim");

	Params::NearestNeighborAnimStream_ToAnim Parms{};

	Parms.OutAnim = OutAnim;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function NearestNeighborModelEditor.NearestNeighborGeometryCacheStream.AppendFrames
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UGeometryCache*                   Cache                                                  (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<int32>                           Frames                                                 (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UNearestNeighborGeometryCacheStream::AppendFrames(const class UGeometryCache* Cache, const TArray<int32>& Frames)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NearestNeighborGeometryCacheStream", "AppendFrames");

	Params::NearestNeighborGeometryCacheStream_AppendFrames Parms{};

	Parms.Cache = Cache;
	Parms.Frames = std::move(Frames);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function NearestNeighborModelEditor.NearestNeighborGeometryCacheStream.Init
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UGeometryCache*                   InTemplateCache                                        (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNearestNeighborGeometryCacheStream::Init(const class UGeometryCache* InTemplateCache)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NearestNeighborGeometryCacheStream", "Init");

	Params::NearestNeighborGeometryCacheStream_Init Parms{};

	Parms.InTemplateCache = InTemplateCache;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NearestNeighborModelEditor.NearestNeighborGeometryCacheStream.ToGeometryCache
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UGeometryCache*                   OutCache                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UNearestNeighborGeometryCacheStream::ToGeometryCache(class UGeometryCache* OutCache)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NearestNeighborGeometryCacheStream", "ToGeometryCache");

	Params::NearestNeighborGeometryCacheStream_ToGeometryCache Parms{};

	Parms.OutCache = OutCache;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function NearestNeighborModelEditor.NearestNeighborGeometryCacheStream.IsValid
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UNearestNeighborGeometryCacheStream::IsValid() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NearestNeighborGeometryCacheStream", "IsValid");

	Params::NearestNeighborGeometryCacheStream_IsValid Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function NearestNeighborModelEditor.NearestNeighborTrainingModel.CreateModelInstance
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// class UNearestNeighborModelInstance*    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UNearestNeighborModelInstance* UNearestNeighborTrainingModel::CreateModelInstance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NearestNeighborTrainingModel", "CreateModelInstance");

	Params::NearestNeighborTrainingModel_CreateModelInstance Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function NearestNeighborModelEditor.NearestNeighborTrainingModel.CustomSample
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// int32                                   Frame                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UNearestNeighborTrainingModel::CustomSample(int32 Frame)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NearestNeighborTrainingModel", "CustomSample");

	Params::NearestNeighborTrainingModel_CustomSample Parms{};

	Parms.Frame = Frame;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function NearestNeighborModelEditor.NearestNeighborTrainingModel.DestroyModelInstance
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// class UNearestNeighborModelInstance*    ModelInstance                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNearestNeighborTrainingModel::DestroyModelInstance(class UNearestNeighborModelInstance* ModelInstance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NearestNeighborTrainingModel", "DestroyModelInstance");

	Params::NearestNeighborTrainingModel_DestroyModelInstance Parms{};

	Parms.ModelInstance = ModelInstance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NearestNeighborModelEditor.NearestNeighborTrainingModel.GetMeshIndexBuffer
// (Final, Native, Private, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UNearestNeighborTrainingModel::GetMeshIndexBuffer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NearestNeighborTrainingModel", "GetMeshIndexBuffer");

	Params::NearestNeighborTrainingModel_GetMeshIndexBuffer Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function NearestNeighborModelEditor.NearestNeighborTrainingModel.GetNeighborStats
// (Event, Public, BlueprintEvent)
// Parameters:
// class UNearestNeighborStatsData*        StatsData                                              (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UNearestNeighborTrainingModel::GetNeighborStats(const class UNearestNeighborStatsData* StatsData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NearestNeighborTrainingModel", "GetNeighborStats");

	Params::NearestNeighborTrainingModel_GetNeighborStats Parms{};

	Parms.StatsData = StatsData;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function NearestNeighborModelEditor.NearestNeighborTrainingModel.GetUnskinnedVertexPositions
// (Final, Native, Private, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<float>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<float> UNearestNeighborTrainingModel::GetUnskinnedVertexPositions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NearestNeighborTrainingModel", "GetUnskinnedVertexPositions");

	Params::NearestNeighborTrainingModel_GetUnskinnedVertexPositions Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function NearestNeighborModelEditor.NearestNeighborTrainingModel.KmeansClusterPoses
// (Event, Public, BlueprintEvent)
// Parameters:
// class UNearestNeighborKMeansData*       KMeansData                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UNearestNeighborTrainingModel::KmeansClusterPoses(const class UNearestNeighborKMeansData* KMeansData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NearestNeighborTrainingModel", "KmeansClusterPoses");

	Params::NearestNeighborTrainingModel_KmeansClusterPoses Parms{};

	Parms.KMeansData = KMeansData;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function NearestNeighborModelEditor.NearestNeighborTrainingModel.SetCustomSamplerData
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// class UAnimSequence*                    Anim                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UGeometryCache*                   Cache                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UNearestNeighborTrainingModel::SetCustomSamplerData(class UAnimSequence* Anim, class UGeometryCache* Cache)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NearestNeighborTrainingModel", "SetCustomSamplerData");

	Params::NearestNeighborTrainingModel_SetCustomSamplerData Parms{};

	Parms.Anim = Anim;
	Parms.Cache = Cache;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function NearestNeighborModelEditor.NearestNeighborTrainingModel.SetCustomSamplerDataFromSection
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// int32                                   SectionIndex                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UNearestNeighborTrainingModel::SetCustomSamplerDataFromSection(int32 SectionIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NearestNeighborTrainingModel", "SetCustomSamplerDataFromSection");

	Params::NearestNeighborTrainingModel_SetCustomSamplerDataFromSection Parms{};

	Parms.SectionIndex = SectionIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function NearestNeighborModelEditor.NearestNeighborTrainingModel.UpdateNearestNeighborData
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UNearestNeighborTrainingModel::UpdateNearestNeighborData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NearestNeighborTrainingModel", "UpdateNearestNeighborData");

	Params::NearestNeighborTrainingModel_UpdateNearestNeighborData Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function NearestNeighborModelEditor.NearestNeighborTrainingModel.GetModelSkeleton
// (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UMLDeformerModel*                 Model                                                  (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class USkeleton*                  ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class USkeleton* UNearestNeighborTrainingModel::GetModelSkeleton(const class UMLDeformerModel* Model) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NearestNeighborTrainingModel", "GetModelSkeleton");

	Params::NearestNeighborTrainingModel_GetModelSkeleton Parms{};

	Parms.Model = Model;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function NearestNeighborModelEditor.NearestNeighborTrainingModel.GetNearestNeighborModel
// (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UNearestNeighborModel*            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UNearestNeighborModel* UNearestNeighborTrainingModel::GetNearestNeighborModel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NearestNeighborTrainingModel", "GetNearestNeighborModel");

	Params::NearestNeighborTrainingModel_GetNearestNeighborModel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function NearestNeighborModelEditor.NearestNeighborTrainingModel.GetNumFramesAnimSequence
// (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UAnimSequence*                    Anim                                                   (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UNearestNeighborTrainingModel::GetNumFramesAnimSequence(const class UAnimSequence* Anim) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NearestNeighborTrainingModel", "GetNumFramesAnimSequence");

	Params::NearestNeighborTrainingModel_GetNumFramesAnimSequence Parms{};

	Parms.Anim = Anim;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function NearestNeighborModelEditor.NearestNeighborTrainingModel.GetNumFramesGeometryCache
// (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UGeometryCache*                   GeometryCache                                          (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UNearestNeighborTrainingModel::GetNumFramesGeometryCache(const class UGeometryCache* GeometryCache) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NearestNeighborTrainingModel", "GetNumFramesGeometryCache");

	Params::NearestNeighborTrainingModel_GetNumFramesGeometryCache Parms{};

	Parms.GeometryCache = GeometryCache;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function NearestNeighborModelEditor.NearestNeighborTrainingModel.Train
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UNearestNeighborTrainingModel::Train() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NearestNeighborTrainingModel", "Train");

	Params::NearestNeighborTrainingModel_Train Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

