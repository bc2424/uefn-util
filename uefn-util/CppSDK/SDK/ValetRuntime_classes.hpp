#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ValetRuntime

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "VehicleBouncyChassisRuntime_classes.hpp"
#include "FortniteGame_structs.hpp"
#include "FortniteGame_classes.hpp"
#include "ValetRuntime_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "CoreUObject_classes.hpp"
#include "PhysicsCore_structs.hpp"
#include "ModularGameplay_classes.hpp"


namespace SDK
{

// Class ValetRuntime.SportsCarVehicleAnimInstance
// 0x0010 (0x0900 - 0x08F0)
class USportsCarVehicleAnimInstance final : public UVehicleBouncyChassisAnimInstance
{
public:
	float                                         TriggerSpoiler;                                    // 0x08F0(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TriggerMirrorL;                                    // 0x08F4(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TriggerMirrorR;                                    // 0x08F8(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHasTireMod;                                       // 0x08FC(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_8FD[0x3];                                      // 0x08FD(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SportsCarVehicleAnimInstance">();
	}
	static class USportsCarVehicleAnimInstance* GetDefaultObj()
	{
		return GetDefaultObjImpl<USportsCarVehicleAnimInstance>();
	}
};

// Class ValetRuntime.FortValetMountedGunAnimInstance
// 0x0020 (0x0620 - 0x0600)
class UFortValetMountedGunAnimInstance final : public UFortAnimInstance
{
public:
	class AFortDagwoodVehicle*                    VehicleActor;                                      // 0x0600(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsUsingMountedGun;                                // 0x0608(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_609[0x3];                                      // 0x0609(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         SeatIndexCached;                                   // 0x060C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AimingYaw;                                         // 0x0610(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AimingPitch;                                       // 0x0614(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortWeaponRangedForVehicle*            MountedWeapon;                                     // 0x0618(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortValetMountedGunAnimInstance">();
	}
	static class UFortValetMountedGunAnimInstance* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortValetMountedGunAnimInstance>();
	}
};

// Class ValetRuntime.FortValetPassengerAnimInstance
// 0x00B0 (0x09B0 - 0x0900)
class UFortValetPassengerAnimInstance final : public UFortVehicleOccupantAnimInstance
{
public:
	struct FCachedAnimRelevancyData               IntoVehicleCachedData;                             // 0x08F8(0x0024)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FCachedAnimRelevancyData               OutOfVehicleCachedData;                            // 0x091C(0x0024)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class AFortDagwoodVehicle>     DagwoodVehicleInstance;                            // 0x0940(0x0030)(BlueprintVisible, Transient, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TurnYaw;                                           // 0x0970(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         InTime;                                            // 0x0974(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         OutTime;                                           // 0x0978(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         NegativeTurnYaw;                                   // 0x097C(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsReloading;                                      // 0x0980(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsTargeting;                                      // 0x0981(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsFiring;                                         // 0x0982(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsUsingConsumable;                                // 0x0983(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsInAction;                                       // 0x0984(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsPassengerBackLeft;                              // 0x0985(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsThrowConsumable;                                // 0x0986(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsLeaning;                                        // 0x0987(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsControllingTurret;                              // 0x0988(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_989[0x7];                                      // 0x0989(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  PawnControllingTurretTags;                         // 0x0990(0x0020)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortValetPassengerAnimInstance">();
	}
	static class UFortValetPassengerAnimInstance* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortValetPassengerAnimInstance>();
	}
};

// Class ValetRuntime.FortValetSedanAnimInstance
// 0x0020 (0x06D0 - 0x06B0)
class UFortValetSedanAnimInstance final : public UFortVehicleAnimInstance
{
public:
	uint8                                         Pad_6B0[0x4];                                      // 0x06B0(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bHasTireMod;                                       // 0x06B4(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_6B5[0x3];                                      // 0x06B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TrunkDamageAlpha;                                  // 0x06B8(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MirrorLeftDamageAlpha;                             // 0x06BC(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MirrorRightDamageAlpha;                            // 0x06C0(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_6C4[0xC];                                      // 0x06C4(0x000C)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortValetSedanAnimInstance">();
	}
	static class UFortValetSedanAnimInstance* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortValetSedanAnimInstance>();
	}
};

// Class ValetRuntime.DagwoodNetworkPhysicsComponent
// 0x0FA8 (0x1080 - 0x00D8)
class UDagwoodNetworkPhysicsComponent final : public UActorComponent
{
public:
	uint8                                         Pad_D8[0x8];                                       // 0x00D8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FNetworkPhysicsState                   NetworkPhysicsState;                               // 0x00E0(0x0090)(Net, Transient, NoDestructor, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnGeneratedLocalInputCmd;                          // 0x0170(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FDagwoodManagedState                   ReplicatedManagedState;                            // 0x0180(0x0500)(Net, Transient, Protected, NativeAccessSpecifierProtected)
	struct FDagwoodManagedState                   InManagedState;                                    // 0x0680(0x0500)(Transient, Protected, NativeAccessSpecifierProtected)
	struct FDagwoodManagedState                   OutManagedState;                                   // 0x0B80(0x0500)(Transient, Protected, NativeAccessSpecifierProtected)

public:
	void SetPendingInputCmd(const struct FFortDagwoodCmd& In);
	void SetState_GT(const struct FDagwoodInPersistent& In);

	struct FFortDagwoodCmd GetPendingInputCmd() const;
	struct FDagwoodInPersistent GetState_GT() const;
	struct FDagwoodState_PT GetState_PT() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DagwoodNetworkPhysicsComponent">();
	}
	static class UDagwoodNetworkPhysicsComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDagwoodNetworkPhysicsComponent>();
	}
};

// Class ValetRuntime.NetworkPhysicsManager
// 0x60E8 (0x6120 - 0x0038)
class UNetworkPhysicsManager final : public UWorldSubsystem
{
public:
	uint8                                         Pad_38[0x60E8];                                    // 0x0038(0x60E8)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"NetworkPhysicsManager">();
	}
	static class UNetworkPhysicsManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNetworkPhysicsManager>();
	}
};

// Class ValetRuntime.FortAthenaMutator_OverrideValetVehicleParameters
// 0x0070 (0x0540 - 0x04D0)
class AFortAthenaMutator_OverrideValetVehicleParameters final : public AFortAthenaMutator
{
public:
	struct FScalableFloat                         MinInitialVehicleFuelPercent;                      // 0x04D0(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         MaxInitialVehicleFuelPercent;                      // 0x0508(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)

public:
	void OnPlaylistLoaded(class FName PlaylistName, const struct FGameplayTagContainer& PlaylistContainerTags);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortAthenaMutator_OverrideValetVehicleParameters">();
	}
	static class AFortAthenaMutator_OverrideValetVehicleParameters* GetDefaultObj()
	{
		return GetDefaultObjImpl<AFortAthenaMutator_OverrideValetVehicleParameters>();
	}
};

// Class ValetRuntime.FortCameraMode_Dagwood
// 0x0040 (0x1EA0 - 0x1E60)
class UFortCameraMode_Dagwood final : public UFortCameraMode_AthenaVehicle
{
public:
	float                                         HorizontalCameraSpaceOffsetWhileTurning;           // 0x1E58(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SteeringAngleForMaxHorizontalOffset;               // 0x1E5C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         InAirVerticalOffset;                               // 0x1E60(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AirOffsetDampFactor;                               // 0x1E64(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SpeedAlphaDampFactor;                              // 0x1E68(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TimeInAirRequiredForVertOffset;                    // 0x1E6C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         VehicleBasePitch;                                  // 0x1E70(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         HorizOffsetInterpSpeed;                            // 0x1E74(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         HorizOffsetInterpSpeedRecovery;                    // 0x1E78(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CurrentSpeedAlpha;                                 // 0x1E7C(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CurrentVerticalOffset;                             // 0x1E80(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CurrentHorizontalOffset;                           // 0x1E84(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TimeInAir;                                         // 0x1E88(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PreviousSpeed;                                     // 0x1E8C(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AppliedPitch;                                      // 0x1E90(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1E94[0xC];                                     // 0x1E94(0x000C)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortCameraMode_Dagwood">();
	}
	static class UFortCameraMode_Dagwood* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortCameraMode_Dagwood>();
	}
};

// Class ValetRuntime.FortContextualTutorial_VehicleValetLowFuel
// 0x0008 (0x0100 - 0x00F8)
class UFortContextualTutorial_VehicleValetLowFuel final : public UFortContextualTutorial
{
public:
	uint8                                         Pad_F8[0x8];                                       // 0x00F8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void HandleStartSkydivingForActivation();
	void HandleVehicleStateChanged(class AFortPlayerPawn* PlayerPawn, class AActor* NewVehicle, class AActor* OldVehicle);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortContextualTutorial_VehicleValetLowFuel">();
	}
	static class UFortContextualTutorial_VehicleValetLowFuel* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortContextualTutorial_VehicleValetLowFuel>();
	}
};

// Class ValetRuntime.FortDagwoodModsConfigs
// 0x0000 (0x0030 - 0x0030)
class UFortDagwoodModsConfigs final : public UObject
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortDagwoodModsConfigs">();
	}
	static class UFortDagwoodModsConfigs* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortDagwoodModsConfigs>();
	}
};

// Class ValetRuntime.FortDagwoodVehicle
// 0x0730 (0x2B30 - 0x2400)
class AFortDagwoodVehicle final : public AFortAthenaSKMotorVehicle
{
public:
	uint8                                         Pad_23F8[0x48];                                    // 0x23F8(0x0048)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              OnStartHandbrakeDelegate;                          // 0x2440(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnStopHandbrakeDelegate;                           // 0x2450(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnStartHandBrakeCatchupForceDelegate;              // 0x2460(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TSubclassOf<class ULegacyCameraShake>         HardLandingCameraShake;                            // 0x2470(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ULegacyCameraShake>         DriverCamShakeClass;                               // 0x2478(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ULegacyCameraShake>         HandBrakeCamShakeClass;                            // 0x2480(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EVehicleClass                                 VehicleClass;                                      // 0x2488(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2489[0x3];                                     // 0x2489(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         FadeDelay;                                         // 0x248C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FadeDuration;                                      // 0x2490(0x0004)(Edit, Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MinBrakeForceForSkid;                              // 0x2494(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MinForwardSpeedForSkid;                            // 0x2498(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           SpeedLinesCueTag;                                  // 0x249C(0x000C)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FadeStartTime;                                     // 0x24A8(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24AC[0x4];                                     // 0x24AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UDagwoodNetworkPhysicsComponent*        NetworkPhysicsComponent;                           // 0x24B0(0x0008)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, AdvancedDisplay, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(struct FAttachedWheel& WheelData)> OnTireModHealthChanged;                            // 0x24B8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                         RechargeableBoostPercent;                          // 0x24C8(0x0004)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_24CC[0x4];                                     // 0x24CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortSplatterSourceComponent*           SplatterSourceComp;                                // 0x24D0(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bEnableNativizedTick;                              // 0x24D8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bShouldApplyPowerFunctionToMobileInput;            // 0x24D9(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_24DA[0x6];                                     // 0x24DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TOptional<struct FDagwoodCollisionHitFXConfig> NativeCollisionHitFxConfig;                        // 0x24E0(0x0030)(ZeroConstructor, NoDestructor, Protected, NativeAccessSpecifierProtected)
	TOptional<struct FDagwoodCollisionHitHapticsConfig> NativeCollisionHapticsConfig;                      // 0x2510(0x0050)(ZeroConstructor, NoDestructor, Protected, NativeAccessSpecifierProtected)
	TArray<class FName>                           PassengerLeanSockets;                              // 0x2560(0x0010)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FVector>                        PassngerLeanRelativeOffsets;                       // 0x2570(0x0010)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TSubclassOf<class UFortCameraMode_AthenaVehicle> PassengerCameraModeClass;                          // 0x2580(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UFortCameraMode>            PassengerCameraModeClass_ADS;                      // 0x2588(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class FName>                           WheelSocketNames;                                  // 0x2590(0x0010)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class UFortDagwoodVehicleConfigs*             FortDagwoodVehicleConfigs;                         // 0x25A0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<int32>                                 RearShocks;                                        // 0x25A8(0x0010)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                  OffroadEnvironmentDamageTags;                      // 0x25B8(0x0020)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                  FireDamageTags;                                    // 0x25D8(0x0020)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FVector                                NativeWheelScaleRear;                              // 0x25F8(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                NativeWheelScaleFront;                             // 0x2610(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                NativeTireScaleRear;                               // 0x2628(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                NativeTireScaleFront;                              // 0x2640(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bTireSmokeActive;                                  // 0x2658(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bBoostFailed;                                      // 0x2659(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bCanBoostPitch;                                    // 0x265A(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_265B[0x5];                                     // 0x265B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	uint64                                        AccelForceFeedbackHandle;                          // 0x2660(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint64                                        SkidForceFeedbackHandle;                           // 0x2668(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint64                                        BrakeForceFeedbackHandle;                          // 0x2670(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint64                                        HandBrakeForceFeedbackHandle;                      // 0x2678(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UForceFeedbackEffect*                   SpringCompressionForceFeedback;                    // 0x2680(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bSpeedLinesActive;                                 // 0x2688(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2689[0x1F];                                    // 0x2689(0x001F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDagwoodRuntimeModifiers               DagwoodRuntimeModifiedProperties;                  // 0x26A8(0x0078)(Net, Transient, RepNotify, Protected, NativeAccessSpecifierProtected)
	TArray<struct FAttachedWheel>                 ServerRepWheelData;                                // 0x2720(0x0010)(Net, ZeroConstructor, Transient, RepNotify, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_2730[0x50];                                    // 0x2730(0x0050)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                FlipYawForwardTargetDirection;                     // 0x2780(0x0018)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                FlipYawOriginalForward;                            // 0x2798(0x0018)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EVehicleWheelLocations                        LastPoppedTire;                                    // 0x27B0(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_27B1[0x3];                                     // 0x27B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RoadTopSpeedMultiplier;                            // 0x27B4(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         CurrentBumpiness;                                  // 0x27B8(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         CurrentForwardAcceleration;                        // 0x27BC(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         PreviousTurnAlpha;                                 // 0x27C0(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         CurrentCameraAssistStrength;                       // 0x27C4(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         LostGripTime;                                      // 0x27C8(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         LostGripRightAlpha;                                // 0x27CC(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         HandbrakeTime;                                     // 0x27D0(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         HandbrakeStartTime;                                // 0x27D4(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         HandbrakeEndTime;                                  // 0x27D8(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         FlipYawMult;                                       // 0x27DC(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         FlipTimer;                                         // 0x27E0(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         FlipExplodeTimer;                                  // 0x27E4(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         FlipPushForceTimer;                                // 0x27E8(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         FlipAirTimer;                                      // 0x27EC(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         FlipLanding;                                       // 0x27F0(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         FlipStartTime;                                     // 0x27F4(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         LastFlipDamageTime;                                // 0x27F8(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         PreFlipControlLossTimer;                           // 0x27FC(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bDidCinematicFlip;                                 // 0x2800(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bCanCinematicFlip;                                 // 0x2801(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bInPopTireVeer;                                    // 0x2802(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bInFlipRecovery;                                   // 0x2803(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bExplodeAfterFlip;                                 // 0x2804(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bLostGrip;                                         // 0x2805(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bApplyHandbrakeCatchupForce;                       // 0x2806(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bDidHandbrakeCatchup;                              // 0x2807(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bInFlipRoll;                                       // 0x2808(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bInFlipYaw;                                        // 0x2809(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bInFlipPitch;                                      // 0x280A(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bFlipDidLeaveGround;                               // 0x280B(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bBreakBuildingsIfBlockingLeaningPassenger;         // 0x280C(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_280D[0x3];                                     // 0x280D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LeanBreakTimeAccumulator;                          // 0x2810(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         LeanBreakCheckInterval;                            // 0x2814(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class FName>                           SeatToWindowShapeNames;                            // 0x2818(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class ULegacyCameraShake*                     OffroadCameraShakeInstance;                        // 0x2828(0x0008)(ZeroConstructor, Transient, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ULegacyCameraShake*                     DriverCameraShakeInstance;                         // 0x2830(0x0008)(ZeroConstructor, Transient, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ULegacyCameraShake*                     AccelCameraShakeInstance;                          // 0x2838(0x0008)(ZeroConstructor, Transient, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ULegacyCameraShake*                     HandBrakeCameraShakeInstance;                      // 0x2840(0x0008)(ZeroConstructor, Transient, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UNiagaraComponent*                      NativeComp_RoadAndExhaust;                         // 0x2848(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UNiagaraComponent*                      NativeComp_TireSkid;                               // 0x2850(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UNiagaraComponent*                      NativeComp_Damage;                                 // 0x2858(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UNiagaraComponent*                      NativeComp_SpeedLines;                             // 0x2860(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UNiagaraSystem*                         NativeSys_TireExhaust;                             // 0x2868(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UNiagaraSystem*                         NativeSys_SpeedLines;                              // 0x2870(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UNiagaraSystem*                         NativeSys_TireSkid;                                // 0x2878(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<EPhysicalSurface>                      RoadAndExhaustSurfaceTypeArrayForFX;               // 0x2880(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class FName                                   RoadAndExhaustPeelOutColorIndexName;               // 0x2890(0x000C)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                   BrakeLightsName;                                   // 0x289C(0x000C)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_28A8[0x10];                                    // 0x28A8(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<ETireStates>                           FakeTireStates;                                    // 0x28B8(0x0010)(Net, ZeroConstructor, Transient, RepNotify, NativeAccessSpecifierPrivate)
	EPoppedTireReactionStates                     ActivePoppedTireReaction;                          // 0x28C8(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EPoppedTireReactionStates                     ReplicatedPoppedTireReaction;                      // 0x28C9(0x0001)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_28CA[0x2];                                     // 0x28CA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TWeakObjectPtr<class AFortValetAudioController> ValetAudio;                                        // 0x28CC(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_28D4[0x4];                                     // 0x28D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USkeletalMeshComponent*>         TireMeshes;                                        // 0x28D8(0x0010)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, UObjectWrapper, NativeAccessSpecifierPrivate)
	TArray<class USkeletalMeshComponent*>         FakeTireMeshes;                                    // 0x28E8(0x0010)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, UObjectWrapper, NativeAccessSpecifierPrivate)
	uint8                                         Pad_28F8[0x4];                                     // 0x28F8(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bIsInoperable;                                     // 0x28FC(0x0001)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_28FD[0x3];                                     // 0x28FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         RandomSeed;                                        // 0x2900(0x0004)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FRandomStream                          RandStream;                                        // 0x2904(0x0008)(ZeroConstructor, Transient, NoDestructor, NativeAccessSpecifierPrivate)
	bool                                          bHasTraction;                                      // 0x290C(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bStartHandBrakeCatchupForce;                       // 0x290D(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_290E[0x102];                                   // 0x290E(0x0102)(Fixing Size After Last Property [ Dumper-7 ])
	uint8                                         bSelfDestructEnabled : 1;                          // 0x2A10(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         bClientUsesSelfDestructTimer : 1;                  // 0x2A10(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         Pad_2A11[0x7];                                     // 0x2A11(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            TireBootMesh;                                      // 0x2A18(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<int32, struct FDagwoodActionDefForUI>    MapSelfDestructActionDefForUI;                     // 0x2A20(0x0050)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                         MinimumTimeBetweenSelfDestructPromptChanges;       // 0x2A70(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2A74[0x48];                                    // 0x2A74(0x0048)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         BoostEmissiveOnDuration;                           // 0x2ABC(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         BoostEmissiveOffDuration;                          // 0x2AC0(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2AC4[0xC];                                     // 0x2AC4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            BoostCameraFoVCurve;                               // 0x2AD0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveFloat*                            BoostCameraRumbleCurve;                            // 0x2AD8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bIsBoostCameraActive;                              // 0x2AE0(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2AE1[0x3];                                     // 0x2AE1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         BoostCameraFoVRumbleTweenDuration;                 // 0x2AE4(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         BoostCameraMaxFoV;                                 // 0x2AE8(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         BoostCameraRumbleDuration;                         // 0x2AEC(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2AF0[0x40];                                    // 0x2AF0(0x0040)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void AddRuntimeGearsInfoOnServer(const struct FRuntimeGearInfo& GearInfo);
	void ApplyFXParams();
	void ApplyRuntimeModifiers();
	void BoostCameraFoVRumble(bool bReverse, const struct FLatentActionInfo& LatentInfo);
	void BoostEmissiveTween(bool bTurnOn);
	void CacheDagwoodConfigs();
	void CleanupLoopingPooledFX();
	const struct FDagwoodRuntimeModifiers GetCurrentDagwoodRuntimeProperties();
	void HandleCurrentPlaylistLoaded(class FName PlaylistName, const struct FGameplayTagContainer& PlaylistContextTags);
	void MakeInoperable();
	void MakeOperable(bool bAddGas);
	void NativePlayCollisionHitFX(class AActor* HitActor, const struct FVector& HitLocation, const struct FVector& HitNormal, const float HitMagnitude, const struct FDagwoodCollisionHitFXConfig& HitFXConfig);
	void NativePlayCollisionHitHaptics(const TArray<class APlayerController*>& ValidPlayerControllers, const float HitMagnitude, const struct FDagwoodCollisionHitHapticsConfig& HapticsConfig);
	void OnBoostFailed();
	void OnBoostReady();
	void OnClientBeginAltInteract(class AFortPawn* Pawn);
	void OnDestroyedPropFromCollision(const class ABuildingActor* BuildingHitActor);
	void OnFlipImpactDamage();
	void OnHoldSelfDestructStarted(class AFortPawn* DriverPawn, const float ExitDuration);
	void OnHoldSelfDestructStopped(class AFortPawn* DriverPawn);
	void OnInoperableChanged(bool bInoperable);
	void OnRep_DagwoodRuntimeModifiers(const struct FDagwoodRuntimeModifiers& PrevMods);
	void OnRep_FakeTires(const TArray<ETireStates>& PrevTireStates);
	void OnRep_IsInoperable();
	void OnRep_PoppedTireReaction();
	void OnRep_RandSeed();
	void OnRep_ServerRepWheelData(const TArray<struct FAttachedWheel>& PrevWheelData);
	void OnServerAltInteract(class AFortPawn* Pawn);
	void OnStartHandbrake();
	void OnStopHandbrake();
	void OnTickAudioFade(float FadeParam);
	void SelfDestructCleanup();
	void ServerSelfDestructActivated();
	void ServerSetFadeDuration(const float NewFadeDuration);
	void SetDamageInfoOnServer(const bool bInDamageFriendlyVehicles, const bool bInDamageOtherVehicles, const bool bInDamageOwnVehicle, const bool bInDamageAllowedFromOtherVehicle);
	void SetNativeCollisionHitFxConfig(const struct FDagwoodCollisionHitFXConfig& InCollisionHitFxConfig);
	void SetNativeCollisionHitHapticsConfig(const struct FDagwoodCollisionHitHapticsConfig& InCollisionHapticsConfig);
	void SetRuntimeBoostInfoOnServer(const struct FRuntimeBoostInfo& BoostInfo);
	void SetRuntimeDriveInfoOnServer(float MaxIncline, float MaxTilt);
	void SetRuntimeFuelInfoOnServer(const struct FRuntimeFuelInfo& FuelInfo);
	void SetRuntimeGravityOnServer(float GravMult);
	void SetRuntimeSpringsInfoOnServer(const struct FRuntimeSpringsInfo& SpringsInfo);
	void SetValetAudioController(class AFortValetAudioController* ValetAudio_0);
	void SetWheelAndTireParam(EVehicleWheelAndTireNiagaraParams Flag, bool bEnable);
	void StartFade();

	bool ForwardOrReverseInputPressed() const;
	float GetBumpiness() const;
	float GetMiddleAxleForwardAdjust() const;
	float GetTireHealthPercent(EVehicleWheelLocations TireIndex) const;
	ETireSurfaces GetTireSurface(EVehicleWheelLocations TireIndex) const;
	bool IsOnLandscape() const;
	bool IsTireSkidding(const float MinSpeedForSkid, const float AngleForSkid, const float SpeedForPeelout, const float SpeedForBraking) const;
	float NativeCalculateAccelRumbleIntensity(float MaxIntensity) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortDagwoodVehicle">();
	}
	static class AFortDagwoodVehicle* GetDefaultObj()
	{
		return GetDefaultObjImpl<AFortDagwoodVehicle>();
	}
};

// Class ValetRuntime.FortDagwoodVehicleAnimInstance
// 0x0070 (0x0720 - 0x06B0)
class UFortDagwoodVehicleAnimInstance final : public UFortVehicleAnimInstance
{
public:
	class AFortDagwoodVehicle*                    Dagwood;                                           // 0x06B0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                GlassScale_FR;                                     // 0x06B8(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                GlassScale_FL;                                     // 0x06D0(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                GlassScale_BR;                                     // 0x06E8(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                GlassScale_BL;                                     // 0x0700(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_718[0x8];                                      // 0x0718(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortDagwoodVehicleAnimInstance">();
	}
	static class UFortDagwoodVehicleAnimInstance* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortDagwoodVehicleAnimInstance>();
	}
};

// Class ValetRuntime.FortDagwoodVehicleConfigs
// 0x06F8 (0x10D8 - 0x09E0)
class UFortDagwoodVehicleConfigs final : public UFortPhysicsVehicleConfigs
{
public:
	float                                         VehiclePowerSlideFrontMultiplier;                  // 0x09E0(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         VehiclePowerSlideRearMultiplier;                   // 0x09E4(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         IceVehiclePowerSlideFrontMultiplier;               // 0x09E8(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         IceVehiclePowerSlideRearMultiplier;                // 0x09EC(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MudVehiclePowerSlideFrontMultiplier;               // 0x09F0(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MudVehiclePowerSlideRearMultiplier;                // 0x09F4(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseAccelerationLean;                              // 0x09F8(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9F9[0x3];                                      // 0x09F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         HandbrakeGripAngle;                                // 0x09FC(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         HandbrakeGripAngleRecovery;                        // 0x0A00(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         HandbrakeSpeedForGripLoss;                         // 0x0A04(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MinSlipDuration;                                   // 0x0A08(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         HandbrakeLateralFriction;                          // 0x0A0C(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         HandbrakeSteeringMultiplier;                       // 0x0A10(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         HandbrakeFrictionDampFactor;                       // 0x0A14(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RestoreTractionDampFactor;                         // 0x0A18(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         HandbrakeForce;                                    // 0x0A1C(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         HandbrakeForceNoAccel;                             // 0x0A20(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseHandbrakeToDrift;                              // 0x0A24(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A25[0x3];                                      // 0x0A25(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DriftMinSpeedSteeringAngle;                        // 0x0A28(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DriftMaxSpeedSteeringAngle;                        // 0x0A2C(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DriftFrontLateralFrictionMultiplier;               // 0x0A30(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DriftRearLateralFrictionMultiplier;                // 0x0A34(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DirtRoadTopSpeedMultiplier;                        // 0x0A38(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DirtRoadFrontLateralFriction;                      // 0x0A3C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DirtRoadRearLateralFriction;                       // 0x0A40(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DirtRoadAccelForceMultiplier;                      // 0x0A44(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         OffRoadTopSpeedMultiplier;                         // 0x0A48(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         OffRoadFrontLateralFriction;                       // 0x0A4C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         OffRoadRearLateralFriction;                        // 0x0A50(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         OffRoadPushForceMultiplier;                        // 0x0A54(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         OffroadDamageImpactForceMin;                       // 0x0A58(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         OffroadDamageImpactForceMax;                       // 0x0A5C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         OffroadImpactDamageMin;                            // 0x0A60(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         OffroadImpactDamageMax;                            // 0x0A64(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MinSpeedForOffroadHandling;                        // 0x0A68(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SnowFrontLateralFriction;                          // 0x0A6C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SnowRearLateralFriction;                           // 0x0A70(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         IceFrontLateralFriction;                           // 0x0A74(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         IceRearLateralFriction;                            // 0x0A78(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MudFrontLateralFriction;                           // 0x0A7C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MudRearLateralFriction;                            // 0x0A80(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         IcePushForceMultiplier;                            // 0x0A84(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         IceBrakeForceMultiplier;                           // 0x0A88(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FireHealthPercentThreshold;                        // 0x0A8C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         OffroadRumbleIntensity;                            // 0x0A90(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DirtRoadRumbleIntensity;                           // 0x0A94(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         OffroadDamageScaleExponent;                        // 0x0A98(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         HardLandingThresholdMin;                           // 0x0A9C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         HardLandingThresholdMax;                           // 0x0AA0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         HardLandingShakeZAmplitudeMin;                     // 0x0AA4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         HardLandingShakeZAmplitudeMax;                     // 0x0AA8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SpeedLinesThreshold;                               // 0x0AAC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PropDestructionImpulse;                            // 0x0AB0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DestructionAngle;                                  // 0x0AB4(0x0004)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         UpNormalMinProtected;                              // 0x0AB8(0x0004)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         UpForwardMinProtected;                             // 0x0ABC(0x0004)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         NonCameraSteeringAngleMultiplier;                  // 0x0AC0(0x0004)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CameraAssistStrengthMax;                           // 0x0AC4(0x0004)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CameraAssistStrengthMin;                           // 0x0AC8(0x0004)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CameraAssistStrengthRecovery;                      // 0x0ACC(0x0004)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CameraAssistInterpSpeed;                           // 0x0AD0(0x0004)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DriftExitPushForce;                                // 0x0AD4(0x0004)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DriftExitCatchupSpeed;                             // 0x0AD8(0x0004)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         HandbrakeDurationRequiredForCatchup;               // 0x0ADC(0x0004)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ImpactMagnitudeToEndCatchup;                       // 0x0AE0(0x0004)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PoppedTireSpringLength;                            // 0x0AE4(0x0004)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PoppedTireSpringStiff;                             // 0x0AE8(0x0004)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PoppedTireSpringDamp;                              // 0x0AEC(0x0004)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PoppedTireScrapeFrictionMultiplier;                // 0x0AF0(0x0004)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RimScrapeFlipRollMagnitude;                        // 0x0AF4(0x0004)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RimScrapeFlipPitchMagnitude;                       // 0x0AF8(0x0004)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SpeedForRimFlip;                                   // 0x0AFC(0x0004)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         HealthPercentForFlip;                              // 0x0B00(0x0004)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FlipYawDuration;                                   // 0x0B04(0x0004)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FlipRollDuration;                                  // 0x0B08(0x0004)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FlipPitchDuration;                                 // 0x0B0C(0x0004)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FlipExplodeDuration_Yaw;                           // 0x0B10(0x0004)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FlipExplodeDuration_Pitch;                         // 0x0B14(0x0004)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FlipPushForceDuration_Yaw;                         // 0x0B18(0x0004)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FlipPushForceDuration_Pitch;                       // 0x0B1C(0x0004)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FlipPushForcMultiplier;                            // 0x0B20(0x0004)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FlipPushForce_UpComponentPitch;                    // 0x0B24(0x0004)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FlipPushForce_UpComponentRoll;                     // 0x0B28(0x0004)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MinTimeInAirRequiredForExplodeLanding;             // 0x0B2C(0x0004)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FlipYawSpringStiff;                                // 0x0B30(0x0004)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FlipYawSpringDamp;                                 // 0x0B34(0x0004)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FlipYawSpringMaxAccel;                             // 0x0B38(0x0004)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         HealthPercentForExplode;                           // 0x0B3C(0x0004)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FlipRecoveryTime;                                  // 0x0B40(0x0004)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FlipMaxDuration;                                   // 0x0B44(0x0004)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FlipWiggleDuration;                                // 0x0B48(0x0004)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PoppedTireVeerDuration;                            // 0x0B4C(0x0004)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PoppedTireVeerSteeringAngle;                       // 0x0B50(0x0004)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FlipWiggleFrequency;                               // 0x0B54(0x0004)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FlipWiggleSteeringAngle;                           // 0x0B58(0x0004)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FlipYawAngleThreshold;                             // 0x0B5C(0x0004)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AnalogDriftStickThreshold;                         // 0x0B60(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   TireBootRightSocketName;                           // 0x0B64(0x000C)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   TireBootLeftSocketName;                            // 0x0B70(0x000C)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TireBootRelativeDistance;                          // 0x0B7C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                           TireSocketNames;                                   // 0x0B80(0x0010)(Edit, BlueprintVisible, ZeroConstructor, Config, NativeAccessSpecifierPublic)
	TArray<class FName>                           TireBoneNames;                                     // 0x0B90(0x0010)(Edit, BlueprintVisible, ZeroConstructor, Config, NativeAccessSpecifierPublic)
	TArray<int32>                                 RearTireIndices;                                   // 0x0BA0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, Config, NativeAccessSpecifierPublic)
	TArray<int32>                                 RightSideTires;                                    // 0x0BB0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, Config, NativeAccessSpecifierPublic)
	TArray<int32>                                 FakeTireIndices;                                   // 0x0BC0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, Config, NativeAccessSpecifierPublic)
	bool                                          bNoWheels;                                         // 0x0BD0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_BD1[0x3];                                      // 0x0BD1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         NoWheelsSpringLenMult;                             // 0x0BD4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                           NoWheelsBonesToHide;                               // 0x0BD8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, Config, NativeAccessSpecifierPublic)
	struct FScalableFloat                         ForwardChangeDirectionBrakeForceMultiplier;        // 0x0BE8(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         ForwardChangeDirectionSpeedThreshold;              // 0x0C20(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         ReverseChangeDirectionBrakeForceMultiplier;        // 0x0C58(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         ReverseChangeDirectionSpeedThreshold;              // 0x0C90(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         UsesBoost;                                         // 0x0CC8(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         Boost_MinPushForce;                                // 0x0D00(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         Boost_TopSpeedForceMultiplier;                     // 0x0D38(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         Boost_TopSpeedMultiplier;                          // 0x0D70(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         Boost_SteeringMultiplier;                          // 0x0DA8(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         Boost_WaterMultiplier;                             // 0x0DE0(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         Boost_ForceInAir;                                  // 0x0E18(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         Boost_AirMaxSpeed;                                 // 0x0E50(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         UsesRechargeableBoost;                             // 0x0E88(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         RechargeableBoost_RateOfUse;                       // 0x0EC0(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         RechargeableBoost_RateOfRegen;                     // 0x0EF8(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         RechargeableBoost_RateOfRegenMultMin;              // 0x0F30(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         RechargeableBoost_RateOfRegenMultMax;              // 0x0F68(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         RechargeableBoost_RegenMaxMultTime;                // 0x0FA0(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         RechargeableBoost_RequiredPercentToActivate;       // 0x0FD8(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         RechargeableBoost_MinPercent;                      // 0x1010(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         RechargeableBoost_MaxPercent;                      // 0x1048(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_1080[0x10];                                    // 0x1080(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bCachedUsesBoost;                                  // 0x1090(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1091[0x47];                                    // 0x1091(0x0047)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortDagwoodVehicleConfigs">();
	}
	static class UFortDagwoodVehicleConfigs* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortDagwoodVehicleConfigs>();
	}
};

// Class ValetRuntime.FortDagwoodVehicleManager
// 0x0010 (0x00E8 - 0x00D8)
class UFortDagwoodVehicleManager final : public UGameStateComponent
{
public:
	bool                                          bHasUpdatedPropReplacement;                        // 0x00D8(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_D9[0x3];                                       // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         NumVehiclesSpawnedWithTireMod;                     // 0x00DC(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_E0[0x8];                                       // 0x00E0(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void CustomHandleActorStreamedInEditor(class AActor* SourceActor);
	void OnVehicleSpawned(class AFortAthenaVehicle* Vehicle);
	void OnVehicleSpawnsUpdated(class UFortVehicleItemDefinition* VehicleItemDef, TArray<class AActor*>* SpawnedVehicles, int32 NewVehicleCount);
	void UpdatePropReplacement();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortDagwoodVehicleManager">();
	}
	static class UFortDagwoodVehicleManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortDagwoodVehicleManager>();
	}
};

// Class ValetRuntime.FortValetAudioController
// 0x0150 (0x0570 - 0x0420)
class AFortValetAudioController final : public AActor
{
public:
	TMulticastInlineDelegate<void()>              OnEngineLoadChanged;                               // 0x0420(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnShiftGearCompleted;                              // 0x0430(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(bool bUpshift)> OnShiftGearDelegate;                               // 0x0440(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                         RPMResetTime_Native;                               // 0x0450(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         JitterAmount_Native;                               // 0x0454(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ShiftTimeThreshold_Native;                         // 0x0458(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TimeSinceShift_Native;                             // 0x045C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         EngineRPMInterp_Native;                            // 0x0460(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         EngineRPMLinear_Native;                            // 0x0464(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MinRPMRange_Native;                                // 0x0468(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxRPMRange_Native;                                // 0x046C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCurrentlyShifting_Native;                         // 0x0470(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_471[0x3];                                      // 0x0471(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CurrentAccelRateGearModifier_Native;               // 0x0474(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CurrentAccelRate_Native;                           // 0x0478(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         CurrentGear_Native;                                // 0x047C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MaxGear_Native;                                    // 0x0480(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DefaultAccelRateScalar_Native;                     // 0x0484(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         GearAttackInterpSpeed_Native;                      // 0x0488(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         GearReleaseInterpSpeed_Native;                     // 0x048C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AccelRateScalarFirstGear_Native;                   // 0x0490(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AccelRateScalarMinGear_Native;                     // 0x0494(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AccelRateScalarMaxGear_Native;                     // 0x0498(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ShiftToRPMStart_Native;                            // 0x049C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ShiftToRPMEnd_Native;                              // 0x04A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ShiftFromRPMStart_Native;                          // 0x04A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ShiftFromRPMEnd_Native;                            // 0x04A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxRPMSawtoothDecrement_Native;                    // 0x04AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxRPMSawtoothRepeatTime_Native;                   // 0x04B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DownhillAccelScalar_Native;                        // 0x04B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         UphillAccelScalar_Native;                          // 0x04B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4BC[0x4];                                      // 0x04BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            RPMFloatCurveMapping;                              // 0x04C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         NormalizedSpeed_Native;                            // 0x04C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SuspValue_Native;                                  // 0x04CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsHandbraking_Native;                             // 0x04D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4D1[0x3];                                      // 0x04D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MotoSynthVolume_Native;                            // 0x04D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MotoSynthInitialFadeInTime_Native;                 // 0x04D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4DC[0x4];                                      // 0x04DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MotoSynthLogRPM_Native;                            // 0x04E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHasFuel_Native;                                   // 0x04E4(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsInWater_Native;                                 // 0x04E5(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bLocalPlayerInVehicle_Native;                      // 0x04E6(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4E7[0x1];                                      // 0x04E7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TimeLocalPlayerEnteredVehicle_Native;              // 0x04E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAttemptingDirectionChange_Native;                 // 0x04EC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPreDestroy_Native;                                // 0x04ED(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEngineLoad_Native;                                // 0x04EE(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4EF[0x1];                                      // 0x04EF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         SkidAmount_Native;                                 // 0x04F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TimeSinceAwoken_Native;                            // 0x04F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDestroyed_Native;                                 // 0x04F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4F9[0x3];                                      // 0x04F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TimeSinceSurfaceChange_Native;                     // 0x04FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                             OnInitialSuspensionSound;                          // 0x0500(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AngleForSkidding_Native;                           // 0x0508(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SpringCompressionMultiplier;                       // 0x050C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MotoSynthMaxVolume_Native;                         // 0x0510(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_514[0x4];                                      // 0x0514(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              MotoSynthTimeInVehicleTimeRange;                   // 0x0518(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              MotoSynthTimeInVehicleVolumeRange;                 // 0x0528(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AFortDagwoodVehicle>     ValetVehicle;                                      // 0x0538(0x0008)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortLayeredAudioComponent*             Engine_Native;                                     // 0x0540(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAudioComponent*                        BoostAudioComponent_Native;                        // 0x0548(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USynthComponentMoto*                    SynthComponentMoto_Native;                         // 0x0550(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortCollisionAudioComponent*           SuspensionCollisionComponent_Native;               // 0x0558(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_560[0x10];                                     // 0x0560(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void CacheValetVehicle(class AFortDagwoodVehicle* InVehicle);
	void OnSuspensionCollision_Native(bool* OutResult, float* OutMagnitude);
	void OnTireModApplied(const struct FTireInfo& AppliedTireMod);
	void Update_Native();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortValetAudioController">();
	}
	static class AFortValetAudioController* GetDefaultObj()
	{
		return GetDefaultObjImpl<AFortValetAudioController>();
	}
};

// Class ValetRuntime.FortValetGameFeatureData
// 0x0088 (0x0710 - 0x0688)
class UFortValetGameFeatureData final : public UFortGameFeatureData
{
public:
	TMap<TSoftClassPtr<class UClass>, struct FVehiclePropReplacementData> PropReplacements;                                  // 0x0688(0x0050)(Edit, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UClass>                   VehicleSpawnerClass;                               // 0x06D8(0x0030)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESpawnActorCollisionHandlingMethod            SpawnActorCollisionHandlingMethod;                 // 0x0708(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_709[0x7];                                      // 0x0709(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortValetGameFeatureData">();
	}
	static class UFortValetGameFeatureData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortValetGameFeatureData>();
	}
};

}

