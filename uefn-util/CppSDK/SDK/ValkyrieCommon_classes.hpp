#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ValkyrieCommon

#include "Basic.hpp"

#include "ReplicationGraph_classes.hpp"
#include "Engine_classes.hpp"
#include "ValkyrieCommon_structs.hpp"
#include "CoreUObject_classes.hpp"
#include "OnlineSubsystemUtils_classes.hpp"
#include "FortniteGame_structs.hpp"


namespace SDK
{

// Class ValkyrieCommon.ValkyrieContentWorkerDebugManager
// 0x0008 (0x0428 - 0x0420)
class AValkyrieContentWorkerDebugManager final : public AActor
{
public:
	bool                                          bCrashContentWorker;                               // 0x0420(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEmitErrorFromContentWorker;                       // 0x0421(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_422[0x6];                                      // 0x0422(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ValkyrieContentWorkerDebugManager">();
	}
	static class AValkyrieContentWorkerDebugManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<AValkyrieContentWorkerDebugManager>();
	}
};

// Class ValkyrieCommon.ValkyrieBeaconClient
// 0x0510 (0x09C8 - 0x04B8)
class AValkyrieBeaconClient final : public AOnlineBeaconClient
{
public:
	uint8                                         Pad_4B8[0x228];                                    // 0x04B8(0x0228)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UObject*>                        VerseGeneratedObjectsList;                         // 0x06E0(0x0010)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TArray<class FString>                         SupportedTransactionsPrefixList;                   // 0x06F0(0x0010)(ZeroConstructor, Config, NativeAccessSpecifierPrivate)
	int32                                         MaxTransactionQueueBytes;                          // 0x0700(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_704[0x74];                                     // 0x0704(0x0074)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FValkyriePlayerInfo>            PlayerList;                                        // 0x0778(0x0010)(Net, ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	bool                                          bAllowVerseHotReload;                              // 0x0788(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bUploadedContentHasVersePackages;                  // 0x0789(0x0001)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_78A[0x23E];                                    // 0x078A(0x023E)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void AddPrewarmCompatibilityVersion(const class FString& ClientVersion);
	void ClientDisallowedLiveEditTransactionEncountered(bool bSuppressLiveEdit);
	void ClientHandleCookFailure(const class FString& CookJobId);
	void ClientHandleError(const class FText& ErrorMessage);
	void ClientHandleTransactionFinalizedEvent(const struct FConcertTransactionFinalizedEvent& Event);
	void ClientHandleVerseDiagnostics(const struct FVerseUploadDiagnostics& Diagnostics, const bool bOpenMessageLog);
	void ClientLogSummaryMessage(const class FString& LogMessage);
	void ClientNotifyOfServerScriptDiagnosticMessage(const struct FScriptDiagnosticMessage& Message);
	void ClientNotifyOfServerShutdown();
	void ClientNotifyOfServerUnrecoverableErrorMessage(const struct FOnUnrecoverableErrorMessage& Message);
	void ClientNotifyOfServerVerseRuntimeErrorMessage(const class FText& ErrorMessage);
	void ClientProcessDebugMessage(const struct FSolarisDebugMessage& Message);
	void ClientUpdateContentUpdateState(const EContentUpdateState NewContentUpdateState);
	void ClientVerseUploadComplete(const class FString& InSnapshotId, const EVerseUploadState Result, const struct FVerseUploadDiagnostics& Diagnostics);
	void HandleVkCheatConsoleCommand(const TArray<class FString>& Args);
	void ServerContentUpdated(const class FString& ProjectId, const class FString& Snapshot, const TArray<struct FVkModuleVersion>& Modules_Legacy);
	void ServerOnContentBeaconHostError(const struct FContentBeaconError& ContentBeaconError);
	void ServerProcessDebugMessage(const struct FSolarisDebugMessage& Message);
	void ServerRefreshMemoryTracker();
	void ServerRespawnAllPlayers();
	void ServerSendGameFlowMessage(const class FString& Message, const EVkEditStatus VkEditStatus);
	void ServerSetExperimentalContentFilter(bool bFilter);
	void ServerSetPersistenceBehaviorOverride(EMinigameDevelopmentPersistenceBehavior InPersistenceBehaviorOverride);
	void ServerSetPublishingMemoryLimit(int32 PublishingMemoryLimit);
	void ServerSetUseLiveEditProxyActors(bool bEnabled);
	void ServerStartGame();
	void ServerStartMemorySampling(const struct FOnlineLinkId& LinkCode);
	void ServerStopGame();
	void ServerSubmitConnectedClientLogs(const struct FGuid& ParentReportId);
	void ServerTeleportPlayer(uint32 i, const struct FVector& Location, const struct FRotator& Rotation);
	void ServerVkCheatMessage(const struct FVerseGameplayStringDebugMessage& Message);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ValkyrieBeaconClient">();
	}
	static class AValkyrieBeaconClient* GetDefaultObj()
	{
		return GetDefaultObjImpl<AValkyrieBeaconClient>();
	}
};

// Class ValkyrieCommon.ValkyrieBeaconPackageMap
// 0x0000 (0x00E8 - 0x00E8)
class UValkyrieBeaconPackageMap final : public UPackageMap
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ValkyrieBeaconPackageMap">();
	}
	static class UValkyrieBeaconPackageMap* GetDefaultObj()
	{
		return GetDefaultObjImpl<UValkyrieBeaconPackageMap>();
	}
};

// Class ValkyrieCommon.ValkyrieBeaconActorChannel
// 0x00D8 (0x0380 - 0x02A8)
class UValkyrieBeaconActorChannel final : public UActorChannel
{
public:
	uint8                                         Pad_2A8[0xD8];                                     // 0x02A8(0x00D8)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ValkyrieBeaconActorChannel">();
	}
	static class UValkyrieBeaconActorChannel* GetDefaultObj()
	{
		return GetDefaultObjImpl<UValkyrieBeaconActorChannel>();
	}
};

// Class ValkyrieCommon.ValkyrieLiveEditNetDriver
// 0x0000 (0x08A8 - 0x08A8)
class UValkyrieLiveEditNetDriver final : public UNetDriver
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ValkyrieLiveEditNetDriver">();
	}
	static class UValkyrieLiveEditNetDriver* GetDefaultObj()
	{
		return GetDefaultObjImpl<UValkyrieLiveEditNetDriver>();
	}
};

// Class ValkyrieCommon.ValkyrieBeaconNetConnection
// 0x0078 (0x1E20 - 0x1DA8)
class UValkyrieBeaconNetConnection final : public UNetConnection
{
public:
	uint8                                         Pad_1DA8[0x78];                                    // 0x1DA8(0x0078)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ValkyrieBeaconNetConnection">();
	}
	static class UValkyrieBeaconNetConnection* GetDefaultObj()
	{
		return GetDefaultObjImpl<UValkyrieBeaconNetConnection>();
	}
};

// Class ValkyrieCommon.ValkyrieBeaconHost
// 0x0008 (0x0450 - 0x0448)
class AValkyrieBeaconHost final : public AOnlineBeaconHostObject
{
public:
	uint8                                         Pad_448[0x8];                                      // 0x0448(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ValkyrieBeaconHost">();
	}
	static class AValkyrieBeaconHost* GetDefaultObj()
	{
		return GetDefaultObjImpl<AValkyrieBeaconHost>();
	}
};

// Class ValkyrieCommon.ValkyrieBeaconReplicationGraphConnection
// 0x0000 (0x0380 - 0x0380)
class UValkyrieBeaconReplicationGraphConnection final : public UNetReplicationGraphConnection
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ValkyrieBeaconReplicationGraphConnection">();
	}
	static class UValkyrieBeaconReplicationGraphConnection* GetDefaultObj()
	{
		return GetDefaultObjImpl<UValkyrieBeaconReplicationGraphConnection>();
	}
};

// Class ValkyrieCommon.ValkyrieBeaconReplicationGraph
// 0x0000 (0x05A0 - 0x05A0)
class UValkyrieBeaconReplicationGraph final : public UReplicationGraph
{
public:
	class UValkyrieBeaconPackageMap*              DummyPackageMap;                                   // 0x0598(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ValkyrieBeaconReplicationGraph">();
	}
	static class UValkyrieBeaconReplicationGraph* GetDefaultObj()
	{
		return GetDefaultObjImpl<UValkyrieBeaconReplicationGraph>();
	}
};

}

