#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BlastBerryRuntime

#include "Basic.hpp"

#include "BlastBerryRuntime_classes.hpp"
#include "BlastBerryRuntime_parameters.hpp"


namespace SDK
{

// Function BlastBerryRuntime.FortControllerComponent_BlastBerry.CleanupPossessedPawn
// (Final, Native, Protected)

void UFortControllerComponent_BlastBerry::CleanupPossessedPawn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortControllerComponent_BlastBerry", "CleanupPossessedPawn");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BlastBerryRuntime.FortControllerComponent_BlastBerry.ClientHandlePreRespawn
// (Net, NetReliable, Native, Event, Protected, HasDefaults, NetClient)
// Parameters:
// struct FVector                          RespawnLocation                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         RespawnRotation                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// float                                   RespawnCameraDist                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortControllerComponent_BlastBerry::ClientHandlePreRespawn(const struct FVector& RespawnLocation, const struct FRotator& RespawnRotation, float RespawnCameraDist)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortControllerComponent_BlastBerry", "ClientHandlePreRespawn");

	Params::FortControllerComponent_BlastBerry_ClientHandlePreRespawn Parms{};

	Parms.RespawnLocation = std::move(RespawnLocation);
	Parms.RespawnRotation = std::move(RespawnRotation);
	Parms.RespawnCameraDist = RespawnCameraDist;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlastBerryRuntime.FortControllerComponent_BlastBerry.ClientNotifyEnemyTeamEliminated
// (Net, NetReliable, Native, Event, Protected, NetClient)

void UFortControllerComponent_BlastBerry::ClientNotifyEnemyTeamEliminated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortControllerComponent_BlastBerry", "ClientNotifyEnemyTeamEliminated");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BlastBerryRuntime.FortControllerComponent_BlastBerry.ClientNotifyNoRebootsRemaining
// (Net, NetReliable, Native, Event, Protected, NetClient)

void UFortControllerComponent_BlastBerry::ClientNotifyNoRebootsRemaining()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortControllerComponent_BlastBerry", "ClientNotifyNoRebootsRemaining");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BlastBerryRuntime.FortControllerComponent_BlastBerry.ClientNotifyRespawnReward
// (Net, NetReliable, Native, Event, Protected, NetClient)
// Parameters:
// EBlastBerryRespawnRewardType            RewardType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   RewardTime                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortControllerComponent_BlastBerry::ClientNotifyRespawnReward(EBlastBerryRespawnRewardType RewardType, float RewardTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortControllerComponent_BlastBerry", "ClientNotifyRespawnReward");

	Params::FortControllerComponent_BlastBerry_ClientNotifyRespawnReward Parms{};

	Parms.RewardType = RewardType;
	Parms.RewardTime = RewardTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlastBerryRuntime.FortControllerComponent_BlastBerry.ClientNotifyTeammateRespawned
// (Net, NetReliable, Native, Event, Protected, NetClient)
// Parameters:
// class AFortPlayerStateAthena*           PlayerState                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortControllerComponent_BlastBerry::ClientNotifyTeammateRespawned(class AFortPlayerStateAthena* PlayerState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortControllerComponent_BlastBerry", "ClientNotifyTeammateRespawned");

	Params::FortControllerComponent_BlastBerry_ClientNotifyTeammateRespawned Parms{};

	Parms.PlayerState = PlayerState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlastBerryRuntime.FortControllerComponent_BlastBerry.ClientNotifyTeammateRevived
// (Net, NetReliable, Native, Event, Protected, NetClient)
// Parameters:
// class AFortPlayerStateAthena*           PlayerState                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortControllerComponent_BlastBerry::ClientNotifyTeammateRevived(class AFortPlayerStateAthena* PlayerState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortControllerComponent_BlastBerry", "ClientNotifyTeammateRevived");

	Params::FortControllerComponent_BlastBerry_ClientNotifyTeammateRevived Parms{};

	Parms.PlayerState = PlayerState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlastBerryRuntime.FortControllerComponent_BlastBerry.ClientNotifyWaitingForRespawn
// (Net, NetReliable, Native, Event, Protected, HasDefaults, NetClient)
// Parameters:
// struct FVector                          DeathLocation                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortControllerComponent_BlastBerry::ClientNotifyWaitingForRespawn(const struct FVector& DeathLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortControllerComponent_BlastBerry", "ClientNotifyWaitingForRespawn");

	Params::FortControllerComponent_BlastBerry_ClientNotifyWaitingForRespawn Parms{};

	Parms.DeathLocation = std::move(DeathLocation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlastBerryRuntime.FortControllerComponent_BlastBerry.HandleBotPawnRespawned
// (Final, Native, Protected)
// Parameters:
// class AAIController*                    BotController                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortPawn*                        BotPawn                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortControllerComponent_BlastBerry::HandleBotPawnRespawned(class AAIController* BotController, class AFortPawn* BotPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortControllerComponent_BlastBerry", "HandleBotPawnRespawned");

	Params::FortControllerComponent_BlastBerry_HandleBotPawnRespawned Parms{};

	Parms.BotController = BotController;
	Parms.BotPawn = BotPawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlastBerryRuntime.FortControllerComponent_BlastBerry.HandleDBNOChanged
// (Final, Native, Protected)
// Parameters:
// class AFortPawn*                        Pawn                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsDBNO                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortControllerComponent_BlastBerry::HandleDBNOChanged(class AFortPawn* Pawn, bool bIsDBNO)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortControllerComponent_BlastBerry", "HandleDBNOChanged");

	Params::FortControllerComponent_BlastBerry_HandleDBNOChanged Parms{};

	Parms.Pawn = Pawn;
	Parms.bIsDBNO = bIsDBNO;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlastBerryRuntime.FortControllerComponent_BlastBerry.HandlePlayerRespawnTimeUpdated
// (Final, Native, Protected)
// Parameters:
// class AFortPlayerStateAthena*           PlayerState                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ServerTimeForRespawn                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortControllerComponent_BlastBerry::HandlePlayerRespawnTimeUpdated(class AFortPlayerStateAthena* PlayerState, float ServerTimeForRespawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortControllerComponent_BlastBerry", "HandlePlayerRespawnTimeUpdated");

	Params::FortControllerComponent_BlastBerry_HandlePlayerRespawnTimeUpdated Parms{};

	Parms.PlayerState = PlayerState;
	Parms.ServerTimeForRespawn = ServerTimeForRespawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlastBerryRuntime.FortControllerComponent_BlastBerry.HandleViewTargetChanged
// (Final, Native, Protected)
// Parameters:
// class AFortPlayerController*            InController                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OldViewTarget                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           NewViewTarget                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortControllerComponent_BlastBerry::HandleViewTargetChanged(class AFortPlayerController* InController, class AActor* OldViewTarget, class AActor* NewViewTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortControllerComponent_BlastBerry", "HandleViewTargetChanged");

	Params::FortControllerComponent_BlastBerry_HandleViewTargetChanged Parms{};

	Parms.InController = InController;
	Parms.OldViewTarget = OldViewTarget;
	Parms.NewViewTarget = NewViewTarget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlastBerryRuntime.FortControllerComponent_BlastBerry.LocalHandlePreRespawn
// (Native, Event, Protected, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                          RespawnLocation                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         RespawnRotation                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// float                                   RespawnCameraDist                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortControllerComponent_BlastBerry::LocalHandlePreRespawn(const struct FVector& RespawnLocation, const struct FRotator& RespawnRotation, float RespawnCameraDist)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortControllerComponent_BlastBerry", "LocalHandlePreRespawn");

	Params::FortControllerComponent_BlastBerry_LocalHandlePreRespawn Parms{};

	Parms.RespawnLocation = std::move(RespawnLocation);
	Parms.RespawnRotation = std::move(RespawnRotation);
	Parms.RespawnCameraDist = RespawnCameraDist;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlastBerryRuntime.FortControllerComponent_BlastBerry.OnRep_LastTeamMemberAlive
// (Final, Native, Protected)

void UFortControllerComponent_BlastBerry::OnRep_LastTeamMemberAlive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortControllerComponent_BlastBerry", "OnRep_LastTeamMemberAlive");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BlastBerryRuntime.FortControllerComponent_BlastBerry.ServerRequestDeathFromDBNO
// (RequiredAPI, Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void UFortControllerComponent_BlastBerry::ServerRequestDeathFromDBNO()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortControllerComponent_BlastBerry", "ServerRequestDeathFromDBNO");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BlastBerryRuntime.FortControllerComponent_BlastBerry.GetLastTeamMemberAlive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortControllerComponent_BlastBerry::GetLastTeamMemberAlive() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortControllerComponent_BlastBerry", "GetLastTeamMemberAlive");

	Params::FortControllerComponent_BlastBerry_GetLastTeamMemberAlive Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlastBerryRuntime.FortCheatManager_BlastBerry.BlastBerryForceRespawn
// (Final, Exec, Native, Public)

void UFortCheatManager_BlastBerry::BlastBerryForceRespawn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager_BlastBerry", "BlastBerryForceRespawn");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BlastBerryRuntime.FortCheatManager_BlastBerry.BlastBerrySetTeamLives
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   TeamLives                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager_BlastBerry::BlastBerrySetTeamLives(int32 TeamLives)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager_BlastBerry", "BlastBerrySetTeamLives");

	Params::FortCheatManager_BlastBerry_BlastBerrySetTeamLives Parms{};

	Parms.TeamLives = TeamLives;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlastBerryRuntime.FortGameStateComponent_BlastBerryManager.HandleBotPawnRespawned
// (Final, Native, Protected)
// Parameters:
// class AAIController*                    BotController                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortPawn*                        BotPawn                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortGameStateComponent_BlastBerryManager::HandleBotPawnRespawned(class AAIController* BotController, class AFortPawn* BotPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameStateComponent_BlastBerryManager", "HandleBotPawnRespawned");

	Params::FortGameStateComponent_BlastBerryManager_HandleBotPawnRespawned Parms{};

	Parms.BotController = BotController;
	Parms.BotPawn = BotPawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlastBerryRuntime.FortGameStateComponent_BlastBerryManager.HandlePlayerRespawnTimeUpdated
// (Final, Native, Protected)
// Parameters:
// class AFortPlayerStateAthena*           PlayerState                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ServerTimeForRespawn                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortGameStateComponent_BlastBerryManager::HandlePlayerRespawnTimeUpdated(class AFortPlayerStateAthena* PlayerState, float ServerTimeForRespawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameStateComponent_BlastBerryManager", "HandlePlayerRespawnTimeUpdated");

	Params::FortGameStateComponent_BlastBerryManager_HandlePlayerRespawnTimeUpdated Parms{};

	Parms.PlayerState = PlayerState;
	Parms.ServerTimeForRespawn = ServerTimeForRespawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlastBerryRuntime.FortGameStateComponent_BlastBerryManager.HandleTeamLifeRecharged
// (Final, Native, Protected)
// Parameters:
// uint8                                   TeamId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortGameStateComponent_BlastBerryManager::HandleTeamLifeRecharged(uint8 TeamId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameStateComponent_BlastBerryManager", "HandleTeamLifeRecharged");

	Params::FortGameStateComponent_BlastBerryManager_HandleTeamLifeRecharged Parms{};

	Parms.TeamId = TeamId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlastBerryRuntime.FortGameStateComponent_BlastBerryManager.HandleWaveRespawnTimerFinished
// (Final, Native, Protected)

void UFortGameStateComponent_BlastBerryManager::HandleWaveRespawnTimerFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameStateComponent_BlastBerryManager", "HandleWaveRespawnTimerFinished");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BlastBerryRuntime.FortGameStateComponent_BlastBerryManager.OnGamePhaseStepChanged
// (Final, Native, Protected, HasOutParams)
// Parameters:
// struct FFortGamePhaseStepUpdatedEvent   Event                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UFortGameStateComponent_BlastBerryManager::OnGamePhaseStepChanged(const struct FFortGamePhaseStepUpdatedEvent& Event)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameStateComponent_BlastBerryManager", "OnGamePhaseStepChanged");

	Params::FortGameStateComponent_BlastBerryManager_OnGamePhaseStepChanged Parms{};

	Parms.Event = std::move(Event);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlastBerryRuntime.FortGameStateComponent_BlastBerryManager.OnRep_ServerTimeForRespawnsDisabled
// (Final, Native, Protected)

void UFortGameStateComponent_BlastBerryManager::OnRep_ServerTimeForRespawnsDisabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameStateComponent_BlastBerryManager", "OnRep_ServerTimeForRespawnsDisabled");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BlastBerryRuntime.FortGameStateComponent_BlastBerryManager.OnRep_TeamLives
// (Final, Native, Protected)

void UFortGameStateComponent_BlastBerryManager::OnRep_TeamLives()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameStateComponent_BlastBerryManager", "OnRep_TeamLives");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BlastBerryRuntime.FortGameStateComponent_BlastBerryManager.OnSafeZoneUpdated
// (Final, Native, Protected, HasOutParams)
// Parameters:
// struct FFortSafeZonePhaseUpdatedEvent   Event                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UFortGameStateComponent_BlastBerryManager::OnSafeZoneUpdated(const struct FFortSafeZonePhaseUpdatedEvent& Event)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameStateComponent_BlastBerryManager", "OnSafeZoneUpdated");

	Params::FortGameStateComponent_BlastBerryManager_OnSafeZoneUpdated Parms{};

	Parms.Event = std::move(Event);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlastBerryRuntime.FortGameStateComponent_BlastBerryManager.UpdateTeamInfo
// (Final, Native, Protected)
// Parameters:
// uint8                                   TeamId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSendNotifications                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortGameStateComponent_BlastBerryManager::UpdateTeamInfo(uint8 TeamId, bool bSendNotifications)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameStateComponent_BlastBerryManager", "UpdateTeamInfo");

	Params::FortGameStateComponent_BlastBerryManager_UpdateTeamInfo Parms{};

	Parms.TeamId = TeamId;
	Parms.bSendNotifications = bSendNotifications;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlastBerryRuntime.FortGameStateComponent_BlastBerryManager.ValidateRespawningViewTarget
// (Final, Native, Protected)
// Parameters:
// TWeakObjectPtr<class AFortPlayerStateAthena>WeakPS                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortGameStateComponent_BlastBerryManager::ValidateRespawningViewTarget(TWeakObjectPtr<class AFortPlayerStateAthena> WeakPS)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameStateComponent_BlastBerryManager", "ValidateRespawningViewTarget");

	Params::FortGameStateComponent_BlastBerryManager_ValidateRespawningViewTarget Parms{};

	Parms.WeakPS = WeakPS;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlastBerryRuntime.FortGameStateComponent_BlastBerryManager.AreRespawnsActive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortGameStateComponent_BlastBerryManager::AreRespawnsActive() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameStateComponent_BlastBerryManager", "AreRespawnsActive");

	Params::FortGameStateComponent_BlastBerryManager_AreRespawnsActive Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlastBerryRuntime.FortGameStateComponent_BlastBerryManager.GetRespawnDelay
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AFortPlayerStateAthena*           PS                                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFortGameStateComponent_BlastBerryManager::GetRespawnDelay(class AFortPlayerStateAthena* PS) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameStateComponent_BlastBerryManager", "GetRespawnDelay");

	Params::FortGameStateComponent_BlastBerryManager_GetRespawnDelay Parms{};

	Parms.PS = PS;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlastBerryRuntime.FortGameStateComponent_BlastBerryManager.GetTeamLivesRemaining
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// uint8                                   TeamId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortGameStateComponent_BlastBerryManager::GetTeamLivesRemaining(uint8 TeamId) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameStateComponent_BlastBerryManager", "GetTeamLivesRemaining");

	Params::FortGameStateComponent_BlastBerryManager_GetTeamLivesRemaining Parms{};

	Parms.TeamId = TeamId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlastBerryRuntime.FortGameStateComponent_BlastBerryManager.GetTimeUntilRespawnDisabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFortGameStateComponent_BlastBerryManager::GetTimeUntilRespawnDisabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameStateComponent_BlastBerryManager", "GetTimeUntilRespawnDisabled");

	Params::FortGameStateComponent_BlastBerryManager_GetTimeUntilRespawnDisabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlastBerryRuntime.FortGameStateComponent_BlastBerryManager.GetTimeUntilTeamLivesRecharge
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// uint8                                   TeamId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFortGameStateComponent_BlastBerryManager::GetTimeUntilTeamLivesRecharge(uint8 TeamId) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameStateComponent_BlastBerryManager", "GetTimeUntilTeamLivesRecharge");

	Params::FortGameStateComponent_BlastBerryManager_GetTimeUntilTeamLivesRecharge Parms{};

	Parms.TeamId = TeamId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlastBerryRuntime.FortGameStateComponent_BlastBerryManager.IsWaveRespawnEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortGameStateComponent_BlastBerryManager::IsWaveRespawnEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameStateComponent_BlastBerryManager", "IsWaveRespawnEnabled");

	Params::FortGameStateComponent_BlastBerryManager_IsWaveRespawnEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

