#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TextureAtlasBuilder

#include "Basic.hpp"

#include "TextureAtlasBuilder_classes.hpp"
#include "TextureAtlasBuilder_parameters.hpp"


namespace SDK
{

// Function TextureAtlasBuilder.TextureAtlasBuilderFunctionLibrary.CopyTextureSettings
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// class UTexture2D*                       SourceTexture                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTexture2D*                       TargetTexture                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTextureAtlasBuilderFunctionLibrary::CopyTextureSettings(class UTexture2D* SourceTexture, class UTexture2D* TargetTexture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TextureAtlasBuilderFunctionLibrary", "CopyTextureSettings");

	Params::TextureAtlasBuilderFunctionLibrary_CopyTextureSettings Parms{};

	Parms.SourceTexture = SourceTexture;
	Parms.TargetTexture = TargetTexture;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TextureAtlasBuilder.TextureAtlasBuilderFunctionLibrary.InvertAlphaChannel
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// class UTexture2D*                       Texture                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTextureAtlasBuilderFunctionLibrary::InvertAlphaChannel(class UTexture2D* Texture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TextureAtlasBuilderFunctionLibrary", "InvertAlphaChannel");

	Params::TextureAtlasBuilderFunctionLibrary_InvertAlphaChannel Parms{};

	Parms.Texture = Texture;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TextureAtlasBuilder.TextureAtlasBuilderFunctionLibrary.TextureAtlasBuilderCreateStaticTextureEditorOnly
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// class UTextureRenderTarget2D*           InRenderTarget                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           InName                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTexture2D*                       TextureSettingsSource                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInvertAlphaChannel                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTexture2D*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTexture2D* UTextureAtlasBuilderFunctionLibrary::TextureAtlasBuilderCreateStaticTextureEditorOnly(class UTextureRenderTarget2D* InRenderTarget, const class FString& InName, class UTexture2D* TextureSettingsSource, bool bInvertAlphaChannel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TextureAtlasBuilderFunctionLibrary", "TextureAtlasBuilderCreateStaticTextureEditorOnly");

	Params::TextureAtlasBuilderFunctionLibrary_TextureAtlasBuilderCreateStaticTextureEditorOnly Parms{};

	Parms.InRenderTarget = InRenderTarget;
	Parms.InName = std::move(InName);
	Parms.TextureSettingsSource = TextureSettingsSource;
	Parms.bInvertAlphaChannel = bInvertAlphaChannel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

