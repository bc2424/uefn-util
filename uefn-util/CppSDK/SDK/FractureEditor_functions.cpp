#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FractureEditor

#include "Basic.hpp"

#include "FractureEditor_classes.hpp"
#include "FractureEditor_parameters.hpp"


namespace SDK
{

// Function FractureEditor.FractureProximityActions.SaveAsDefaults
// (Final, Native, Public)

void UFractureProximityActions::SaveAsDefaults()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FractureProximityActions", "SaveAsDefaults");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FractureEditor.FractureProximityActions.SetFromDefaults
// (Final, Native, Public)

void UFractureProximityActions::SetFromDefaults()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FractureProximityActions", "SetFromDefaults");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FractureEditor.FractureConvexSettings.ClearCustomConvex
// (Final, Native, Public)

void UFractureConvexSettings::ClearCustomConvex()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FractureConvexSettings", "ClearCustomConvex");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FractureEditor.FractureConvexSettings.DeleteFromSelected
// (Final, Native, Public)

void UFractureConvexSettings::DeleteFromSelected()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FractureConvexSettings", "DeleteFromSelected");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FractureEditor.FractureConvexActions.SaveAsDefaults
// (Final, Native, Public)

void UFractureConvexActions::SaveAsDefaults()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FractureConvexActions", "SaveAsDefaults");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FractureEditor.FractureConvexActions.SetFromDefaults
// (Final, Native, Public)

void UFractureConvexActions::SetFromDefaults()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FractureConvexActions", "SetFromDefaults");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FractureEditor.FractureCustomVoronoiSettings.ClearFrozenSites
// (Final, Native, Public)

void UFractureCustomVoronoiSettings::ClearFrozenSites()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FractureCustomVoronoiSettings", "ClearFrozenSites");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FractureEditor.FractureCustomVoronoiSettings.FreezeLiveSites
// (Final, Native, Public)

void UFractureCustomVoronoiSettings::FreezeLiveSites()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FractureCustomVoronoiSettings", "FreezeLiveSites");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FractureEditor.FractureCustomVoronoiSettings.RegenerateLiveSites
// (Final, Native, Public)

void UFractureCustomVoronoiSettings::RegenerateLiveSites()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FractureCustomVoronoiSettings", "RegenerateLiveSites");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FractureEditor.FractureCustomVoronoiSettings.UnfreezeSites
// (Final, Native, Public)

void UFractureCustomVoronoiSettings::UnfreezeSites()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FractureCustomVoronoiSettings", "UnfreezeSites");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FractureEditor.FractureCutterSettings.GetMaterialNamesFunc
// (Final, Native, Public)
// Parameters:
// const TArray<class FString>             ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const TArray<class FString> UFractureCutterSettings::GetMaterialNamesFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FractureCutterSettings", "GetMaterialNamesFunc");

	Params::FractureCutterSettings_GetMaterialNamesFunc Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FractureEditor.FractureMaterialsSettings.AddMaterialSlot
// (Final, Native, Public)

void UFractureMaterialsSettings::AddMaterialSlot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FractureMaterialsSettings", "AddMaterialSlot");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FractureEditor.FractureMaterialsSettings.GetMaterialNamesFunc
// (Final, Native, Public)
// Parameters:
// const TArray<class FString>             ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const TArray<class FString> UFractureMaterialsSettings::GetMaterialNamesFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FractureMaterialsSettings", "GetMaterialNamesFunc");

	Params::FractureMaterialsSettings_GetMaterialNamesFunc Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FractureEditor.FractureMaterialsSettings.RemoveMaterialSlot
// (Final, Native, Public)

void UFractureMaterialsSettings::RemoveMaterialSlot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FractureMaterialsSettings", "RemoveMaterialSlot");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FractureEditor.FractureMaterialsSettings.UseAssetMaterialsOnComponents
// (Final, Native, Public)

void UFractureMaterialsSettings::UseAssetMaterialsOnComponents()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FractureMaterialsSettings", "UseAssetMaterialsOnComponents");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FractureEditor.FractureRemoveOnBreakSettings.DeleteRemoveOnBreakData
// (Final, Native, Public)

void UFractureRemoveOnBreakSettings::DeleteRemoveOnBreakData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FractureRemoveOnBreakSettings", "DeleteRemoveOnBreakData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FractureEditor.FractureAutoUVSettings.AddUVChannel
// (Final, Native, Public)

void UFractureAutoUVSettings::AddUVChannel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FractureAutoUVSettings", "AddUVChannel");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FractureEditor.FractureAutoUVSettings.BakeTexture
// (Final, Native, Public)

void UFractureAutoUVSettings::BakeTexture()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FractureAutoUVSettings", "BakeTexture");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FractureEditor.FractureAutoUVSettings.BoxProjectUVs
// (Final, Native, Public)

void UFractureAutoUVSettings::BoxProjectUVs()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FractureAutoUVSettings", "BoxProjectUVs");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FractureEditor.FractureAutoUVSettings.DeleteUVChannel
// (Final, Native, Public)

void UFractureAutoUVSettings::DeleteUVChannel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FractureAutoUVSettings", "DeleteUVChannel");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FractureEditor.FractureAutoUVSettings.DisableBoneColors
// (Final, Native, Public)

void UFractureAutoUVSettings::DisableBoneColors()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FractureAutoUVSettings", "DisableBoneColors");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FractureEditor.FractureAutoUVSettings.GetUVChannelNamesFunc
// (Final, Native, Public)
// Parameters:
// const TArray<class FString>             ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const TArray<class FString> UFractureAutoUVSettings::GetUVChannelNamesFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FractureAutoUVSettings", "GetUVChannelNamesFunc");

	Params::FractureAutoUVSettings_GetUVChannelNamesFunc Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FractureEditor.FractureAutoUVSettings.LayoutUVs
// (Final, Native, Public)

void UFractureAutoUVSettings::LayoutUVs()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FractureAutoUVSettings", "LayoutUVs");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}

}

