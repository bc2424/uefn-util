#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FortniteGameDebuggersRuntime

#include "Basic.hpp"

#include "FortniteGameDebuggersRuntime_classes.hpp"
#include "FortniteGameDebuggersRuntime_parameters.hpp"


namespace SDK
{

// Function FortniteGameDebuggersRuntime.BehaviorInjectionDebugMenu.ServerClose
// (Final, Net, NetReliable, Native, Event, Private, NetServer)

void ABehaviorInjectionDebugMenu::ServerClose()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BehaviorInjectionDebugMenu", "ServerClose");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGameDebuggersRuntime.CheatManager_FortniteGameDebuggers.EnableBehaviorInjectionDebug
// (Final, BlueprintAuthorityOnly, Exec, Native, Public)

void UCheatManager_FortniteGameDebuggers::EnableBehaviorInjectionDebug()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CheatManager_FortniteGameDebuggers", "EnableBehaviorInjectionDebug");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGameDebuggersRuntime.CheatManager_FortniteGameDebuggers.EnableConversationDebugger
// (Final, BlueprintAuthorityOnly, Exec, Native, Public)

void UCheatManager_FortniteGameDebuggers::EnableConversationDebugger()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CheatManager_FortniteGameDebuggers", "EnableConversationDebugger");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGameDebuggersRuntime.CheatManager_FortniteGameDebuggers.EnableQuestDebugger
// (Final, BlueprintAuthorityOnly, Exec, Native, Public)

void UCheatManager_FortniteGameDebuggers::EnableQuestDebugger()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CheatManager_FortniteGameDebuggers", "EnableQuestDebugger");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGameDebuggersRuntime.CheatManager_FortniteGameDebuggers.EnableVerbProcessorDebugger
// (Final, BlueprintAuthorityOnly, Exec, Native, Public)

void UCheatManager_FortniteGameDebuggers::EnableVerbProcessorDebugger()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CheatManager_FortniteGameDebuggers", "EnableVerbProcessorDebugger");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGameDebuggersRuntime.CheatManager_FortniteGameDebuggers.EnableWorldProgressionDebugger
// (Final, BlueprintAuthorityOnly, Exec, Native, Public)

void UCheatManager_FortniteGameDebuggers::EnableWorldProgressionDebugger()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CheatManager_FortniteGameDebuggers", "EnableWorldProgressionDebugger");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGameDebuggersRuntime.ConversationDebuggerMenu.OnRep_ServerServiceProviderSnapshot
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FConversationProviderStateSnapshotOldSnapshot                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void AConversationDebuggerMenu::OnRep_ServerServiceProviderSnapshot(const struct FConversationProviderStateSnapshot& OldSnapshot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ConversationDebuggerMenu", "OnRep_ServerServiceProviderSnapshot");

	Params::ConversationDebuggerMenu_OnRep_ServerServiceProviderSnapshot Parms{};

	Parms.OldSnapshot = std::move(OldSnapshot);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGameDebuggersRuntime.ConversationDebuggerMenu.ServerClose
// (Final, Net, NetReliable, Native, Event, Private, NetServer)

void AConversationDebuggerMenu::ServerClose()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ConversationDebuggerMenu", "ServerClose");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGameDebuggersRuntime.ConversationDebuggerMenu.ServerSetSelectedConversationProvider
// (Final, Net, NetReliable, Native, Event, Private, NetServer)
// Parameters:
// class AActor*                           InSelectedConversationProvider                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AConversationDebuggerMenu::ServerSetSelectedConversationProvider(const class AActor* InSelectedConversationProvider)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ConversationDebuggerMenu", "ServerSetSelectedConversationProvider");

	Params::ConversationDebuggerMenu_ServerSetSelectedConversationProvider Parms{};

	Parms.InSelectedConversationProvider = InSelectedConversationProvider;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGameDebuggersRuntime.QuestDebuggerMenu.ServerClose
// (Final, Net, NetReliable, Native, Event, Private, NetServer)

void AQuestDebuggerMenu::ServerClose()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestDebuggerMenu", "ServerClose");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGameDebuggersRuntime.QuestDebuggerMenu.ServerGrantPlayspaceQuest
// (Final, Net, NetReliable, Native, Event, Private, NetServer)
// Parameters:
// class UFortQuestItemDefinition*         QuestDef                                               (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQuestDebuggerMenu::ServerGrantPlayspaceQuest(const class UFortQuestItemDefinition* QuestDef)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestDebuggerMenu", "ServerGrantPlayspaceQuest");

	Params::QuestDebuggerMenu_ServerGrantPlayspaceQuest Parms{};

	Parms.QuestDef = QuestDef;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGameDebuggersRuntime.QuestDebuggerMenu.ServerSetSelectedManagerScope
// (Final, Net, NetReliable, Native, Event, Private, NetServer)
// Parameters:
// EQuestParticipationScope                InSelectedScope                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQuestDebuggerMenu::ServerSetSelectedManagerScope(const EQuestParticipationScope InSelectedScope)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestDebuggerMenu", "ServerSetSelectedManagerScope");

	Params::QuestDebuggerMenu_ServerSetSelectedManagerScope Parms{};

	Parms.InSelectedScope = InSelectedScope;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGameDebuggersRuntime.QuestDebuggerMenu.ServerSetSelectedPlayspace
// (Final, Net, NetReliable, Native, Event, Private, NetServer)
// Parameters:
// class APlayspace*                       Playspace                                              (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQuestDebuggerMenu::ServerSetSelectedPlayspace(const class APlayspace* Playspace)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestDebuggerMenu", "ServerSetSelectedPlayspace");

	Params::QuestDebuggerMenu_ServerSetSelectedPlayspace Parms{};

	Parms.Playspace = Playspace;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGameDebuggersRuntime.QuestDebuggerMenu.ServerSetSelectedQuest
// (Final, Net, NetReliable, Native, Event, Private, NetServer)
// Parameters:
// struct FQuestSnapshot                   InSelectedQuestSnapshot                                (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)

void AQuestDebuggerMenu::ServerSetSelectedQuest(const struct FQuestSnapshot& InSelectedQuestSnapshot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestDebuggerMenu", "ServerSetSelectedQuest");

	Params::QuestDebuggerMenu_ServerSetSelectedQuest Parms{};

	Parms.InSelectedQuestSnapshot = std::move(InSelectedQuestSnapshot);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGameDebuggersRuntime.VerbProcessorDebuggerMenu.ServerClose
// (Final, Net, NetReliable, Native, Event, Private, NetServer)

void AVerbProcessorDebuggerMenu::ServerClose()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VerbProcessorDebuggerMenu", "ServerClose");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGameDebuggersRuntime.VerbProcessorDebuggerMenu.ServerSendVerbMessage
// (Final, Net, NetReliable, Native, Event, Private, NetServer)
// Parameters:
// class APlayerController*                LocalController                                        (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UClass*                           ProcessorType                                          (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AVerbProcessorDebuggerMenu::ServerSendVerbMessage(const class APlayerController* LocalController, const class UClass* ProcessorType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VerbProcessorDebuggerMenu", "ServerSendVerbMessage");

	Params::VerbProcessorDebuggerMenu_ServerSendVerbMessage Parms{};

	Parms.LocalController = LocalController;
	Parms.ProcessorType = ProcessorType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGameDebuggersRuntime.WorldProgressionDebuggerMenu.ServerClose
// (Final, Net, NetReliable, Native, Event, Private, NetServer)

void AWorldProgressionDebuggerMenu::ServerClose()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WorldProgressionDebuggerMenu", "ServerClose");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}

}

