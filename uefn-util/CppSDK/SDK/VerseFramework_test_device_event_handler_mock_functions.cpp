#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: VerseFramework_test_device_event_handler_mock

#include "Basic.hpp"

#include "VerseFramework_test_device_event_handler_mock_classes.hpp"
#include "VerseFramework_test_device_event_handler_mock_parameters.hpp"


namespace SDK
{

// Function VerseFramework_test_device_event_handler_mock.task_test_device_event_handler_mock$Await.Update
// (Public, HasOutParams)
// Parameters:
// int64                                   RetVal                                                 (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

int64 Utask_test_device_event_handler_mock_Await::Update()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("task_test_device_event_handler_mock$Await", "Update");

	Params::task_test_device_event_handler_mock_Await_Update Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function VerseFramework_test_device_event_handler_mock.test_device_event_handler_mock.$Block
// ()

void Utest_device_event_handler_mock::_Block()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("test_device_event_handler_mock", "$Block");

	UObject::ProcessEvent(Func, nullptr);
}


// Function VerseFramework_test_device_event_handler_mock.test_device_event_handler_mock.$InitCDO
// (HasDefaults)

void Utest_device_event_handler_mock::_InitCDO()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("test_device_event_handler_mock", "$InitCDO");

	UObject::ProcessEvent(Func, nullptr);
}


// Function VerseFramework_test_device_event_handler_mock.test_device_event_handler_mock.$InitInstance
// ()

void Utest_device_event_handler_mock::_InitInstance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("test_device_event_handler_mock", "$InitInstance");

	UObject::ProcessEvent(Func, nullptr);
}


// Function VerseFramework_test_device_event_handler_mock.test_device_event_handler_mock._L_2fFortnite_2ecom_2fVerseInternalTesting_2fVerseFramework_2ftest__device__event__handler__mock_N_RCancel
// (Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct VerseFramework_test_device_event_handler_mock::Ftuple_L_R__verse_0xB2CDDD72_Argument                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void Utest_device_event_handler_mock::_L_2fFortnite_2ecom_2fVerseInternalTesting_2fVerseFramework_2ftest__device__event__handler__mock_N_RCancel(const struct VerseFramework_test_device_event_handler_mock::Ftuple_L_R& __verse_0xB2CDDD72_Argument)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("test_device_event_handler_mock", "_L_2fFortnite_2ecom_2fVerseInternalTesting_2fVerseFramework_2ftest__device__event__handler__mock_N_RCancel");

	Params::test_device_event_handler_mock__L_2fFortnite_2ecom_2fVerseInternalTesting_2fVerseFramework_2ftest__device__event__handler__mock_N_RCancel Parms{};

	Parms.__verse_0xB2CDDD72_Argument = std::move(__verse_0xB2CDDD72_Argument);

	UObject::ProcessEvent(Func, &Parms);
}


// Function VerseFramework_test_device_event_handler_mock.test_device_event_handler_mock._L_2fFortnite_2ecom_2fVerseInternalTesting_2fVerseFramework_2ftest__device__event__handler__mock_N_RGetCallCount
// (Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct VerseFramework_test_device_event_handler_mock::Ftuple_L_R__verse_0xB2CDDD72_Argument                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int64                                   RetVal                                                 (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

int64 Utest_device_event_handler_mock::_L_2fFortnite_2ecom_2fVerseInternalTesting_2fVerseFramework_2ftest__device__event__handler__mock_N_RGetCallCount(const struct VerseFramework_test_device_event_handler_mock::Ftuple_L_R& __verse_0xB2CDDD72_Argument)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("test_device_event_handler_mock", "_L_2fFortnite_2ecom_2fVerseInternalTesting_2fVerseFramework_2ftest__device__event__handler__mock_N_RGetCallCount");

	Params::test_device_event_handler_mock__L_2fFortnite_2ecom_2fVerseInternalTesting_2fVerseFramework_2ftest__device__event__handler__mock_N_RGetCallCount Parms{};

	Parms.__verse_0xB2CDDD72_Argument = std::move(__verse_0xB2CDDD72_Argument);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function VerseFramework_test_device_event_handler_mock.test_device_event_handler_mock._L_2fFortnite_2ecom_2fVerseInternalTesting_2fVerseFramework_2ftest__device__event__handler__mock_N_RReportCall
// (Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct VerseFramework_test_device_event_handler_mock::Ftuple_L_R__verse_0xB2CDDD72_Argument                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void Utest_device_event_handler_mock::_L_2fFortnite_2ecom_2fVerseInternalTesting_2fVerseFramework_2ftest__device__event__handler__mock_N_RReportCall(const struct VerseFramework_test_device_event_handler_mock::Ftuple_L_R& __verse_0xB2CDDD72_Argument)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("test_device_event_handler_mock", "_L_2fFortnite_2ecom_2fVerseInternalTesting_2fVerseFramework_2ftest__device__event__handler__mock_N_RReportCall");

	Params::test_device_event_handler_mock__L_2fFortnite_2ecom_2fVerseInternalTesting_2fVerseFramework_2ftest__device__event__handler__mock_N_RReportCall Parms{};

	Parms.__verse_0xB2CDDD72_Argument = std::move(__verse_0xB2CDDD72_Argument);

	UObject::ProcessEvent(Func, &Parms);
}


// Function VerseFramework_test_device_event_handler_mock.test_device_event_handler_mock._L_2fFortnite_2ecom_2fVerseInternalTesting_2fVerseFramework_2ftest__device__event__handler__mock_N_RResetCallCount
// (Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct VerseFramework_test_device_event_handler_mock::Ftuple_L_R__verse_0xB2CDDD72_Argument                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void Utest_device_event_handler_mock::_L_2fFortnite_2ecom_2fVerseInternalTesting_2fVerseFramework_2ftest__device__event__handler__mock_N_RResetCallCount(const struct VerseFramework_test_device_event_handler_mock::Ftuple_L_R& __verse_0xB2CDDD72_Argument)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("test_device_event_handler_mock", "_L_2fFortnite_2ecom_2fVerseInternalTesting_2fVerseFramework_2ftest__device__event__handler__mock_N_RResetCallCount");

	Params::test_device_event_handler_mock__L_2fFortnite_2ecom_2fVerseInternalTesting_2fVerseFramework_2ftest__device__event__handler__mock_N_RResetCallCount Parms{};

	Parms.__verse_0xB2CDDD72_Argument = std::move(__verse_0xB2CDDD72_Argument);

	UObject::ProcessEvent(Func, &Parms);
}


// Function VerseFramework_test_device_event_handler_mock.test_device_event_handler_mock.Await
// (Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UConcurrency_task*                __verse_0xC1E81372_CallingTask                         (ExportObject, Parm, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash)
// int64                                   __verse_0xA3A00DDB_CallerResumeState                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int64                                   __verse_0x2AC0E4D8_CallerCancelState                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct VerseFramework_test_device_event_handler_mock::Ftuple_L_R__verse_0xB2CDDD72_Argument                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UConcurrency_task*                RetVal                                                 (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash)

class UConcurrency_task* Utest_device_event_handler_mock::Await(class UConcurrency_task* __verse_0xC1E81372_CallingTask, int64 __verse_0xA3A00DDB_CallerResumeState, int64 __verse_0x2AC0E4D8_CallerCancelState, const struct VerseFramework_test_device_event_handler_mock::Ftuple_L_R& __verse_0xB2CDDD72_Argument)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("test_device_event_handler_mock", "Await");

	Params::test_device_event_handler_mock_Await Parms{};

	Parms.__verse_0xC1E81372_CallingTask = __verse_0xC1E81372_CallingTask;
	Parms.__verse_0xA3A00DDB_CallerResumeState = __verse_0xA3A00DDB_CallerResumeState;
	Parms.__verse_0x2AC0E4D8_CallerCancelState = __verse_0x2AC0E4D8_CallerCancelState;
	Parms.__verse_0xB2CDDD72_Argument = std::move(__verse_0xB2CDDD72_Argument);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

