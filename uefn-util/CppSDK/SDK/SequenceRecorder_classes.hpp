#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SequenceRecorder

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "CoreUObject_classes.hpp"
#include "SequenceRecorder_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// Class SequenceRecorder.SequenceRecordingBase
// 0x0000 (0x0030 - 0x0030)
class USequenceRecordingBase : public UObject
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SequenceRecordingBase">();
	}
	static class USequenceRecordingBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<USequenceRecordingBase>();
	}
};

// Class SequenceRecorder.ActorRecording
// 0x0148 (0x0178 - 0x0030)
class UActorRecording final : public USequenceRecordingBase
{
public:
	struct FActorRecordingSettings                ActorSettings;                                     // 0x0030(0x0018)(Edit, NativeAccessSpecifierPublic)
	bool                                          bActive;                                           // 0x0048(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCreateLevelSequence;                              // 0x0049(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelSequence*                         TargetLevelSequence;                               // 0x0050(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   TargetName;                                        // 0x0058(0x0010)(Edit, NativeAccessSpecifierPublic)
	uint32                                        TakeNumber;                                        // 0x0068(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSpecifyTargetAnimation;                           // 0x006C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          TargetAnimation;                                   // 0x0070(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAnimationRecordingSettings            AnimationSettings;                                 // 0x0078(0x0040)(Edit, NativeAccessSpecifierPublic)
	bool                                          bRecordToPossessable;                              // 0x00B8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class AActor>                  ActorToRecord;                                     // 0x00C0(0x0030)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_F0[0x88];                                      // 0x00F0(0x0088)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ActorRecording">();
	}
	static class UActorRecording* GetDefaultObj()
	{
		return GetDefaultObjImpl<UActorRecording>();
	}
};

// Class SequenceRecorder.AnimationRecordingParameters
// 0x0018 (0x0048 - 0x0030)
class UAnimationRecordingParameters final : public UObject
{
public:
	struct FFrameRate                             SampleFrameRate;                                   // 0x0030(0x0008)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEndAfterDuration;                                 // 0x0038(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MaximumDurationSeconds;                            // 0x003C(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SampleRate;                                        // 0x0040(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AnimationRecordingParameters">();
	}
	static class UAnimationRecordingParameters* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimationRecordingParameters>();
	}
};

// Class SequenceRecorder.MovieScene3DTransformSectionRecorderSettings
// 0x0008 (0x0038 - 0x0030)
class UMovieScene3DTransformSectionRecorderSettings final : public UObject
{
public:
	bool                                          bRecordTransforms;                                 // 0x0030(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MovieScene3DTransformSectionRecorderSettings">();
	}
	static class UMovieScene3DTransformSectionRecorderSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMovieScene3DTransformSectionRecorderSettings>();
	}
};

// Class SequenceRecorder.SequenceRecorderActorGroup
// 0x0058 (0x0088 - 0x0030)
class USequenceRecorderActorGroup final : public UObject
{
public:
	class FName                                   GroupName;                                         // 0x0030(0x000C)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 SequenceName;                                      // 0x0040(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDirectoryPath                         SequenceRecordingBasePath;                         // 0x0050(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSpecifyTargetLevelSequence;                       // 0x0060(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelSequence*                         TargetLevelSequence;                               // 0x0068(0x0008)(Edit, ZeroConstructor, NoDestructor, AdvancedDisplay, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDuplicateTargetLevelSequence;                     // 0x0070(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bRecordTargetLevelSequenceLength;                  // 0x0071(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_72[0x6];                                       // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UActorRecording*>                RecordedActors;                                    // 0x0078(0x0010)(Edit, ZeroConstructor, EditConst, UObjectWrapper, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SequenceRecorderActorGroup">();
	}
	static class USequenceRecorderActorGroup* GetDefaultObj()
	{
		return GetDefaultObjImpl<USequenceRecorderActorGroup>();
	}
};

// Class SequenceRecorder.SequenceRecorderGroup
// 0x0010 (0x0430 - 0x0420)
class ASequenceRecorderGroup final : public AActor
{
public:
	TArray<class USequenceRecorderActorGroup*>    ActorGroups;                                       // 0x0420(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SequenceRecorderGroup">();
	}
	static class ASequenceRecorderGroup* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASequenceRecorderGroup>();
	}
};

// Class SequenceRecorder.SequenceRecorderBlueprintLibrary
// 0x0000 (0x0030 - 0x0030)
class USequenceRecorderBlueprintLibrary final : public UBlueprintFunctionLibrary
{
public:
	static bool IsRecordingSequence();
	static void StartRecordingSequence(const TArray<class AActor*>& ActorsToRecord);
	static void StopRecordingSequence();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SequenceRecorderBlueprintLibrary">();
	}
	static class USequenceRecorderBlueprintLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<USequenceRecorderBlueprintLibrary>();
	}
};

// Class SequenceRecorder.SequenceRecorderSettings
// 0x0100 (0x0130 - 0x0030)
class USequenceRecorderSettings final : public UObject
{
public:
	bool                                          bCreateLevelSequence;                              // 0x0030(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bImmersiveMode;                                    // 0x0031(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_32[0x2];                                       // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         SequenceLength;                                    // 0x0034(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RecordingDelay;                                    // 0x0038(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAllowLooping;                                     // 0x003C(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         GlobalTimeDilation;                                // 0x0040(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIgnoreTimeDilation;                               // 0x0044(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 AnimationSubDirectory;                             // 0x0048(0x0010)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAudioRecordingMode                           RecordAudio;                                       // 0x0058(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         AudioGain;                                         // 0x005C(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSplitAudioChannelsIntoSeparateTracks;             // 0x0060(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bReplaceRecordedAudio;                             // 0x0061(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_62[0x6];                                       // 0x0062(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   AudioTrackName;                                    // 0x0068(0x0010)(Edit, Config, NativeAccessSpecifierPublic)
	class FString                                 AudioSubDirectory;                                 // 0x0078(0x0010)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bRecordNearbySpawnedActors;                        // 0x0088(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         NearbyActorRecordingProximity;                     // 0x008C(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bRecordWorldSettingsActor;                         // 0x0090(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bReduceKeys;                                       // 0x0091(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAutoSaveAsset;                                    // 0x0092(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_93[0x5];                                       // 0x0093(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSequenceRecorderActorFilter           ActorFilter;                                       // 0x0098(0x0010)(Edit, Config, NativeAccessSpecifierPublic)
	TArray<TLazyObjectPtr<class ALevelSequenceActor>> LevelSequenceActorsToTrigger;                      // 0x00A8(0x0010)(Edit, ZeroConstructor, Transient, UObjectWrapper, NativeAccessSpecifierPublic)
	struct FAnimationRecordingSettings            DefaultAnimationSettings;                          // 0x00B8(0x0040)(Edit, Config, NativeAccessSpecifierPublic)
	bool                                          bRecordSequencerSpawnedActors;                     // 0x00F8(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FPropertiesToRecordForClass>    ClassesAndPropertiesToRecord;                      // 0x0100(0x0010)(Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic)
	TArray<struct FPropertiesToRecordForActorClass> ActorsAndPropertiesToRecord;                       // 0x0110(0x0010)(Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic)
	TArray<struct FSettingsForActorClass>         PerActorSettings;                                  // 0x0120(0x0010)(Edit, ZeroConstructor, Config, AdvancedDisplay, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SequenceRecorderSettings">();
	}
	static class USequenceRecorderSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<USequenceRecorderSettings>();
	}
};

}

