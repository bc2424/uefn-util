#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: StateDrivenActorRuntime

#include "Basic.hpp"

#include "StateDrivenActorRuntime_structs.hpp"
#include "CoreUObject_classes.hpp"
#include "ModularGameplay_classes.hpp"
#include "StateTreeModule_structs.hpp"
#include "StateTreeModule_classes.hpp"
#include "FortniteGame_structs.hpp"
#include "FortniteGame_classes.hpp"
#include "GameplayTags_structs.hpp"
#include "AIModule_classes.hpp"


namespace SDK
{

// Class StateDrivenActorRuntime.ControllerComponent_StateDrivenReplication
// 0x0010 (0x00E8 - 0x00D8)
class UControllerComponent_StateDrivenReplication final : public UControllerComponent
{
public:
	TArray<struct FLatestObjectRecordedStateTreeTransitionResult> LatestRecordedStateTreeTransitionResults;          // 0x00D8(0x0010)(Net, ZeroConstructor, RepNotify, ContainsInstancedReference, NativeAccessSpecifierPrivate)

public:
	void OnRep_LatestRecordedStateTreeTransitionResult();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ControllerComponent_StateDrivenReplication">();
	}
	static class UControllerComponent_StateDrivenReplication* GetDefaultObj()
	{
		return GetDefaultObjImpl<UControllerComponent_StateDrivenReplication>();
	}
};

// Class StateDrivenActorRuntime.FortActorComponent_StateDriven
// 0x0230 (0x0320 - 0x00F0)
class UFortActorComponent_StateDriven final : public UFortActorComponent_FortInteractExtension
{
public:
	uint8                                         Pad_F0[0x58];                                      // 0x00F0(0x0058)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFortItemEntry                         SlottedItemEntry;                                  // 0x0148(0x01B8)(Net, Transient, NativeAccessSpecifierPrivate)
	TArray<struct FGameplayTagQuery>              VariableTagQueries;                                // 0x0300(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<float>                                 VariableFloats;                                    // 0x0310(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPrivate)

public:
	void HandleBeginOverlap(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void HandleDamaged(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, class AActor* DamageCauser, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, class FName BoneName, const struct FVector& Momentum);
	void HandleDied(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, class AActor* DamageCauser, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, class FName BoneName, const struct FVector& Momentum);
	void HandleEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void HandleInteraction(class ABuildingActor* SelfActor, class AFortPawn* InteractingPawn);
	void PopSlottedItem(const struct FVector& SlottedItemPopOffset);

	class FText GetSlottedItemDisplayName() const;
	const struct FFortItemEntry GetSlottedItemEntry() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortActorComponent_StateDriven">();
	}
	static class UFortActorComponent_StateDriven* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortActorComponent_StateDriven>();
	}
};

// Class StateDrivenActorRuntime.ObjectInstancedStateTreeComponent
// 0x00C0 (0x01F0 - 0x0130)
class UObjectInstancedStateTreeComponent : public UBrainComponent
{
public:
	uint8                                         Pad_130[0x10];                                     // 0x0130(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(EStateTreeRunStatus StateTreeRunStatus)> OnStateTreeRunStatusChanged;                       // 0x0140(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FStateTreeReference                    StateTreeRef;                                      // 0x0150(0x0028)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FStateTreeReferenceOverrides           LinkedStateTreeOverrides;                          // 0x0178(0x0010)(Edit, Protected, NativeAccessSpecifierProtected)
	bool                                          bStartLogicAutomatically;                          // 0x0188(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_189[0x63];                                     // 0x0189(0x0063)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInstancedStateTreeId                  InstancedStateTreeId;                              // 0x01EC(0x0004)(Net, Transient, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)

public:
	void OnRep_InstancedStateTreeId();
	void SendStateTreeEvent(class AActor* Instigator, const struct FStateTreeEvent& Event);
	void SetStartLogicAutomatically(const bool bInStartLogicAutomatically);

	class AActor* GetContextualInstigatingActor() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ObjectInstancedStateTreeComponent">();
	}
	static class UObjectInstancedStateTreeComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UObjectInstancedStateTreeComponent>();
	}
};

// Class StateDrivenActorRuntime.FortPlayerInstancedStateTreeComponent
// 0x0000 (0x01F0 - 0x01F0)
class UFortPlayerInstancedStateTreeComponent final : public UObjectInstancedStateTreeComponent
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortPlayerInstancedStateTreeComponent">();
	}
	static class UFortPlayerInstancedStateTreeComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortPlayerInstancedStateTreeComponent>();
	}
};

// Class StateDrivenActorRuntime.StateDrivenEventQuestObjectiveActiveHelper
// 0x0038 (0x0068 - 0x0030)
class UStateDrivenEventQuestObjectiveActiveHelper final : public UObject
{
public:
	uint8                                         Pad_30[0x38];                                      // 0x0030(0x0038)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"StateDrivenEventQuestObjectiveActiveHelper">();
	}
	static class UStateDrivenEventQuestObjectiveActiveHelper* GetDefaultObj()
	{
		return GetDefaultObjImpl<UStateDrivenEventQuestObjectiveActiveHelper>();
	}
};

// Class StateDrivenActorRuntime.StateDrivenEventQuestObjectiveCompletedHelper
// 0x0038 (0x0068 - 0x0030)
class UStateDrivenEventQuestObjectiveCompletedHelper final : public UObject
{
public:
	uint8                                         Pad_30[0x38];                                      // 0x0030(0x0038)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void HandleQuestObjectiveCompleted(class UFortQuestObjectiveInfo* ObjectiveInfo);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"StateDrivenEventQuestObjectiveCompletedHelper">();
	}
	static class UStateDrivenEventQuestObjectiveCompletedHelper* GetDefaultObj()
	{
		return GetDefaultObjImpl<UStateDrivenEventQuestObjectiveCompletedHelper>();
	}
};

// Class StateDrivenActorRuntime.StateDrivenEventTimerHelper
// 0x0010 (0x0040 - 0x0030)
class UStateDrivenEventTimerHelper final : public UObject
{
public:
	uint8                                         Pad_30[0x10];                                      // 0x0030(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"StateDrivenEventTimerHelper">();
	}
	static class UStateDrivenEventTimerHelper* GetDefaultObj()
	{
		return GetDefaultObjImpl<UStateDrivenEventTimerHelper>();
	}
};

// Class StateDrivenActorRuntime.StateDrivenEventVerbHelper
// 0x0030 (0x0060 - 0x0030)
class UStateDrivenEventVerbHelper final : public UObject
{
public:
	uint8                                         Pad_30[0x30];                                      // 0x0030(0x0030)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"StateDrivenEventVerbHelper">();
	}
	static class UStateDrivenEventVerbHelper* GetDefaultObj()
	{
		return GetDefaultObjImpl<UStateDrivenEventVerbHelper>();
	}
};

// Class StateDrivenActorRuntime.WorldInstancedStateTreeComponent
// 0x0090 (0x01C0 - 0x0130)
class UWorldInstancedStateTreeComponent final : public UBrainComponent
{
public:
	uint8                                         Pad_130[0x10];                                     // 0x0130(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(EStateTreeRunStatus StateTreeRunStatus)> OnStateTreeRunStatusChanged;                       // 0x0140(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FStateTreeReference                    StateTreeRef;                                      // 0x0150(0x0028)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FStateTreeReferenceOverrides           LinkedStateTreeOverrides;                          // 0x0178(0x0010)(Edit, Protected, NativeAccessSpecifierProtected)
	bool                                          bStartLogicAutomatically;                          // 0x0188(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_189[0xF];                                      // 0x0189(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStateTreeInstanceData                 InstanceData;                                      // 0x0198(0x0020)(Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_1B8[0x8];                                      // 0x01B8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void MulticastSendStateTreeEvent(class AActor* Instigator, const TArray<struct FRecordedStateTreeTransitionResult>& RecordedTransitions);
	void SendStateTreeEvent(class AActor* Instigator, const struct FStateTreeEvent& Event);
	void SetStartLogicAutomatically(const bool bInStartLogicAutomatically);

	EStateTreeRunStatus GetStateTreeRunStatus() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"WorldInstancedStateTreeComponent">();
	}
	static class UWorldInstancedStateTreeComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWorldInstancedStateTreeComponent>();
	}
};

// Class StateDrivenActorRuntime.ObjectInstancedStateTreeSchema
// 0x0020 (0x0050 - 0x0030)
class UObjectInstancedStateTreeSchema final : public UStateTreeSchema
{
public:
	TSubclassOf<class AActor>                     ContextActorClass;                                 // 0x0030(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class AActor>                     InstigatorActorClass;                              // 0x0038(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FStateTreeExternalDataDesc>     ContextDataDescs;                                  // 0x0040(0x0010)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ObjectInstancedStateTreeSchema">();
	}
	static class UObjectInstancedStateTreeSchema* GetDefaultObj()
	{
		return GetDefaultObjImpl<UObjectInstancedStateTreeSchema>();
	}
};

}

