#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FallTeleportationRuntime

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "FortniteGame_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// Class FallTeleportationRuntime.FortFallTeleportSpawnerComponent
// 0x00F8 (0x01D0 - 0x00D8)
class UFortFallTeleportSpawnerComponent final : public UActorComponent
{
public:
	TSoftClassPtr<class UClass>                   PlayerPawnReceiverClass;                           // 0x00D8(0x0030)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UFortFallTeleportComponentBase> ComponentToAddClass;                               // 0x0108(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FScalableFloat                         TeleportEnabled;                                   // 0x0110(0x0038)(Edit, BlueprintVisible, BlueprintReadOnly, Config, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         RemoveComponentRequestTimeOffset;                  // 0x0148(0x0038)(Edit, Config, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_180[0x50];                                     // 0x0180(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void HandleGamePhaseChanged(const struct FFortGamePhaseUpdatedEvent& Event);
	void HandleWarmupCountdownEndTimeUpdated(float NewEndTime);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortFallTeleportSpawnerComponent">();
	}
	static class UFortFallTeleportSpawnerComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortFallTeleportSpawnerComponent>();
	}
};

// Class FallTeleportationRuntime.FortFallTeleportCheatManager
// 0x0000 (0x0030 - 0x0030)
class UFortFallTeleportCheatManager final : public UChildCheatManager
{
public:
	void EnableFallTeleportationIndefinitely();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortFallTeleportCheatManager">();
	}
	static class UFortFallTeleportCheatManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortFallTeleportCheatManager>();
	}
};

// Class FallTeleportationRuntime.FortFallTeleportComponentBase
// 0x0198 (0x0270 - 0x00D8)
class UFortFallTeleportComponentBase final : public UActorComponent
{
public:
	struct FScalableFloat                         TeleportEnabled;                                   // 0x00D8(0x0038)(Edit, BlueprintVisible, BlueprintReadOnly, Config, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         ContinuousTeleportUpdateEnabled;                   // 0x0110(0x0038)(Edit, Config, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         ForceTeleportZHeight;                              // 0x0148(0x0038)(Edit, Config, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         SphereTraceRadius;                                 // 0x0180(0x0038)(Edit, Config, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	float                                         WalkingLocationUpdateRate;                         // 0x01B8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         ZHeightThresholdCheckRate;                         // 0x01BC(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         TeleportZModifier;                                 // 0x01C0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         DistanceFromPawnToTraceLocation;                   // 0x01C4(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<TSubclassOf<class AActor>>             TeleportOnBlocklist;                               // 0x01C8(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	class FName                                   NoTeleportActorTag;                                // 0x01D8(0x000C)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_1E4[0x4];                                      // 0x01E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                SafeManualLocation;                                // 0x01E8(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UGameplayEffect>            TeleportGEClass;                                   // 0x0200(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                TeleportLocation;                                  // 0x0208(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                FallbackLocation;                                  // 0x0220(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bValidFallbackLocation;                            // 0x0238(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bTeleporting;                                      // 0x0239(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_23A[0x2];                                      // 0x023A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         TeleportLimitBeforeFail;                           // 0x023C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         TeleportCount;                                     // 0x0240(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_244[0x4];                                      // 0x0244(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawnAthena*                  OwningPawn;                                        // 0x0248(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_250[0x20];                                     // 0x0250(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void UpdateLastGroundLocation(class ACharacter* Character, EMovementMode PrevMovementMode, uint8 PreviousCustomMode);

	bool IsTeleportLocationValid(const struct FVector& LocationToTest) const;
	bool IsValidActorToTeleportOn(class AActor* ActorToTeleportOn) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortFallTeleportComponentBase">();
	}
	static class UFortFallTeleportComponentBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortFallTeleportComponentBase>();
	}
};

}

