#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: EpicHardSurfaceQCRuntime

#include "Basic.hpp"

#include "EpicHardSurfaceQCRuntime_classes.hpp"
#include "EpicHardSurfaceQCRuntime_parameters.hpp"


namespace SDK
{

// Function EpicHardSurfaceQCRuntime.EpicHardSurfaceQCRuntimeFunctions.SaveIndexToJson
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           WeaponName                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           WeaponIconSmall                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>                   WeaponSkeletalMeshes                                   (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<class FString>                   WeaponAnimSequencesEquip                               (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<class FString>                   WeaponAnimSequencesReload                              (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<class FString>                   WeaponAnimSequencesFire                                (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<class FString>                   WeaponAnimSequencesFireDownSights                      (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// class FString                           CharacterName                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           CharacterIconSmall                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>                   CharacterSkeletalMeshes                                (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<class FString>                   CharacterAnimSequencesEquip                            (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<class FString>                   CharacterAnimSequencesReload                           (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<class FString>                   CharacterAnimSequencesFire                             (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<class FString>                   CharacterAnimSequencesFireDownSights                   (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// class FString                           Path                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEpicHardSurfaceQCRuntimeFunctions::SaveIndexToJson(const class FString& WeaponName, const class FString& WeaponIconSmall, const TArray<class FString>& WeaponSkeletalMeshes, const TArray<class FString>& WeaponAnimSequencesEquip, const TArray<class FString>& WeaponAnimSequencesReload, const TArray<class FString>& WeaponAnimSequencesFire, const TArray<class FString>& WeaponAnimSequencesFireDownSights, const class FString& CharacterName, const class FString& CharacterIconSmall, const TArray<class FString>& CharacterSkeletalMeshes, const TArray<class FString>& CharacterAnimSequencesEquip, const TArray<class FString>& CharacterAnimSequencesReload, const TArray<class FString>& CharacterAnimSequencesFire, const TArray<class FString>& CharacterAnimSequencesFireDownSights, const class FString& Path)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EpicHardSurfaceQCRuntimeFunctions", "SaveIndexToJson");

	Params::EpicHardSurfaceQCRuntimeFunctions_SaveIndexToJson Parms{};

	Parms.WeaponName = std::move(WeaponName);
	Parms.WeaponIconSmall = std::move(WeaponIconSmall);
	Parms.WeaponSkeletalMeshes = std::move(WeaponSkeletalMeshes);
	Parms.WeaponAnimSequencesEquip = std::move(WeaponAnimSequencesEquip);
	Parms.WeaponAnimSequencesReload = std::move(WeaponAnimSequencesReload);
	Parms.WeaponAnimSequencesFire = std::move(WeaponAnimSequencesFire);
	Parms.WeaponAnimSequencesFireDownSights = std::move(WeaponAnimSequencesFireDownSights);
	Parms.CharacterName = std::move(CharacterName);
	Parms.CharacterIconSmall = std::move(CharacterIconSmall);
	Parms.CharacterSkeletalMeshes = std::move(CharacterSkeletalMeshes);
	Parms.CharacterAnimSequencesEquip = std::move(CharacterAnimSequencesEquip);
	Parms.CharacterAnimSequencesReload = std::move(CharacterAnimSequencesReload);
	Parms.CharacterAnimSequencesFire = std::move(CharacterAnimSequencesFire);
	Parms.CharacterAnimSequencesFireDownSights = std::move(CharacterAnimSequencesFireDownSights);
	Parms.Path = std::move(Path);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

