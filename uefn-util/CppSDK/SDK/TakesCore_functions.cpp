#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TakesCore

#include "Basic.hpp"

#include "TakesCore_classes.hpp"
#include "TakesCore_parameters.hpp"


namespace SDK
{

// Function TakesCore.TakeMetaData.GetFrameRate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FFrameRate                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FFrameRate UTakeMetaData::GetFrameRate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TakeMetaData", "GetFrameRate");

	Params::TakeMetaData_GetFrameRate Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TakesCore.TakeMetaData.Lock
// (Final, Native, Public, BlueprintCallable)

void UTakeMetaData::Lock()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TakeMetaData", "Lock");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TakesCore.TakeMetaData.SetDescription
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           InDescription                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTakeMetaData::SetDescription(const class FString& InDescription)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TakeMetaData", "SetDescription");

	Params::TakeMetaData_SetDescription Parms{};

	Parms.InDescription = std::move(InDescription);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TakesCore.TakeMetaData.SetDuration
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FFrameTime                       InDuration                                             (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTakeMetaData::SetDuration(const struct FFrameTime& InDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TakeMetaData", "SetDuration");

	Params::TakeMetaData_SetDuration Parms{};

	Parms.InDuration = std::move(InDuration);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TakesCore.TakeMetaData.SetFrameRate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FFrameRate                       InFrameRate                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTakeMetaData::SetFrameRate(const struct FFrameRate& InFrameRate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TakeMetaData", "SetFrameRate");

	Params::TakeMetaData_SetFrameRate Parms{};

	Parms.InFrameRate = std::move(InFrameRate);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TakesCore.TakeMetaData.SetFrameRateFromTimecode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    InFromTimecode                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTakeMetaData::SetFrameRateFromTimecode(bool InFromTimecode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TakeMetaData", "SetFrameRateFromTimecode");

	Params::TakeMetaData_SetFrameRateFromTimecode Parms{};

	Parms.InFromTimecode = InFromTimecode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TakesCore.TakeMetaData.SetLevelOrigin
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ULevel*                           InLevelOrigin                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTakeMetaData::SetLevelOrigin(class ULevel* InLevelOrigin)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TakeMetaData", "SetLevelOrigin");

	Params::TakeMetaData_SetLevelOrigin Parms{};

	Parms.InLevelOrigin = InLevelOrigin;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TakesCore.TakeMetaData.SetPresetOrigin
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTakePreset*                      InPresetOrigin                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTakeMetaData::SetPresetOrigin(class UTakePreset* InPresetOrigin)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TakeMetaData", "SetPresetOrigin");

	Params::TakeMetaData_SetPresetOrigin Parms{};

	Parms.InPresetOrigin = InPresetOrigin;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TakesCore.TakeMetaData.SetSlate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           InSlate                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bEmitChanged                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTakeMetaData::SetSlate(const class FString& InSlate, bool bEmitChanged)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TakeMetaData", "SetSlate");

	Params::TakeMetaData_SetSlate Parms{};

	Parms.InSlate = std::move(InSlate);
	Parms.bEmitChanged = bEmitChanged;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TakesCore.TakeMetaData.SetTakeNumber
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InTakeNumber                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bEmitChanged                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTakeMetaData::SetTakeNumber(int32 InTakeNumber, bool bEmitChanged)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TakeMetaData", "SetTakeNumber");

	Params::TakeMetaData_SetTakeNumber Parms{};

	Parms.InTakeNumber = InTakeNumber;
	Parms.bEmitChanged = bEmitChanged;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TakesCore.TakeMetaData.SetTimecodeIn
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FTimecode                        InTimecodeIn                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTakeMetaData::SetTimecodeIn(const struct FTimecode& InTimecodeIn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TakeMetaData", "SetTimecodeIn");

	Params::TakeMetaData_SetTimecodeIn Parms{};

	Parms.InTimecodeIn = std::move(InTimecodeIn);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TakesCore.TakeMetaData.SetTimecodeOut
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FTimecode                        InTimecodeOut                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTakeMetaData::SetTimecodeOut(const struct FTimecode& InTimecodeOut)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TakeMetaData", "SetTimecodeOut");

	Params::TakeMetaData_SetTimecodeOut Parms{};

	Parms.InTimecodeOut = std::move(InTimecodeOut);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TakesCore.TakeMetaData.SetTimestamp
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FDateTime                        InTimestamp                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTakeMetaData::SetTimestamp(const struct FDateTime& InTimestamp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TakeMetaData", "SetTimestamp");

	Params::TakeMetaData_SetTimestamp Parms{};

	Parms.InTimestamp = std::move(InTimestamp);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TakesCore.TakeMetaData.Unlock
// (Final, Native, Public, BlueprintCallable)

void UTakeMetaData::Unlock()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TakeMetaData", "Unlock");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TakesCore.TakeMetaData.GenerateAssetPath
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           PathFormatString                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UTakeMetaData::GenerateAssetPath(const class FString& PathFormatString) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TakeMetaData", "GenerateAssetPath");

	Params::TakeMetaData_GenerateAssetPath Parms{};

	Parms.PathFormatString = std::move(PathFormatString);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TakesCore.TakeMetaData.GetDescription
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UTakeMetaData::GetDescription() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TakeMetaData", "GetDescription");

	Params::TakeMetaData_GetDescription Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TakesCore.TakeMetaData.GetDuration
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FFrameTime                       ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FFrameTime UTakeMetaData::GetDuration() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TakeMetaData", "GetDuration");

	Params::TakeMetaData_GetDuration Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TakesCore.TakeMetaData.GetFrameRateFromTimecode
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTakeMetaData::GetFrameRateFromTimecode() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TakeMetaData", "GetFrameRateFromTimecode");

	Params::TakeMetaData_GetFrameRateFromTimecode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TakesCore.TakeMetaData.GetLevelOrigin
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ULevel*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ULevel* UTakeMetaData::GetLevelOrigin() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TakeMetaData", "GetLevelOrigin");

	Params::TakeMetaData_GetLevelOrigin Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TakesCore.TakeMetaData.GetLevelPath
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UTakeMetaData::GetLevelPath() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TakeMetaData", "GetLevelPath");

	Params::TakeMetaData_GetLevelPath Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TakesCore.TakeMetaData.GetPresetOrigin
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTakePreset*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTakePreset* UTakeMetaData::GetPresetOrigin() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TakeMetaData", "GetPresetOrigin");

	Params::TakeMetaData_GetPresetOrigin Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TakesCore.TakeMetaData.GetSlate
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UTakeMetaData::GetSlate() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TakeMetaData", "GetSlate");

	Params::TakeMetaData_GetSlate Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TakesCore.TakeMetaData.GetTakeNumber
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTakeMetaData::GetTakeNumber() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TakeMetaData", "GetTakeNumber");

	Params::TakeMetaData_GetTakeNumber Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TakesCore.TakeMetaData.GetTimecodeIn
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FTimecode                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FTimecode UTakeMetaData::GetTimecodeIn() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TakeMetaData", "GetTimecodeIn");

	Params::TakeMetaData_GetTimecodeIn Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TakesCore.TakeMetaData.GetTimecodeOut
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FTimecode                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FTimecode UTakeMetaData::GetTimecodeOut() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TakeMetaData", "GetTimecodeOut");

	Params::TakeMetaData_GetTimecodeOut Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TakesCore.TakeMetaData.GetTimestamp
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FDateTime                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FDateTime UTakeMetaData::GetTimestamp() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TakeMetaData", "GetTimestamp");

	Params::TakeMetaData_GetTimestamp Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TakesCore.TakeMetaData.IsLocked
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTakeMetaData::IsLocked() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TakeMetaData", "IsLocked");

	Params::TakeMetaData_IsLocked Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TakesCore.TakeMetaData.Recorded
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTakeMetaData::Recorded() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TakeMetaData", "Recorded");

	Params::TakeMetaData_Recorded Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TakesCore.TakeRecorderSources.AddSource
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class UTakeRecorderSource>  InSourceType                                           (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTakeRecorderSource*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTakeRecorderSource* UTakeRecorderSources::AddSource(TSubclassOf<class UTakeRecorderSource> InSourceType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TakeRecorderSources", "AddSource");

	Params::TakeRecorderSources_AddSource Parms{};

	Parms.InSourceType = InSourceType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TakesCore.TakeRecorderSources.RemoveSource
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTakeRecorderSource*              InSource                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTakeRecorderSources::RemoveSource(class UTakeRecorderSource* InSource)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TakeRecorderSources", "RemoveSource");

	Params::TakeRecorderSources_RemoveSource Parms{};

	Parms.InSource = InSource;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TakesCore.TakeRecorderSources.StartRecordingSource
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class UTakeRecorderSource*>      InSources                                              (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// struct FQualifiedFrameTime              CurrentFrameTime                                       (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTakeRecorderSources::StartRecordingSource(const TArray<class UTakeRecorderSource*>& InSources, const struct FQualifiedFrameTime& CurrentFrameTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TakeRecorderSources", "StartRecordingSource");

	Params::TakeRecorderSources_StartRecordingSource Parms{};

	Parms.InSources = std::move(InSources);
	Parms.CurrentFrameTime = std::move(CurrentFrameTime);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TakesCore.TakeRecorderSources.GetSourcesCopy
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UTakeRecorderSource*>      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UTakeRecorderSource*> UTakeRecorderSources::GetSourcesCopy() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TakeRecorderSources", "GetSourcesCopy");

	Params::TakeRecorderSources_GetSourcesCopy Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TakesCore.TakesCoreBlueprintLibrary.ComputeNextTakeNumber
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           Slate                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTakesCoreBlueprintLibrary::ComputeNextTakeNumber(const class FString& Slate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TakesCoreBlueprintLibrary", "ComputeNextTakeNumber");

	Params::TakesCoreBlueprintLibrary_ComputeNextTakeNumber Parms{};

	Parms.Slate = std::move(Slate);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TakesCore.TakesCoreBlueprintLibrary.FindTakes
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           Slate                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   TakeNumber                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FAssetData>               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FAssetData> UTakesCoreBlueprintLibrary::FindTakes(const class FString& Slate, int32 TakeNumber)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TakesCoreBlueprintLibrary", "FindTakes");

	Params::TakesCoreBlueprintLibrary_FindTakes Parms{};

	Parms.Slate = std::move(Slate);
	Parms.TakeNumber = TakeNumber;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TakesCore.TakesCoreBlueprintLibrary.SetOnTakeRecorderSlateChanged
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TDelegate<void(const class FString& Slate)>OnTakeRecorderSlateChanged                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTakesCoreBlueprintLibrary::SetOnTakeRecorderSlateChanged(TDelegate<void(const class FString& Slate)> OnTakeRecorderSlateChanged)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TakesCoreBlueprintLibrary", "SetOnTakeRecorderSlateChanged");

	Params::TakesCoreBlueprintLibrary_SetOnTakeRecorderSlateChanged Parms{};

	Parms.OnTakeRecorderSlateChanged = OnTakeRecorderSlateChanged;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TakesCore.TakesCoreBlueprintLibrary.SetOnTakeRecorderTakeNumberChanged
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TDelegate<void(int32 TakeNumber)>       OnTakeRecorderTakeNumberChanged                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTakesCoreBlueprintLibrary::SetOnTakeRecorderTakeNumberChanged(TDelegate<void(int32 TakeNumber)> OnTakeRecorderTakeNumberChanged)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TakesCoreBlueprintLibrary", "SetOnTakeRecorderTakeNumberChanged");

	Params::TakesCoreBlueprintLibrary_SetOnTakeRecorderTakeNumberChanged Parms{};

	Parms.OnTakeRecorderTakeNumberChanged = OnTakeRecorderTakeNumberChanged;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

