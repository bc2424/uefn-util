#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MLDeformerFrameworkEditor

#include "Basic.hpp"

#include "MLDeformerFrameworkEditor_classes.hpp"
#include "MLDeformerFrameworkEditor_parameters.hpp"


namespace SDK
{

// Function MLDeformerFrameworkEditor.MLDeformerTrainingModel.NextSample
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMLDeformerTrainingModel::NextSample()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MLDeformerTrainingModel", "NextSample");

	Params::MLDeformerTrainingModel_NextSample Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MLDeformerFrameworkEditor.MLDeformerTrainingModel.ResetSampling
// (Final, Native, Public, BlueprintCallable)

void UMLDeformerTrainingModel::ResetSampling()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MLDeformerTrainingModel", "ResetSampling");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function MLDeformerFrameworkEditor.MLDeformerTrainingModel.SetCurrentSampleIndex
// (Final, Native, Public)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMLDeformerTrainingModel::SetCurrentSampleIndex(int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MLDeformerTrainingModel", "SetCurrentSampleIndex");

	Params::MLDeformerTrainingModel_SetCurrentSampleIndex Parms{};

	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MLDeformerFrameworkEditor.MLDeformerTrainingModel.SetDeviceList
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class FString>                   DeviceNames                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   PreferredDeviceIndex                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMLDeformerTrainingModel::SetDeviceList(const TArray<class FString>& DeviceNames, int32 PreferredDeviceIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MLDeformerTrainingModel", "SetDeviceList");

	Params::MLDeformerTrainingModel_SetDeviceList Parms{};

	Parms.DeviceNames = std::move(DeviceNames);
	Parms.PreferredDeviceIndex = PreferredDeviceIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function MLDeformerFrameworkEditor.MLDeformerTrainingModel.SetNeedsResampling
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bNeedsResampling                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMLDeformerTrainingModel::SetNeedsResampling(bool bNeedsResampling)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MLDeformerTrainingModel", "SetNeedsResampling");

	Params::MLDeformerTrainingModel_SetNeedsResampling Parms{};

	Parms.bNeedsResampling = bNeedsResampling;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function MLDeformerFrameworkEditor.MLDeformerTrainingModel.SetNumFloatsPerCurve
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   NumFloatsPerCurve                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMLDeformerTrainingModel::SetNumFloatsPerCurve(int32 NumFloatsPerCurve)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MLDeformerTrainingModel", "SetNumFloatsPerCurve");

	Params::MLDeformerTrainingModel_SetNumFloatsPerCurve Parms{};

	Parms.NumFloatsPerCurve = NumFloatsPerCurve;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function MLDeformerFrameworkEditor.MLDeformerTrainingModel.GetMaskIndexPerSampleArray
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UMLDeformerTrainingModel::GetMaskIndexPerSampleArray() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MLDeformerTrainingModel", "GetMaskIndexPerSampleArray");

	Params::MLDeformerTrainingModel_GetMaskIndexPerSampleArray Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MLDeformerFrameworkEditor.MLDeformerTrainingModel.GetModel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UMLDeformerModel*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMLDeformerModel* UMLDeformerTrainingModel::GetModel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MLDeformerTrainingModel", "GetModel");

	Params::MLDeformerTrainingModel_GetModel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MLDeformerFrameworkEditor.MLDeformerTrainingModel.GetNeedsResampling
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMLDeformerTrainingModel::GetNeedsResampling() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MLDeformerTrainingModel", "GetNeedsResampling");

	Params::MLDeformerTrainingModel_GetNeedsResampling Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MLDeformerFrameworkEditor.MLDeformerTrainingModel.GetNumberSampleCurves
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMLDeformerTrainingModel::GetNumberSampleCurves() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MLDeformerTrainingModel", "GetNumberSampleCurves");

	Params::MLDeformerTrainingModel_GetNumberSampleCurves Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MLDeformerFrameworkEditor.MLDeformerTrainingModel.GetNumberSampleDeltas
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMLDeformerTrainingModel::GetNumberSampleDeltas() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MLDeformerTrainingModel", "GetNumberSampleDeltas");

	Params::MLDeformerTrainingModel_GetNumberSampleDeltas Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MLDeformerFrameworkEditor.MLDeformerTrainingModel.GetNumberSampleTransforms
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMLDeformerTrainingModel::GetNumberSampleTransforms() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MLDeformerTrainingModel", "GetNumberSampleTransforms");

	Params::MLDeformerTrainingModel_GetNumberSampleTransforms Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MLDeformerFrameworkEditor.MLDeformerTrainingModel.GetTrainingInputAnimMaskData
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             MaskName                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<float>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<float> UMLDeformerTrainingModel::GetTrainingInputAnimMaskData(class FName MaskName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MLDeformerTrainingModel", "GetTrainingInputAnimMaskData");

	Params::MLDeformerTrainingModel_GetTrainingInputAnimMaskData Parms{};

	Parms.MaskName = MaskName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MLDeformerFrameworkEditor.MLDeformerTrainingModel.GetTrainingInputAnimMasks
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class FName>                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FName> UMLDeformerTrainingModel::GetTrainingInputAnimMasks() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MLDeformerTrainingModel", "GetTrainingInputAnimMasks");

	Params::MLDeformerTrainingModel_GetTrainingInputAnimMasks Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MLDeformerFrameworkEditor.MLDeformerTrainingModel.NumSamples
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMLDeformerTrainingModel::NumSamples() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MLDeformerTrainingModel", "NumSamples");

	Params::MLDeformerTrainingModel_NumSamples Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MLDeformerFrameworkEditor.MLDeformerTrainingModel.UpdateAvailableDevices
// (Event, Public, BlueprintEvent, Const)

void UMLDeformerTrainingModel::UpdateAvailableDevices() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MLDeformerTrainingModel", "UpdateAvailableDevices");

	UObject::ProcessEvent(Func, nullptr);
}

}

