#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_DateTimeSelector

#include "Basic.hpp"

#include "WBP_DateTimeSelector_classes.hpp"
#include "WBP_DateTimeSelector_parameters.hpp"


namespace SDK
{

// Function WBP_DateTimeSelector.WBP_DateTimeSelector_C.BndEvt__WBP_Cilantro_GrantTime_Setting_Button_Decrease_K2Node_ComponentBoundEvent_3_CommonButtonBaseClicked__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UCommonButtonBase*                Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWBP_DateTimeSelector_C::BndEvt__WBP_Cilantro_GrantTime_Setting_Button_Decrease_K2Node_ComponentBoundEvent_3_CommonButtonBaseClicked__DelegateSignature(class UCommonButtonBase* Button)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_DateTimeSelector_C", "BndEvt__WBP_Cilantro_GrantTime_Setting_Button_Decrease_K2Node_ComponentBoundEvent_3_CommonButtonBaseClicked__DelegateSignature");

	Params::WBP_DateTimeSelector_C_BndEvt__WBP_Cilantro_GrantTime_Setting_Button_Decrease_K2Node_ComponentBoundEvent_3_CommonButtonBaseClicked__DelegateSignature Parms{};

	Parms.Button = Button;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_DateTimeSelector.WBP_DateTimeSelector_C.BndEvt__WBP_Cilantro_GrantTime_Setting_Button_Increase_K2Node_ComponentBoundEvent_4_CommonButtonBaseClicked__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UCommonButtonBase*                Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWBP_DateTimeSelector_C::BndEvt__WBP_Cilantro_GrantTime_Setting_Button_Increase_K2Node_ComponentBoundEvent_4_CommonButtonBaseClicked__DelegateSignature(class UCommonButtonBase* Button)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_DateTimeSelector_C", "BndEvt__WBP_Cilantro_GrantTime_Setting_Button_Increase_K2Node_ComponentBoundEvent_4_CommonButtonBaseClicked__DelegateSignature");

	Params::WBP_DateTimeSelector_C_BndEvt__WBP_Cilantro_GrantTime_Setting_Button_Increase_K2Node_ComponentBoundEvent_4_CommonButtonBaseClicked__DelegateSignature Parms{};

	Parms.Button = Button;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_DateTimeSelector.WBP_DateTimeSelector_C.Change Touch Selection State
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsSelected                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_DateTimeSelector_C::Change_Touch_Selection_State(bool IsSelected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_DateTimeSelector_C", "Change Touch Selection State");

	Params::WBP_DateTimeSelector_C_Change_Touch_Selection_State Parms{};

	Parms.IsSelected = IsSelected;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_DateTimeSelector.WBP_DateTimeSelector_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWBP_DateTimeSelector_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_DateTimeSelector_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_DateTimeSelector.WBP_DateTimeSelector_C.DecrementTime
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWBP_DateTimeSelector_C::DecrementTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_DateTimeSelector_C", "DecrementTime");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_DateTimeSelector.WBP_DateTimeSelector_C.ExecuteUbergraph_WBP_DateTimeSelector
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_DateTimeSelector_C::ExecuteUbergraph_WBP_DateTimeSelector(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_DateTimeSelector_C", "ExecuteUbergraph_WBP_DateTimeSelector");

	Params::WBP_DateTimeSelector_C_ExecuteUbergraph_WBP_DateTimeSelector Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_DateTimeSelector.WBP_DateTimeSelector_C.GetOnHoverAnimation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UWidgetAnimation*                 OnHoverAnimation                                       (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UWBP_DateTimeSelector_C::GetOnHoverAnimation(class UWidgetAnimation** OnHoverAnimation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_DateTimeSelector_C", "GetOnHoverAnimation");

	Params::WBP_DateTimeSelector_C_GetOnHoverAnimation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OnHoverAnimation != nullptr)
		*OnHoverAnimation = Parms.OnHoverAnimation;
}


// Function WBP_DateTimeSelector.WBP_DateTimeSelector_C.GetPrimaryGamepadFocusWidget
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWidget*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)

class UWidget* UWBP_DateTimeSelector_C::GetPrimaryGamepadFocusWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_DateTimeSelector_C", "GetPrimaryGamepadFocusWidget");

	Params::WBP_DateTimeSelector_C_GetPrimaryGamepadFocusWidget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WBP_DateTimeSelector.WBP_DateTimeSelector_C.IncrementTime
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWBP_DateTimeSelector_C::IncrementTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_DateTimeSelector_C", "IncrementTime");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_DateTimeSelector.WBP_DateTimeSelector_C.Init
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FDailyTime                       InitialTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// int32                                   InTimeIncrementMinutes                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_DateTimeSelector_C::Init(const struct FDailyTime& InitialTime, int32 InTimeIncrementMinutes)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_DateTimeSelector_C", "Init");

	Params::WBP_DateTimeSelector_C_Init Parms{};

	Parms.InitialTime = std::move(InitialTime);
	Parms.InTimeIncrementMinutes = InTimeIncrementMinutes;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_DateTimeSelector.WBP_DateTimeSelector_C.IsEditable
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    IsEditable_0                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_DateTimeSelector_C::IsEditable(bool* IsEditable_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_DateTimeSelector_C", "IsEditable");

	Params::WBP_DateTimeSelector_C_IsEditable Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsEditable_0 != nullptr)
		*IsEditable_0 = Parms.IsEditable_0;
}


// Function WBP_DateTimeSelector.WBP_DateTimeSelector_C.OnEditableStateChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bIsEditable                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_DateTimeSelector_C::OnEditableStateChanged(const bool bIsEditable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_DateTimeSelector_C", "OnEditableStateChanged");

	Params::WBP_DateTimeSelector_C_OnEditableStateChanged Parms{};

	Parms.bIsEditable = bIsEditable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_DateTimeSelector.WBP_DateTimeSelector_C.OnGamepadNavigate
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EUINavigation                           Navigation_0                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UWidget*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)

class UWidget* UWBP_DateTimeSelector_C::OnGamepadNavigate(EUINavigation Navigation_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_DateTimeSelector_C", "OnGamepadNavigate");

	Params::WBP_DateTimeSelector_C_OnGamepadNavigate Parms{};

	Parms.Navigation_0 = Navigation_0;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WBP_DateTimeSelector.WBP_DateTimeSelector_C.OnInitialized
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWBP_DateTimeSelector_C::OnInitialized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_DateTimeSelector_C", "OnInitialized");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_DateTimeSelector.WBP_DateTimeSelector_C.OnInputMethodChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// ECommonInputType                        CurrentInput                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_DateTimeSelector_C::OnInputMethodChanged(ECommonInputType CurrentInput)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_DateTimeSelector_C", "OnInputMethodChanged");

	Params::WBP_DateTimeSelector_C_OnInputMethodChanged Parms{};

	Parms.CurrentInput = CurrentInput;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_DateTimeSelector.WBP_DateTimeSelector_C.OnMouseEnter
// (BlueprintCosmetic, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FPointerEvent                    MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UWBP_DateTimeSelector_C::OnMouseEnter(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_DateTimeSelector_C", "OnMouseEnter");

	Params::WBP_DateTimeSelector_C_OnMouseEnter Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_DateTimeSelector.WBP_DateTimeSelector_C.OnMouseLeave
// (BlueprintCosmetic, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FPointerEvent                    MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UWBP_DateTimeSelector_C::OnMouseLeave(const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_DateTimeSelector_C", "OnMouseLeave");

	Params::WBP_DateTimeSelector_C_OnMouseLeave Parms{};

	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_DateTimeSelector.WBP_DateTimeSelector_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_DateTimeSelector_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_DateTimeSelector_C", "PreConstruct");

	Params::WBP_DateTimeSelector_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_DateTimeSelector.WBP_DateTimeSelector_C.RefreshUI
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWBP_DateTimeSelector_C::RefreshUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_DateTimeSelector_C", "RefreshUI");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_DateTimeSelector.WBP_DateTimeSelector_C.SetMobileStyle
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWBP_DateTimeSelector_C::SetMobileStyle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_DateTimeSelector_C", "SetMobileStyle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_DateTimeSelector.WBP_DateTimeSelector_C.SetSettingTextEditableState
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsEditable_0                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_DateTimeSelector_C::SetSettingTextEditableState(const bool IsEditable_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_DateTimeSelector_C", "SetSettingTextEditableState");

	Params::WBP_DateTimeSelector_C_SetSettingTextEditableState Parms{};

	Parms.IsEditable_0 = IsEditable_0;

	UObject::ProcessEvent(Func, &Parms);
}

}

