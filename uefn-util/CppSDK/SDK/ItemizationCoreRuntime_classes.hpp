#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ItemizationCoreRuntime

#include "Basic.hpp"

#include "McpProfileSys_classes.hpp"
#include "VerseGameplayTags_0_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "ItemizationCoreRuntime_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "CoreUObject_classes.hpp"
#include "Engine_classes.hpp"
#include "Entity_classes.hpp"
#include "EnhancedInput_classes.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK
{

// Class ItemizationCoreRuntime.InventoryCollection
// 0x0608 (0x0A30 - 0x0428)
class AInventoryCollection : public AInfo
{
public:
	TMulticastInlineDelegate<void(class AInventoryCollection* OwningInventory, EInventoryCollectionLoadState PreviousLoadState, EInventoryCollectionLoadState NewLoadState)> OnInventoryCollectionLoadStateChanged;             // 0x0428(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<class UInventory*>                     InventoryList;                                     // 0x0438(0x0010)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TMap<struct FGuid, class UInventory*>         InventoryMap;                                      // 0x0448(0x0050)(ExportObject, Transient, ContainsInstancedReference, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TMap<struct FGuid, struct FGuid>              ItemInventoryMap;                                  // 0x0498(0x0050)(Transient, Protected, NativeAccessSpecifierProtected)
	TMap<struct FGuid, class UItemInstance*>      ItemInstanceMap;                                   // 0x04E8(0x0050)(Transient, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	uint8                                         Pad_538[0x4D0];                                    // 0x0538(0x04D0)(Fixing Size After Last Property [ Dumper-7 ])
	TWeakObjectPtr<class APlayerController>       InputPlayerController;                             // 0x0A08(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EInventoryCollectionType                      InventoryCollectionType;                           // 0x0A10(0x0001)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_A11[0x3];                                      // 0x0A11(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuid                                  InventoryCollectionID;                             // 0x0A14(0x0010)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EInventoryCollectionLoadState                 InventoryCollectionLoadState;                      // 0x0A24(0x0001)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bIsInventoryCollectionUnregistered;                // 0x0A25(0x0001)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_A26[0x2];                                      // 0x0A26(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UInventorySetupDataBase*                UsedInventorySetupData;                            // 0x0A28(0x0008)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void ClientOnItemAbilityCooldownUpdated(const struct FGuid& InventoryID, const struct FGuid& ItemEntryID, const int32 AbilityBindingIndex, const struct FItemAbilityCooldownState& CooldownState);
	void DropItem(const struct FGuid& ItemEntryID, const int64 AmountToDrop);
	void OnRep_InventoryCollectionID();
	void Server_DropItem(const struct FGuid& ItemEntryID, int64 AmountToDrop);
	void Server_MoveItemListToInventory(const TArray<struct FGuid>& ItemEntryIDList, class AInventoryCollection* TargetInventoryCollection, const struct FGuid& TargetInventoryID);
	void Server_MoveItemsWithDefinitionToInventory(const struct FGuid& OwningInventoryID, const class UItemDefinitionBase* ItemDefinition, class AInventoryCollection* TargetInventoryCollection, const struct FGuid& TargetInventoryID, const int64 Amount);
	void Server_SetEquippableItemActive(const struct FGuid& ItemEntryID);
	void Server_SetEquippableItemInactive(const struct FGuid& ItemEntryID);
	void Server_SetItemSlot(const struct FGuid& OwningInventoryID, const struct FGuid& ItemEntryID, const uint16 SlotNumber, const EVkInventoryMoveBehaviour MoveBehaviour);
	void Server_SwapItems(const struct FGuid& ItemEntryID, class AInventoryCollection* OtherInventoryCollection, const struct FGuid& OtherItemEntryID);
	void Server_UseItem(const struct FGuid& ItemID, const struct FGuid& AdditionalItemID);
	void SetEquippableItemActive(const struct FGuid& ItemEntryID);
	void SetEquippableItemInactive(const struct FGuid& ItemEntryID);
	int64 SetInventoryMaxStackSizeOverride(const struct FGuid& TargetInventoryID, int64 InInventoryMaxStackSizeOverride);
	int64 SetInventoryTotalSlotsOverride(const struct FGuid& TargetInventoryID, int64 InInventoryTotalSlotsOverride);
	void UseItem(const struct FGuid& ItemID, const struct FGuid& AdditionalItemID);

	bool GetAllInventoriesInCollection(TArray<struct FGuid>* OutInventoryIDList) const;
	bool GetAllItemsInInventory(const struct FGuid& TargetInventoryID, TArray<struct FGuid>* OutItemEntryIDList) const;
	TArray<struct FGuid> GetInventoriesWithInventoryDefinition(const class UInventoryDefinition* InventoryDefinition) const;
	EItemizationInventoryCreationType GetInventoryCreationType(const struct FGuid& TargetInventoryID) const;
	const class UInventoryDefinition* GetInventoryDefinition(const struct FGuid& TargetInventoryID) const;
	TArray<struct FGuid> GetInventoryListInPickupPriorityForItemDefinition(const class UItemDefinitionBase* ItemDefinition) const;
	int64 GetInventoryMaxStackSizeOverride(const struct FGuid& TargetInventoryID) const;
	const class FText GetInventoryName(const struct FGuid& TargetInventoryID) const;
	int64 GetInventoryTotalSlots(const struct FGuid& TargetInventoryID) const;
	int64 GetItemAmount(const class UItemDefinitionBase* ItemDefinition) const;
	int64 GetItemAmountFromEntry(const struct FGuid& TargetInventoryID, const struct FGuid& ItemEntryID) const;
	int64 GetItemAmountFromInventory(const class UItemDefinitionBase* ItemDefinition, const struct FGuid& TargetInventoryID) const;
	const class UItemDefinitionBase* GetItemDefinition(const struct FGuid& TargetInventoryID, const struct FGuid& ItemEntryID) const;
	struct FGuid GetItemEntryIDBySlot(const struct FGuid& TargetInventoryID, const int32 SlotNumber) const;
	int64 GetItemMaxAmountForEntry(const struct FGuid& TargetInventoryID, const struct FGuid& ItemEntryID) const;
	int32 GetItemSlotNumber(const struct FGuid& TargetInventoryID, const struct FGuid& ItemEntryID) const;
	bool IsEquippableItemActive(const struct FGuid& ItemEntryID) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"InventoryCollection">();
	}
	static class AInventoryCollection* GetDefaultObj()
	{
		return GetDefaultObjImpl<AInventoryCollection>();
	}
};

// Class ItemizationCoreRuntime.ItemAbilityEffectAsset
// 0x0008 (0x0050 - 0x0048)
class UItemAbilityEffectAsset final : public UPrimaryDataAsset
{
public:
	TSubclassOf<class UGameplayEffect>            GameplayEffectClass;                               // 0x0048(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ItemAbilityEffectAsset">();
	}
	static class UItemAbilityEffectAsset* GetDefaultObj()
	{
		return GetDefaultObjImpl<UItemAbilityEffectAsset>();
	}
};

// Class ItemizationCoreRuntime.Inventory
// 0x0500 (0x05D8 - 0x00D8)
class UInventory : public UActorComponent
{
public:
	class AInventoryCollection*                   OwningInventoryCollection;                         // 0x00D8(0x0008)(ZeroConstructor, Transient, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UObject*                                VerseInventoryInternal;                            // 0x00E0(0x0008)(Net, ZeroConstructor, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGuid                                  InventoryID;                                       // 0x00E8(0x0010)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EItemizationInventoryCreationType             InventoryType;                                     // 0x00F8(0x0001)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FItemEntryList                         ItemEntryData;                                     // 0x0100(0x0310)(Net, RepNotify, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_410[0x1C8];                                    // 0x0410(0x01C8)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnRep_InventoryID();
	void OnRep_InventoryMaxStackSizeOverride();
	void OnRep_InventoryTotalSlotsOverride();
	void OnRep_ItemData();
	void OnRep_VerseInventory();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"Inventory">();
	}
	static class UInventory* GetDefaultObj()
	{
		return GetDefaultObjImpl<UInventory>();
	}
};

// Class ItemizationCoreRuntime.ItemComponentBase
// 0x0000 (0x0030 - 0x0030)
class UItemComponentBase : public UObject
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ItemComponentBase">();
	}
	static class UItemComponentBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UItemComponentBase>();
	}
};

// Class ItemizationCoreRuntime.EquippableInventory
// 0x0078 (0x0650 - 0x05D8)
class UEquippableInventory final : public UInventory
{
public:
	TArray<struct FGuid>                          ActiveItems;                                       // 0x05D8(0x0010)(Net, ZeroConstructor, RepNotify, NativeAccessSpecifierPrivate)
	TArray<struct FGuid>                          PreviouslyActiveItems;                             // 0x05E8(0x0010)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	uint8                                         Pad_5F8[0x48];                                     // 0x05F8(0x0048)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FEquippableInventorySlotBinding> SlotBindingList;                                   // 0x0640(0x0010)(Net, ZeroConstructor, RepNotify, NativeAccessSpecifierPrivate)

public:
	void OnRep_ActiveItems();
	void OnRep_SlotBindings();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EquippableInventory">();
	}
	static class UEquippableInventory* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEquippableInventory>();
	}
};

// Class ItemizationCoreRuntime.ItemRequirements
// 0x00A0 (0x00D8 - 0x0038)
class UItemRequirements final : public UDataAsset
{
public:
	class FText                                   Name_0;                                            // 0x0038(0x0010)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	class FText                                   Description;                                       // 0x0048(0x0010)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	TSet<class UItemType*>                        ItemTypes;                                         // 0x0058(0x0050)(Edit, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPrivate)
	struct FItemTagContainer                      TagContainer;                                      // 0x00A8(0x0030)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ItemRequirements">();
	}
	static class UItemRequirements* GetDefaultObj()
	{
		return GetDefaultObjImpl<UItemRequirements>();
	}
};

// Class ItemizationCoreRuntime.InventoryDefinition
// 0x0048 (0x0080 - 0x0038)
class UInventoryDefinition : public UDataAsset
{
public:
	class FText                                   Name_0;                                            // 0x0038(0x0010)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class FText                                   Description;                                       // 0x0048(0x0010)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	uint16                                        Slots;                                             // 0x0058(0x0002)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         PickupPriority;                                    // 0x005A(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_5B[0x5];                                       // 0x005B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UItemRequirements*                      ItemRequirements;                                  // 0x0060(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bEnableItemStacking;                               // 0x0068(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVerseGameplayTagContainer             VerseGameplayTags;                                 // 0x0070(0x0010)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"InventoryDefinition">();
	}
	static class UInventoryDefinition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UInventoryDefinition>();
	}
};

// Class ItemizationCoreRuntime.EquippableInventoryDefinition
// 0x0038 (0x00B8 - 0x0080)
class UEquippableInventoryDefinition : public UInventoryDefinition
{
public:
	TArray<struct FEquipItemRestriction>          EquipRestrictions;                                 // 0x0080(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<struct FEquipItemCondition>            AutoEquipConditions;                               // 0x0090(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<class UInputAction*>                   SlotBindings;                                      // 0x00A0(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	bool                                          bShowSlotBindings;                                 // 0x00B0(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EquippableInventoryDefinition">();
	}
	static class UEquippableInventoryDefinition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEquippableInventoryDefinition>();
	}
};

// Class ItemizationCoreRuntime.EquipmentSlot
// 0x0000 (0x00B8 - 0x00B8)
class UEquipmentSlot final : public UEquippableInventoryDefinition
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EquipmentSlot">();
	}
	static class UEquipmentSlot* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEquipmentSlot>();
	}
};

// Class ItemizationCoreRuntime.EquipmentHotBar
// 0x0000 (0x00B8 - 0x00B8)
class UEquipmentHotBar final : public UEquippableInventoryDefinition
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EquipmentHotBar">();
	}
	static class UEquipmentHotBar* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEquipmentHotBar>();
	}
};

// Class ItemizationCoreRuntime.InventoryCheatManager
// 0x0000 (0x0030 - 0x0030)
class UInventoryCheatManager final : public UCheatManagerExtension
{
public:
	void InventoryAddToItem(int32 InventoryIndex, int32 ItemIndex, int64 AmountToAdd);
	void InventoryDropItem(int32 InventoryIndex, int32 ItemIndex, int64 AmountToDrop);
	void InventoryMoveAmountOfItem(int32 SourceInventoryIndex, int32 ItemIndex, int32 TargetInventoryIndex, int64 AmountToMove);
	void InventoryMoveItem(int32 SourceInventoryIndex, int32 ItemIndex, int32 TargetInventoryIndex);
	void InventoryRemoveFromItem(int32 InventoryIndex, int32 ItemIndex, int64 AmountToRemove);
	void InventorySetEquippedItemActive(int32 InventoryIndex, int32 ItemIndex, bool bActive);
	void InventorySetItemSlot(int32 InventoryIndex, int32 ItemIndex, uint16 NewSlotIndex);
	void InventoryUseItem(int32 InventoryIndex, int32 ItemIndex);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"InventoryCheatManager">();
	}
	static class UInventoryCheatManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<UInventoryCheatManager>();
	}
};

// Class ItemizationCoreRuntime.InventorySetupDataBase
// 0x0000 (0x0030 - 0x0030)
class UInventorySetupDataBase : public UObject
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"InventorySetupDataBase">();
	}
	static class UInventorySetupDataBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UInventorySetupDataBase>();
	}
};

// Class ItemizationCoreRuntime.InventorySetupDataNativeBasic
// 0x0030 (0x0060 - 0x0030)
class UInventorySetupDataNativeBasic final : public UInventorySetupDataBase
{
public:
	TArray<struct FEquippableInventoryProperties> EquippableInventoryList;                           // 0x0030(0x0010)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FInventoryProperties>           InventoryList;                                     // 0x0040(0x0010)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FInventoryStartingItem>         StartingItemList;                                  // 0x0050(0x0010)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)

public:
	TArray<class UClass*> GetAllowedEquipmentInventoryClasses() const;
	TArray<class UClass*> GetAllowedInventoryClasses() const;
	TArray<class UClass*> GetDisallowedInventoryClasses() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"InventorySetupDataNativeBasic">();
	}
	static class UInventorySetupDataNativeBasic* GetDefaultObj()
	{
		return GetDefaultObjImpl<UInventorySetupDataNativeBasic>();
	}
};

// Class ItemizationCoreRuntime.InventorySetupData
// 0x00D0 (0x0108 - 0x0038)
class UInventorySetupData final : public UDataAsset
{
public:
	TArray<TSoftObjectPtr<class UEquippableInventoryDefinition>> EquipmentSetups;                                   // 0x0038(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TArray<TSoftObjectPtr<class UInventoryDefinition>> InventoryDefinitions;                              // 0x0048(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TArray<struct FInventoryStartingItem>         StartingItems;                                     // 0x0058(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UInputMappingContext>    InputMappingContext;                               // 0x0068(0x0030)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UClass>                   InventoryUIWidgetClass;                            // 0x0098(0x0030)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UClass>                   InventoryHUDUIWidgetClass;                         // 0x00C8(0x0030)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   DisplayName;                                       // 0x00F8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)

public:
	void SetEquippableInventoryDefinitionList(const TArray<TSoftObjectPtr<class UEquippableInventoryDefinition>>& EquipmentInventoryDefinitionList);
	void SetInventoryDefinitionList(const TArray<TSoftObjectPtr<class UInventoryDefinition>>& InventoryDefinitionList);

	TArray<class UClass*> GetDisallowedEquipmentInventoryDefinitionAssetClasses() const;
	TArray<class UClass*> GetDisallowedInventoryDefinitionAssetClasses() const;
	TArray<TSoftObjectPtr<class UEquippableInventoryDefinition>> GetEquippableInventoryDefinitionList() const;
	TArray<TSoftObjectPtr<class UInventoryDefinition>> GetInventoryDefinitionList() const;
	TArray<struct FInventoryStartingItem> GetStartingItems() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"InventorySetupData">();
	}
	static class UInventorySetupData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UInventorySetupData>();
	}
};

// Class ItemizationCoreRuntime.ItemAbilityConfigurationAsset
// 0x0028 (0x0070 - 0x0048)
class UItemAbilityConfigurationAsset final : public UPrimaryDataAsset
{
public:
	TSubclassOf<class UGameplayAbility>           GameplayAbilityClass;                              // 0x0048(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                  GameplayTags;                                      // 0x0050(0x0020)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)

public:
	void Construct(class UGameplayAbility* Ability) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ItemAbilityConfigurationAsset">();
	}
	static class UItemAbilityConfigurationAsset* GetDefaultObj()
	{
		return GetDefaultObjImpl<UItemAbilityConfigurationAsset>();
	}
};

// Class ItemizationCoreRuntime.ItemAbilityCost
// 0x0000 (0x0030 - 0x0030)
class UItemAbilityCost : public UObject
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ItemAbilityCost">();
	}
	static class UItemAbilityCost* GetDefaultObj()
	{
		return GetDefaultObjImpl<UItemAbilityCost>();
	}
};

// Class ItemizationCoreRuntime.ItemAbilityCostItem
// 0x0038 (0x0068 - 0x0030)
class UItemAbilityCostItem final : public UItemAbilityCost
{
public:
	TSoftObjectPtr<class UItemDefinitionBase>     ItemDefinition;                                    // 0x0030(0x0030)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         NumConsumed;                                       // 0x0060(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ItemAbilityCostItem">();
	}
	static class UItemAbilityCostItem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UItemAbilityCostItem>();
	}
};

// Class ItemizationCoreRuntime.ItemAbilityCooldown
// 0x0008 (0x0038 - 0x0030)
class UItemAbilityCooldown : public UObject
{
public:
	bool                                          bApplyOnStart;                                     // 0x0030(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ItemAbilityCooldown">();
	}
	static class UItemAbilityCooldown* GetDefaultObj()
	{
		return GetDefaultObjImpl<UItemAbilityCooldown>();
	}
};

// Class ItemizationCoreRuntime.ItemAbilityCooldownTime
// 0x0008 (0x0040 - 0x0038)
class UItemAbilityCooldownTime final : public UItemAbilityCooldown
{
public:
	float                                         CooldownTime;                                      // 0x0038(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ItemAbilityCooldownTime">();
	}
	static class UItemAbilityCooldownTime* GetDefaultObj()
	{
		return GetDefaultObjImpl<UItemAbilityCooldownTime>();
	}
};

// Class ItemizationCoreRuntime.ItemAbilityCooldownVelocityBased
// 0x0010 (0x0048 - 0x0038)
class UItemAbilityCooldownVelocityBased final : public UItemAbilityCooldown
{
public:
	float                                         CooldownTimeIfStationary;                          // 0x0038(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CooldownTimeScaleFactorIfMoving;                   // 0x003C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          CooldownTimeIsResetToZeroWhenMoving;               // 0x0040(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ItemAbilityCooldownVelocityBased">();
	}
	static class UItemAbilityCooldownVelocityBased* GetDefaultObj()
	{
		return GetDefaultObjImpl<UItemAbilityCooldownVelocityBased>();
	}
};

// Class ItemizationCoreRuntime.ItemAttachment
// 0x0018 (0x0438 - 0x0420)
class AItemAttachment final : public AActor
{
public:
	class UMeshComponent*                         Mesh;                                              // 0x0420(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UItemAttachmentDefinition*              AttachmentData;                                    // 0x0428(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_430[0x8];                                      // 0x0430(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ItemAttachment">();
	}
	static class AItemAttachment* GetDefaultObj()
	{
		return GetDefaultObjImpl<AItemAttachment>();
	}
};

// Class ItemizationCoreRuntime.ItemAttachmentDefinition
// 0x0008 (0x0038 - 0x0030)
class UItemAttachmentDefinition : public UObject
{
public:
	EItemStateFilter                              AttachmentVisibility;                              // 0x0030(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ItemAttachmentDefinition">();
	}
	static class UItemAttachmentDefinition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UItemAttachmentDefinition>();
	}
};

// Class ItemizationCoreRuntime.ItemMeshAttachmentDefinition
// 0x0058 (0x0090 - 0x0038)
class UItemMeshAttachmentDefinition : public UItemAttachmentDefinition
{
public:
	class FName                                   AttachToSocketName;                                // 0x0038(0x000C)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                OffsetLocation;                                    // 0x0048(0x0018)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                               OffsetRotation;                                    // 0x0060(0x0018)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                                MeshScale;                                         // 0x0078(0x0018)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ItemMeshAttachmentDefinition">();
	}
	static class UItemMeshAttachmentDefinition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UItemMeshAttachmentDefinition>();
	}
};

// Class ItemizationCoreRuntime.ItemStaticMeshAttachmentDefinition
// 0x0030 (0x00C0 - 0x0090)
class UItemStaticMeshAttachmentDefinition final : public UItemMeshAttachmentDefinition
{
public:
	TSoftObjectPtr<class UStaticMesh>             Mesh;                                              // 0x0090(0x0030)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ItemStaticMeshAttachmentDefinition">();
	}
	static class UItemStaticMeshAttachmentDefinition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UItemStaticMeshAttachmentDefinition>();
	}
};

// Class ItemizationCoreRuntime.ItemSkeletalMeshAttachmentDefinition
// 0x0060 (0x00F0 - 0x0090)
class UItemSkeletalMeshAttachmentDefinition final : public UItemMeshAttachmentDefinition
{
public:
	TSoftObjectPtr<class USkeletalMesh>           Mesh;                                              // 0x0090(0x0030)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UAnimSequence>           Animation;                                         // 0x00C0(0x0030)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ItemSkeletalMeshAttachmentDefinition">();
	}
	static class UItemSkeletalMeshAttachmentDefinition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UItemSkeletalMeshAttachmentDefinition>();
	}
};

// Class ItemizationCoreRuntime.ItemOwnerPoseAsset
// 0x0008 (0x0050 - 0x0048)
class UItemOwnerPoseAsset final : public UPrimaryDataAsset
{
public:
	class UProxyTable*                            ProxyTable;                                        // 0x0048(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ItemOwnerPoseAsset">();
	}
	static class UItemOwnerPoseAsset* GetDefaultObj()
	{
		return GetDefaultObjImpl<UItemOwnerPoseAsset>();
	}
};

// Class ItemizationCoreRuntime.ItemDefinitionBase
// 0x0060 (0x00B8 - 0x0058)
class UItemDefinitionBase : public UMcpItemDefinitionBase
{
public:
	uint8                                         Pad_58[0x10];                                      // 0x0058(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   ItemName;                                          // 0x0068(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class FText                                   ItemDescription;                                   // 0x0078(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class FText                                   ItemShortDescription;                              // 0x0088(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<struct FInstancedStruct>               DataList;                                          // 0x0098(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NoClear, AssetRegistrySearchable, Protected, NativeAccessSpecifierProtected)
	struct FItemComponentContainer                ComponentContainer;                                // 0x00A8(0x0010)(EditorOnly, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)

public:
	void RemoveItemData(const class UScriptStruct* StructType, EItemDataQueryResult* ExecResult);
	void SetItemData(const int32& ItemData);

	TArray<TSoftObjectPtr<class UScriptStruct>> GetDisallowedStructs() const;
	class FText GetDisplayName() const;
	void GetItemData(EItemDataQueryResult* ExecResult, int32* ItemData) const;
	class FText GetItemDescription() const;
	class FText GetItemRichDescription() const;
	class FText GetItemShortDescription() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ItemDefinitionBase">();
	}
	static class UItemDefinitionBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UItemDefinitionBase>();
	}
};

// Class ItemizationCoreRuntime.ItemEntityPrefab
// 0x0008 (0x0568 - 0x0560)
class UItemEntityPrefab final : public UEntityPrefab
{
public:
	class UItemDefinitionBase*                    ItemDefinition;                                    // 0x0560(0x0008)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ItemEntityPrefab">();
	}
	static class UItemEntityPrefab* GetDefaultObj()
	{
		return GetDefaultObjImpl<UItemEntityPrefab>();
	}
};

// Class ItemizationCoreRuntime.ItemInputAction
// 0x0000 (0x00B0 - 0x00B0)
class UItemInputAction final : public UInputAction
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ItemInputAction">();
	}
	static class UItemInputAction* GetDefaultObj()
	{
		return GetDefaultObjImpl<UItemInputAction>();
	}
};

// Class ItemizationCoreRuntime.ItemInputMappingContext
// 0x0000 (0x0058 - 0x0058)
class UItemInputMappingContext final : public UInputMappingContext
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ItemInputMappingContext">();
	}
	static class UItemInputMappingContext* GetDefaultObj()
	{
		return GetDefaultObjImpl<UItemInputMappingContext>();
	}
};

// Class ItemizationCoreRuntime.ItemInstance
// 0x0018 (0x0048 - 0x0030)
class UItemInstance final : public UObject
{
public:
	struct FGuid                                  ItemEntryID;                                       // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_40[0x8];                                       // 0x0040(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ItemInstance">();
	}
	static class UItemInstance* GetDefaultObj()
	{
		return GetDefaultObjImpl<UItemInstance>();
	}
};

// Class ItemizationCoreRuntime.ItemInterface
// 0x0000 (0x0030 - 0x0030)
class IItemInterface final : public IInterface
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ItemInterface">();
	}
	static class IItemInterface* GetDefaultObj()
	{
		return GetDefaultObjImpl<IItemInterface>();
	}
};

// Class ItemizationCoreRuntime.ItemizationConfigurationAsset
// 0x00C0 (0x0108 - 0x0048)
class UItemizationConfigurationAsset final : public UPrimaryDataAsset
{
public:
	TSubclassOf<class UInventorySetupDataBase>    InventorySetup;                                    // 0x0048(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UInventorySetupDataBase>    AIInventorySetup;                                  // 0x0050(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UInventorySetupDataBase>    EditModeInventorySetup;                            // 0x0058(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class UClass>                   HUDWidgetClass;                                    // 0x0060(0x0030)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class UClass>                   InventoryScreenWidgetClass;                        // 0x0090(0x0030)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UInputMappingContext>    InputMappingContext;                               // 0x00C0(0x0030)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInventorySetupDataNativeBasic*         DEBUG_InventorySetup;                              // 0x00F0(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, PersistentInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInventorySetupDataNativeBasic*         DEBUG_AIInventorySetup;                            // 0x00F8(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, PersistentInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInventorySetupDataNativeBasic*         DEBUG_EditModeInventorySetup;                      // 0x0100(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, PersistentInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ItemizationConfigurationAsset">();
	}
	static class UItemizationConfigurationAsset* GetDefaultObj()
	{
		return GetDefaultObjImpl<UItemizationConfigurationAsset>();
	}
};

// Class ItemizationCoreRuntime.ItemizationCoreSubsystem
// 0x0000 (0x0038 - 0x0038)
class UItemizationCoreSubsystem final : public UEngineSubsystem
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ItemizationCoreSubsystem">();
	}
	static class UItemizationCoreSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UItemizationCoreSubsystem>();
	}
};

// Class ItemizationCoreRuntime.ItemizationFunctionLibrary
// 0x0000 (0x0030 - 0x0030)
class UItemizationFunctionLibrary final : public UBlueprintFunctionLibrary
{
public:
	static class FString DescribeInventoryID(const struct FGuid& InventoryID);
	static class FString DescribeItemEntryID(const struct FGuid& ItemEntryID);
	static const class UItemDefinitionBase* GetItemDataDefinition(const struct FItemAggregatedData& ItemData);
	static struct FGuid GetItemDataItemEntryID(const struct FItemAggregatedData& ItemData);
	static int32 GetItemDataSlot(const struct FItemAggregatedData& ItemData);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ItemizationFunctionLibrary">();
	}
	static class UItemizationFunctionLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UItemizationFunctionLibrary>();
	}
};

// Class ItemizationCoreRuntime.ItemizationLootCountCalculator
// 0x0000 (0x0030 - 0x0030)
class UItemizationLootCountCalculator : public UObject
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ItemizationLootCountCalculator">();
	}
	static class UItemizationLootCountCalculator* GetDefaultObj()
	{
		return GetDefaultObjImpl<UItemizationLootCountCalculator>();
	}
};

// Class ItemizationCoreRuntime.ItemizationLootCountCalculator_Value
// 0x0038 (0x0068 - 0x0030)
class UItemizationLootCountCalculator_Value final : public UItemizationLootCountCalculator
{
public:
	struct FScalableFloat                         Value;                                             // 0x0030(0x0038)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ItemizationLootCountCalculator_Value">();
	}
	static class UItemizationLootCountCalculator_Value* GetDefaultObj()
	{
		return GetDefaultObjImpl<UItemizationLootCountCalculator_Value>();
	}
};

// Class ItemizationCoreRuntime.ItemizationLootCountCalculator_Range
// 0x0070 (0x00A0 - 0x0030)
class UItemizationLootCountCalculator_Range final : public UItemizationLootCountCalculator
{
public:
	struct FScalableFloat                         Min;                                               // 0x0030(0x0038)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FScalableFloat                         Max;                                               // 0x0068(0x0038)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ItemizationLootCountCalculator_Range">();
	}
	static class UItemizationLootCountCalculator_Range* GetDefaultObj()
	{
		return GetDefaultObjImpl<UItemizationLootCountCalculator_Range>();
	}
};

// Class ItemizationCoreRuntime.ItemizationLootPoolAsset
// 0x0058 (0x0090 - 0x0038)
class UItemizationLootPoolAsset final : public UDataAsset
{
public:
	class FText                                   LootTableName;                                     // 0x0038(0x0010)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class FText                                   LootTableDescription;                              // 0x0048(0x0010)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<class UItemizationLootPoolProcessor*>  LootPoolPostProcessorList;                         // 0x0058(0x0010)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<struct FItemizationLootEntry_Guaranteed> GuaranteedLoot;                                    // 0x0068(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class UItemizationLootCountCalculator*        SelectionCount;                                    // 0x0078(0x0008)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, Protected, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FItemizationLootEntry_Chance>   ChanceLoot;                                        // 0x0080(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)

public:
	TArray<class UClass*> GetAllowedLootPoolItemClasses() const;
	TArray<class UClass*> GetDisallowedLootPoolItemClasses() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ItemizationLootPoolAsset">();
	}
	static class UItemizationLootPoolAsset* GetDefaultObj()
	{
		return GetDefaultObjImpl<UItemizationLootPoolAsset>();
	}
};

// Class ItemizationCoreRuntime.ItemizationLootPoolProcessor
// 0x0000 (0x0030 - 0x0030)
class UItemizationLootPoolProcessor final : public UObject
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ItemizationLootPoolProcessor">();
	}
	static class UItemizationLootPoolProcessor* GetDefaultObj()
	{
		return GetDefaultObjImpl<UItemizationLootPoolProcessor>();
	}
};

// Class ItemizationCoreRuntime.ItemizationLootWeightCalculator
// 0x0000 (0x0030 - 0x0030)
class UItemizationLootWeightCalculator : public UObject
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ItemizationLootWeightCalculator">();
	}
	static class UItemizationLootWeightCalculator* GetDefaultObj()
	{
		return GetDefaultObjImpl<UItemizationLootWeightCalculator>();
	}
};

// Class ItemizationCoreRuntime.ItemizationLootWeightCalculator_Value
// 0x0038 (0x0068 - 0x0030)
class UItemizationLootWeightCalculator_Value final : public UItemizationLootWeightCalculator
{
public:
	struct FScalableFloat                         Value;                                             // 0x0030(0x0038)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ItemizationLootWeightCalculator_Value">();
	}
	static class UItemizationLootWeightCalculator_Value* GetDefaultObj()
	{
		return GetDefaultObjImpl<UItemizationLootWeightCalculator_Value>();
	}
};

// Class ItemizationCoreRuntime.ItemizationLootWeightCalculator_Range
// 0x0070 (0x00A0 - 0x0030)
class UItemizationLootWeightCalculator_Range final : public UItemizationLootWeightCalculator
{
public:
	struct FScalableFloat                         Min;                                               // 0x0030(0x0038)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FScalableFloat                         Max;                                               // 0x0068(0x0038)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ItemizationLootWeightCalculator_Range">();
	}
	static class UItemizationLootWeightCalculator_Range* GetDefaultObj()
	{
		return GetDefaultObjImpl<UItemizationLootWeightCalculator_Range>();
	}
};

// Class ItemizationCoreRuntime.ItemizationPersistenceManagerBase
// 0x0000 (0x0030 - 0x0030)
class UItemizationPersistenceManagerBase final : public UObject
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ItemizationPersistenceManagerBase">();
	}
	static class UItemizationPersistenceManagerBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UItemizationPersistenceManagerBase>();
	}
};

// Class ItemizationCoreRuntime.ItemizationSubsystemComponent
// 0x0000 (0x0030 - 0x0030)
class UItemizationSubsystemComponent : public UObject
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ItemizationSubsystemComponent">();
	}
	static class UItemizationSubsystemComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UItemizationSubsystemComponent>();
	}
};

// Class ItemizationCoreRuntime.ItemizationSubsystemComponent_Ability
// 0x0050 (0x0080 - 0x0030)
class UItemizationSubsystemComponent_Ability final : public UItemizationSubsystemComponent
{
public:
	uint8                                         Pad_30[0x50];                                      // 0x0030(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ItemizationSubsystemComponent_Ability">();
	}
	static class UItemizationSubsystemComponent_Ability* GetDefaultObj()
	{
		return GetDefaultObjImpl<UItemizationSubsystemComponent_Ability>();
	}
};

// Class ItemizationCoreRuntime.ItemizationSubsystemComponent_Attach
// 0x0050 (0x0080 - 0x0030)
class UItemizationSubsystemComponent_Attach final : public UItemizationSubsystemComponent
{
public:
	uint8                                         Pad_30[0x50];                                      // 0x0030(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ItemizationSubsystemComponent_Attach">();
	}
	static class UItemizationSubsystemComponent_Attach* GetDefaultObj()
	{
		return GetDefaultObjImpl<UItemizationSubsystemComponent_Attach>();
	}
};

// Class ItemizationCoreRuntime.ItemizationSubsystemComponent_OwnerPose
// 0x0050 (0x0080 - 0x0030)
class UItemizationSubsystemComponent_OwnerPose final : public UItemizationSubsystemComponent
{
public:
	uint8                                         Pad_30[0x50];                                      // 0x0030(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ItemizationSubsystemComponent_OwnerPose">();
	}
	static class UItemizationSubsystemComponent_OwnerPose* GetDefaultObj()
	{
		return GetDefaultObjImpl<UItemizationSubsystemComponent_OwnerPose>();
	}
};

// Class ItemizationCoreRuntime.ItemizationWorldSubsystem
// 0x0138 (0x0170 - 0x0038)
class UItemizationWorldSubsystem final : public UWorldSubsystem
{
public:
	uint8                                         Pad_38[0x120];                                     // 0x0038(0x0120)(Fixing Size After Last Property [ Dumper-7 ])
	class UItemizationPersistenceManagerBase*     ItemizationPersistenceManager;                     // 0x0158(0x0008)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UItemizationSubsystemComponent*> Components;                                        // 0x0160(0x0010)(ZeroConstructor, Transient, UObjectWrapper, NativeAccessSpecifierPrivate)

public:
	void OnInventoryComponentDestroyed(const class UInventoryComponent* InventoryComponent);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ItemizationWorldSubsystem">();
	}
	static class UItemizationWorldSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UItemizationWorldSubsystem>();
	}
};

// Class ItemizationCoreRuntime.ItemRarity
// 0x0048 (0x0080 - 0x0038)
class UItemRarity final : public UDataAsset
{
public:
	class FText                                   Name_0;                                            // 0x0038(0x0010)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	class FText                                   Description;                                       // 0x0048(0x0010)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FLinearColor                           Color;                                             // 0x0058(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         Tier;                                              // 0x0068(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVerseGameplayTagContainer             Tags;                                              // 0x0070(0x0010)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)

public:
	const struct FLinearColor GetColor() const;
	const class FText GetDescription() const;
	const class FText GetName() const;
	float GetTier() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ItemRarity">();
	}
	static class UItemRarity* GetDefaultObj()
	{
		return GetDefaultObjImpl<UItemRarity>();
	}
};

// Class ItemizationCoreRuntime.ItemRarityTable
// 0x0030 (0x0068 - 0x0038)
class UItemRarityTable final : public UDataAsset
{
public:
	class FText                                   RarityTableName;                                   // 0x0038(0x0010)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	class FText                                   RarityTableDescription;                            // 0x0048(0x0010)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	TArray<struct FVkRarityEntry>                 RarityList;                                        // 0x0058(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ItemRarityTable">();
	}
	static class UItemRarityTable* GetDefaultObj()
	{
		return GetDefaultObjImpl<UItemRarityTable>();
	}
};

// Class ItemizationCoreRuntime.ItemType
// 0x0038 (0x0070 - 0x0038)
class UItemType final : public UDataAsset
{
public:
	class FText                                   Name_0;                                            // 0x0038(0x0010)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	class FText                                   Description;                                       // 0x0048(0x0010)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	class UItemType*                              ParentType;                                        // 0x0058(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVerseGameplayTagContainer             Tags;                                              // 0x0060(0x0010)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)

public:
	const class FText GetDescription() const;
	const class FText GetName() const;
	const class UItemType* GetParentType() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ItemType">();
	}
	static class UItemType* GetDefaultObj()
	{
		return GetDefaultObjImpl<UItemType>();
	}
};

// Class ItemizationCoreRuntime.VerseItemizationSubsystem
// 0x00D0 (0x0108 - 0x0038)
class UVerseItemizationSubsystem final : public UWorldSubsystem
{
public:
	uint8                                         Pad_38[0xD0];                                      // 0x0038(0x00D0)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"VerseItemizationSubsystem">();
	}
	static class UVerseItemizationSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVerseItemizationSubsystem>();
	}
};

// Class ItemizationCoreRuntime.ItemRequirementBase
// 0x0010 (0x0040 - 0x0030)
class UItemRequirementBase : public UObject
{
public:
	uint8                                         Pad_30[0x10];                                      // 0x0030(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ItemRequirementBase">();
	}
	static class UItemRequirementBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UItemRequirementBase>();
	}
};

// Class ItemizationCoreRuntime.EquippableItemRestrictionBase
// 0x0000 (0x0030 - 0x0030)
class UEquippableItemRestrictionBase : public UObject
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EquippableItemRestrictionBase">();
	}
	static class UEquippableItemRestrictionBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEquippableItemRestrictionBase>();
	}
};

// Class ItemizationCoreRuntime.InventoryComponent
// 0x0060 (0x0138 - 0x00D8)
class UInventoryComponent : public UActorComponent
{
public:
	TMulticastInlineDelegate<void(class UInventoryComponent* InventoryComponent)> OnInventoryComponentDestroyed;                     // 0x00D8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TSubclassOf<class AInventoryCollection>       InventoryCollectionClass;                          // 0x00E8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoClear, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UInventorySetupDataBase> InventorySetupData;                                // 0x00F0(0x0030)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class AInventoryCollection>    InventoryCollection;                               // 0x0120(0x0008)(Net, ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, RepNotify, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGuid                                  InventoryCollectionID;                             // 0x0128(0x0010)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void AddItem(class UItemDefinitionBase* ItemDefinition, int64 Amount);
	void AddOrResetInventory(class UInventoryDefinition* NewInventoryDefinition);
	void DropItem(const struct FGuid& ItemEntryID);
	void OnRep_InventoryCollection();
	void SetEquippableItemActive(const struct FGuid& ItemEntryID, bool bActive);
	void UseItem(const struct FGuid& ItemID, const struct FGuid& AdditionalItemID);

	class AInventoryCollection* GetInventoryCollection() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"InventoryComponent">();
	}
	static class UInventoryComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UInventoryComponent>();
	}
};

}

