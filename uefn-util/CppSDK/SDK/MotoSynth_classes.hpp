#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MotoSynth

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "MotoSynth_structs.hpp"
#include "CoreUObject_classes.hpp"
#include "AudioMixer_classes.hpp"


namespace SDK
{

// Class MotoSynth.MotoSynthPreset
// 0x0408 (0x0438 - 0x0030)
class UMotoSynthPreset final : public UObject
{
public:
	struct FRuntimeFloatCurve                     EnginePreviewRPMCurve;                             // 0x0030(0x0088)(Edit, EditorOnly, NativeAccessSpecifierPublic)
	struct FMotoSynthRuntimeSettings              Settings;                                          // 0x00B8(0x0140)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_1F8[0x240];                                    // 0x01F8(0x0240)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void DumpRuntimeMemoryUsage();
	void StartEnginePreview();
	void StopEnginePreview();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MotoSynthPreset">();
	}
	static class UMotoSynthPreset* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMotoSynthPreset>();
	}
};

// Class MotoSynth.MotoSynthSource
// 0x0150 (0x0180 - 0x0030)
class UMotoSynthSource final : public UObject
{
public:
	class USoundWave*                             SoundWaveSource;                                   // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, EditorOnly, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bConvertTo8Bit;                                    // 0x0038(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DownSampleFactor;                                  // 0x003C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                     RPMCurve;                                          // 0x0040(0x0088)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	float                                         RPMSynthVolume;                                    // 0x00C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, EditorOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnableFilteringForAnalysis;                       // 0x00CC(0x0001)(Edit, ZeroConstructor, IsPlainOldData, EditorOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_CD[0x3];                                       // 0x00CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LowPassFilterFrequency;                            // 0x00D0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, EditorOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         HighPassFilterFrequency;                           // 0x00D4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, EditorOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnableDynamicsProcessorForAnalysis;               // 0x00D8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, EditorOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D9[0x3];                                       // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DynamicsProcessorLookahead;                        // 0x00DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, EditorOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DynamicsProcessorInputGainDb;                      // 0x00E0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, EditorOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DynamicsProcessorRatio;                            // 0x00E4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, EditorOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DynamicsKneeBandwidth;                             // 0x00E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, EditorOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DynamicsProcessorThreshold;                        // 0x00EC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, EditorOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DynamicsProcessorAttackTimeMsec;                   // 0x00F0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, EditorOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DynamicsProcessorReleaseTimeMsec;                  // 0x00F4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, EditorOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnableNormalizationForAnalysis;                   // 0x00F8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, EditorOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_F9[0x3];                                       // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         SampleShiftOffset;                                 // 0x00FC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, EditorOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         RPMCycleCalibrationSample;                         // 0x0100(0x0004)(Edit, ZeroConstructor, IsPlainOldData, EditorOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         RPMFirstCycleSampleEnd;                            // 0x0104(0x0004)(Edit, ZeroConstructor, IsPlainOldData, EditorOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         RPMEstimationOctaveOffset;                         // 0x0108(0x0004)(Edit, ZeroConstructor, IsPlainOldData, EditorOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bWriteAnalysisInputToFile;                         // 0x010C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, EditorOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_10D[0x3];                                      // 0x010D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 AnalysisInputFilePath;                             // 0x0110(0x0010)(Edit, ZeroConstructor, EditorOnly, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_120[0x10];                                     // 0x0120(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<float>                                 SourceData;                                        // 0x0130(0x0010)(ZeroConstructor, Deprecated, Protected, NativeAccessSpecifierProtected)
	TArray<int16>                                 SourceDataPCM;                                     // 0x0140(0x0010)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	int32                                         SourceSampleRate;                                  // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_154[0x4];                                      // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGrainTableEntry>               GrainTable;                                        // 0x0158(0x0010)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_168[0x18];                                     // 0x0168(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void PerformGrainTableAnalysis();
	void PlayToneMatch();
	void StopToneMatch();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MotoSynthSource">();
	}
	static class UMotoSynthSource* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMotoSynthSource>();
	}
};

// Class MotoSynth.SynthComponentMoto
// 0x01A0 (0x0AC0 - 0x0920)
class USynthComponentMoto : public USynthComponent
{
public:
	class UMotoSynthPreset*                       MotoSynthPreset;                                   // 0x0920(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RPM;                                               // 0x0928(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_92C[0x194];                                    // 0x092C(0x0194)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void GetRPMRange(float* OutMinRPM, float* OutMaxRPM);
	void SetRPM(float InRPM, float InTimeSec);
	void SetSettings(const struct FMotoSynthRuntimeSettings& InSettings);

	bool IsEnabled() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SynthComponentMoto">();
	}
	static class USynthComponentMoto* GetDefaultObj()
	{
		return GetDefaultObjImpl<USynthComponentMoto>();
	}
};

}

