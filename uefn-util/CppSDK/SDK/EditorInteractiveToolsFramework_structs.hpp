#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: EditorInteractiveToolsFramework

#include "Basic.hpp"


namespace SDK
{

// Enum EditorInteractiveToolsFramework.EEditorGizmoCategory
// NumValues: 0x0003
enum class EEditorGizmoCategory : uint8
{
	Accessory                                = 0,
	Primary                                  = 1,
	EEditorGizmoCategory_MAX                 = 2,
};

// Enum EditorInteractiveToolsFramework.ETransformGizmoPartIdentifier
// NumValues: 0x0019
enum class ETransformGizmoPartIdentifier : uint32
{
	Default                                  = 0,
	TranslateAll                             = 1,
	TranslateXAxis                           = 2,
	TranslateYAxis                           = 3,
	TranslateZAxis                           = 4,
	TranslateXYPlanar                        = 5,
	TranslateYZPlanar                        = 6,
	TranslateXZPlanar                        = 7,
	TranslateScreenSpace                     = 8,
	RotateAll                                = 9,
	RotateXAxis                              = 10,
	RotateYAxis                              = 11,
	RotateZAxis                              = 12,
	RotateScreenSpace                        = 13,
	RotateArcball                            = 14,
	ScaleAll                                 = 15,
	ScaleXAxis                               = 16,
	ScaleYAxis                               = 17,
	ScaleZAxis                               = 18,
	ScaleXYPlanar                            = 19,
	ScaleYZPlanar                            = 20,
	ScaleXZPlanar                            = 21,
	ScaleUniform                             = 22,
	Max                                      = 23,
	ETransformGizmoPartIdentifier_MAX        = 24,
};

// Enum EditorInteractiveToolsFramework.EAxisRotateMode
// NumValues: 0x0003
enum class EAxisRotateMode : uint8
{
	Pull                                     = 0,
	Arc                                      = 1,
	EAxisRotateMode_MAX                      = 2,
};

// Enum EditorInteractiveToolsFramework.EGizmoTransformMode
// NumValues: 0x0006
enum class EGizmoTransformMode : uint8
{
	None                                     = 0,
	Translate                                = 1,
	Rotate                                   = 2,
	Scale                                    = 3,
	Max                                      = 4,
	EGizmoTransformMode_MAX                  = 5,
};

// Enum EditorInteractiveToolsFramework.EGizmoTransformScaleType
// NumValues: 0x0003
enum class EGizmoTransformScaleType : uint8
{
	Default                                  = 0,
	PercentageBased                          = 1,
	EGizmoTransformScaleType_MAX             = 2,
};

// ScriptStruct EditorInteractiveToolsFramework.ActiveEditorGizmo
// 0x0010 (0x0010 - 0x0000)
struct FActiveEditorGizmo final
{
public:
	class UInteractiveGizmo*                      Gizmo;                                             // 0x0000(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct EditorInteractiveToolsFramework.InteractiveToolStack
// 0x0020 (0x0020 - 0x0000)
struct alignas(0x08) FInteractiveToolStack final
{
public:
	uint8                                         Pad_0[0x20];                                       // 0x0000(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct EditorInteractiveToolsFramework.GizmosParameters
// 0x0002 (0x0002 - 0x0000)
struct FGizmosParameters final
{
public:
	EAxisRotateMode                               RotateMode;                                        // 0x0000(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCtrlMiddleDoesY;                                  // 0x0001(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

}

