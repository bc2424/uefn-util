#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BlueprintEditorLibrary

#include "Basic.hpp"

#include "BlueprintEditorLibrary_classes.hpp"
#include "BlueprintEditorLibrary_parameters.hpp"


namespace SDK
{

// Function BlueprintEditorLibrary.BlueprintEditorLibrary.AddFunctionGraph
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UBlueprint*                       Blueprint                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           FuncName                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UEdGraph*                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UEdGraph* UBlueprintEditorLibrary::AddFunctionGraph(class UBlueprint* Blueprint, const class FString& FuncName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BlueprintEditorLibrary", "AddFunctionGraph");

	Params::BlueprintEditorLibrary_AddFunctionGraph Parms{};

	Parms.Blueprint = Blueprint;
	Parms.FuncName = std::move(FuncName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintEditorLibrary.BlueprintEditorLibrary.CompileBlueprint
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UBlueprint*                       Blueprint                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBlueprintEditorLibrary::CompileBlueprint(class UBlueprint* Blueprint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BlueprintEditorLibrary", "CompileBlueprint");

	Params::BlueprintEditorLibrary_CompileBlueprint Parms{};

	Parms.Blueprint = Blueprint;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintEditorLibrary.BlueprintEditorLibrary.CreateBlueprintAssetWithParent
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           AssetPath                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UClass*                           ParentClass                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBlueprint*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBlueprint* UBlueprintEditorLibrary::CreateBlueprintAssetWithParent(const class FString& AssetPath, class UClass* ParentClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BlueprintEditorLibrary", "CreateBlueprintAssetWithParent");

	Params::BlueprintEditorLibrary_CreateBlueprintAssetWithParent Parms{};

	Parms.AssetPath = std::move(AssetPath);
	Parms.ParentClass = ParentClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintEditorLibrary.BlueprintEditorLibrary.FindEventGraph
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UBlueprint*                       Blueprint                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UEdGraph*                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UEdGraph* UBlueprintEditorLibrary::FindEventGraph(class UBlueprint* Blueprint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BlueprintEditorLibrary", "FindEventGraph");

	Params::BlueprintEditorLibrary_FindEventGraph Parms{};

	Parms.Blueprint = Blueprint;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintEditorLibrary.BlueprintEditorLibrary.FindGraph
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UBlueprint*                       Blueprint                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             GraphName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UEdGraph*                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UEdGraph* UBlueprintEditorLibrary::FindGraph(class UBlueprint* Blueprint, class FName GraphName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BlueprintEditorLibrary", "FindGraph");

	Params::BlueprintEditorLibrary_FindGraph Parms{};

	Parms.Blueprint = Blueprint;
	Parms.GraphName = GraphName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintEditorLibrary.BlueprintEditorLibrary.GeneratedClass
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UBlueprint*                       BlueprintObj                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UClass*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UClass* UBlueprintEditorLibrary::GeneratedClass(class UBlueprint* BlueprintObj)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BlueprintEditorLibrary", "GeneratedClass");

	Params::BlueprintEditorLibrary_GeneratedClass Parms{};

	Parms.BlueprintObj = BlueprintObj;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintEditorLibrary.BlueprintEditorLibrary.GetBlueprintAsset
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          Object                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBlueprint*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBlueprint* UBlueprintEditorLibrary::GetBlueprintAsset(class UObject* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BlueprintEditorLibrary", "GetBlueprintAsset");

	Params::BlueprintEditorLibrary_GetBlueprintAsset Parms{};

	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintEditorLibrary.BlueprintEditorLibrary.RefreshAllOpenBlueprintEditors
// (Final, Native, Static, Public, BlueprintCallable)

void UBlueprintEditorLibrary::RefreshAllOpenBlueprintEditors()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BlueprintEditorLibrary", "RefreshAllOpenBlueprintEditors");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintEditorLibrary.BlueprintEditorLibrary.RefreshOpenEditorsForBlueprint
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UBlueprint*                       BP                                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBlueprintEditorLibrary::RefreshOpenEditorsForBlueprint(const class UBlueprint* BP)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BlueprintEditorLibrary", "RefreshOpenEditorsForBlueprint");

	Params::BlueprintEditorLibrary_RefreshOpenEditorsForBlueprint Parms{};

	Parms.BP = BP;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintEditorLibrary.BlueprintEditorLibrary.RemoveFunctionGraph
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UBlueprint*                       Blueprint                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             FuncName                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBlueprintEditorLibrary::RemoveFunctionGraph(class UBlueprint* Blueprint, class FName FuncName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BlueprintEditorLibrary", "RemoveFunctionGraph");

	Params::BlueprintEditorLibrary_RemoveFunctionGraph Parms{};

	Parms.Blueprint = Blueprint;
	Parms.FuncName = FuncName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintEditorLibrary.BlueprintEditorLibrary.RemoveGraph
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UBlueprint*                       Blueprint                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UEdGraph*                         Graph                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBlueprintEditorLibrary::RemoveGraph(class UBlueprint* Blueprint, class UEdGraph* Graph)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BlueprintEditorLibrary", "RemoveGraph");

	Params::BlueprintEditorLibrary_RemoveGraph Parms{};

	Parms.Blueprint = Blueprint;
	Parms.Graph = Graph;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintEditorLibrary.BlueprintEditorLibrary.RemoveUnusedNodes
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UBlueprint*                       Blueprint                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBlueprintEditorLibrary::RemoveUnusedNodes(class UBlueprint* Blueprint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BlueprintEditorLibrary", "RemoveUnusedNodes");

	Params::BlueprintEditorLibrary_RemoveUnusedNodes Parms{};

	Parms.Blueprint = Blueprint;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintEditorLibrary.BlueprintEditorLibrary.RemoveUnusedVariables
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UBlueprint*                       Blueprint                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UBlueprintEditorLibrary::RemoveUnusedVariables(class UBlueprint* Blueprint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BlueprintEditorLibrary", "RemoveUnusedVariables");

	Params::BlueprintEditorLibrary_RemoveUnusedVariables Parms{};

	Parms.Blueprint = Blueprint;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintEditorLibrary.BlueprintEditorLibrary.RenameGraph
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UEdGraph*                         Graph                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           NewNameStr                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBlueprintEditorLibrary::RenameGraph(class UEdGraph* Graph, const class FString& NewNameStr)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BlueprintEditorLibrary", "RenameGraph");

	Params::BlueprintEditorLibrary_RenameGraph Parms{};

	Parms.Graph = Graph;
	Parms.NewNameStr = std::move(NewNameStr);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintEditorLibrary.BlueprintEditorLibrary.ReparentBlueprint
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UBlueprint*                       Blueprint                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UClass*                           NewParentClass                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBlueprintEditorLibrary::ReparentBlueprint(class UBlueprint* Blueprint, class UClass* NewParentClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BlueprintEditorLibrary", "ReparentBlueprint");

	Params::BlueprintEditorLibrary_ReparentBlueprint Parms{};

	Parms.Blueprint = Blueprint;
	Parms.NewParentClass = NewParentClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintEditorLibrary.BlueprintEditorLibrary.ReplaceVariableReferences
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UBlueprint*                       Blueprint                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             OldVarName                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             NewVarName                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBlueprintEditorLibrary::ReplaceVariableReferences(class UBlueprint* Blueprint, const class FName OldVarName, const class FName NewVarName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BlueprintEditorLibrary", "ReplaceVariableReferences");

	Params::BlueprintEditorLibrary_ReplaceVariableReferences Parms{};

	Parms.Blueprint = Blueprint;
	Parms.OldVarName = OldVarName;
	Parms.NewVarName = NewVarName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintEditorLibrary.BlueprintEditorLibrary.SetBlueprintVariableExposeOnSpawn
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UBlueprint*                       Blueprint                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             VariableName                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bExposeOnSpawn                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBlueprintEditorLibrary::SetBlueprintVariableExposeOnSpawn(class UBlueprint* Blueprint, const class FName& VariableName, bool bExposeOnSpawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BlueprintEditorLibrary", "SetBlueprintVariableExposeOnSpawn");

	Params::BlueprintEditorLibrary_SetBlueprintVariableExposeOnSpawn Parms{};

	Parms.Blueprint = Blueprint;
	Parms.VariableName = VariableName;
	Parms.bExposeOnSpawn = bExposeOnSpawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintEditorLibrary.BlueprintEditorLibrary.SetBlueprintVariableExposeToCinematics
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UBlueprint*                       Blueprint                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             VariableName                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bExposeToCinematics                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBlueprintEditorLibrary::SetBlueprintVariableExposeToCinematics(class UBlueprint* Blueprint, const class FName& VariableName, bool bExposeToCinematics)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BlueprintEditorLibrary", "SetBlueprintVariableExposeToCinematics");

	Params::BlueprintEditorLibrary_SetBlueprintVariableExposeToCinematics Parms{};

	Parms.Blueprint = Blueprint;
	Parms.VariableName = VariableName;
	Parms.bExposeToCinematics = bExposeToCinematics;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintEditorLibrary.BlueprintEditorLibrary.SetBlueprintVariableInstanceEditable
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UBlueprint*                       Blueprint                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             VariableName                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInstanceEditable                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBlueprintEditorLibrary::SetBlueprintVariableInstanceEditable(class UBlueprint* Blueprint, const class FName& VariableName, bool bInstanceEditable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BlueprintEditorLibrary", "SetBlueprintVariableInstanceEditable");

	Params::BlueprintEditorLibrary_SetBlueprintVariableInstanceEditable Parms{};

	Parms.Blueprint = Blueprint;
	Parms.VariableName = VariableName;
	Parms.bInstanceEditable = bInstanceEditable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintEditorLibrary.BlueprintEditorLibrary.UpgradeOperatorNodes
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UBlueprint*                       Blueprint                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBlueprintEditorLibrary::UpgradeOperatorNodes(class UBlueprint* Blueprint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BlueprintEditorLibrary", "UpgradeOperatorNodes");

	Params::BlueprintEditorLibrary_UpgradeOperatorNodes Parms{};

	Parms.Blueprint = Blueprint;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

