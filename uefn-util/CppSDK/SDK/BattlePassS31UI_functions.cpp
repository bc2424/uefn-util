#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BattlePassS31UI

#include "Basic.hpp"

#include "BattlePassS31UI_classes.hpp"
#include "BattlePassS31UI_parameters.hpp"


namespace SDK
{

// Function BattlePassS31UI.BattlePassLandingPageS31.OnBattlePassSubscriptionAllowed
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bSubscriptionAllowed                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBattlePassLandingPageS31::OnBattlePassSubscriptionAllowed(const bool bSubscriptionAllowed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassLandingPageS31", "OnBattlePassSubscriptionAllowed");

	Params::BattlePassLandingPageS31_OnBattlePassSubscriptionAllowed Parms{};

	Parms.bSubscriptionAllowed = bSubscriptionAllowed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePassS31UI.BattlePassRewardPageS31.HandleRewardTracksBoundaryNavigation
// (Final, Native, Private)
// Parameters:
// EUINavigation                           InNavigation                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWidget* UBattlePassRewardPageS31::HandleRewardTracksBoundaryNavigation(EUINavigation InNavigation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassRewardPageS31", "HandleRewardTracksBoundaryNavigation");

	Params::BattlePassRewardPageS31_HandleRewardTracksBoundaryNavigation Parms{};

	Parms.InNavigation = InNavigation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BattlePassS31UI.BattlePassRewardPageS31.OnInitForPageType
// (Event, Public, BlueprintEvent)
// Parameters:
// ERewardPageType                         InRewardPageType                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBattlePassRewardPageS31::OnInitForPageType(const ERewardPageType InRewardPageType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassRewardPageS31", "OnInitForPageType");

	Params::BattlePassRewardPageS31_OnInitForPageType Parms{};

	Parms.InRewardPageType = InRewardPageType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePassS31UI.BattlePassRewardPageS31.OnInputMethodChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// ECommonInputType                        InputType                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBattlePassRewardPageS31::OnInputMethodChanged(const ECommonInputType InputType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassRewardPageS31", "OnInputMethodChanged");

	Params::BattlePassRewardPageS31_OnInputMethodChanged Parms{};

	Parms.InputType = InputType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePassS31UI.BattlePassRewardPageS31.OnLoadingScreenSelectedChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsSelected                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBattlePassRewardPageS31::OnLoadingScreenSelectedChanged(bool bIsSelected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassRewardPageS31", "OnLoadingScreenSelectedChanged");

	Params::BattlePassRewardPageS31_OnLoadingScreenSelectedChanged Parms{};

	Parms.bIsSelected = bIsSelected;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePassS31UI.BattlePassRewardPageS31.OnPageChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   PageNumber                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   RewardPageTotal                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBattlePassRewardPageS31::OnPageChanged(const int32 PageNumber, const int32 RewardPageTotal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassRewardPageS31", "OnPageChanged");

	Params::BattlePassRewardPageS31_OnPageChanged Parms{};

	Parms.PageNumber = PageNumber;
	Parms.RewardPageTotal = RewardPageTotal;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePassS31UI.BattlePassRewardPageS31.GetRewardPageBackgroundData
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVaultWorldBackgroundData        ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FVaultWorldBackgroundData UBattlePassRewardPageS31::GetRewardPageBackgroundData() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassRewardPageS31", "GetRewardPageBackgroundData");

	Params::BattlePassRewardPageS31_GetRewardPageBackgroundData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BattlePassS31UI.BattlePassScreenS31.GoBackOneScreen
// (Final, Native, Public, BlueprintCallable)

void UBattlePassScreenS31::GoBackOneScreen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassScreenS31", "GoBackOneScreen");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BattlePassS31UI.BattlePassScreenS31.HandleClaimRewardComplete
// (Final, Native, Private, HasOutParams)
// Parameters:
// bool                                    bSuccess                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>                   OfferTemplateIdList                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UBattlePassScreenS31::HandleClaimRewardComplete(const bool bSuccess, const TArray<class FString>& OfferTemplateIdList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassScreenS31", "HandleClaimRewardComplete");

	Params::BattlePassScreenS31_HandleClaimRewardComplete Parms{};

	Parms.bSuccess = bSuccess;
	Parms.OfferTemplateIdList = std::move(OfferTemplateIdList);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BattlePassS31UI.BattlePassScreenS31.HandleFullscreenMapToggled
// (Final, Native, Private)
// Parameters:
// bool                                    bMapVisible                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBattlePassScreenS31::HandleFullscreenMapToggled(bool bMapVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassScreenS31", "HandleFullscreenMapToggled");

	Params::BattlePassScreenS31_HandleFullscreenMapToggled Parms{};

	Parms.bMapVisible = bMapVisible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BattlePassS31UI.BattlePassScreenS31.HandleItemVMCardClicked
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UFortItemVM*                      ItemVM                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FMcpVariantChannelInfo>   Variants                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UBattlePassScreenS31::HandleItemVMCardClicked(const class UFortItemVM* ItemVM, const TArray<struct FMcpVariantChannelInfo>& Variants)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassScreenS31", "HandleItemVMCardClicked");

	Params::BattlePassScreenS31_HandleItemVMCardClicked Parms{};

	Parms.ItemVM = ItemVM;
	Parms.Variants = std::move(Variants);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BattlePassS31UI.BattlePassScreenS31.HandleSwitcherVisibilityShown
// (Final, Native, Public, BlueprintCallable)

void UBattlePassScreenS31::HandleSwitcherVisibilityShown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassScreenS31", "HandleSwitcherVisibilityShown");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BattlePassS31UI.BattlePassScreenS31.OnBattlePassGiftingAllowed
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bGiftingAllowed                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBattlePassScreenS31::OnBattlePassGiftingAllowed(const bool bGiftingAllowed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassScreenS31", "OnBattlePassGiftingAllowed");

	Params::BattlePassScreenS31_OnBattlePassGiftingAllowed Parms{};

	Parms.bGiftingAllowed = bGiftingAllowed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePassS31UI.BattlePassScreenS31.OnBattlePassOwned
// (Event, Protected, BlueprintEvent)

void UBattlePassScreenS31::OnBattlePassOwned()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassScreenS31", "OnBattlePassOwned");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattlePassS31UI.BattlePassScreenS31.OnCreateViewRewardCard
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class UFortItemVM*                      ItemVM                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortItemDefinition*              EffectiveActivedef                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FMcpVariantChannelInfo>   Variants                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    bForceEffectiveImage                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBattlePassScreenS31::OnCreateViewRewardCard(const class UFortItemVM* ItemVM, const class UFortItemDefinition* EffectiveActivedef, const TArray<struct FMcpVariantChannelInfo>& Variants, bool bForceEffectiveImage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassScreenS31", "OnCreateViewRewardCard");

	Params::BattlePassScreenS31_OnCreateViewRewardCard Parms{};

	Parms.ItemVM = ItemVM;
	Parms.EffectiveActivedef = EffectiveActivedef;
	Parms.Variants = std::move(Variants);
	Parms.bForceEffectiveImage = bForceEffectiveImage;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePassS31UI.BattlePassScreenS31.OnGameModeCompatibilityTagUpdate
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UFortItemVM*                      FortItem                                               (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBattlePassScreenS31::OnGameModeCompatibilityTagUpdate(const class UFortItemVM* FortItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassScreenS31", "OnGameModeCompatibilityTagUpdate");

	Params::BattlePassScreenS31_OnGameModeCompatibilityTagUpdate Parms{};

	Parms.FortItem = FortItem;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePassS31UI.BattlePassScreenS31.OnHideItemDetails
// (Event, Protected, BlueprintEvent)

void UBattlePassScreenS31::OnHideItemDetails()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassScreenS31", "OnHideItemDetails");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattlePassS31UI.BattlePassScreenS31.OnInsufficientFunds
// (Event, Protected, BlueprintEvent)
// Parameters:
// EBattlePassCurrencyType                 CurrencyType                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBattlePassScreenS31::OnInsufficientFunds(const EBattlePassCurrencyType CurrencyType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassScreenS31", "OnInsufficientFunds");

	Params::BattlePassScreenS31_OnInsufficientFunds Parms{};

	Parms.CurrencyType = CurrencyType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePassS31UI.BattlePassScreenS31.OnInsufficientResource
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UFortPersistentResourceItemDefinition*PersistentResource                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBattlePassScreenS31::OnInsufficientResource(const class UFortPersistentResourceItemDefinition* PersistentResource)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassScreenS31", "OnInsufficientResource");

	Params::BattlePassScreenS31_OnInsufficientResource Parms{};

	Parms.PersistentResource = PersistentResource;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePassS31UI.BattlePassScreenS31.OnItemDelayed
// (Event, Protected, HasDefaults, BlueprintEvent)
// Parameters:
// struct FTimespan                        Delay                                                  (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBattlePassScreenS31::OnItemDelayed(const struct FTimespan& Delay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassScreenS31", "OnItemDelayed");

	Params::BattlePassScreenS31_OnItemDelayed Parms{};

	Parms.Delay = std::move(Delay);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePassS31UI.BattlePassScreenS31.OnItemDetailsClicked
// (Event, Protected, BlueprintEvent)

void UBattlePassScreenS31::OnItemDetailsClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassScreenS31", "OnItemDetailsClicked");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattlePassS31UI.BattlePassScreenS31.OnItemVmCardUpdate
// (Event, Protected, BlueprintEvent)
// Parameters:
// struct FExpandedItemVM                  ItemVMs                                                (ConstParm, Parm, NoDestructor, NativeAccessSpecifierPublic)
// class UAthenaSeasonItemEntryBase*       EntrySelected                                          (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBattlePassScreenS31::OnItemVmCardUpdate(const struct FExpandedItemVM& ItemVMs, const class UAthenaSeasonItemEntryBase* EntrySelected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassScreenS31", "OnItemVmCardUpdate");

	Params::BattlePassScreenS31_OnItemVmCardUpdate Parms{};

	Parms.ItemVMs = std::move(ItemVMs);
	Parms.EntrySelected = EntrySelected;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePassS31UI.BattlePassScreenS31.OnJunoCustomBannerUpdate
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// TSubclassOf<class UUserWidget>          BannerClassReference                                   (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UFortItemVM*>              ItemVMs                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UBattlePassScreenS31::OnJunoCustomBannerUpdate(TSubclassOf<class UUserWidget> BannerClassReference, const TArray<class UFortItemVM*>& ItemVMs)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassScreenS31", "OnJunoCustomBannerUpdate");

	Params::BattlePassScreenS31_OnJunoCustomBannerUpdate Parms{};

	Parms.BannerClassReference = BannerClassReference;
	Parms.ItemVMs = std::move(ItemVMs);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePassS31UI.BattlePassScreenS31.OnSetBaseRewardsInfo
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   OwnedRewards                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   TotalRewards                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CompletedPages                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   TotalPages                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBattlePassScreenS31::OnSetBaseRewardsInfo(const int32 OwnedRewards, const int32 TotalRewards, const int32 CompletedPages, const int32 TotalPages)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassScreenS31", "OnSetBaseRewardsInfo");

	Params::BattlePassScreenS31_OnSetBaseRewardsInfo Parms{};

	Parms.OwnedRewards = OwnedRewards;
	Parms.TotalRewards = TotalRewards;
	Parms.CompletedPages = CompletedPages;
	Parms.TotalPages = TotalPages;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePassS31UI.BattlePassScreenS31.OnSetBonusInfo
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// struct FBonusInfoMiniTagData            BonusInfo                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UBattlePassScreenS31::OnSetBonusInfo(const struct FBonusInfoMiniTagData& BonusInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassScreenS31", "OnSetBonusInfo");

	Params::BattlePassScreenS31_OnSetBonusInfo Parms{};

	Parms.BonusInfo = std::move(BonusInfo);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePassS31UI.BattlePassScreenS31.OnSetBonusRewardsInfo
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsUnlocked                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OwnedRewards                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   TotalRewards                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CompletedPages                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   TotalPages                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ClaimedOutfits                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   TotalOutfits                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBattlePassScreenS31::OnSetBonusRewardsInfo(const bool bIsUnlocked, const int32 OwnedRewards, const int32 TotalRewards, const int32 CompletedPages, const int32 TotalPages, const int32 ClaimedOutfits, const int32 TotalOutfits)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassScreenS31", "OnSetBonusRewardsInfo");

	Params::BattlePassScreenS31_OnSetBonusRewardsInfo Parms{};

	Parms.bIsUnlocked = bIsUnlocked;
	Parms.OwnedRewards = OwnedRewards;
	Parms.TotalRewards = TotalRewards;
	Parms.CompletedPages = CompletedPages;
	Parms.TotalPages = TotalPages;
	Parms.ClaimedOutfits = ClaimedOutfits;
	Parms.TotalOutfits = TotalOutfits;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePassS31UI.BattlePassScreenS31.OnSetCoverPageData
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             Title                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FText                             Description                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    bPageComplete                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBattlePassScreenS31::OnSetCoverPageData(const class FText& Title, const class FText& Description, const bool bPageComplete)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassScreenS31", "OnSetCoverPageData");

	Params::BattlePassScreenS31_OnSetCoverPageData Parms{};

	Parms.Title = std::move(Title);
	Parms.Description = std::move(Description);
	Parms.bPageComplete = bPageComplete;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePassS31UI.BattlePassScreenS31.OnSetCrewInfo
// (Event, Protected, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// bool                                    bIsNextMonthRewards                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             MonthText                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FTimespan                        NextMonthlyRewardTimespan                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             CharacterDisplayName                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FText                             CharacterDescription                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UBattlePassScreenS31::OnSetCrewInfo(bool bIsNextMonthRewards, const class FText& MonthText, const struct FTimespan& NextMonthlyRewardTimespan, const class FText& CharacterDisplayName, const class FText& CharacterDescription)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassScreenS31", "OnSetCrewInfo");

	Params::BattlePassScreenS31_OnSetCrewInfo Parms{};

	Parms.bIsNextMonthRewards = bIsNextMonthRewards;
	Parms.MonthText = std::move(MonthText);
	Parms.NextMonthlyRewardTimespan = std::move(NextMonthlyRewardTimespan);
	Parms.CharacterDisplayName = std::move(CharacterDisplayName);
	Parms.CharacterDescription = std::move(CharacterDescription);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePassS31UI.BattlePassScreenS31.OnSetEquipButtonEnable
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsEnable                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBattlePassScreenS31::OnSetEquipButtonEnable(bool bIsEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassScreenS31", "OnSetEquipButtonEnable");

	Params::BattlePassScreenS31_OnSetEquipButtonEnable Parms{};

	Parms.bIsEnable = bIsEnable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePassS31UI.BattlePassScreenS31.OnSetItemPrice
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   Cost                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EBattlePassCurrencyType                 CurrencyType                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBattlePassScreenS31::OnSetItemPrice(const int32 Cost, const EBattlePassCurrencyType CurrencyType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassScreenS31", "OnSetItemPrice");

	Params::BattlePassScreenS31_OnSetItemPrice Parms{};

	Parms.Cost = Cost;
	Parms.CurrencyType = CurrencyType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePassS31UI.BattlePassScreenS31.OnSetPrerequisiteInfo
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             Description                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   CurrentAmount                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NeededAmount                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EBattlePassRewardPrerequisiteType       PrerequisiteType                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bShowPrerequisiteLock                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBattlePassScreenS31::OnSetPrerequisiteInfo(const class FText& Description, const int32 CurrentAmount, const int32 NeededAmount, EBattlePassRewardPrerequisiteType PrerequisiteType, const bool bShowPrerequisiteLock)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassScreenS31", "OnSetPrerequisiteInfo");

	Params::BattlePassScreenS31_OnSetPrerequisiteInfo Parms{};

	Parms.Description = std::move(Description);
	Parms.CurrentAmount = CurrentAmount;
	Parms.NeededAmount = NeededAmount;
	Parms.PrerequisiteType = PrerequisiteType;
	Parms.bShowPrerequisiteLock = bShowPrerequisiteLock;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePassS31UI.BattlePassScreenS31.OnSetQuestRewardsInfo
// (Event, Protected, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// struct FTimespan                        DelayTimespan                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OwnedRewards                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   TotalRewards                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CompletedPages                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   TotalPages                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBattlePassScreenS31::OnSetQuestRewardsInfo(const struct FTimespan& DelayTimespan, const int32 OwnedRewards, const int32 TotalRewards, const int32 CompletedPages, const int32 TotalPages)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassScreenS31", "OnSetQuestRewardsInfo");

	Params::BattlePassScreenS31_OnSetQuestRewardsInfo Parms{};

	Parms.DelayTimespan = std::move(DelayTimespan);
	Parms.OwnedRewards = OwnedRewards;
	Parms.TotalRewards = TotalRewards;
	Parms.CompletedPages = CompletedPages;
	Parms.TotalPages = TotalPages;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePassS31UI.BattlePassScreenS31.OnSetResourcePrice
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   Cost                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortPersistentResourceItemDefinition*PersistentResource                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBattlePassScreenS31::OnSetResourcePrice(const int32 Cost, const class UFortPersistentResourceItemDefinition* PersistentResource)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassScreenS31", "OnSetResourcePrice");

	Params::BattlePassScreenS31_OnSetResourcePrice Parms{};

	Parms.Cost = Cost;
	Parms.PersistentResource = PersistentResource;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePassS31UI.BattlePassScreenS31.OnSetWarningToolTip
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// ERewardWarningTooltipType31             WarningTooltipType                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             Description                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UBattlePassScreenS31::OnSetWarningToolTip(const ERewardWarningTooltipType31& WarningTooltipType, const class FText& Description)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassScreenS31", "OnSetWarningToolTip");

	Params::BattlePassScreenS31_OnSetWarningToolTip Parms{};

	Parms.WarningTooltipType = WarningTooltipType;
	Parms.Description = std::move(Description);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePassS31UI.BattlePassScreenS31.OnSetWeeklyRewardsInfo
// (Event, Protected, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// struct FTimespan                        DelayTimespan                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   AvailableRewards                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OwnedRewards                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   TotalRewards                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   AvailablePages                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CompletedPages                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   TotalPages                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBattlePassScreenS31::OnSetWeeklyRewardsInfo(const struct FTimespan& DelayTimespan, const int32 AvailableRewards, const int32 OwnedRewards, const int32 TotalRewards, const int32 AvailablePages, const int32 CompletedPages, const int32 TotalPages)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassScreenS31", "OnSetWeeklyRewardsInfo");

	Params::BattlePassScreenS31_OnSetWeeklyRewardsInfo Parms{};

	Parms.DelayTimespan = std::move(DelayTimespan);
	Parms.AvailableRewards = AvailableRewards;
	Parms.OwnedRewards = OwnedRewards;
	Parms.TotalRewards = TotalRewards;
	Parms.AvailablePages = AvailablePages;
	Parms.CompletedPages = CompletedPages;
	Parms.TotalPages = TotalPages;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePassS31UI.BattlePassScreenS31.OnTransitionItemDetails
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bTransitionForward                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBattlePassScreenS31::OnTransitionItemDetails(const bool bTransitionForward)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassScreenS31", "OnTransitionItemDetails");

	Params::BattlePassScreenS31_OnTransitionItemDetails Parms{};

	Parms.bTransitionForward = bTransitionForward;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePassS31UI.BattlePassScreenS31.OnUpdateBattlePassRequiredBar
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bPassRequiredVisible                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBattlePassScreenS31::OnUpdateBattlePassRequiredBar(const bool bPassRequiredVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassScreenS31", "OnUpdateBattlePassRequiredBar");

	Params::BattlePassScreenS31_OnUpdateBattlePassRequiredBar Parms{};

	Parms.bPassRequiredVisible = bPassRequiredVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePassS31UI.BattlePassScreenS31.OnUpdateOwnedOrEquippedTag
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             StatusText                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UBattlePassScreenS31::OnUpdateOwnedOrEquippedTag(const class FText& StatusText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassScreenS31", "OnUpdateOwnedOrEquippedTag");

	Params::BattlePassScreenS31_OnUpdateOwnedOrEquippedTag Parms{};

	Parms.StatusText = std::move(StatusText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePassS31UI.BattlePassScreenS31.OnUpdateStatusBar
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             StatusText                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// EBattlePassStatusBarTypeS31             BarType                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBattlePassScreenS31::OnUpdateStatusBar(const class FText& StatusText, const EBattlePassStatusBarTypeS31& BarType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassScreenS31", "OnUpdateStatusBar");

	Params::BattlePassScreenS31_OnUpdateStatusBar Parms{};

	Parms.StatusText = std::move(StatusText);
	Parms.BarType = BarType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePassS31UI.BattlePassScreenS31.OverviewShowAnimationFinished
// (Final, Native, Public, BlueprintCallable)

void UBattlePassScreenS31::OverviewShowAnimationFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassScreenS31", "OverviewShowAnimationFinished");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BattlePassS31UI.BattlePassScreenS31.SetFocusToFirstItemDetailsCard
// (Event, Protected, BlueprintEvent)

void UBattlePassScreenS31::SetFocusToFirstItemDetailsCard()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassScreenS31", "SetFocusToFirstItemDetailsCard");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattlePassS31UI.BattlePassScreenS31.GetEquipButtonEnable
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBattlePassScreenS31::GetEquipButtonEnable() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassScreenS31", "GetEquipButtonEnable");

	Params::BattlePassScreenS31_GetEquipButtonEnable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BattlePassS31UI.BattlePassScreenS31.GetQuestPageDelay
// (Final, Native, Protected, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FTimespan                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FTimespan UBattlePassScreenS31::GetQuestPageDelay() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassScreenS31", "GetQuestPageDelay");

	Params::BattlePassScreenS31_GetQuestPageDelay Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BattlePassS31UI.BattlePassScreenS31.IsSeasonalCustomizationItemOwned
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBattlePassScreenS31::IsSeasonalCustomizationItemOwned() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassScreenS31", "IsSeasonalCustomizationItemOwned");

	Params::BattlePassScreenS31_IsSeasonalCustomizationItemOwned Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BattlePassS31UI.FortBattlePassResourcesWidgetS31.OnBattleStarRewardsSet
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   Rewards                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortBattlePassResourcesWidgetS31::OnBattleStarRewardsSet(const int32 Rewards)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortBattlePassResourcesWidgetS31", "OnBattleStarRewardsSet");

	Params::FortBattlePassResourcesWidgetS31_OnBattleStarRewardsSet Parms{};

	Parms.Rewards = Rewards;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePassS31UI.FortBattlePassResourcesWidgetS31.OnStylePointsRewardsSet
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   Rewards                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortBattlePassResourcesWidgetS31::OnStylePointsRewardsSet(const int32 Rewards)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortBattlePassResourcesWidgetS31", "OnStylePointsRewardsSet");

	Params::FortBattlePassResourcesWidgetS31_OnStylePointsRewardsSet Parms{};

	Parms.Rewards = Rewards;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePassS31UI.FortBattlePassTutorialTooltipS31.HideTooltip
// (Event, Protected, BlueprintEvent)

void UFortBattlePassTutorialTooltipS31::HideTooltip()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortBattlePassTutorialTooltipS31", "HideTooltip");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattlePassS31UI.FortBattlePassTutorialTooltipS31.SetText
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FText                             Text                                                   (Parm, NativeAccessSpecifierPublic)

void UFortBattlePassTutorialTooltipS31::SetText(const class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortBattlePassTutorialTooltipS31", "SetText");

	Params::FortBattlePassTutorialTooltipS31_SetText Parms{};

	Parms.Text = std::move(Text);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BattlePassS31UI.FortBattlePassTutorialTooltipS31.ShowTooltip
// (Event, Protected, BlueprintEvent)

void UFortBattlePassTutorialTooltipS31::ShowTooltip()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortBattlePassTutorialTooltipS31", "ShowTooltip");

	UObject::ProcessEvent(Func, nullptr);
}

}

