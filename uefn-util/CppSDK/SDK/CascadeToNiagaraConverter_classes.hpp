#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CascadeToNiagaraConverter

#include "Basic.hpp"

#include "CoreUObject_classes.hpp"
#include "Niagara_structs.hpp"
#include "CascadeToNiagaraConverter_structs.hpp"
#include "NiagaraEditor_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// Class CascadeToNiagaraConverter.NiagaraSystemConversionContext
// 0x0068 (0x0098 - 0x0030)
class UNiagaraSystemConversionContext final : public UObject
{
public:
	uint8                                         Pad_30[0x68];                                      // 0x0030(0x0068)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	class UNiagaraEmitterConversionContext* AddEmptyEmitter(const class FString& NewEmitterNameString);
	void Cleanup();
	void Finalize();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"NiagaraSystemConversionContext">();
	}
	static class UNiagaraSystemConversionContext* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNiagaraSystemConversionContext>();
	}
};

// Class CascadeToNiagaraConverter.NiagaraEmitterConversionContext
// 0x00B8 (0x00E8 - 0x0030)
class UNiagaraEmitterConversionContext final : public UObject
{
public:
	uint8                                         Pad_30[0xB8];                                      // 0x0030(0x00B8)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void AddEventHandler(const struct FNiagaraEventHandlerAddAction& EventScriptPropertiesBP);
	void AddModuleEventScript(const class FString& ScriptNameString, class UNiagaraScriptConversionContext* ScriptConversionContext, const struct FNiagaraEventHandlerAddAction& EventScriptProps);
	void AddModuleScript(const class FString& ScriptNameString, class UNiagaraScriptConversionContext* ScriptConversionContext, EScriptExecutionCategory ModuleScriptExecutionCategory);
	void AddRenderer(const class FString& RendererNameString, class UNiagaraRendererProperties* NewRendererProperties);
	void Cleanup();
	void Finalize();
	class UNiagaraScriptConversionContext* FindModuleScript(const class FString& ScriptNameString);
	class UNiagaraScriptConversionContext* FindOrAddModuleEventScript(const class FString& ScriptNameString, const struct FCreateScriptContextArgs& CreateScriptContextArgs, const struct FNiagaraEventHandlerAddAction& EventScriptProps);
	class UNiagaraScriptConversionContext* FindOrAddModuleScript(const class FString& ScriptNameString, const struct FCreateScriptContextArgs& CreateScriptContextArgs, EScriptExecutionCategory ModuleScriptExecutionCategory);
	class UNiagaraRendererProperties* FindRenderer(const class FString& RendererNameString);
	TArray<class UNiagaraRendererProperties*> GetAllRenderers();
	class UNiagaraEmitter* GetEmitter();
	void Log(const class FString& Message, ENiagaraMessageSeverity Severity, bool bIsVerbose);
	void RemoveModuleScriptsForAssets(const TArray<struct FAssetData>& ScriptsToRemove);
	void SetDetailBitMask(int32 BitMask);
	void SetEnabled(bool bInEnabled);
	void SetLocalSpace(bool bLocalSpace);
	void SetParameterDirectly(const class FString& ParameterNameString, class UNiagaraScriptConversionContextInput* ParameterInput, EScriptExecutionCategory SetParameterExecutionCategory);
	void SetPastedFunctionCallNode(class UNiagaraNodeFunctionCall* InFunctionCallNode);
	void SetRendererBinding(class UNiagaraRendererProperties* InRendererProperties, class FName BindingName, class FName VariableToBindName, ENiagaraRendererSourceDataMode SourceDataMode);
	void SetSimTarget(ENiagaraSimTarget InTarget);

	bool GetEnabled() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"NiagaraEmitterConversionContext">();
	}
	static class UNiagaraEmitterConversionContext* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNiagaraEmitterConversionContext>();
	}
};

// Class CascadeToNiagaraConverter.NiagaraScriptConversionContext
// 0x0098 (0x00C8 - 0x0030)
class UNiagaraScriptConversionContext final : public UObject
{
public:
	uint8                                         Pad_30[0x98];                                      // 0x0030(0x0098)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Log(const class FString& Message, ENiagaraMessageSeverity Severity, bool bIsVerbose);
	void SetModuleEnabled(bool bInModuleEnabled);
	bool SetParameter(const class FString& ParameterName, class UNiagaraScriptConversionContextInput* ParameterInput, bool bInHasEditCondition, bool bInEditConditionValue);

	bool GetModuleEnabled() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"NiagaraScriptConversionContext">();
	}
	static class UNiagaraScriptConversionContext* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNiagaraScriptConversionContext>();
	}
};

// Class CascadeToNiagaraConverter.NiagaraScriptConversionContextInput
// 0x0040 (0x0070 - 0x0030)
class UNiagaraScriptConversionContextInput final : public UObject
{
public:
	class UNiagaraClipboardFunctionInput*         ClipboardFunctionInput;                            // 0x0030(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ENiagaraScriptInputType                       InputType;                                         // 0x0038(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FNiagaraTypeDefinition                 TypeDefinition;                                    // 0x0040(0x0020)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_60[0x10];                                      // 0x0060(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Init(class UNiagaraClipboardFunctionInput* InClipboardFunctionInput, const ENiagaraScriptInputType InInputType, const struct FNiagaraTypeDefinition& InTypeDefinition);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"NiagaraScriptConversionContextInput">();
	}
	static class UNiagaraScriptConversionContextInput* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNiagaraScriptConversionContextInput>();
	}
};

// Class CascadeToNiagaraConverter.FXConverterUtilitiesLibrary
// 0x0000 (0x0030 - 0x0030)
class UFXConverterUtilitiesLibrary final : public UBlueprintFunctionLibrary
{
public:
	static struct FAssetData CreateAssetData(const class FString& InPath);
	static class UNiagaraComponentRendererProperties* CreateComponentRendererProperties();
	static class UNiagaraDataInterfaceCurve* CreateFloatCurveDI(const TArray<struct FRichCurveKeyBP>& Keys);
	static class UNiagaraLightRendererProperties* CreateLightRendererProperties();
	static class UNiagaraMeshRendererProperties* CreateMeshRendererProperties();
	static class UNiagaraRibbonRendererProperties* CreateRibbonRendererProperties();
	static class UNiagaraScriptConversionContext* CreateScriptContext(const struct FCreateScriptContextArgs& Args);
	static class UNiagaraScriptConversionContextInput* CreateScriptInputBool(bool Value);
	static class UNiagaraScriptConversionContextInput* CreateScriptInputDI(class UNiagaraDataInterface* Value);
	static class UNiagaraScriptConversionContextInput* CreateScriptInputDynamic(class UNiagaraScriptConversionContext* Value, ENiagaraScriptInputType InputType);
	static class UNiagaraScriptConversionContextInput* CreateScriptInputEnum(const class FString& UserDefinedEnumAssetPath, const class FString& UserDefinedEnumValueNameString);
	static class UNiagaraScriptConversionContextInput* CreateScriptInputFloat(float Value);
	static class UNiagaraScriptConversionContextInput* CreateScriptInputInt(int32 Value);
	static class UNiagaraScriptConversionContextInput* CreateScriptInputLinkedParameter(const class FString& ParameterNameString, ENiagaraScriptInputType InputType);
	static class UNiagaraScriptConversionContextInput* CreateScriptInputStruct(class UUserDefinedStruct* Value);
	static class UNiagaraScriptConversionContextInput* CreateScriptInputVec2(const struct FVector2D& Value);
	static class UNiagaraScriptConversionContextInput* CreateScriptInputVector(const struct FVector& Value);
	static class UNiagaraDataInterfaceSkeletalMesh* CreateSkeletalMeshDataInterface();
	static class UNiagaraSystemConversionContext* CreateSystemConversionContext(class UNiagaraSystem* InSystem);
	static class UNiagaraDataInterfaceVector2DCurve* CreateVec2CurveDI(const TArray<struct FRichCurveKeyBP>& X_Keys, const TArray<struct FRichCurveKeyBP>& Y_Keys);
	static class UNiagaraDataInterfaceVectorCurve* CreateVec3CurveDI(const TArray<struct FRichCurveKeyBP>& X_Keys, const TArray<struct FRichCurveKeyBP>& Y_Keys, const TArray<struct FRichCurveKeyBP>& Z_Keys);
	static class UNiagaraDataInterfaceVector4Curve* CreateVec4CurveDI(const TArray<struct FRichCurveKeyBP>& X_Keys, const TArray<struct FRichCurveKeyBP>& Y_Keys, const TArray<struct FRichCurveKeyBP>& Z_Keys, const TArray<struct FRichCurveKeyBP>& W_Keys);
	static class UParticleLODLevel* GetCascadeEmitterLodLevel(class UParticleEmitter* Emitter, const int32 Idx);
	static class FName GetCascadeEmitterName(class UParticleEmitter* Emitter);
	static int32 GetCascadeEmitterRenderMode(class UParticleEmitter* Emitter);
	static TArray<class UParticleEmitter*> GetCascadeSystemEmitters(const class UParticleSystem* System);
	static TArray<EDistributionVectorLockFlags> GetDistributionLockedAxes(class UDistribution* Distribution);
	static void GetDistributionMinMaxValues(class UDistribution* Distribution, bool* bOutSuccess, struct FVector* OutMinValue, struct FVector* OutMaxValue);
	static void GetDistributionType(class UDistribution* Distribution, EDistributionType* OutDistributionType, EDistributionValueType* OutCascadeDistributionValueType);
	static void GetFloatDistributionConstCurveValues(class UDistributionFloatConstantCurve* Distribution, struct FInterpCurveFloat* OutInterpCurveFloat);
	static void GetFloatDistributionConstValues(class UDistributionFloatConstant* Distribution, float* OutConstFloat);
	static void GetFloatDistributionParameterValues(class UDistributionFloatParameterBase* Distribution, class FName* OutParameterName, float* OutMinInput, float* OutMaxInput, float* OutMinOutput, float* OutMaxOutput);
	static void GetFloatDistributionUniformCurveValues(class UDistributionFloatUniformCurve* Distribution, struct FInterpCurveVector2D* OutInterpCurveVector2D);
	static void GetFloatDistributionUniformValues(class UDistributionFloatUniform* Distribution, float* OutMin, float* OutMax);
	static bool GetLodLevelIsEnabled(class UParticleLODLevel* LodLevel);
	static TArray<class UParticleModule*> GetLodLevelModules(class UParticleLODLevel* LodLevel);
	static class UParticleModuleRequired* GetLodLevelRequiredModule(class UParticleLODLevel* LodLevel);
	static class UParticleModuleSpawn* GetLodLevelSpawnModule(class UParticleLODLevel* LodLevel);
	static class UParticleModuleTypeDataBase* GetLodLevelTypeDataModule(class UParticleLODLevel* LodLevel);
	static class FString GetLongPackagePath(const class FString& InLongPackageName);
	static void GetParticleModuleAccelerationDragProps(class UParticleModuleAccelerationDrag* ParticleModule, class UDistribution** OutDragCoefficientRaw);
	static void GetParticleModuleAccelerationDragScaleOverLifeProps(class UParticleModuleAccelerationDragScaleOverLife* ParticleModule, class UDistribution** OutDragScaleRaw);
	static void GetParticleModuleAccelerationOverLifetimeProps(class UParticleModuleAccelerationOverLifetime* ParticleModule, class UDistribution** OutAccelOverLife);
	static void GetParticleModuleAccelerationProps(class UParticleModuleAcceleration* ParticleModule, class UDistribution** OutAcceleration, bool* bOutApplyOwnerScale);
	static void GetParticleModuleAttractorLineProps(class UParticleModuleAttractorLine* ParticleModule, struct FVector* OutStartPoint, struct FVector* OutEndPoint, class UDistribution** OutRange, class UDistribution** OutStrength);
	static void GetParticleModuleAttractorParticleProps(class UParticleModuleAttractorParticle* ParticleModule, class FName* OutEmitterName, class UDistribution** OutRange, bool* bOutStrengthByDistance, class UDistribution** OutStrength, bool* bOutAffectBaseVelocity, EAttractorParticleSelectionMethod* OutSelectionMethod, bool* bOutRenewSource, bool* bOutInheritSourceVelocity);
	static void GetParticleModuleAttractorPointProps(class UParticleModuleAttractorPoint* ParticleModule, class UDistribution** OutPosition, class UDistribution** OutRange, class UDistribution** OutStrength, bool* boutStrengthByDistance, bool* bOutAffectsBaseVelocity, bool* bOutOverrideVelocity, bool* bOutUseWorldSpacePosition, bool* bOutPositiveX, bool* bOutPositiveY, bool* bOutPositiveZ, bool* bOutNegativeX, bool* bOutNegativeY, bool* bOutNegativeZ);
	static void GetParticleModuleCameraOffsetProps(class UParticleModuleCameraOffset* ParticleModule, class UDistribution** OutCameraOffset, bool* bOutSpawnTimeOnly, EParticleCameraOffsetUpdateMethod* OutUpdateMethod);
	static void GetParticleModuleCollisionProps(class UParticleModuleCollision* ParticleModule, class UDistribution** OutDampingFactor, class UDistribution** OutDampingFactorRotation, class UDistribution** OutMaxCollisions, EParticleCollisionComplete* OutCollisionCompleteOption, TArray<EObjectTypeQuery>* OutCollisionTypes, bool* bOutApplyPhysics, bool* bOutIgnoreTriggerVolumes, class UDistribution** OutParticleMass, float* OutDirScalar, bool* bOutPawnsDoNotDecrementCount, bool* bOutOnlyVerticalNormalsDecrementCount, float* OutVerticalFudgeFactor, class UDistribution** OutDelayAmount, bool* bOutDropDetail, bool* bOutCollideOnlyIfVisible, bool* bOutIgnoreSourceActor, float* OutMaxCollisionDistance);
	static void GetParticleModuleColorOverLifeProps(class UParticleModuleColorOverLife* ParticleModule, class UDistribution** OutColorOverLife, class UDistribution** OutAlphaOverLife, bool* bOutClampAlpha);
	static void GetParticleModuleColorProps(class UParticleModuleColor* ParticleModule, class UDistribution** OutStartColor, class UDistribution** OutStartAlpha, bool* bOutClampAlpha);
	static void GetParticleModuleColorScaleOverLifeProps(class UParticleModuleColorScaleOverLife* ParticleModule, class UDistribution** OutColorScaleOverLife, class UDistribution** OutAlphaScaleOverLife, bool* bOutEmitterTime);
	static void GetParticleModuleConstantAccelerationProps(class UParticleModuleAccelerationConstant* ParticleModule, struct FVector* OutConstAcceleration);
	static void GetParticleModuleKillBoxProps(class UParticleModuleKillBox* ParticleModule, class UDistribution** OutLowerLeftCorner, class UDistribution** OutUpperRightCorner, bool* bOutWorldSpaceCoords, bool* bOutKillInside, bool* bOutAxisAlignedAndFixedSize);
	static void GetParticleModuleLifetimeProps(class UParticleModuleLifetime* ParticleModule, class UDistribution** OutLifetime);
	static void GetParticleModuleLightProps(class UParticleModuleLight* ParticleModule, bool* bOutUseInverseSquaredFalloff, bool* bOutAffectsTranslucency, bool* bOutPreviewLightRadius, float* OutSpawnFraction, class UDistribution** OutColorScaleOverLife, class UDistribution** OutBrightnessOverLife, class UDistribution** OutRadiusScale, class UDistribution** OutLightExponent, struct FLightingChannels* OutLightingChannels, float* OutVolumetricScatteringIntensity, bool* bOutHighQualityLights, bool* bOutShadowCastingLights);
	static void GetParticleModuleLocationBoneSocketProps(class UParticleModuleLocationBoneSocket* ParticleModule, ELocationBoneSocketSource* OutSourceType, struct FVector* OutUniversalOffset, TArray<struct FLocationBoneSocketInfoBP>* OutSourceLocations, ELocationBoneSocketSelectionMethod* OutSelectionMethod, bool* bOutUpdatePositionEachFrame, bool* bOutOrientMeshEmitters, bool* bOutInheritBoneVelocity, float* OutInheritVelocityScale, class FName* OutSkelMeshActorParamName, int32* OutNumPreSelectedIndices, class USkeletalMesh** OutEditorSkelMesh);
	static void GetParticleModuleLocationDirectProps(class UParticleModuleLocationDirect* ParticleModule, class UDistribution** OutLocation, class UDistribution** OutLocationOffset, class UDistribution** OutScaleFactor);
	static void GetParticleModuleLocationPrimitiveCylinderProps(class UParticleModuleLocationPrimitiveCylinder* ParticleModule, bool* bOutRadialVelocity, class UDistribution** OutStartRadius, class UDistribution** OutStartHeight, ECylinderHeightAxis* OutHeightAxis, bool* bOutPositiveX, bool* bOutPositiveY, bool* bOutPositiveZ, bool* bOutNegativeX, bool* bOutNegativeY, bool* bOutNegativeZ, bool* bOutSurfaceOnly, bool* bOutVelocity, class UDistribution** OutVelocityScale, class UDistribution** OutStartLocation);
	static void GetParticleModuleLocationPrimitiveSphereProps(class UParticleModuleLocationPrimitiveSphere* ParticleModule, class UDistribution** OutStartRadius, bool* bOutPositiveX, bool* bOutPositiveY, bool* bOutPositiveZ, bool* bOutNegativeX, bool* bOutNegativeY, bool* bOutNegativeZ, bool* bOutSurfaceOnly, bool* bOutVelocity, class UDistribution** OutVelocityScale, class UDistribution** OutStartLocation);
	static void GetParticleModuleLocationProps(class UParticleModuleLocation* ParticleModule, class UDistribution** OutStartLocation, float* OutDistributeOverNPoints, float* OutDistributeThreshold);
	static void GetParticleModuleMeshMaterialProps(class UParticleModuleMeshMaterial* ParticleModule, TArray<class UMaterialInterface*>* OutMeshMaterials);
	static void GetParticleModuleMeshRotationProps(class UParticleModuleMeshRotation* ParticleModule, class UDistribution** OutStartRotation, bool* bOutInheritParentRotation);
	static void GetParticleModuleMeshRotationRateMultiplyLifeProps(class UParticleModuleMeshRotationRateMultiplyLife* ParticleModule, class UDistribution** OutLifeMultiplier);
	static void GetParticleModuleMeshRotationRateProps(class UParticleModuleMeshRotationRate* ParticleModule, class UDistribution** OutStartRotationRate);
	static void GetParticleModuleOrbitProps(class UParticleModuleOrbit* ParticleModule, EOrbitChainMode* OutChainMode, class UDistribution** OutOffsetAmount, struct FOrbitOptionsBP* OutOffsetOptions, class UDistribution** OutRotationAmount, struct FOrbitOptionsBP* OutRotationOptions, class UDistribution** OutRotationRateAmount, struct FOrbitOptionsBP* OutRotationRateOptions);
	static void GetParticleModuleOrientationAxisLockProps(class UParticleModuleOrientationAxisLock* ParticleModule, EParticleAxisLock* OutLockAxisFlags);
	static void GetParticleModuleParameterDynamicProps(class UParticleModuleParameterDynamic* ParticleModule, TArray<struct FEmitterDynamicParameterBP>* OutDynamicParams, bool* bOutUsesVelocity);
	static void GetParticleModulePivotOffsetProps(class UParticleModulePivotOffset* ParticleModule, struct FVector2D* OutPivotOffset);
	static void GetParticleModuleRequiredPerEmitterProps(class UParticleModuleRequired* ParticleModuleRequired, struct FVector* OutEmitterOrigin, struct FRotator* OutEmitterRotation, bool* bOutUseLocalSpace, bool* bOutKillOnDeactivate, bool* bOutKillOnCompleted, bool* bOutUseLegacyEmitterTime, bool* bOutEmitterDurationUseRange, float* OutEmitterDuration, float* OutEmitterDurationLow, bool* bOUtEmitterDelayUseRange, bool* bOutDelayFirstLoopOnly, float* OutEmitterDelay, float* OutEmitterDelayLow, bool* bOutDurationRecalcEachLoop, int32* OutEmitterLoops);
	static void GetParticleModuleRequiredPerModuleProps(class UParticleModuleRequired* ParticleModuleRequired, bool* bOutOrbitModuleAffectsVelocityAlignment, float* OutRandomImageTime, int32* OutRandomImageChanges, bool* bOutOverrideSystemMacroUV, struct FVector* OutMacroUVPosition, float* OutMacroUVRadius);
	static void GetParticleModuleRequiredPerRendererProps(class UParticleModuleRequired* ParticleModuleRequired, class UMaterialInterface** OutMaterialInterface, EParticleScreenAlignment* OutScreenAlignment, int32* OutSubImages_Horizontal, int32* OutSubImages_Vertical, EParticleSortMode* OutSortMode, EParticleSubUVInterpMethod* OutInterpolationMethod, uint8* bOutRemoveHMDRoll, float* OutMinFacingCameraBlendDistance, float* OutMaxFacingCameraBlendDistance, class UTexture2D** OutCutoutTexture, ESubUVBoundingVertexCount* OutBoundingMode, EOpacitySourceMode* OutOpacitySourceMode, EEmitterNormalsMode* OutEmitterNormalsMode, float* OutAlphaThreshold);
	static void GetParticleModuleRotationOverLifetimeProps(class UParticleModuleRotationOverLifetime* ParticleModule, class UDistribution** OutRotationOverLife, bool* bOutScale);
	static void GetParticleModuleRotationProps(class UParticleModuleRotation* ParticleModule, class UDistribution** OutStartRotation);
	static void GetParticleModuleRotationRateProps(class UParticleModuleRotationRate* ParticleModule, class UDistribution** OutStartRotationRate);
	static void GetParticleModuleSizeMultiplyLifeProps(class UParticleModuleSizeMultiplyLife* ParticleModule, class UDistribution** OutLifeMultiplier, bool* OutMultiplyX, bool* OutMultiplyY, bool* OutMultiplyZ);
	static void GetParticleModuleSizeProps(class UParticleModuleSize* ParticleModule, class UDistribution** OutStartSize);
	static void GetParticleModuleSizeScaleBySpeedProps(class UParticleModuleSizeScaleBySpeed* ParticleModule, struct FVector2D* OutSpeedScale, struct FVector2D* OutMaxScale);
	static void GetParticleModuleSizeScaleProps(class UParticleModuleSizeScale* ParticleModule, class UDistribution** OutSizeScale);
	static void GetParticleModuleSpawnPerUnitProps(class UParticleModuleSpawnPerUnit* ParticleModule, float* OutUnitScalar, float* OutMovementTolerance, class UDistribution** OutSpawnPerUnit, float* OutMaxFrameDistance, bool* bOutIgnoreSpawnRateWhenMoving, bool* bOutIgnoreMovementAlongX, bool* bOutIgnoreMovementAlongY, bool* bOutIgnoreMovementAlongZ, bool* bOutProcessSpawnRate, bool* bOutProcessBurstList);
	static void GetParticleModuleSpawnProps(class UParticleModuleSpawn* ParticleModuleSpawn, class UDistribution** OutRate, class UDistribution** OutRateScale, EParticleBurstMethod* OutBurstMethod, TArray<struct FParticleBurstBlueprint>* OutBurstList, class UDistribution** OutBurstScale, bool* bOutApplyGlobalSpawnRateScale, bool* bOutProcessSpawnRate, bool* bOutProcessSpawnBurst);
	static void GetParticleModuleSubUVMovieProps(class UParticleModuleSubUVMovie* ParticleModule, bool* bOutUseEmitterTime, class UDistribution** OutFrameRate, int32* OutStartingFrame);
	static void GetParticleModuleSubUVProps(class UParticleModuleSubUV* ParticleModule, class USubUVAnimation** OutAnimation, class UDistribution** OutSubImageIndex, bool* bOutUseRealTime);
	static void GetParticleModuleTrailSourceProps(class UParticleModuleTrailSource* ParticleModule, ETrail2SourceMethod* OutSourceMethod, class FName* OutSourceName, class UDistribution** OutSourceStrength, bool* bOutLockSourceStrength, int32* OutSourceOffsetCount, TArray<struct FVector>* OutSourceOffsetDefaults, EParticleSourceSelectionMethod* OutSelectionMethod, bool* bOutInheritRotation);
	static void GetParticleModuleTypeDataGpuProps(class UParticleModuleTypeDataGpu* ParticleModule);
	static void GetParticleModuleTypeDataMeshProps(class UParticleModuleTypeDataMesh* ParticleModule, class UStaticMesh** OutMesh, float* OutLODSizeScale, bool* bOutUseStaticMeshLODs, bool* bOutCastShadows, bool* bOutDoCollisions, EMeshScreenAlignment* OutMeshAlignment, bool* bOutOverrideMaterial, bool* bOutOverrideDefaultMotionBlurSettings, bool* bOutEnableMotionBlur, class UDistribution** OutRollPitchYawRange, EParticleAxisLock* OutAxisLockOption, bool* bOutCameraFacing, EMeshCameraFacingUpAxis* OutCameraFacingUpAxisOption, EMeshCameraFacingOptions* OutCameraFacingOption, bool* bOutApplyParticleRotationAsSpin, bool* bOutFacingCameraDirectionRatherThanPosition, bool* bOutCollisionsConsiderParticleSize);
	static class UClass* GetParticleModuleTypeDataRibbonClass();
	static void GetParticleModuleTypeDataRibbonProps(class UParticleModuleTypeDataRibbon* ParticleModule, int32* OutMaxTessellationBetweenParticles, int32* OutSheetsPerTrail, int32* OutMaxTrailCount, int32* OutMaxParticleInTrailCount, bool* bOutDeadTrailsOnDeactivate, bool* bOutClipSourceSegment, bool* bOutEnablePreviousTangentRecalculation, bool* bOutTangentRecalculationEveryFrame, bool* bOutSpawnInitialParticle, ETrailsRenderAxisOption* OutRenderAxis, float* OutTangentSpawningScalar, bool* bOutRenderGeometry, bool* bOutRenderSpawnPoints, bool* bOutRenderTangents, bool* bOutRenderTessellation, float* OutTilingDistance, float* OutDistanceTessellationStepSize, bool* bOutEnableTangentDiffInterpScale, float* OutTangentTessellationScalar);
	static void GetParticleModuleVectorFieldLocalProps(class UParticleModuleVectorFieldLocal* ParticleModule, class UVectorField* OutVectorField, struct FVector* OutRelativeTranslation, struct FRotator* OutRelativeRotation, struct FVector* OutRelativeScale3D, float* OutIntensity, float* OutTightness, bool* bOutIgnoreComponentTransform, bool* bOutTileX, bool* bOutTileY, bool* bOutTileZ, bool* bOutUseFixDT);
	static void GetParticleModuleVectorFieldRotationRateProps(class UParticleModuleVectorFieldRotationRate* ParticleModule, struct FVector* OutRotationRate);
	static void GetParticleModuleVelocityInheritParentProps(class UParticleModuleVelocityInheritParent* ParticleModule, class UDistribution** OutScale, bool* bOutInWorldSpace, bool* bOutApplyOwnerScale);
	static void GetParticleModuleVelocityOverLifetimeProps(class UParticleModuleVelocityOverLifetime* ParticleModule, class UDistribution** OutVelOverLife, bool* bOutAbsolute, bool* bOutInWorldSpace, bool* bOutApplyOwnerScale);
	static void GetParticleModuleVelocityProps(class UParticleModuleVelocity* ParticleModule, class UDistribution** OutStartVelocity, class UDistribution** OutStartVelocityRadial, bool* bOutInWorldSpace, bool* bOutApplyOwnerScale);
	static void GetVectorDistributionConstCurveValues(class UDistributionVectorConstantCurve* Distribution, struct FInterpCurveVector* OutInterpCurveVector);
	static void GetVectorDistributionConstValues(class UDistributionVectorConstant* Distribution, struct FVector* OutConstVector);
	static void GetVectorDistributionParameterValues(class UDistributionVectorParameterBase* Distribution, class FName* OutParameterName, struct FVector* OutMinInput, struct FVector* OutMaxInput, struct FVector* OutMinOutput, struct FVector* OutMaxOutput);
	static void GetVectorDistributionUniformCurveValues(class UDistributionVectorUniformCurve* Distribution, struct FInterpCurveTwoVectors* OutInterpCurveTwoVectors);
	static void GetVectorDistributionUniformValues(class UDistributionVectorUniform* Distribution, struct FVector* OutMin, struct FVector* OutMax);
	static TArray<struct FRichCurveKeyBP> KeysFromInterpCurveFloat(const struct FInterpCurveFloat& Curve);
	static TArray<struct FRichCurveKeyBP> KeysFromInterpCurveTwoVectors(const struct FInterpCurveTwoVectors& Curve, int32 ComponentIdx);
	static TArray<struct FRichCurveKeyBP> KeysFromInterpCurveVector(const struct FInterpCurveVector& Curve, int32 ComponentIdx);
	static TArray<struct FRichCurveKeyBP> KeysFromInterpCurveVector2D(const struct FInterpCurveVector2D& Curve, int32 ComponentIdx);
	static void SetMeshRendererMaterialOverridesFromCascade(class UNiagaraMeshRendererProperties* MeshRendererProps, const TArray<class UMaterialInterface*>& MeshMaterials);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FXConverterUtilitiesLibrary">();
	}
	static class UFXConverterUtilitiesLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFXConverterUtilitiesLibrary>();
	}
};

// Class CascadeToNiagaraConverter.ConvertCascadeToNiagaraResults
// 0x0008 (0x0038 - 0x0030)
class UConvertCascadeToNiagaraResults final : public UObject
{
public:
	bool                                          bCancelledByUser;                                  // 0x0030(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCancelledByPythonError;                           // 0x0031(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Init();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ConvertCascadeToNiagaraResults">();
	}
	static class UConvertCascadeToNiagaraResults* GetDefaultObj()
	{
		return GetDefaultObjImpl<UConvertCascadeToNiagaraResults>();
	}
};

}

