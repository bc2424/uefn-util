#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ChaosVD

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "ChaosVDRuntime_structs.hpp"


namespace SDK
{

// Enum ChaosVD.EChaosVDAccelerationStructureDataVisualizationFlags
// NumValues: 0x000B
enum class EChaosVDAccelerationStructureDataVisualizationFlags : uint8
{
	None                                     = 0,
	DrawNodesBounds                          = 1,
	DrawBranches                             = 2,
	DrawLeavesBounds                         = 4,
	DrawLeavesElementBounds                  = 8,
	DrawLeavesElementConnections             = 16,
	DrawDynamicTrees                         = 32,
	DrawStaticTrees                          = 64,
	DrawLeavesRealElementBounds              = 128,
	EnableDraw                               = 96,
	EChaosVDAccelerationStructureDataVisualizationFlags_MAX = 129,
};

// Enum ChaosVD.EChaosVDCharacterGroundConstraintDataVisualizationFlags
// NumValues: 0x000C
enum class EChaosVDCharacterGroundConstraintDataVisualizationFlags : uint16
{
	None                                     = 0,
	TargetDeltaPosition                      = 1,
	TargetDeltaFacing                        = 2,
	GroundQueryDistance                      = 4,
	GroundQueryNormal                        = 8,
	AppliedRadialForce                       = 16,
	AppliedNormalForce                       = 32,
	AppliedTorque                            = 64,
	DrawDisabled                             = 128,
	OnlyDrawSelected                         = 256,
	EnableDraw                               = 512,
	EChaosVDCharacterGroundConstraintDataVisualizationFlags_MAX = 513,
};

// Enum ChaosVD.EChaosVDCollisionVisualizationFlags
// NumValues: 0x000B
enum class EChaosVDCollisionVisualizationFlags : uint16
{
	None                                     = 0,
	ContactPoints                            = 1,
	ContactInfo                              = 2,
	NetPushOut                               = 4,
	NetImpulse                               = 8,
	ContactNormal                            = 16,
	AccumulatedImpulse                       = 32,
	DrawInactiveContacts                     = 64,
	DrawDataOnlyForSelectedParticle          = 128,
	EnableDraw                               = 256,
	EChaosVDCollisionVisualizationFlags_MAX  = 257,
};

// Enum ChaosVD.EChaosVDGenericDebugDrawVisualizationFlags
// NumValues: 0x0007
enum class EChaosVDGenericDebugDrawVisualizationFlags : uint8
{
	None                                     = 0,
	EnableDraw                               = 1,
	DrawBoxes                                = 2,
	DrawLines                                = 4,
	DrawSpheres                              = 8,
	DrawImplicitObjects                      = 16,
	EChaosVDGenericDebugDrawVisualizationFlags_MAX = 17,
};

// Enum ChaosVD.EChaosVDMaterialType
// NumValues: 0x0005
enum class EChaosVDMaterialType : uint8
{
	SMOpaque                                 = 0,
	SMTranslucent                            = 1,
	ISMCOpaque                               = 2,
	ISMCTranslucent                          = 3,
	EChaosVDMaterialType_MAX                 = 4,
};

// Enum ChaosVD.EChaosVDMeshComponent
// NumValues: 0x0005
enum class EChaosVDMeshComponent : uint32
{
	Invalid                                  = 0,
	Static                                   = 1,
	InstancedStatic                          = 2,
	Dynamic                                  = 3,
	EChaosVDMeshComponent_MAX                = 4,
};

// Enum ChaosVD.EChaosVDJointsDataVisualizationFlags
// NumValues: 0x000C
enum class EChaosVDJointsDataVisualizationFlags : uint16
{
	None                                     = 0,
	PushOut                                  = 1,
	AngularImpulse                           = 2,
	ActorConnector                           = 4,
	CenterOfMassConnector                    = 8,
	Stretch                                  = 16,
	Axes                                     = 32,
	DrawKinematic                            = 64,
	DrawDisabled                             = 128,
	OnlyDrawSelected                         = 256,
	EnableDraw                               = 512,
	EChaosVDJointsDataVisualizationFlags_MAX = 513,
};

// Enum ChaosVD.EChaosVDActorGeometryUpdateFlags
// NumValues: 0x0003
enum class EChaosVDActorGeometryUpdateFlags : uint8
{
	None                                     = 0,
	ForceUpdate                              = 1,
	EChaosVDActorGeometryUpdateFlags_MAX     = 2,
};

// Enum ChaosVD.EChaosVDHideParticleFlags
// NumValues: 0x0006
enum class EChaosVDHideParticleFlags : uint8
{
	None                                     = 0,
	HiddenByVisualizationFlags               = 1,
	HiddenBySceneOutliner                    = 2,
	HiddenByActiveState                      = 4,
	HiddenBySolverVisibility                 = 8,
	EChaosVDHideParticleFlags_MAX            = 9,
};

// Enum ChaosVD.EChaosVDGeometryVisibilityFlags
// NumValues: 0x0008
enum class EChaosVDGeometryVisibilityFlags : uint8
{
	None                                     = 0,
	Query                                    = 2,
	Simulated                                = 4,
	Simple                                   = 8,
	Complex                                  = 16,
	ShowHeightfields                         = 32,
	ShowDisabledParticles                    = 64,
	EChaosVDGeometryVisibilityFlags_MAX      = 65,
};

// Enum ChaosVD.EChaosVDParticleDataVisualizationFlags
// NumValues: 0x000C
enum class EChaosVDParticleDataVisualizationFlags : uint16
{
	None                                     = 0,
	Velocity                                 = 1,
	AngularVelocity                          = 2,
	Acceleration                             = 4,
	AngularAcceleration                      = 8,
	LinearImpulse                            = 16,
	AngularImpulse                           = 32,
	ClusterConnectivityEdge                  = 64,
	CenterOfMass                             = 128,
	DrawDataOnlyForSelectedParticle          = 256,
	EnableDraw                               = 512,
	EChaosVDParticleDataVisualizationFlags_MAX = 513,
};

// Enum ChaosVD.EChaosVDParticleDebugColorMode
// NumValues: 0x0005
enum class EChaosVDParticleDebugColorMode : uint32
{
	None                                     = 0,
	State                                    = 1,
	ShapeType                                = 2,
	ClientServer                             = 3,
	EChaosVDParticleDebugColorMode_MAX       = 4,
};

// Enum ChaosVD.EChaosVDSyncTimelinesMode
// NumValues: 0x0004
enum class EChaosVDSyncTimelinesMode : uint8
{
	None                                     = 0,
	RecordedTimestamp                        = 1,
	NetworkTick                              = 2,
	EChaosVDSyncTimelinesMode_MAX            = 3,
};

// Enum ChaosVD.EChaosVDSceneCleanUpOptions
// NumValues: 0x0004
enum class EChaosVDSceneCleanUpOptions : uint8
{
	None                                     = 0,
	ReInitializeGeometryBuilder              = 1,
	CollectGarbage                           = 2,
	EChaosVDSceneCleanUpOptions_MAX          = 3,
};

// Enum ChaosVD.EChaosVDSceneQueryVisualizationFlags
// NumValues: 0x000A
enum class EChaosVDSceneQueryVisualizationFlags : uint8
{
	None                                     = 0,
	EnableDraw                               = 1,
	DrawLineTraceQueries                     = 2,
	DrawSweepQueries                         = 4,
	DrawOverlapQueries                       = 8,
	DrawHits                                 = 16,
	OnlyDrawSelectedQuery                    = 32,
	HideEmptyQueries                         = 64,
	HideSubQueries                           = 128,
	EChaosVDSceneQueryVisualizationFlags_MAX = 129,
};

// Enum ChaosVD.EChaosVDSQFrameVisualizationMode
// NumValues: 0x0003
enum class EChaosVDSQFrameVisualizationMode : uint8
{
	AllEnabledQueries                        = 0,
	RecordingOrder                           = 1,
	EChaosVDSQFrameVisualizationMode_MAX     = 2,
};

// Enum ChaosVD.EChaosVDLogVerbosityFlags
// NumValues: 0x0006
enum class EChaosVDLogVerbosityFlags : uint8
{
	None                                     = 0,
	Messages                                 = 1,
	Warnings                                 = 2,
	Errors                                   = 4,
	All                                      = 7,
	EChaosVDLogVerbosityFlags_MAX            = 8,
};

// Enum ChaosVD.EChaosVDLogBrowserDirtyFlags
// NumValues: 0x0007
enum class EChaosVDLogBrowserDirtyFlags : uint8
{
	None                                     = 0,
	Categories                               = 1,
	Messages                                 = 2,
	Verbosity                                = 4,
	Filtering                                = 8,
	Playback                                 = 16,
	EChaosVDLogBrowserDirtyFlags_MAX         = 17,
};

// Enum ChaosVD.EChaosVDRecordingMode
// NumValues: 0x0003
enum class EChaosVDRecordingMode : uint8
{
	File                                     = 0,
	Live                                     = 1,
	EChaosVDRecordingMode_MAX                = 2,
};

// Enum ChaosVD.EChaosVDLiveConnectionAttemptResult
// NumValues: 0x0003
enum class EChaosVDLiveConnectionAttemptResult : uint8
{
	Success                                  = 0,
	Failed                                   = 1,
	EChaosVDLiveConnectionAttemptResult_MAX  = 2,
};

// Enum ChaosVD.EChaosVDPlaybackButtonsID
// NumValues: 0x0006
enum class EChaosVDPlaybackButtonsID : uint8
{
	Play                                     = 0,
	Pause                                    = 1,
	Stop                                     = 2,
	Next                                     = 3,
	Prev                                     = 4,
	EChaosVDPlaybackButtonsID_MAX            = 5,
};

// ScriptStruct ChaosVD.ChaosVDImplicitObjectBasicView
// 0x0080 (0x0080 - 0x0000)
struct FChaosVDImplicitObjectBasicView final
{
public:
	class FName                                   ImplicitObjectType;                                // 0x0000(0x000C)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ShapeInstanceIndex;                                // 0x000C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsRootObject;                                     // 0x0010(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0xF];                                       // 0x0011(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RelativeTransform;                                 // 0x0020(0x0060)(Edit, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct ChaosVD.ChaosVDMeshDataInstanceState
// 0x0140 (0x0140 - 0x0000)
struct FChaosVDMeshDataInstanceState final
{
public:
	struct FChaosVDShapeCollisionData             CollisionData;                                     // 0x0000(0x002C)(Edit, EditConst, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FChaosVDImplicitObjectBasicView        ImplicitObjectInfo;                                // 0x0030(0x0080)(Edit, EditConst, NoDestructor, NativeAccessSpecifierPublic)
	struct FTransform                             CurrentWorldTransform;                             // 0x00B0(0x0060)(Edit, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EChaosVDMeshComponent                         MeshComponentType;                                 // 0x0110(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_114[0x4];                                      // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshComponent*                         MeshComponent;                                     // 0x0118(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MeshInstanceIndex;                                 // 0x0120(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           CurrentGeometryColor;                              // 0x0124(0x0010)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OwningParticleID;                                  // 0x0134(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OwningSolverID;                                    // 0x0138(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsVisible;                                        // 0x013C(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsSelected;                                       // 0x013D(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShowCVDDebugData;                                 // 0x013E(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_13F[0x1];                                      // 0x013F(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct ChaosVD.ChaosVDAABBTreeSelectionContext
// 0x0010 (0x0010 - 0x0000)
struct alignas(0x08) FChaosVDAABBTreeSelectionContext final
{
public:
	uint8                                         Pad_0[0x10];                                       // 0x0000(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct ChaosVD.ChaosVDRecentFile
// 0x0018 (0x0018 - 0x0000)
struct FChaosVDRecentFile final
{
public:
	class FString                                 FileName;                                          // 0x0000(0x0010)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDateTime                              LastOpenTime;                                      // 0x0010(0x0008)(ZeroConstructor, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct ChaosVD.ChaosDebugDrawColorsByShapeType
// 0x0014 (0x0014 - 0x0000)
struct FChaosDebugDrawColorsByShapeType final
{
public:
	struct FColor                                 SimpleTypeColor;                                   // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FColor                                 ConvexColor;                                       // 0x0004(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FColor                                 HeightFieldColor;                                  // 0x0008(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FColor                                 TriangleMeshColor;                                 // 0x000C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FColor                                 LevelSetColor;                                     // 0x0010(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct ChaosVD.ChaosDebugDrawColorsByClientServer
// 0x0008 (0x0008 - 0x0000)
struct FChaosDebugDrawColorsByClientServer final
{
public:
	struct FColor                                 ServerBaseColor;                                   // 0x0000(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FColor                                 ClientBaseColor;                                   // 0x0004(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct ChaosVD.ChaosDebugDrawColorsByState
// 0x0010 (0x0010 - 0x0000)
struct FChaosDebugDrawColorsByState final
{
public:
	struct FColor                                 DynamicColor;                                      // 0x0000(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FColor                                 SleepingColor;                                     // 0x0004(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FColor                                 KinematicColor;                                    // 0x0008(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FColor                                 StaticColor;                                       // 0x000C(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct ChaosVD.ChaosParticleDataDebugDrawColors
// 0x0080 (0x0080 - 0x0000)
struct FChaosParticleDataDebugDrawColors final
{
public:
	struct FLinearColor                           VelocityColor;                                     // 0x0000(0x0010)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           AngularVelocityColor;                              // 0x0010(0x0010)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           AccelerationColor;                                 // 0x0020(0x0010)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           AngularAccelerationColor;                          // 0x0030(0x0010)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           LinearImpulseColor;                                // 0x0040(0x0010)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           AngularImpulseColor;                               // 0x0050(0x0010)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           CenterOfMassColor;                                 // 0x0060(0x0010)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           ConnectivityDataColor;                             // 0x0070(0x0010)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct ChaosVD.ChaosVDSelectionContext
// 0x0001 (0x0001 - 0x0000)
struct FChaosVDSelectionContext
{
public:
	uint8                                         Pad_0[0x1];                                        // 0x0000(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct ChaosVD.ChaosVDSceneQuerySelectionContext
// 0x0003 (0x0004 - 0x0001)
struct alignas(0x04) FChaosVDSceneQuerySelectionContext final : public FChaosVDSelectionContext
{
};

// ScriptStruct ChaosVD.ChaosVDCollisionDataSelectionContext
// 0x001F (0x0020 - 0x0001)
struct alignas(0x08) FChaosVDCollisionDataSelectionContext final : public FChaosVDSelectionContext
{
public:
	uint8                                         Pad_1[0x1F];                                       // 0x0001(0x001F)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct ChaosVD.ChaosVDSelectionMultipleView
// 0x0010 (0x0010 - 0x0000)
struct alignas(0x08) FChaosVDSelectionMultipleView final
{
public:
	uint8                                         Pad_0[0x10];                                       // 0x0000(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

}

