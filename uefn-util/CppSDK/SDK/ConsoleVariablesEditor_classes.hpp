#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ConsoleVariablesEditor

#include "Basic.hpp"

#include "Engine_classes.hpp"
#include "UnrealEd_classes.hpp"
#include "ConsoleVariablesEditor_structs.hpp"
#include "CoreUObject_classes.hpp"


namespace SDK
{

// Class ConsoleVariablesEditor.ConsoleVariablesEditorFactory
// 0x0000 (0x0088 - 0x0088)
class UConsoleVariablesEditorFactory final : public UFactory
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ConsoleVariablesEditorFactory">();
	}
	static class UConsoleVariablesEditorFactory* GetDefaultObj()
	{
		return GetDefaultObjImpl<UConsoleVariablesEditorFactory>();
	}
};

// Class ConsoleVariablesEditor.ConsoleVariablesEditorFunctionLibrary
// 0x0000 (0x0030 - 0x0030)
class UConsoleVariablesEditorFunctionLibrary final : public UBlueprintFunctionLibrary
{
public:
	static bool AddValidatedCommandToCurrentPreset(const class FString& NewCommand);
	static bool CopyCurrentListToAsset(class UConsoleVariablesAsset* InAsset);
	static bool GetConsoleVariableSourceByName(const class FString& InCommandName, class FString* OutValue);
	static bool GetConsoleVariableStringValue(const class FString& InCommandName, class FString* OutValue);
	static class UConsoleVariablesAsset* GetCurrentlyLoadedPreset();
	static bool GetEnableMultiUserCVarSync();
	static bool GetListOfCommandsFromPreset(const class UConsoleVariablesAsset* InAsset, TArray<class FString>* OutCommandList);
	static void LoadPresetIntoConsoleVariablesEditor(const class UConsoleVariablesAsset* InAsset);
	static bool RemoveCommandFromCurrentPreset(const class FString& NewCommand);
	static bool SetConsoleVariableByName_Bool(const class FString& InCommandName, const bool InValue);
	static bool SetConsoleVariableByName_Float(const class FString& InCommandName, const float InValue);
	static bool SetConsoleVariableByName_Int(const class FString& InCommandName, const int32 InValue);
	static bool SetConsoleVariableByName_String(const class FString& InCommandName, const class FString& InValue);
	static void SetEnableMultiUserCVarSync(bool bNewSetting);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ConsoleVariablesEditorFunctionLibrary">();
	}
	static class UConsoleVariablesEditorFunctionLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UConsoleVariablesEditorFunctionLibrary>();
	}
};

// Class ConsoleVariablesEditor.ConsoleVariablesEditorProjectSettings
// 0x0058 (0x0088 - 0x0030)
class UConsoleVariablesEditorProjectSettings final : public UObject
{
public:
	EConsoleVariablesEditorRowDisplayType         UncheckedRowDisplayType;                           // 0x0030(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EConsoleVariablesEditorPresetImportMode       PresetImportMode;                                  // 0x0031(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAddAllChangedConsoleVariablesToCurrentPreset;     // 0x0032(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_33[0x5];                                       // 0x0033(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TSet<class FString>                           ChangedConsoleVariableSkipList;                    // 0x0038(0x0050)(Edit, Config, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ConsoleVariablesEditorProjectSettings">();
	}
	static class UConsoleVariablesEditorProjectSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UConsoleVariablesEditorProjectSettings>();
	}
};

// Class ConsoleVariablesEditor.ConcertCVarSynchronization
// 0x0008 (0x0038 - 0x0030)
class UConcertCVarSynchronization final : public UObject
{
public:
	bool                                          bSyncCVarTransactions;                             // 0x0030(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ConcertCVarSynchronization">();
	}
	static class UConcertCVarSynchronization* GetDefaultObj()
	{
		return GetDefaultObjImpl<UConcertCVarSynchronization>();
	}
};

// Class ConsoleVariablesEditor.ConcertCVarConfig
// 0x0018 (0x0048 - 0x0030)
class UConcertCVarConfig final : public UObject
{
public:
	struct FConcertCVarSettings                   LocalSettings;                                     // 0x0030(0x0001)(Edit, Config, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FConcertCVarDetails>            RemoteDetails;                                     // 0x0038(0x0010)(Edit, ZeroConstructor, Transient, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ConcertCVarConfig">();
	}
	static class UConcertCVarConfig* GetDefaultObj()
	{
		return GetDefaultObjImpl<UConcertCVarConfig>();
	}
};

}

