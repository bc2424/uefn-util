#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: XpBarToolTip

#include "Basic.hpp"

#include "CommonUI_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass XpBarToolTip.XpBarToolTip_C
// 0x00A0 (0x04E0 - 0x0440)
class UXpBarToolTip_C final : public UCommonUserWidget
{
public:
	class UCommonTextBlock*                       CommonTextBlock_0;                                 // 0x0440(0x0008)(ExportObject, ZeroConstructor, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       CommonTextBlock_2;                                 // 0x0448(0x0008)(ExportObject, ZeroConstructor, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       CommonTextBlock_29;                                // 0x0450(0x0008)(ExportObject, ZeroConstructor, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       CommonTextBlock_30;                                // 0x0458(0x0008)(ExportObject, ZeroConstructor, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       CommonTextBlock_31;                                // 0x0460(0x0008)(ExportObject, ZeroConstructor, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_0;                                           // 0x0468(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_1;                                           // 0x0470(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_2;                                           // 0x0478(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_3;                                           // 0x0480(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_5;                                           // 0x0488(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FText                                   HeaderText;                                        // 0x0490(0x0010)(Edit, BlueprintVisible, ExposeOnSpawn)
	class FText                                   CommanderXPText;                                   // 0x04A0(0x0010)(Edit, BlueprintVisible, ExposeOnSpawn)
	class FText                                   BoostXPText;                                       // 0x04B0(0x0010)(Edit, BlueprintVisible, ExposeOnSpawn)
	class FText                                   RestedXPText;                                      // 0x04C0(0x0010)(Edit, BlueprintVisible, ExposeOnSpawn)
	class FText                                   BodyText;                                          // 0x04D0(0x0010)(Edit, BlueprintVisible, ExposeOnSpawn)

public:
	class FText GetBodyText();
	class FText GetBoostXPText();
	class FText GetCommanderXPText();
	class FText GetHeaderText();
	class FText GetRestedXPText();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"XpBarToolTip_C">();
	}
	static class UXpBarToolTip_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UXpBarToolTip_C>();
	}
};

}

