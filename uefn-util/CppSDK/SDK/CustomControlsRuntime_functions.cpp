#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CustomControlsRuntime

#include "Basic.hpp"

#include "CustomControlsRuntime_classes.hpp"
#include "CustomControlsRuntime_parameters.hpp"


namespace SDK
{

// Function CustomControlsRuntime.CustomControlInputBindings_TwinStick.OnWeaponUnEquippedDelegate
// (Final, Native, Private)

void UCustomControlInputBindings_TwinStick::OnWeaponUnEquippedDelegate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomControlInputBindings_TwinStick", "OnWeaponUnEquippedDelegate");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function CustomControlsRuntime.CustomControlOptions_Base.AddGameplayEffect
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class UGameplayEffect>      GameplayEffectClass                                    (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCustomControlOptions_Base::AddGameplayEffect(TSubclassOf<class UGameplayEffect> GameplayEffectClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomControlOptions_Base", "AddGameplayEffect");

	Params::CustomControlOptions_Base_AddGameplayEffect Parms{};

	Parms.GameplayEffectClass = GameplayEffectClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function CustomControlsRuntime.CustomControlOptions_Base.AddGameplayEffectWithMagnitude
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class UGameplayEffect>      GameplayEffectClass                                    (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     AttributeTag                                           (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   AttributeMagnitude                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCustomControlOptions_Base::AddGameplayEffectWithMagnitude(TSubclassOf<class UGameplayEffect> GameplayEffectClass, const struct FGameplayTag& AttributeTag, float AttributeMagnitude)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomControlOptions_Base", "AddGameplayEffectWithMagnitude");

	Params::CustomControlOptions_Base_AddGameplayEffectWithMagnitude Parms{};

	Parms.GameplayEffectClass = GameplayEffectClass;
	Parms.AttributeTag = std::move(AttributeTag);
	Parms.AttributeMagnitude = AttributeMagnitude;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function CustomControlsRuntime.CustomControlOptions_Base.BP_OnActivate
// (Event, Protected, BlueprintEvent)

void UCustomControlOptions_Base::BP_OnActivate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomControlOptions_Base", "BP_OnActivate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CustomControlsRuntime.CustomControlOptions_Base.BP_OnDeactivate
// (Event, Protected, BlueprintEvent)

void UCustomControlOptions_Base::BP_OnDeactivate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomControlOptions_Base", "BP_OnDeactivate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CustomControlsRuntime.CustomControlOptions_Base.UsesCursor
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UCustomControlOptions_Base::UsesCursor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomControlOptions_Base", "UsesCursor");

	Params::CustomControlOptions_Base_UsesCursor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function CustomControlsRuntime.CustomControlOptions_Base.GetOwningComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortControllerComponent_CustomControls*ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortControllerComponent_CustomControls* UCustomControlOptions_Base::GetOwningComponent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomControlOptions_Base", "GetOwningComponent");

	Params::CustomControlOptions_Base_GetOwningComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function CustomControlsRuntime.CustomControlOptions_Targeting.BP_InitFilteringTask
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UTargetingFilter_CC_Base*         FilteringTask                                          (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETargetingPresetType                    PresetType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCustomControlOptions_Targeting::BP_InitFilteringTask(const class UTargetingFilter_CC_Base* FilteringTask, ETargetingPresetType PresetType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomControlOptions_Targeting", "BP_InitFilteringTask");

	Params::CustomControlOptions_Targeting_BP_InitFilteringTask Parms{};

	Parms.FilteringTask = FilteringTask;
	Parms.PresetType = PresetType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CustomControlsRuntime.CustomControlOptions_Targeting.BP_InitSelectionTask
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UTargetingSelection_CC_Base*      SelectionTask                                          (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETargetingPresetType                    PresetType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCustomControlOptions_Targeting::BP_InitSelectionTask(const class UTargetingSelection_CC_Base* SelectionTask, ETargetingPresetType PresetType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomControlOptions_Targeting", "BP_InitSelectionTask");

	Params::CustomControlOptions_Targeting_BP_InitSelectionTask Parms{};

	Parms.SelectionTask = SelectionTask;
	Parms.PresetType = PresetType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CustomControlsRuntime.CustomControlOptions_Targeting.BP_InitSortingTask
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UTargetingSort_CC_Base*           SortingTask                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETargetingPresetType                    PresetType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCustomControlOptions_Targeting::BP_InitSortingTask(const class UTargetingSort_CC_Base* SortingTask, ETargetingPresetType PresetType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomControlOptions_Targeting", "BP_InitSortingTask");

	Params::CustomControlOptions_Targeting_BP_InitSortingTask Parms{};

	Parms.SortingTask = SortingTask;
	Parms.PresetType = PresetType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CustomControlsRuntime.CustomControlOptions_Targeting.SetTargetingData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    InTargetingEnabled                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FCustomControlTargetingData      InRangedTargetingData                                  (Parm, NoDestructor, NativeAccessSpecifierPublic)
// struct FCustomControlTargetingData      InMeleeTargetingData                                   (Parm, NoDestructor, NativeAccessSpecifierPublic)
// struct FCustomControlTargetingData      InAimingTargetingData                                  (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UCustomControlOptions_Targeting::SetTargetingData(bool InTargetingEnabled, const struct FCustomControlTargetingData& InRangedTargetingData, const struct FCustomControlTargetingData& InMeleeTargetingData, const struct FCustomControlTargetingData& InAimingTargetingData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomControlOptions_Targeting", "SetTargetingData");

	Params::CustomControlOptions_Targeting_SetTargetingData Parms{};

	Parms.InTargetingEnabled = InTargetingEnabled;
	Parms.InRangedTargetingData = std::move(InRangedTargetingData);
	Parms.InMeleeTargetingData = std::move(InMeleeTargetingData);
	Parms.InAimingTargetingData = std::move(InAimingTargetingData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function CustomControlsRuntime.TargetingDataHelperLibrary.GetTargetableObjectTypes
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FCustomControlTargetingData      TargetingData                                          (Parm, NoDestructor, NativeAccessSpecifierPublic)
// TArray<EObjectTypeQuery>                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<EObjectTypeQuery> UTargetingDataHelperLibrary::GetTargetableObjectTypes(const struct FCustomControlTargetingData& TargetingData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TargetingDataHelperLibrary", "GetTargetableObjectTypes");

	Params::TargetingDataHelperLibrary_GetTargetableObjectTypes Parms{};

	Parms.TargetingData = std::move(TargetingData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function CustomControlsRuntime.FortControllerComponent_CustomControls.AddOptions
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          ContextObject                                          (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCustomControlOptions_Base*       Options                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Priority                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bEnabled                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortControllerComponent_CustomControls::AddOptions(const class UObject* ContextObject, class UCustomControlOptions_Base* Options, float Priority, bool bEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortControllerComponent_CustomControls", "AddOptions");

	Params::FortControllerComponent_CustomControls_AddOptions Parms{};

	Parms.ContextObject = ContextObject;
	Parms.Options = Options;
	Parms.Priority = Priority;
	Parms.bEnabled = bEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function CustomControlsRuntime.FortControllerComponent_CustomControls.ClientRegisterTagsQueries
// (Final, Net, NetReliable, Native, Event, Private, NetClient)

void UFortControllerComponent_CustomControls::ClientRegisterTagsQueries()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortControllerComponent_CustomControls", "ClientRegisterTagsQueries");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function CustomControlsRuntime.FortControllerComponent_CustomControls.ClientSetOptionsQueueBlocked
// (Final, Net, NetReliable, Native, Event, Private, NetClient)
// Parameters:
// bool                                    bIsBlocked                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortControllerComponent_CustomControls::ClientSetOptionsQueueBlocked(bool bIsBlocked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortControllerComponent_CustomControls", "ClientSetOptionsQueueBlocked");

	Params::FortControllerComponent_CustomControls_ClientSetOptionsQueueBlocked Parms{};

	Parms.bIsBlocked = bIsBlocked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function CustomControlsRuntime.FortControllerComponent_CustomControls.CreateOptions
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class UCustomControlOptions_Base>OptionsClass                                           (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCustomControlOptions_Base*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UCustomControlOptions_Base* UFortControllerComponent_CustomControls::CreateOptions(TSubclassOf<class UCustomControlOptions_Base> OptionsClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortControllerComponent_CustomControls", "CreateOptions");

	Params::FortControllerComponent_CustomControls_CreateOptions Parms{};

	Parms.OptionsClass = OptionsClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function CustomControlsRuntime.FortControllerComponent_CustomControls.GetOptions
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          ContextObject                                          (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCustomControlOptions_Base*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UCustomControlOptions_Base* UFortControllerComponent_CustomControls::GetOptions(const class UObject* ContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortControllerComponent_CustomControls", "GetOptions");

	Params::FortControllerComponent_CustomControls_GetOptions Parms{};

	Parms.ContextObject = ContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function CustomControlsRuntime.FortControllerComponent_CustomControls.OnPlayspaceUserAdded
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FPlayspaceUser                   PlayspaceUser                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFortControllerComponent_CustomControls::OnPlayspaceUserAdded(const struct FPlayspaceUser& PlayspaceUser)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortControllerComponent_CustomControls", "OnPlayspaceUserAdded");

	Params::FortControllerComponent_CustomControls_OnPlayspaceUserAdded Parms{};

	Parms.PlayspaceUser = std::move(PlayspaceUser);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function CustomControlsRuntime.FortControllerComponent_CustomControls.OnRep_HighestPriorityOptions
// (Final, Native, Private)

void UFortControllerComponent_CustomControls::OnRep_HighestPriorityOptions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortControllerComponent_CustomControls", "OnRep_HighestPriorityOptions");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function CustomControlsRuntime.FortControllerComponent_CustomControls.RemoveOptions
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          ContextObject                                          (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortControllerComponent_CustomControls::RemoveOptions(const class UObject* ContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortControllerComponent_CustomControls", "RemoveOptions");

	Params::FortControllerComponent_CustomControls_RemoveOptions Parms{};

	Parms.ContextObject = ContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function CustomControlsRuntime.FortControllerComponent_CustomControls.ServerResetAimLocation
// (Final, Net, NetReliable, Native, Event, Private, NetServer)

void UFortControllerComponent_CustomControls::ServerResetAimLocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortControllerComponent_CustomControls", "ServerResetAimLocation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function CustomControlsRuntime.FortControllerComponent_CustomControls.ServerResetAimTargetOffset
// (Final, Net, NetReliable, Native, Event, Private, NetServer)

void UFortControllerComponent_CustomControls::ServerResetAimTargetOffset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortControllerComponent_CustomControls", "ServerResetAimTargetOffset");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function CustomControlsRuntime.FortControllerComponent_CustomControls.ServerSetAimLocation
// (Final, Net, NetReliable, Native, Event, Private, NetServer, HasDefaults)
// Parameters:
// struct FVector                          AimLocation                                            (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortControllerComponent_CustomControls::ServerSetAimLocation(const struct FVector& AimLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortControllerComponent_CustomControls", "ServerSetAimLocation");

	Params::FortControllerComponent_CustomControls_ServerSetAimLocation Parms{};

	Parms.AimLocation = std::move(AimLocation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function CustomControlsRuntime.FortControllerComponent_CustomControls.ServerSetDesiredAimTargetOffset
// (Final, Net, NetReliable, Native, Event, Private, NetServer)
// Parameters:
// float                                   NewDesiredAimTargetOffset                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortControllerComponent_CustomControls::ServerSetDesiredAimTargetOffset(const float NewDesiredAimTargetOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortControllerComponent_CustomControls", "ServerSetDesiredAimTargetOffset");

	Params::FortControllerComponent_CustomControls_ServerSetDesiredAimTargetOffset Parms{};

	Parms.NewDesiredAimTargetOffset = NewDesiredAimTargetOffset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function CustomControlsRuntime.FortControllerComponent_CustomControls.ServerSetFocusTarget
// (Final, Net, NetReliable, Native, Event, Private, NetServer)
// Parameters:
// class AActor*                           NewFocusTarget                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortControllerComponent_CustomControls::ServerSetFocusTarget(const class AActor* NewFocusTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortControllerComponent_CustomControls", "ServerSetFocusTarget");

	Params::FortControllerComponent_CustomControls_ServerSetFocusTarget Parms{};

	Parms.NewFocusTarget = NewFocusTarget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function CustomControlsRuntime.FortControllerComponent_CustomControls.ServerSetUseDesiredRotationOverride
// (Final, Net, NetReliable, Native, Event, Private, NetServer)
// Parameters:
// bool                                    bNewUseDesiredRotationOverride                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortControllerComponent_CustomControls::ServerSetUseDesiredRotationOverride(const bool bNewUseDesiredRotationOverride)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortControllerComponent_CustomControls", "ServerSetUseDesiredRotationOverride");

	Params::FortControllerComponent_CustomControls_ServerSetUseDesiredRotationOverride Parms{};

	Parms.bNewUseDesiredRotationOverride = bNewUseDesiredRotationOverride;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function CustomControlsRuntime.FortControllerComponent_CustomControls.SetOptionsEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          ContextObject                                          (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bEnabled                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortControllerComponent_CustomControls::SetOptionsEnabled(const class UObject* ContextObject, bool bEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortControllerComponent_CustomControls", "SetOptionsEnabled");

	Params::FortControllerComponent_CustomControls_SetOptionsEnabled Parms{};

	Parms.ContextObject = ContextObject;
	Parms.bEnabled = bEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function CustomControlsRuntime.FortControllerComponent_CustomControls.SetOptionsPriority
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          ContextObject                                          (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Priority                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bRefreshRelativePriority                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortControllerComponent_CustomControls::SetOptionsPriority(const class UObject* ContextObject, float Priority, bool bRefreshRelativePriority)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortControllerComponent_CustomControls", "SetOptionsPriority");

	Params::FortControllerComponent_CustomControls_SetOptionsPriority Parms{};

	Parms.ContextObject = ContextObject;
	Parms.Priority = Priority;
	Parms.bRefreshRelativePriority = bRefreshRelativePriority;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function CustomControlsRuntime.FortControllerComponent_CustomControls.WeaponGetAimRotOverride
// (Final, Native, Private, HasOutParams, HasDefaults)
// Parameters:
// class AFortWeapon*                      Weapon                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortAbilityTargetingSource             TargetingSource                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         OutOverrideAimRot                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    bOutExecutionResult                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortControllerComponent_CustomControls::WeaponGetAimRotOverride(const class AFortWeapon* Weapon, const EFortAbilityTargetingSource TargetingSource, struct FRotator* OutOverrideAimRot, bool* bOutExecutionResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortControllerComponent_CustomControls", "WeaponGetAimRotOverride");

	Params::FortControllerComponent_CustomControls_WeaponGetAimRotOverride Parms{};

	Parms.Weapon = Weapon;
	Parms.TargetingSource = TargetingSource;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutOverrideAimRot != nullptr)
		*OutOverrideAimRot = std::move(Parms.OutOverrideAimRot);

	if (bOutExecutionResult != nullptr)
		*bOutExecutionResult = Parms.bOutExecutionResult;
}


// Function CustomControlsRuntime.FortControllerComponent_CustomControls.GetActiveOptions
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class UCustomControlOptions_Base* ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UCustomControlOptions_Base* UFortControllerComponent_CustomControls::GetActiveOptions() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortControllerComponent_CustomControls", "GetActiveOptions");

	Params::FortControllerComponent_CustomControls_GetActiveOptions Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function CustomControlsRuntime.FortControllerComponent_CustomControls.GetMovementModeRuntimeData
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortMovementMode_BaseExtRuntimeData*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortMovementMode_BaseExtRuntimeData* UFortControllerComponent_CustomControls::GetMovementModeRuntimeData() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortControllerComponent_CustomControls", "GetMovementModeRuntimeData");

	Params::FortControllerComponent_CustomControls_GetMovementModeRuntimeData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function CustomControlsRuntime.FortMovementMode_CCSideScrollerLogic.SetDesiredRotationYaw
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   NewDesiredRotationYaw                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMovementMode_CCSideScrollerLogic::SetDesiredRotationYaw(float NewDesiredRotationYaw)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMovementMode_CCSideScrollerLogic", "SetDesiredRotationYaw");

	Params::FortMovementMode_CCSideScrollerLogic_SetDesiredRotationYaw Parms{};

	Parms.NewDesiredRotationYaw = NewDesiredRotationYaw;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

