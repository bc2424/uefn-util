#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PlayspaceSystem

#include "Basic.hpp"

#include "PlayspaceSystem_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "ModularGameplay_classes.hpp"
#include "GameFeatures_classes.hpp"


namespace SDK
{

// Class PlayspaceSystem.OverlapComponent
// 0x0020 (0x06C0 - 0x06A0)
class UOverlapComponent : public UStaticMeshComponent
{
public:
	uint8                                         Pad_6A0[0x20];                                     // 0x06A0(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnBeginActorOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void OnEndActorOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OverlapComponent">();
	}
	static class UOverlapComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOverlapComponent>();
	}
};

// Class PlayspaceSystem.Playspace
// 0x0350 (0x0778 - 0x0428)
class APlayspace : public AInfo
{
public:
	TMulticastInlineDelegate<void(struct FPlayspaceUser& AddedUser)> NotifyPlayspaceUserAdded;                          // 0x0428(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_438[0x18];                                     // 0x0438(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(struct FPlayspaceUser& RemovedUser)> NotifyPlayspaceUserRemoved;                        // 0x0450(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_460[0x18];                                     // 0x0460(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class APlayspace* Playspace)> NotifyPlayspaceInitialized;                        // 0x0478(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_488[0x18];                                     // 0x0488(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class APlayspace* Playspace)> NotifyPlayspaceCreatedAndReady;                    // 0x04A0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_4B0[0x18];                                     // 0x04B0(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class APlayspace* Playspace)> NotifyBoundGameplayVolumeSet;                      // 0x04C8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_4D8[0x30];                                     // 0x04D8(0x0030)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              NotifyStartMatch;                                  // 0x0508(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_518[0x18];                                     // 0x0518(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              NotifyEndMatch;                                    // 0x0530(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_540[0x18];                                     // 0x0540(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  GameplayTags;                                      // 0x0558(0x0020)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTag                           RequestedPlayspaceParentTag;                       // 0x0578(0x000C)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_584[0x4];                                      // 0x0584(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSubclassOf<class APlayspace>>         ChildPlayspaceClasses;                             // 0x0588(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	struct FPlayspaceUserList                     PlayspaceUsers;                                    // 0x0598(0x0180)(Net, Transient, RepNotify, Protected, NativeAccessSpecifierProtected)
	TArray<class APlayspace*>                     ChildPlayspaces;                                   // 0x0718(0x0010)(Net, ZeroConstructor, Transient, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TArray<struct FUniqueNetIdRepl>               PendingUsers;                                      // 0x0728(0x0010)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	bool                                          bAutoStartMatchOnServerStart;                      // 0x0738(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EWithinBoundsEvaluationType                   BoundsEvaluationType;                              // 0x0739(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_73A[0x6];                                      // 0x073A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayspaceManagerComponent*             PlayspaceManagerCached;                            // 0x0740(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AGameplayVolume*                        BoundGameplayVolume;                               // 0x0748(0x0008)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, RepNotify, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bIsInitialized;                                    // 0x0750(0x0001)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_751[0x1];                                      // 0x0751(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bMatchHasEnded;                                    // 0x0752(0x0001)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_753[0x1];                                      // 0x0753(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MatchStartTime;                                    // 0x0754(0x0004)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_758[0x20];                                     // 0x0758(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnRep_bIsInitialized();
	void OnRep_bMatchHasEnded();
	void OnRep_BoundGameplayVolume();
	void OnRep_MatchStartTime();
	void OnRep_PlayspaceUsers();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"Playspace">();
	}
	static class APlayspace* GetDefaultObj()
	{
		return GetDefaultObjImpl<APlayspace>();
	}
};

// Class PlayspaceSystem.GameStateComponent_ListenForExternallyReachablePlayspaces
// 0x00F8 (0x01D0 - 0x00D8)
class UGameStateComponent_ListenForExternallyReachablePlayspaces final : public UGameStateComponent
{
public:
	uint8                                         Pad_D8[0xB8];                                      // 0x00D8(0x00B8)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FPlayspaceExternallyReachableListenRequest> Requests;                                          // 0x0190(0x0010)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FPlayspaceExternallyReachableListenRequest> PendingRequests;                                   // 0x01A0(0x0010)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_1B0[0x20];                                     // 0x01B0(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GameStateComponent_ListenForExternallyReachablePlayspaces">();
	}
	static class UGameStateComponent_ListenForExternallyReachablePlayspaces* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGameStateComponent_ListenForExternallyReachablePlayspaces>();
	}
};

// Class PlayspaceSystem.PlayspaceComponent
// 0x0000 (0x00D8 - 0x00D8)
class UPlayspaceComponent : public UGameFrameworkComponent
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PlayspaceComponent">();
	}
	static class UPlayspaceComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayspaceComponent>();
	}
};

// Class PlayspaceSystem.PlayspaceComponent_DispatchExternallyReachable
// 0x0028 (0x0100 - 0x00D8)
class UPlayspaceComponent_DispatchExternallyReachable final : public UPlayspaceComponent
{
public:
	uint8                                         Pad_D8[0x28];                                      // 0x00D8(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PlayspaceComponent_DispatchExternallyReachable">();
	}
	static class UPlayspaceComponent_DispatchExternallyReachable* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayspaceComponent_DispatchExternallyReachable>();
	}
};

// Class PlayspaceSystem.PlayspaceJurisdictionFilterUtilities
// 0x0000 (0x0030 - 0x0030)
class UPlayspaceJurisdictionFilterUtilities final : public UBlueprintFunctionLibrary
{
public:
	static struct FPlayspaceJurisdictionFilter MakeFilterFromActor(class AActor* Actor);
	static struct FPlayspaceJurisdictionFilter MakeFilterFromComponent(class UActorComponent* ActorComponent);
	static struct FPlayspaceJurisdictionFilter MakeFilterFromLocation(const struct FVector& Location, const class UObject* WorldContext);
	static struct FPlayspaceJurisdictionFilter MakeFilterFromPawn(class APawn* Pawn);
	static struct FPlayspaceJurisdictionFilter MakeFilterFromPlayerController(class APlayerController* PlayerController);
	static struct FPlayspaceJurisdictionFilter MakeFilterFromPlayerState(class APlayerState* PlayerState);
	static struct FPlayspaceJurisdictionFilter SpecifyPlayspaceClass(const struct FPlayspaceJurisdictionFilter& Filter, TSoftClassPtr<class UClass> Class_0);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PlayspaceJurisdictionFilterUtilities">();
	}
	static class UPlayspaceJurisdictionFilterUtilities* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayspaceJurisdictionFilterUtilities>();
	}
};

// Class PlayspaceSystem.WaitForDiscoverablePlayspaceWithFilterAction
// 0x0088 (0x00C0 - 0x0038)
class UWaitForDiscoverablePlayspaceWithFilterAction final : public UBlueprintAsyncActionBase
{
public:
	TMulticastInlineDelegate<void(class APlayspace* Playspace)> OnFoundPlayspace;                                  // 0x0038(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FPlayspaceJurisdictionFilter           Filter;                                            // 0x0048(0x0068)(NativeAccessSpecifierPrivate)
	uint8                                         Pad_B0[0x10];                                      // 0x00B0(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UWaitForDiscoverablePlayspaceWithFilterAction* WaitForDiscoverablePlayspaceMatchingFilter(const struct FPlayspaceJurisdictionFilter& Filter_0, class UObject* Requester);
	static class UWaitForDiscoverablePlayspaceWithFilterAction* WaitForDiscoverablePlayspaceOfTypeForActor(TSoftClassPtr<class UClass> PlayspaceClass, class AActor* Actor, class UObject* Requester);

	void Cancel();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"WaitForDiscoverablePlayspaceWithFilterAction">();
	}
	static class UWaitForDiscoverablePlayspaceWithFilterAction* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWaitForDiscoverablePlayspaceWithFilterAction>();
	}
};

// Class PlayspaceSystem.PlayspaceComponent_PlayerSpawning
// 0x0010 (0x00E8 - 0x00D8)
class UPlayspaceComponent_PlayerSpawning : public UPlayspaceComponent
{
public:
	bool                                          bQueueUserForSpawnWhenAdded;                       // 0x00D8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_D9[0x3];                                       // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         SpawnDelayMin;                                     // 0x00DC(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         SpawnDelayMax;                                     // 0x00E0(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PlayspaceComponent_PlayerSpawning">();
	}
	static class UPlayspaceComponent_PlayerSpawning* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayspaceComponent_PlayerSpawning>();
	}
};

// Class PlayspaceSystem.PlayspaceComponent_VoiceManager
// 0x0000 (0x00D8 - 0x00D8)
class UPlayspaceComponent_VoiceManager final : public UPlayspaceComponent
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PlayspaceComponent_VoiceManager">();
	}
	static class UPlayspaceComponent_VoiceManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayspaceComponent_VoiceManager>();
	}
};

// Class PlayspaceSystem.PlayspaceControllerComponent_PlayerSpawning
// 0x0078 (0x0150 - 0x00D8)
class UPlayspaceControllerComponent_PlayerSpawning : public UControllerComponent
{
public:
	TMulticastInlineDelegate<void(class APlayerController* Controller, struct FReplicatedSpawnInfo& SpawnInfo)> OnPlayerQueuedToSpawn;                             // 0x00D8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	class ACameraActor*                           SpawnCameraActor;                                  // 0x00E8(0x0008)(ZeroConstructor, Transient, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_F0[0x1];                                       // 0x00F0(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bClientReadyForSpawning;                           // 0x00F1(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_F2[0x6];                                       // 0x00F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FReplicatedSpawnInfo                   ReplicatedSpawnInfo;                               // 0x00F8(0x0058)(Net, Transient, RepNotify, NoDestructor, NativeAccessSpecifierPrivate)

public:
	void ClientReplicatedSpawnInfo(const struct FReplicatedSpawnInfo& InReplicatedSpawnInfo);
	void OnRep_ReplicatedSpawnInfo();
	void ServerMarkReadyForSpawning();

	const struct FReplicatedSpawnInfo GetSpawnInfo() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PlayspaceControllerComponent_PlayerSpawning">();
	}
	static class UPlayspaceControllerComponent_PlayerSpawning* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayspaceControllerComponent_PlayerSpawning>();
	}
};

// Class PlayspaceSystem.PlayspaceGameStateComponent
// 0x0000 (0x00D8 - 0x00D8)
class UPlayspaceGameStateComponent : public UGameStateComponent
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PlayspaceGameStateComponent">();
	}
	static class UPlayspaceGameStateComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayspaceGameStateComponent>();
	}
};

// Class PlayspaceSystem.PlayspaceGameStateComponent_PlayerSpawningManager
// 0x0058 (0x0130 - 0x00D8)
class UPlayspaceGameStateComponent_PlayerSpawningManager final : public UPlayspaceGameStateComponent
{
public:
	uint8                                         Pad_D8[0x48];                                      // 0x00D8(0x0048)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FPlayspaceSpawningInfo>         SpawningUsersArray;                                // 0x0120(0x0010)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PlayspaceGameStateComponent_PlayerSpawningManager">();
	}
	static class UPlayspaceGameStateComponent_PlayerSpawningManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayspaceGameStateComponent_PlayerSpawningManager>();
	}
};

// Class PlayspaceSystem.GameFeatureAction_AddPlayspaceComponent
// 0x0018 (0x0048 - 0x0030)
class UGameFeatureAction_AddPlayspaceComponent final : public UGameFeatureAction
{
public:
	TArray<struct FPlayspaceComponentConfiguration> PlayspaceComponentDataList;                        // 0x0030(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                         Pad_40[0x8];                                       // 0x0040(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GameFeatureAction_AddPlayspaceComponent">();
	}
	static class UGameFeatureAction_AddPlayspaceComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGameFeatureAction_AddPlayspaceComponent>();
	}
};

// Class PlayspaceSystem.GameFeatureAction_CreatePlayspacesFromConfig
// 0x0018 (0x0048 - 0x0030)
class UGameFeatureAction_CreatePlayspacesFromConfig final : public UGameFeatureAction
{
public:
	TArray<struct FPlayspaceConfiguration>        PlayspaceDataList;                                 // 0x0030(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                         Pad_40[0x8];                                       // 0x0040(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GameFeatureAction_CreatePlayspacesFromConfig">();
	}
	static class UGameFeatureAction_CreatePlayspacesFromConfig* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGameFeatureAction_CreatePlayspacesFromConfig>();
	}
};

// Class PlayspaceSystem.GameplayVolume
// 0x00B0 (0x04D0 - 0x0420)
class AGameplayVolume : public AActor
{
public:
	TSoftClassPtr<class UClass>                   PlayspaceClassTemplate;                            // 0x0420(0x0030)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EPlayspaceCreationType                        PlayspaceCreationType;                             // 0x0450(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_451[0x7];                                      // 0x0451(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class APlayspace>                 PlayspaceClass;                                    // 0x0458(0x0008)(ZeroConstructor, Transient, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bDestroyPlayspaceOnEndPlay;                        // 0x0460(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_461[0x7];                                      // 0x0461(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayspace*                             Playspace;                                         // 0x0468(0x0008)(Net, ZeroConstructor, Transient, RepNotify, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                  VolumeTags;                                        // 0x0470(0x0020)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Protected, NativeAccessSpecifierProtected)
	class UOverlapComponent*                      BoundsComponent;                                   // 0x0490(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_498[0x38];                                     // 0x0498(0x0038)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void InitializeBoundsComponent(class UOverlapComponent* NewBoundsComponent);
	void OnOverlappedPawnControllerChanged(class APawn* Pawn, class AController* OldController, class AController* NewController);
	void OnRep_Playspace();
	void UpdateSize(const struct FVector& NewScale);

	class APlayspace* GetPlayspace() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GameplayVolume">();
	}
	static class AGameplayVolume* GetDefaultObj()
	{
		return GetDefaultObjImpl<AGameplayVolume>();
	}
};

// Class PlayspaceSystem.PlayspaceComponent_Logic
// 0x0000 (0x00D8 - 0x00D8)
class UPlayspaceComponent_Logic final : public UGameFrameworkComponent
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PlayspaceComponent_Logic">();
	}
	static class UPlayspaceComponent_Logic* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayspaceComponent_Logic>();
	}
};

// Class PlayspaceSystem.PlayspaceComponent_PlayerManager
// 0x0120 (0x01F8 - 0x00D8)
class UPlayspaceComponent_PlayerManager final : public UPlayspaceComponent
{
public:
	TArray<struct FPlayspace_ControllerComponentInfo> ControllerComponents;                              // 0x00D8(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<struct FPlayspace_PlayerStateComponentInfo> PlayerStateComponents;                             // 0x00E8(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<struct FPlayspace_ActorComponentInfo>  ActorComponents;                                   // 0x00F8(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_108[0xF0];                                     // 0x0108(0x00F0)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnPlayerPawnSet(class APlayerState* Player, class APawn* NewPawn, class APawn* OldPawn);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PlayspaceComponent_PlayerManager">();
	}
	static class UPlayspaceComponent_PlayerManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayspaceComponent_PlayerManager>();
	}
};

// Class PlayspaceSystem.PlayspaceLibrary
// 0x0000 (0x0030 - 0x0030)
class UPlayspaceLibrary final : public UBlueprintFunctionLibrary
{
public:
	static void DestroyPlayspace(class APlayspace* PlayspaceToDestroy);
	static class APlayspace* GetPlayspaceForActor(const class UObject* WorldContextObject, class AActor* InActor);
	static class APlayspace* GetRootPlayspace(const class UObject* WorldContextObject);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PlayspaceLibrary">();
	}
	static class UPlayspaceLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayspaceLibrary>();
	}
};

// Class PlayspaceSystem.PlayspaceLogic
// 0x0010 (0x0430 - 0x0420)
class APlayspaceLogic final : public AActor
{
public:
	class APlayspace*                             Playspace;                                         // 0x0420(0x0008)(ZeroConstructor, Transient, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bAutoStartMatchOnServerStart;                      // 0x0428(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_429[0x1];                                      // 0x0429(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bMatchHasEnded;                                    // 0x042A(0x0001)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_42B[0x1];                                      // 0x042B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MatchStartTime;                                    // 0x042C(0x0004)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void OnRep_bMatchHasEnded();
	void OnRep_MatchStartTime();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PlayspaceLogic">();
	}
	static class APlayspaceLogic* GetDefaultObj()
	{
		return GetDefaultObjImpl<APlayspaceLogic>();
	}
};

// Class PlayspaceSystem.PlayspaceManagerComponent
// 0x01B8 (0x0290 - 0x00D8)
class alignas(0x10) UPlayspaceManagerComponent final : public UGameStateComponent
{
public:
	uint8                                         Pad_D8[0x18];                                      // 0x00D8(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayspace*                             RootPlayspace;                                     // 0x00F0(0x0008)(Net, ZeroConstructor, Transient, RepNotify, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EPlayspaceRootType                            PlayspaceRootType;                                 // 0x00F8(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_F9[0x117];                                     // 0x00F9(0x0117)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FActorOverlapEvent>             UnhandledEnterEvents;                              // 0x0210(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FActorOverlapEvent>             UnhandledExitEvents;                               // 0x0220(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TSet<class APlayerController*>                UnassignedPlayers;                                 // 0x0230(0x0050)(UObjectWrapper, NativeAccessSpecifierPrivate)
	bool                                          bAssumeChildPlayspacesAreNested;                   // 0x0280(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_281[0xF];                                      // 0x0281(0x000F)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnPlayerBeginOverlapGameplayVolume(class APlayerState* PlayerState, class AGameplayVolume* Volume);
	void OnPlayerEndOverlapGameplayVolume(class APlayerState* PlayerState, class AGameplayVolume* Volume);
	void OnRep_RootPlayspace();
	bool ProcessOverlapEvents(float DeltaTime);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PlayspaceManagerComponent">();
	}
	static class UPlayspaceManagerComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayspaceManagerComponent>();
	}
};

// Class PlayspaceSystem.PlayspaceSpawnActor
// 0x0010 (0x0430 - 0x0420)
class APlayspaceSpawnActor final : public AActor
{
public:
	class USceneComponent*                        SceneComponent;                                    // 0x0420(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UArrowComponent*                        ArrowComponent;                                    // 0x0428(0x0008)(ExportObject, ZeroConstructor, InstancedReference, EditorOnly, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PlayspaceSpawnActor">();
	}
	static class APlayspaceSpawnActor* GetDefaultObj()
	{
		return GetDefaultObjImpl<APlayspaceSpawnActor>();
	}
};

}

