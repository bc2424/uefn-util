#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ChaosVDRuntime

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK
{

// Enum ChaosVDRuntime.EChaosVDAABBTreeNodeFlags
// NumValues: 0x0004
enum class EChaosVDAABBTreeNodeFlags : uint8
{
	None                                     = 0,
	IsLeaf                                   = 1,
	IsDirty                                  = 2,
	EChaosVDAABBTreeNodeFlags_MAX            = 3,
};

// Enum ChaosVDRuntime.EChaosVDAccelerationStructureType
// NumValues: 0x0006
enum class EChaosVDAccelerationStructureType : uint32
{
	BoundingVolume                           = 0,
	AABBTree                                 = 1,
	AABBTreeBV                               = 2,
	Collection                               = 3,
	Unknown                                  = 4,
	EChaosVDAccelerationStructureType_MAX    = 5,
};

// Enum ChaosVDRuntime.EChaosVDContactShapesType
// NumValues: 0x0019
enum class EChaosVDContactShapesType : uint32
{
	Unknown                                  = 0,
	SphereSphere                             = 1,
	SphereCapsule                            = 2,
	SphereBox                                = 3,
	SphereConvex                             = 4,
	SphereTriMesh                            = 5,
	SphereHeightField                        = 6,
	SpherePlane                              = 7,
	CapsuleCapsule                           = 8,
	CapsuleBox                               = 9,
	CapsuleConvex                            = 10,
	CapsuleTriMesh                           = 11,
	CapsuleHeightField                       = 12,
	BoxBox                                   = 13,
	BoxConvex                                = 14,
	BoxTriMesh                               = 15,
	BoxHeightField                           = 16,
	BoxPlane                                 = 17,
	ConvexConvex                             = 18,
	ConvexTriMesh                            = 19,
	ConvexHeightField                        = 20,
	GenericConvexConvex                      = 21,
	LevelSetLevelSet                         = 22,
	NumShapesTypes                           = 23,
	EChaosVDContactShapesType_MAX            = 24,
};

// Enum ChaosVDRuntime.EChaosVDContactPointType
// NumValues: 0x0006
enum class EChaosVDContactPointType : uint8
{
	Unknown                                  = 0,
	VertexPlane                              = 1,
	EdgeEdge                                 = 2,
	PlaneVertex                              = 3,
	VertexVertex                             = 4,
	EChaosVDContactPointType_MAX             = 5,
};

// Enum ChaosVDRuntime.EChaosVDManifoldPointFlags
// NumValues: 0x0008
enum class EChaosVDManifoldPointFlags : uint8
{
	None                                     = 0,
	Disabled                                 = 1,
	WasRestored                              = 2,
	WasReplaced                              = 4,
	HasStaticFrictionAnchor                  = 8,
	IsValid                                  = 16,
	InsideStaticFrictionCone                 = 32,
	EChaosVDManifoldPointFlags_MAX           = 33,
};

// Enum ChaosVDRuntime.EChaosVDConstraintFlags
// NumValues: 0x000F
enum class EChaosVDConstraintFlags : uint16
{
	None                                     = 0,
	IsCurrent                                = 1,
	Disabled                                 = 2,
	UseManifold                              = 4,
	UseIncrementalManifold                   = 8,
	CanRestoreManifold                       = 16,
	WasManifoldRestored                      = 32,
	IsQuadratic0                             = 64,
	IsQuadratic1                             = 128,
	IsProbe                                  = 256,
	CCDEnabled                               = 512,
	CCDSweepEnabled                          = 1024,
	ModifierApplied                          = 2048,
	MaterialSet                              = 4096,
	EChaosVDConstraintFlags_MAX              = 4097,
};

// Enum ChaosVDRuntime.EChaosVDMidPhaseFlags
// NumValues: 0x0007
enum class EChaosVDMidPhaseFlags : uint8
{
	None                                     = 0,
	IsActive                                 = 1,
	IsCCD                                    = 2,
	IsCCDActive                              = 4,
	IsSleeping                               = 8,
	IsModified                               = 16,
	EChaosVDMidPhaseFlags_MAX                = 17,
};

// Enum ChaosVDRuntime.EChaosVDMidPhaseType
// NumValues: 0x0005
enum class EChaosVDMidPhaseType : uint8
{
	Generic                                  = 0,
	ShapePair                                = 1,
	SphereApproximation                      = 2,
	Unknown                                  = 3,
	EChaosVDMidPhaseType_MAX                 = 4,
};

// Enum ChaosVDRuntime.EChaosVDCollisionTraceFlag
// NumValues: 0x0005
enum class EChaosVDCollisionTraceFlag : uint32
{
	UseDefault                               = 0,
	UseSimpleAndComplex                      = 1,
	UseSimpleAsComplex                       = 2,
	UseComplexAsSimple                       = 3,
	MAX                                      = 4,
};

// Enum ChaosVDRuntime.EChaosVDCollisionShapeDataFlags
// NumValues: 0x0005
enum class EChaosVDCollisionShapeDataFlags : uint8
{
	None                                     = 0,
	SimCollision                             = 1,
	QueryCollision                           = 2,
	IsProbe                                  = 4,
	EChaosVDCollisionShapeDataFlags_MAX      = 5,
};

// Enum ChaosVDRuntime.EChaosVDJointReSimType
// NumValues: 0x0003
enum class EChaosVDJointReSimType : uint32
{
	FullResim                                = 0,
	ResimAsFollower                          = 1,
	EChaosVDJointReSimType_MAX               = 2,
};

// Enum ChaosVDRuntime.EChaosVDJointSyncType
// NumValues: 0x0003
enum class EChaosVDJointSyncType : uint32
{
	InSync                                   = 0,
	HardDesync                               = 1,
	EChaosVDJointSyncType_MAX                = 2,
};

// Enum ChaosVDRuntime.EChaosVDJointStateFlags
// NumValues: 0x0007
enum class EChaosVDJointStateFlags : uint8
{
	None                                     = 0,
	Disabled                                 = 1,
	Broken                                   = 2,
	Breaking                                 = 4,
	DriveTargetChanged                       = 8,
	EnabledDuringResim                       = 16,
	EChaosVDJointStateFlags_MAX              = 17,
};

// Enum ChaosVDRuntime.EChaosVDJointSolverSettingsFlags
// NumValues: 0x0009
enum class EChaosVDJointSolverSettingsFlags : uint8
{
	None                                     = 0,
	UseLinearSolver                          = 1,
	SortEnabled                              = 2,
	SolvePositionLast                        = 4,
	UsePositionBasedDrives                   = 8,
	EnableTwistLimits                        = 16,
	EnableSwingLimits                        = 32,
	EnableDrives                             = 64,
	EChaosVDJointSolverSettingsFlags_MAX     = 65,
};

// Enum ChaosVDRuntime.EChaosVDJointMotionType
// NumValues: 0x0004
enum class EChaosVDJointMotionType : uint32
{
	Free                                     = 0,
	Limited                                  = 1,
	Locked                                   = 2,
	EChaosVDJointMotionType_MAX              = 3,
};

// Enum ChaosVDRuntime.EChaosVDJointForceMode
// NumValues: 0x0003
enum class EChaosVDJointForceMode : uint32
{
	Acceleration                             = 0,
	Force                                    = 1,
	EChaosVDJointForceMode_MAX               = 2,
};

// Enum ChaosVDRuntime.EChaosVDPlasticityType
// NumValues: 0x0004
enum class EChaosVDPlasticityType : uint32
{
	Free                                     = 0,
	Shrink                                   = 1,
	Grow                                     = 2,
	EChaosVDPlasticityType_MAX               = 3,
};

// Enum ChaosVDRuntime.EChaosVDJointSettingsFlags
// NumValues: 0x0013
enum class EChaosVDJointSettingsFlags : uint32
{
	None                                     = 0,
	CollisionEnabled                         = 1,
	MassConditioningEnabled                  = 2,
	AngularSLerpPositionDriveEnabled         = 4,
	AngularSLerpVelocityDriveEnabled         = 8,
	AngularTwistPositionDriveEnabled         = 16,
	AngularTwistVelocityDriveEnabled         = 32,
	AngularSwingPositionDriveEnabled         = 64,
	AngularSwingVelocityDriveEnabled         = 128,
	SoftLinearLimitsEnabled                  = 256,
	SoftTwistLimitsEnabled                   = 512,
	SoftSwingLimitsEnabled                   = 1024,
	LinearPositionDriveEnabled0              = 2048,
	LinearPositionDriveEnable1               = 4096,
	LinearPositionDriveEnable2               = 8192,
	LinearVelocityDriveEnabled0              = 16384,
	LinearVelocityDriveEnabled1              = 32768,
	LinearVelocityDriveEnabled2              = 65536,
	EChaosVDJointSettingsFlags_MAX           = 65537,
};

// Enum ChaosVDRuntime.EChaosVDParticleType
// NumValues: 0x0009
enum class EChaosVDParticleType : uint8
{
	Static                                   = 0,
	Kinematic                                = 1,
	Rigid                                    = 2,
	Clustered                                = 3,
	StaticMesh                               = 4,
	SkeletalMesh                             = 5,
	GeometryCollection                       = 6,
	Unknown                                  = 7,
	EChaosVDParticleType_MAX                 = 8,
};

// Enum ChaosVDRuntime.EChaosVDSleepType
// NumValues: 0x0003
enum class EChaosVDSleepType : uint8
{
	MaterialSleep                            = 0,
	NeverSleep                               = 1,
	EChaosVDSleepType_MAX                    = 2,
};

// Enum ChaosVDRuntime.EChaosVDObjectStateType
// NumValues: 0x0007
enum class EChaosVDObjectStateType : uint8
{
	Uninitialized                            = 0,
	Sleeping                                 = 1,
	Kinematic                                = 2,
	Static                                   = 3,
	Dynamic                                  = 4,
	Count                                    = 5,
	EChaosVDObjectStateType_MAX              = 6,
};

// Enum ChaosVDRuntime.EChaosVDSceneQueryType
// NumValues: 0x0005
enum class EChaosVDSceneQueryType : uint32
{
	Invalid                                  = 0,
	Sweep                                    = 1,
	Overlap                                  = 2,
	RayCast                                  = 3,
	EChaosVDSceneQueryType_MAX               = 4,
};

// Enum ChaosVDRuntime.EChaosVDSceneQueryMode
// NumValues: 0x0005
enum class EChaosVDSceneQueryMode : uint32
{
	Single                                   = 0,
	Multi                                    = 1,
	Test                                     = 2,
	Invalid                                  = 3,
	EChaosVDSceneQueryMode_MAX               = 4,
};

// Enum ChaosVDRuntime.EChaosVDCollisionQueryParamsFlags
// NumValues: 0x000B
enum class EChaosVDCollisionQueryParamsFlags : uint16
{
	None                                     = 0,
	TraceComplex                             = 1,
	FindInitialOverlaps                      = 2,
	ReturnFaceIndex                          = 4,
	ReturnPhysicalMaterial                   = 8,
	IgnoreBlocks                             = 16,
	IgnoreTouches                            = 32,
	SkipNarrowPhase                          = 64,
	TraceIntoSubComponents                   = 128,
	ReplaceHitWithSubComponents              = 256,
	EChaosVDCollisionQueryParamsFlags_MAX    = 257,
};

// Enum ChaosVDRuntime.EChaosVDQueryFastDataParallelFlags
// NumValues: 0x0005
enum class EChaosVDQueryFastDataParallelFlags : uint8
{
	None                                     = 0,
	Parallel0                                = 1,
	Parallel1                                = 2,
	Parallel2                                = 4,
	EChaosVDQueryFastDataParallelFlags_MAX   = 5,
};

// Enum ChaosVDRuntime.EChaosVDCollisionQueryHitType
// NumValues: 0x0004
enum class EChaosVDCollisionQueryHitType : uint32
{
	None                                     = 0,
	Touch                                    = 1,
	Block                                    = 2,
	EChaosVDCollisionQueryHitType_MAX        = 3,
};

// Enum ChaosVDRuntime.EChaosVDSQVisitRejectReason
// NumValues: 0x0007
enum class EChaosVDSQVisitRejectReason : uint32
{
	None                                     = 0,
	NoHit                                    = 1,
	PreFilter                                = 2,
	PostFilter                               = 3,
	ColocatedHitHasWorseNormal               = 4,
	FailedFastBoundTest                      = 5,
	EChaosVDSQVisitRejectReason_MAX          = 6,
};

// Enum ChaosVDRuntime.EChaosVDSceneQueryVisitorType
// NumValues: 0x0004
enum class EChaosVDSceneQueryVisitorType : uint32
{
	Invalid                                  = 0,
	BroadPhase                               = 1,
	NarrowPhase                              = 2,
	EChaosVDSceneQueryVisitorType_MAX        = 3,
};

// ScriptStruct ChaosVDRuntime.ChaosVDWrapperDataBase
// 0x0010 (0x0010 - 0x0000)
struct alignas(0x08) FChaosVDWrapperDataBase
{
public:
	uint8                                         Pad_0[0x8];                                        // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bHasValidData;                                     // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct ChaosVDRuntime.ChaosVDAccelerationStructureBase
// 0x0008 (0x0018 - 0x0010)
struct FChaosVDAccelerationStructureBase : public FChaosVDWrapperDataBase
{
public:
	int32                                         SolverId;                                          // 0x0010(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EChaosVDAccelerationStructureType             Type;                                              // 0x0014(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct ChaosVDRuntime.ChaosVDBVCellElementDataWrapper
// 0x0058 (0x0068 - 0x0010)
struct FChaosVDBVCellElementDataWrapper final : public FChaosVDWrapperDataBase
{
public:
	struct FBox                                   Bounds;                                            // 0x0010(0x0038)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	int32                                         ParticleIndex;                                     // 0x0048(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4C[0x1C];                                      // 0x004C(0x001C)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct ChaosVDRuntime.ChaosVDBoundingVolumeDataWrapper
// 0x0028 (0x0040 - 0x0018)
struct FChaosVDBoundingVolumeDataWrapper final : public FChaosVDAccelerationStructureBase
{
public:
	uint8                                         Pad_18[0x20];                                      // 0x0018(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        MaxPayloadBounds;                                  // 0x0038(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct ChaosVDRuntime.ChaosVDAABBTreeNodeDataWrapper
// 0x0080 (0x0090 - 0x0010)
struct FChaosVDAABBTreeNodeDataWrapper final : public FChaosVDWrapperDataBase
{
public:
	struct FBox                                   ChildrenBounds[0x2];                               // 0x0010(0x0038)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	int32                                         ChildrenNodes[0x2];                                // 0x0080(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ParentNode;                                        // 0x0088(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bLeaf : 1;                                         // 0x008C(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bDirtyNode : 1;                                    // 0x008C(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct ChaosVDRuntime.ChaosVDAABBTreePayloadBoundsElement
// 0x0078 (0x0088 - 0x0010)
struct FChaosVDAABBTreePayloadBoundsElement final : public FChaosVDWrapperDataBase
{
public:
	int32                                         ParticleIndex;                                     // 0x0010(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBox                                   Bounds;                                            // 0x0018(0x0038)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_50[0x38];                                      // 0x0050(0x0038)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct ChaosVDRuntime.ChaosVDAABBTreeLeafDataWrapper
// 0x0048 (0x0058 - 0x0010)
struct FChaosVDAABBTreeLeafDataWrapper final : public FChaosVDWrapperDataBase
{
public:
	TArray<struct FChaosVDAABBTreePayloadBoundsElement> Elements;                                          // 0x0010(0x0010)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	struct FBox                                   Bounds;                                            // 0x0020(0x0038)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};

// ScriptStruct ChaosVDRuntime.ChaosVDAABBTreeDataWrapper
// 0x0058 (0x0070 - 0x0018)
struct FChaosVDAABBTreeDataWrapper final : public FChaosVDAccelerationStructureBase
{
public:
	int32                                         RootNodeIndex;                                     // 0x0018(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TreeDepth;                                         // 0x001C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NodesNum;                                          // 0x0020(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         LeavesNum;                                         // 0x0024(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDynamicTree;                                      // 0x0028(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MaxChildrenInLeaf;                                 // 0x002C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MaxTreeDepth;                                      // 0x0030(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        MaxPayloadBounds;                                  // 0x0038(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_40[0x30];                                      // 0x0040(0x0030)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct ChaosVDRuntime.ChaosVDCharacterGroundConstraintStateDataWrapper
// 0x0048 (0x0058 - 0x0010)
struct FChaosVDCharacterGroundConstraintStateDataWrapper final : public FChaosVDWrapperDataBase
{
public:
	uint8                                         Pad_10[0x10];                                      // 0x0010(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bDisabled;                                         // 0x0020(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                SolverAppliedForce;                                // 0x0028(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                SolverAppliedTorque;                               // 0x0040(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct ChaosVDRuntime.ChaosVDCharacterGroundConstraintSettingsDataWrapper
// 0x0058 (0x0068 - 0x0010)
struct FChaosVDCharacterGroundConstraintSettingsDataWrapper final : public FChaosVDWrapperDataBase
{
public:
	struct FVector                                VerticalAxis;                                      // 0x0010(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        TargetHeight;                                      // 0x0028(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        RadialForceLimit;                                  // 0x0030(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        FrictionForceLimit;                                // 0x0038(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        TwistTorqueLimit;                                  // 0x0040(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        SwingTorqueLimit;                                  // 0x0048(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        CosMaxWalkableSlopeAngle;                          // 0x0050(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        DampingFactor;                                     // 0x0058(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        AssumedOnGroundHeight;                             // 0x0060(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct ChaosVDRuntime.ChaosVDCharacterGroundConstraintDataDataWrapper
// 0x0048 (0x0058 - 0x0010)
struct FChaosVDCharacterGroundConstraintDataDataWrapper final : public FChaosVDWrapperDataBase
{
public:
	struct FVector                                GroundNormal;                                      // 0x0010(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                TargetDeltaPosition;                               // 0x0028(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        TargetDeltaFacing;                                 // 0x0040(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        GroundDistance;                                    // 0x0048(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        CosMaxWalkableSlopeAngle;                          // 0x0050(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct ChaosVDRuntime.ChaosVDConstraintDataWrapperBase
// 0x0000 (0x0010 - 0x0010)
struct FChaosVDConstraintDataWrapperBase : public FChaosVDWrapperDataBase
{
};

// ScriptStruct ChaosVDRuntime.ChaosVDCharacterGroundConstraint
// 0x0128 (0x0138 - 0x0010)
struct FChaosVDCharacterGroundConstraint final : public FChaosVDConstraintDataWrapperBase
{
public:
	uint8                                         Pad_10[0x4];                                       // 0x0010(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ConstraintIndex;                                   // 0x0014(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_18[0x8];                                       // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FChaosVDCharacterGroundConstraintStateDataWrapper State;                                             // 0x0020(0x0058)(Edit, EditConst, NativeAccessSpecifierPublic)
	struct FChaosVDCharacterGroundConstraintSettingsDataWrapper Settings;                                          // 0x0078(0x0068)(Edit, EditConst, NativeAccessSpecifierPublic)
	struct FChaosVDCharacterGroundConstraintDataDataWrapper Data;                                              // 0x00E0(0x0058)(Edit, EditConst, NativeAccessSpecifierPublic)
};

// ScriptStruct ChaosVDRuntime.ChaosVDContactPoint
// 0x0058 (0x0058 - 0x0000)
struct FChaosVDContactPoint final
{
public:
	struct FVector                                ShapeContactPoints[0x2];                           // 0x0000(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                ShapeContactNormal;                                // 0x0030(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Phi;                                               // 0x0048(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         FaceIndex;                                         // 0x004C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EChaosVDContactPointType                      ContactType;                                       // 0x0050(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct ChaosVDRuntime.ChaosVDManifoldPoint
// 0x0130 (0x0130 - 0x0000)
struct FChaosVDManifoldPoint final
{
public:
	uint8                                         bDisabled : 1;                                     // 0x0000(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bWasRestored : 1;                                  // 0x0000(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bWasReplaced : 1;                                  // 0x0000(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bHasStaticFrictionAnchor : 1;                      // 0x0000(0x0001)(BitIndex: 0x03, PropSize: 0x0001 (Edit, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bIsValid : 1;                                      // 0x0000(0x0001)(BitIndex: 0x04, PropSize: 0x0001 (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bInsideStaticFrictionCone : 1;                     // 0x0000(0x0001)(BitIndex: 0x05, PropSize: 0x0001 (Edit, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                NetPushOut;                                        // 0x0008(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                NetImpulse;                                        // 0x0020(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TargetPhi;                                         // 0x0038(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         InitialPhi;                                        // 0x003C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                ShapeAnchorPoints[0x2];                            // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                InitialShapeContactPoints[0x2];                    // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FChaosVDContactPoint                   ContactPoint;                                      // 0x00A0(0x0058)(Edit, EditConst, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                                ShapeContactPoints[0x2];                           // 0x00F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_128[0x8];                                      // 0x0128(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct ChaosVDRuntime.ChaosVDCollisionMaterial
// 0x0030 (0x0030 - 0x0000)
struct FChaosVDCollisionMaterial final
{
public:
	int32                                         FaceIndex;                                         // 0x0000(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaterialDynamicFriction;                           // 0x0004(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaterialStaticFriction;                            // 0x0008(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaterialRestitution;                               // 0x000C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DynamicFriction;                                   // 0x0010(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         StaticFriction;                                    // 0x0014(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Restitution;                                       // 0x0018(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RestitutionThreshold;                              // 0x001C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         InvMassScale0;                                     // 0x0020(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         InvMassScale1;                                     // 0x0024(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         InvInertiaScale0;                                  // 0x0028(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         InvInertiaScale1;                                  // 0x002C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct ChaosVDRuntime.ChaosVDConstraint
// 0x0280 (0x0280 - 0x0000)
struct FChaosVDConstraint final
{
public:
	uint8                                         bIsCurrent : 1;                                    // 0x0000(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bDisabled : 1;                                     // 0x0000(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bUseManifold : 1;                                  // 0x0000(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bUseIncrementalManifold : 1;                       // 0x0000(0x0001)(BitIndex: 0x03, PropSize: 0x0001 (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bCanRestoreManifold : 1;                           // 0x0000(0x0001)(BitIndex: 0x04, PropSize: 0x0001 (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bWasManifoldRestored : 1;                          // 0x0000(0x0001)(BitIndex: 0x05, PropSize: 0x0001 (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bIsQuadratic0 : 1;                                 // 0x0000(0x0001)(BitIndex: 0x06, PropSize: 0x0001 (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bIsQuadratic1 : 1;                                 // 0x0000(0x0001)(BitIndex: 0x07, PropSize: 0x0001 (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bIsProbe : 1;                                      // 0x0001(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bCCDEnabled : 1;                                   // 0x0001(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bCCDSweepEnabled : 1;                              // 0x0001(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (Edit, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bModifierApplied : 1;                              // 0x0001(0x0001)(BitIndex: 0x03, PropSize: 0x0001 (Edit, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bMaterialSet : 1;                                  // 0x0001(0x0001)(BitIndex: 0x04, PropSize: 0x0001 (Edit, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FChaosVDCollisionMaterial              Material;                                          // 0x0004(0x0030)(Edit, EditConst, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                AccumulatedImpulse;                                // 0x0038(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EChaosVDContactShapesType                     ShapesType;                                        // 0x0050(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_54[0xC];                                       // 0x0054(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             ShapeWorldTransforms[0x2];                         // 0x0060(0x0060)(Edit, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTransform                             ImplicitTransforms[0x2];                           // 0x0120(0x0060)(Edit, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CullDistance;                                      // 0x01E0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1E4[0x4];                                      // 0x01E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<float>                                 CollisionMargins;                                  // 0x01E8(0x0010)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	float                                         CollisionTolerance;                                // 0x01F8(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ClosestManifoldPointIndex;                         // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ExpectedNumManifoldPoints;                         // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_204[0x4];                                      // 0x0204(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                LastShapeWorldPositionDelta;                       // 0x0208(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FQuat                                  LastShapeWorldRotationDelta;                       // 0x0220(0x0020)(IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Stiffness;                                         // 0x0240(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MinInitialPhi;                                     // 0x0244(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         InitialOverlapDepenetrationVelocity;               // 0x0248(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CCDTimeOfImpact;                                   // 0x024C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CCDEnablePenetration;                              // 0x0250(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CCDTargetPenetration;                              // 0x0254(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FChaosVDManifoldPoint>          ManifoldPoints;                                    // 0x0258(0x0010)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	int32                                         Particle0Index;                                    // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Particle1Index;                                    // 0x026C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SolverID;                                          // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_274[0xC];                                      // 0x0274(0x000C)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct ChaosVDRuntime.ChaosVDParticlePairMidPhase
// 0x0028 (0x0028 - 0x0000)
struct FChaosVDParticlePairMidPhase final
{
public:
	int32                                         SolverID;                                          // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EChaosVDMidPhaseType                          MidPhaseType;                                      // 0x0004(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bIsActive : 1;                                     // 0x0005(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bIsCCD : 1;                                        // 0x0005(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bIsCCDActive : 1;                                  // 0x0005(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (Edit, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bIsSleeping : 1;                                   // 0x0005(0x0001)(BitIndex: 0x03, PropSize: 0x0001 (Edit, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bIsModified : 1;                                   // 0x0005(0x0001)(BitIndex: 0x04, PropSize: 0x0001 (Edit, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         LastUsedEpoch;                                     // 0x0008(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Particle0Idx;                                      // 0x000C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Particle1Idx;                                      // 0x0010(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FChaosVDConstraint>             Constraints;                                       // 0x0018(0x0010)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
};

// ScriptStruct ChaosVDRuntime.ChaosVDCollisionFilterData
// 0x0010 (0x0010 - 0x0000)
struct FChaosVDCollisionFilterData final
{
public:
	uint32                                        Word0;                                             // 0x0000(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        Word1;                                             // 0x0004(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        Word2;                                             // 0x0008(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        Word3;                                             // 0x000C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct ChaosVDRuntime.ChaosVDShapeCollisionData
// 0x002C (0x002C - 0x0000)
struct FChaosVDShapeCollisionData final
{
public:
	EChaosVDCollisionTraceFlag                    CollisionTraceType;                                // 0x0000(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bSimCollision : 1;                                 // 0x0004(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bQueryCollision : 1;                               // 0x0004(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bIsProbe : 1;                                      // 0x0004(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FChaosVDCollisionFilterData            QueryData;                                         // 0x0008(0x0010)(Edit, EditConst, NoDestructor, NativeAccessSpecifierPublic)
	struct FChaosVDCollisionFilterData            SimData;                                           // 0x0018(0x0010)(Edit, EditConst, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bIsComplex;                                        // 0x0028(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsValid;                                          // 0x0029(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct ChaosVDRuntime.ChaosVDCollisionChannelInfo
// 0x0018 (0x0018 - 0x0000)
struct FChaosVDCollisionChannelInfo final
{
public:
	class FString                                 DisplayName;                                       // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         CollisionChannel;                                  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsTraceType;                                      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct ChaosVDRuntime.ChaosVDCollisionChannelsInfoContainer
// 0x0300 (0x0300 - 0x0000)
struct FChaosVDCollisionChannelsInfoContainer final
{
public:
	struct FChaosVDCollisionChannelInfo           CustomChannelsNames[0x20];                         // 0x0000(0x0018)(Edit, EditConst, NativeAccessSpecifierPublic)
};

// ScriptStruct ChaosVDRuntime.ChaosVDDebugDrawShapeBase
// 0x0018 (0x0028 - 0x0010)
struct FChaosVDDebugDrawShapeBase : public FChaosVDWrapperDataBase
{
public:
	int32                                         SolverID;                                          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   Tag;                                               // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FColor                                 Color;                                             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct ChaosVDRuntime.ChaosVDDebugDrawBoxDataWrapper
// 0x0038 (0x0060 - 0x0028)
struct FChaosVDDebugDrawBoxDataWrapper final : public FChaosVDDebugDrawShapeBase
{
public:
	struct FBox                                   Box;                                               // 0x0028(0x0038)(ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};

// ScriptStruct ChaosVDRuntime.ChaosVDDebugDrawSphereDataWrapper
// 0x0020 (0x0048 - 0x0028)
struct FChaosVDDebugDrawSphereDataWrapper final : public FChaosVDDebugDrawShapeBase
{
public:
	struct FVector                                Origin;                                            // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Radius;                                            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct ChaosVDRuntime.ChaosVDDebugDrawLineDataWrapper
// 0x0038 (0x0060 - 0x0028)
struct FChaosVDDebugDrawLineDataWrapper final : public FChaosVDDebugDrawShapeBase
{
public:
	struct FVector                                StartLocation;                                     // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                EndLocation;                                       // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsArrow;                                          // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct ChaosVDRuntime.ChaosVDDebugDrawImplicitObjectDataWrapper
// 0x0068 (0x0090 - 0x0028)
struct alignas(0x10) FChaosVDDebugDrawImplicitObjectDataWrapper final : public FChaosVDDebugDrawShapeBase
{
public:
	uint8                                         Pad_28[0x68];                                      // 0x0028(0x0068)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct ChaosVDRuntime.ChaosVDJointStateDataWrapper
// 0x0050 (0x0060 - 0x0010)
struct FChaosVDJointStateDataWrapper final : public FChaosVDWrapperDataBase
{
public:
	uint8                                         Pad_10[0x10];                                      // 0x0010(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	uint8                                         bDisabled : 1;                                     // 0x0020(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bBroken : 1;                                       // 0x0020(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bBreaking : 1;                                     // 0x0020(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (Edit, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bDriveTargetChanged : 1;                           // 0x0020(0x0001)(BitIndex: 0x03, PropSize: 0x0001 (Edit, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bEnabledDuringResim : 1;                           // 0x0020(0x0001)(BitIndex: 0x04, PropSize: 0x0001 (Edit, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                LinearImpulse;                                     // 0x0028(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                AngularImpulse;                                    // 0x0040(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EChaosVDJointReSimType                        ResimType;                                         // 0x0058(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EChaosVDJointSyncType                         SyncState;                                         // 0x005C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct ChaosVDRuntime.ChaosVDJointSolverSettingsDataWrapper
// 0x00C8 (0x00D8 - 0x0010)
struct FChaosVDJointSolverSettingsDataWrapper final : public FChaosVDWrapperDataBase
{
public:
	double                                        SwingTwistAngleTolerance;                          // 0x0010(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        PositionTolerance;                                 // 0x0018(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        AngleTolerance;                                    // 0x0020(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        MinParentMassRatio;                                // 0x0028(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        MaxInertiaRatio;                                   // 0x0030(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        MinSolverStiffness;                                // 0x0038(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        MaxSolverStiffness;                                // 0x0040(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NumIterationsAtMaxSolverStiffness;                 // 0x0048(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NumShockPropagationIterations;                     // 0x004C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bUseLinearSolver : 1;                              // 0x0050(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bSortEnabled : 1;                                  // 0x0050(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bSolvePositionLast : 1;                            // 0x0050(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (Edit, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bUsePositionBasedDrives : 1;                       // 0x0050(0x0001)(BitIndex: 0x03, PropSize: 0x0001 (Edit, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bEnableTwistLimits : 1;                            // 0x0050(0x0001)(BitIndex: 0x04, PropSize: 0x0001 (Edit, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bEnableSwingLimits : 1;                            // 0x0050(0x0001)(BitIndex: 0x05, PropSize: 0x0001 (Edit, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bEnableDrives : 1;                                 // 0x0050(0x0001)(BitIndex: 0x06, PropSize: 0x0001 (Edit, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        LinearStiffnessOverride;                           // 0x0058(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        TwistStiffnessOverride;                            // 0x0060(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        SwingStiffnessOverride;                            // 0x0068(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        LinearProjectionOverride;                          // 0x0070(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        AngularProjectionOverride;                         // 0x0078(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        ShockPropagationOverride;                          // 0x0080(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        LinearDriveStiffnessOverride;                      // 0x0088(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        LinearDriveDampingOverride;                        // 0x0090(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        AngularDriveStiffnessOverride;                     // 0x0098(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        AngularDriveDampingOverride;                       // 0x00A0(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        SoftLinearStiffnessOverride;                       // 0x00A8(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        SoftLinearDampingOverride;                         // 0x00B0(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        SoftTwistStiffnessOverride;                        // 0x00B8(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        SoftTwistDampingOverride;                          // 0x00C0(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        SoftSwingStiffnessOverride;                        // 0x00C8(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        SoftSwingDampingOverride;                          // 0x00D0(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct ChaosVDRuntime.ChaosVDJointSettingsDataWrapper
// 0x02E0 (0x02F0 - 0x0010)
struct FChaosVDJointSettingsDataWrapper final : public FChaosVDWrapperDataBase
{
public:
	struct FTransform                             ConnectorTransforms[0x2];                          // 0x0010(0x0060)(Edit, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        Stiffness;                                         // 0x00D0(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        LinearProjection;                                  // 0x00D8(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        AngularProjection;                                 // 0x00E0(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        ShockPropagation;                                  // 0x00E8(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        TeleportDistance;                                  // 0x00F0(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        TeleportAngle;                                     // 0x00F8(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        ParentInvMassScale;                                // 0x0100(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bCollisionEnabled : 1;                             // 0x0108(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bMassConditioningEnabled : 1;                      // 0x0108(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bSoftLinearLimitsEnabled : 1;                      // 0x0108(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (Edit, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bSoftTwistLimitsEnabled : 1;                       // 0x0108(0x0001)(BitIndex: 0x03, PropSize: 0x0001 (Edit, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bSoftSwingLimitsEnabled : 1;                       // 0x0108(0x0001)(BitIndex: 0x04, PropSize: 0x0001 (Edit, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bAngularSLerpPositionDriveEnabled : 1;             // 0x0108(0x0001)(BitIndex: 0x05, PropSize: 0x0001 (Edit, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bAngularSLerpVelocityDriveEnabled : 1;             // 0x0108(0x0001)(BitIndex: 0x06, PropSize: 0x0001 (Edit, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bAngularTwistPositionDriveEnabled : 1;             // 0x0108(0x0001)(BitIndex: 0x07, PropSize: 0x0001 (Edit, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bAngularTwistVelocityDriveEnabled : 1;             // 0x0109(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bAngularSwingPositionDriveEnabled : 1;             // 0x0109(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bAngularSwingVelocityDriveEnabled : 1;             // 0x0109(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (Edit, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_10A[0x2];                                      // 0x010A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	EChaosVDJointMotionType                       LinearMotionTypes[0x3];                            // 0x010C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        LinearLimit;                                       // 0x0118(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EChaosVDJointMotionType                       AngularMotionTypes[0x3];                           // 0x0120(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_12C[0x4];                                      // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                AngularLimits;                                     // 0x0130(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EChaosVDJointForceMode                        LinearSoftForceMode;                               // 0x0148(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EChaosVDJointForceMode                        AngularSoftForceMode;                              // 0x014C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        SoftLinearStiffness;                               // 0x0150(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        SoftLinearDamping;                                 // 0x0158(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        SoftTwistStiffness;                                // 0x0160(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        SoftTwistDamping;                                  // 0x0168(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        SoftSwingStiffness;                                // 0x0170(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        SoftSwingDamping;                                  // 0x0178(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        LinearRestitution;                                 // 0x0180(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        TwistRestitution;                                  // 0x0188(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        SwingRestitution;                                  // 0x0190(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        LinearContactDistance;                             // 0x0198(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        TwistContactDistance;                              // 0x01A0(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        SwingContactDistance;                              // 0x01A8(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                LinearDrivePositionTarget;                         // 0x01B0(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                LinearDriveVelocityTarget;                         // 0x01C8(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bLinearPositionDriveEnabled0 : 1;                  // 0x01E0(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bLinearPositionDriveEnabled1 : 1;                  // 0x01E0(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bLinearPositionDriveEnabled2 : 1;                  // 0x01E0(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (Edit, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bLinearVelocityDriveEnabled0 : 1;                  // 0x01E0(0x0001)(BitIndex: 0x03, PropSize: 0x0001 (Edit, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bLinearVelocityDriveEnabled1 : 1;                  // 0x01E0(0x0001)(BitIndex: 0x04, PropSize: 0x0001 (Edit, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bLinearVelocityDriveEnabled2 : 1;                  // 0x01E0(0x0001)(BitIndex: 0x05, PropSize: 0x0001 (Edit, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_1E1[0x3];                                      // 0x01E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	EChaosVDJointForceMode                        LinearDriveForceMode;                              // 0x01E4(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                LinearDriveStiffness;                              // 0x01E8(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                LinearDriveDamping;                                // 0x0200(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                LinearDriveMaxForce;                               // 0x0218(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FQuat                                  AngularDrivePositionTarget;                        // 0x0230(0x0020)(Edit, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                AngularDriveVelocityTarget;                        // 0x0250(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EChaosVDJointForceMode                        AngularDriveForceMode;                             // 0x0268(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_26C[0x4];                                      // 0x026C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                AngularDriveStiffness;                             // 0x0270(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                AngularDriveDamping;                               // 0x0288(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                AngularDriveMaxTorque;                             // 0x02A0(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        LinearBreakForce;                                  // 0x02B8(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        LinearPlasticityLimit;                             // 0x02C0(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EChaosVDPlasticityType                        LinearPlasticityType;                              // 0x02C8(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2CC[0x4];                                      // 0x02CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        LinearPlasticityInitialDistanceSquared;            // 0x02D0(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        AngularBreakTorque;                                // 0x02D8(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        AngularPlasticityLimit;                            // 0x02E0(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        ContactTransferScale;                              // 0x02E8(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct ChaosVDRuntime.ChaosVDJointConstraint
// 0x0360 (0x0370 - 0x0010)
struct FChaosVDJointConstraint final : public FChaosVDConstraintDataWrapperBase
{
public:
	uint8                                         Pad_10[0x4];                                       // 0x0010(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ConstraintIndex;                                   // 0x0014(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_18[0x8];                                       // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FChaosVDJointStateDataWrapper          JointState;                                        // 0x0020(0x0060)(Edit, EditConst, NativeAccessSpecifierPublic)
	struct FChaosVDJointSettingsDataWrapper       JointSettings;                                     // 0x0080(0x02F0)(Edit, EditConst, NativeAccessSpecifierPublic)
};

// ScriptStruct ChaosVDRuntime.ChaosVDFRigidParticleControlFlags
// 0x0010 (0x0020 - 0x0010)
struct FChaosVDFRigidParticleControlFlags final : public FChaosVDWrapperDataBase
{
public:
	bool                                          bGravityEnabled;                                   // 0x0010(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCCDEnabled;                                       // 0x0011(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOneWayInteractionEnabled;                         // 0x0012(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bInertiaConditioningEnabled;                       // 0x0013(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         GravityGroupIndex;                                 // 0x0014(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bMACDEnabled;                                      // 0x0018(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct ChaosVDRuntime.ChaosVDParticlePositionRotation
// 0x0040 (0x0050 - 0x0010)
struct FChaosVDParticlePositionRotation final : public FChaosVDWrapperDataBase
{
public:
	struct FVector                                MX;                                                // 0x0010(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  MR;                                                // 0x0030(0x0020)(Edit, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct ChaosVDRuntime.ChaosVDParticleVelocities
// 0x0030 (0x0040 - 0x0010)
struct FChaosVDParticleVelocities final : public FChaosVDWrapperDataBase
{
public:
	struct FVector                                MV;                                                // 0x0010(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                MW;                                                // 0x0028(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct ChaosVDRuntime.ChaosVDParticleDynamics
// 0x0060 (0x0070 - 0x0010)
struct FChaosVDParticleDynamics final : public FChaosVDWrapperDataBase
{
public:
	struct FVector                                MAcceleration;                                     // 0x0010(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                MAngularAcceleration;                              // 0x0028(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                MLinearImpulseVelocity;                            // 0x0040(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                MAngularImpulseVelocity;                           // 0x0058(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct ChaosVDRuntime.ChaosVDParticleMassProps
// 0x0080 (0x0090 - 0x0010)
struct FChaosVDParticleMassProps final : public FChaosVDWrapperDataBase
{
public:
	struct FVector                                MCenterOfMass;                                     // 0x0010(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  MRotationOfMass;                                   // 0x0030(0x0020)(Edit, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                MI;                                                // 0x0050(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                MInvI;                                             // 0x0068(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        MM;                                                // 0x0080(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        MInvM;                                             // 0x0088(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct ChaosVDRuntime.ChaosVDParticleDynamicMisc
// 0x0058 (0x0068 - 0x0010)
struct FChaosVDParticleDynamicMisc final : public FChaosVDWrapperDataBase
{
public:
	double                                        MAngularEtherDrag;                                 // 0x0010(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        MMaxLinearSpeedSq;                                 // 0x0018(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        MMaxAngularSpeedSq;                                // 0x0020(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MInitialOverlapDepenetrationVelocity;              // 0x0028(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MSleepThresholdMultiplier;                         // 0x002C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MCollisionGroup;                                   // 0x0030(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EChaosVDObjectStateType                       MObjectState;                                      // 0x0034(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EChaosVDSleepType                             MSleepType;                                        // 0x0035(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_36[0x2];                                       // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	uint32                                        MCollisionConstraintFlag;                          // 0x0038(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FChaosVDFRigidParticleControlFlags     MControlFlags;                                     // 0x0040(0x0020)(Edit, EditConst, NativeAccessSpecifierPublic)
	bool                                          bDisabled;                                         // 0x0060(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct ChaosVDRuntime.ChaosVDConnectivityEdge
// 0x0008 (0x0008 - 0x0000)
struct FChaosVDConnectivityEdge final
{
public:
	int32                                         SiblingParticleID;                                 // 0x0000(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Strain;                                            // 0x0004(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct ChaosVDRuntime.ChaosVDParticleCluster
// 0x00A0 (0x00B0 - 0x0010)
struct FChaosVDParticleCluster final : public FChaosVDWrapperDataBase
{
public:
	int32                                         ParentParticleID;                                  // 0x0010(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NumChildren;                                       // 0x0014(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_18[0x8];                                       // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             ChildToParent;                                     // 0x0020(0x0060)(Edit, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ClusterGroupIndex;                                 // 0x0080(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bInternalCluster;                                  // 0x0084(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_85[0x3];                                       // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CollisionImpulse;                                  // 0x0088(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ExternalStrains;                                   // 0x008C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         InternalStrains;                                   // 0x0090(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Strain;                                            // 0x0094(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FChaosVDConnectivityEdge>       ConnectivityEdges;                                 // 0x0098(0x0010)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	bool                                          bIsAnchored;                                       // 0x00A8(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUnbreakable;                                      // 0x00A9(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsChildToParentLocked;                            // 0x00AA(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_AB[0x5];                                       // 0x00AB(0x0005)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct ChaosVDRuntime.ChaosVDParticleDataWrapper
// 0x0300 (0x0310 - 0x0010)
struct FChaosVDParticleDataWrapper final : public FChaosVDWrapperDataBase
{
public:
	uint32                                        GeometryHash;                                      // 0x0010(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 DebugName;                                         // 0x0018(0x0010)(Edit, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ParticleIndex;                                     // 0x0028(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SolverID;                                          // 0x002C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EChaosVDParticleType                          Type;                                              // 0x0030(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0xF];                                       // 0x0031(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FChaosVDParticlePositionRotation       ParticlePositionRotation;                          // 0x0040(0x0050)(Edit, EditConst, NativeAccessSpecifierPublic)
	struct FChaosVDParticleVelocities             ParticleVelocities;                                // 0x0090(0x0040)(Edit, EditConst, NativeAccessSpecifierPublic)
	struct FChaosVDParticleDynamics               ParticleDynamics;                                  // 0x00D0(0x0070)(Edit, EditConst, NativeAccessSpecifierPublic)
	struct FChaosVDParticleDynamicMisc            ParticleDynamicsMisc;                              // 0x0140(0x0068)(Edit, EditConst, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A8[0x8];                                      // 0x01A8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FChaosVDParticleMassProps              ParticleMassProps;                                 // 0x01B0(0x0090)(Edit, EditConst, NativeAccessSpecifierPublic)
	struct FChaosVDParticleCluster                ParticleCluster;                                   // 0x0240(0x00B0)(Edit, EditConst, NativeAccessSpecifierPublic)
	TArray<struct FChaosVDShapeCollisionData>     CollisionDataPerShape;                             // 0x02F0(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_300[0x10];                                     // 0x0300(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct ChaosVDRuntime.ChaosVDCollisionResponseParams
// 0x0030 (0x0040 - 0x0010)
struct FChaosVDCollisionResponseParams final : public FChaosVDWrapperDataBase
{
public:
	uint8                                         Pad_10[0x30];                                      // 0x0010(0x0030)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct ChaosVDRuntime.ChaosVDCollisionObjectQueryParams
// 0x0008 (0x0018 - 0x0010)
struct FChaosVDCollisionObjectQueryParams final : public FChaosVDWrapperDataBase
{
public:
	uint8                                         ObjectTypesToQuery;                                // 0x0010(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         IgnoreMask;                                        // 0x0011(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct ChaosVDRuntime.ChaosVDCollisionQueryParams
// 0x0060 (0x0070 - 0x0010)
struct FChaosVDCollisionQueryParams final : public FChaosVDWrapperDataBase
{
public:
	class FName                                   TraceTag;                                          // 0x0010(0x000C)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   OwnerTag;                                          // 0x001C(0x000C)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bTraceComplex : 1;                                 // 0x0028(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bFindInitialOverlaps : 1;                          // 0x0028(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bReturnFaceIndex : 1;                              // 0x0028(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (Edit, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bReturnPhysicalMaterial : 1;                       // 0x0028(0x0001)(BitIndex: 0x03, PropSize: 0x0001 (Edit, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bIgnoreBlocks : 1;                                 // 0x0028(0x0001)(BitIndex: 0x04, PropSize: 0x0001 (Edit, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bIgnoreTouches : 1;                                // 0x0028(0x0001)(BitIndex: 0x05, PropSize: 0x0001 (Edit, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bSkipNarrowPhase : 1;                              // 0x0028(0x0001)(BitIndex: 0x06, PropSize: 0x0001 (Edit, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bTraceIntoSubComponents : 1;                       // 0x0028(0x0001)(BitIndex: 0x07, PropSize: 0x0001 (Edit, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bReplaceHitWithSubComponents : 1;                  // 0x0029(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         IgnoreMask;                                        // 0x002A(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2B[0x25];                                      // 0x002B(0x0025)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           IgnoredActorsNames;                                // 0x0050(0x0010)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	TArray<class FName>                           IgnoredComponentsNames;                            // 0x0060(0x0010)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
};

// ScriptStruct ChaosVDRuntime.ChaosVDQueryFastData
// 0x0048 (0x0058 - 0x0010)
struct FChaosVDQueryFastData final : public FChaosVDWrapperDataBase
{
public:
	struct FVector                                Dir;                                               // 0x0010(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                InvDir;                                            // 0x0028(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        CurrentLength;                                     // 0x0040(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        InvCurrentLength;                                  // 0x0048(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bParallel0 : 1;                                    // 0x0050(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bParallel1 : 1;                                    // 0x0050(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bParallel2 : 1;                                    // 0x0050(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (Edit, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct ChaosVDRuntime.ChaosVDQueryHitData
// 0x0058 (0x0068 - 0x0010)
struct FChaosVDQueryHitData final : public FChaosVDWrapperDataBase
{
public:
	float                                         Distance;                                          // 0x0010(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         FaceIdx;                                           // 0x0014(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint16                                        Flags;                                             // 0x0018(0x0002)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                WorldPosition;                                     // 0x0020(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                WorldNormal;                                       // 0x0038(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                FaceNormal;                                        // 0x0050(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct ChaosVDRuntime.ChaosVDQueryVisitStep
// 0x0140 (0x0150 - 0x0010)
struct FChaosVDQueryVisitStep final : public FChaosVDWrapperDataBase
{
public:
	uint8                                         Pad_10[0x4];                                       // 0x0010(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	EChaosVDSceneQueryVisitorType                 Type;                                              // 0x0014(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        ShapeIndex;                                        // 0x0018(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ParticleIndex;                                     // 0x001C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTransform                             ParticleTransform;                                 // 0x0020(0x0060)(Edit, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FChaosVDQueryFastData                  QueryFastData;                                     // 0x0080(0x0058)(Edit, EditConst, NativeAccessSpecifierPublic)
	EChaosVDCollisionQueryHitType                 HitType;                                           // 0x00D8(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FChaosVDQueryHitData                   HitData;                                           // 0x00E0(0x0068)(Edit, EditConst, NativeAccessSpecifierPublic)
	EChaosVDSQVisitRejectReason                   RejectReason;                                      // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14C[0x4];                                      // 0x014C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct ChaosVDRuntime.ChaosVDQueryDataWrapper
// 0x0180 (0x0180 - 0x0000)
struct FChaosVDQueryDataWrapper final
{
public:
	int32                                         ID;                                                // 0x0000(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ParentQueryID;                                     // 0x0004(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         WorldSolverID;                                     // 0x0008(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsRetryQuery;                                     // 0x000C(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x13];                                       // 0x000D(0x0013)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  GeometryOrientation;                               // 0x0020(0x0020)(Edit, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EChaosVDSceneQueryType                        Type;                                              // 0x0040(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EChaosVDSceneQueryMode                        Mode;                                              // 0x0044(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                StartLocation;                                     // 0x0048(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                EndLocation;                                       // 0x0060(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         CollisionChannel;                                  // 0x0078(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FChaosVDCollisionQueryParams           CollisionQueryParams;                              // 0x0080(0x0070)(Edit, EditConst, NativeAccessSpecifierPublic)
	struct FChaosVDCollisionResponseParams        CollisionResponseParams;                           // 0x00F0(0x0040)(Edit, EditConst, NativeAccessSpecifierPublic)
	struct FChaosVDCollisionObjectQueryParams     CollisionObjectQueryParams;                        // 0x0130(0x0018)(Edit, EditConst, NativeAccessSpecifierPublic)
	uint8                                         Pad_148[0x10];                                     // 0x0148(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FChaosVDQueryVisitStep>         Hits;                                              // 0x0158(0x0010)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	uint8                                         Pad_168[0x18];                                     // 0x0168(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

}

