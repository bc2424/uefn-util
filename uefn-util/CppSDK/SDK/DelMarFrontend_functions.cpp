#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DelMarFrontend

#include "Basic.hpp"

#include "DelMarFrontend_classes.hpp"
#include "DelMarFrontend_parameters.hpp"


namespace SDK
{

// Function DelMarFrontend.DelMarFrontendCheatManager.DelMarMarkTutorialPlayed
// (Final, Exec, Native, Protected)

void UDelMarFrontendCheatManager::DelMarMarkTutorialPlayed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DelMarFrontendCheatManager", "DelMarMarkTutorialPlayed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DelMarFrontend.DelMarFrontendCheatManager.DelMarResetNux
// (Final, Exec, Native, Protected)

void UDelMarFrontendCheatManager::DelMarResetNux()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DelMarFrontendCheatManager", "DelMarResetNux");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DelMarFrontend.DelMarFrontendExperienceFlow.FinishTrailerStep
// (Final, Native, Protected)

void UDelMarFrontendExperienceFlow::FinishTrailerStep()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DelMarFrontendExperienceFlow", "FinishTrailerStep");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DelMarFrontend.DelMarFrontendExperienceFlow.HandleVideoTerminalError
// (Final, Native, Protected)
// Parameters:
// EBaseMediaTerminalErrorReason           Reason                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDelMarFrontendExperienceFlow::HandleVideoTerminalError(EBaseMediaTerminalErrorReason Reason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DelMarFrontendExperienceFlow", "HandleVideoTerminalError");

	Params::DelMarFrontendExperienceFlow_HandleVideoTerminalError Parms{};

	Parms.Reason = Reason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DelMarFrontend.DelMarModeSetModificationModal.HandleBrowseTrackButtonClicked
// (Final, Native, Protected, BlueprintCallable)

void UDelMarModeSetModificationModal::HandleBrowseTrackButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DelMarModeSetModificationModal", "HandleBrowseTrackButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DelMarFrontend.DelMarModeSetModificationModal.HandleCloseButtonClicked
// (Final, Native, Protected, BlueprintCallable)

void UDelMarModeSetModificationModal::HandleCloseButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DelMarModeSetModificationModal", "HandleCloseButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DelMarFrontend.DelMarModeSetModificationModal.OnActivityViewModelInitialized
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UDelMarActivityVM*                ViewModel                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDelMarModeSetModificationModal::OnActivityViewModelInitialized(class UDelMarActivityVM* ViewModel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DelMarModeSetModificationModal", "OnActivityViewModelInitialized");

	Params::DelMarModeSetModificationModal_OnActivityViewModelInitialized Parms{};

	Parms.ViewModel = ViewModel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DelMarFrontend.DelMarModeSetPreviewModal.HandleBrowseTrackButtonClicked
// (Final, Native, Protected, BlueprintCallable)

void UDelMarModeSetPreviewModal::HandleBrowseTrackButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DelMarModeSetPreviewModal", "HandleBrowseTrackButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DelMarFrontend.DelMarModeSetPreviewModal.HandleCloseButtonClicked
// (Final, Native, Protected, BlueprintCallable)

void UDelMarModeSetPreviewModal::HandleCloseButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DelMarModeSetPreviewModal", "HandleCloseButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DelMarFrontend.DelMarModeSetPreviewModal.HandleConfirmButtonClicked
// (Final, Native, Protected, BlueprintCallable)

void UDelMarModeSetPreviewModal::HandleConfirmButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DelMarModeSetPreviewModal", "HandleConfirmButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DelMarFrontend.DelMarModeSetPreviewModal.HandleDetailsButtonClicked
// (Final, Native, Protected, BlueprintCallable)

void UDelMarModeSetPreviewModal::HandleDetailsButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DelMarModeSetPreviewModal", "HandleDetailsButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DelMarFrontend.DelMarModeSetPreviewModal.OnActivityViewModelInitialized
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UDelMarActivityVM*                ViewModel                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDelMarModeSetPreviewModal::OnActivityViewModelInitialized(class UDelMarActivityVM* ViewModel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DelMarModeSetPreviewModal", "OnActivityViewModelInitialized");

	Params::DelMarModeSetPreviewModal_OnActivityViewModelInitialized Parms{};

	Parms.ViewModel = ViewModel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DelMarFrontend.DelMarTrackSelectScreen.HandleCloseButtonClicked
// (Final, Native, Protected, BlueprintCallable)

void UDelMarTrackSelectScreen::HandleCloseButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DelMarTrackSelectScreen", "HandleCloseButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DelMarFrontend.DelMarFrontendRuntimeOptions.GetDelMarFrontendRuntimeOptions
// (Final, RequiredAPI, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UDelMarFrontendRuntimeOptions*    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UDelMarFrontendRuntimeOptions* UDelMarFrontendRuntimeOptions::GetDelMarFrontendRuntimeOptions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DelMarFrontendRuntimeOptions", "GetDelMarFrontendRuntimeOptions");

	Params::DelMarFrontendRuntimeOptions_GetDelMarFrontendRuntimeOptions Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DelMarFrontend.DelMarFrontendRuntimeOptions.IsNewTrack
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           LinkCode                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UDelMarFrontendRuntimeOptions::IsNewTrack(const class FString& LinkCode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DelMarFrontendRuntimeOptions", "IsNewTrack");

	Params::DelMarFrontendRuntimeOptions_IsNewTrack Parms{};

	Parms.LinkCode = std::move(LinkCode);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DelMarFrontend.DelMarActivityVM.SetCurrentProductMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           SelectedProductMode                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDelMarActivityVM::SetCurrentProductMode(const class FString& SelectedProductMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DelMarActivityVM", "SetCurrentProductMode");

	Params::DelMarActivityVM_SetCurrentProductMode Parms{};

	Parms.SelectedProductMode = std::move(SelectedProductMode);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

