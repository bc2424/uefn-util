#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ChaosVD

#include "Basic.hpp"

#include "ChaosVD_classes.hpp"
#include "ChaosVD_parameters.hpp"


namespace SDK
{

// Function ChaosVD.ChaosVDSkySphereInterface.Refresh
// (Native, Event, Public, BlueprintEvent)

void IChaosVDSkySphereInterface::Refresh()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChaosVDSkySphereInterface", "Refresh");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ChaosVD.ChaosVDSkySphereInterface.SetDirectionalLightSource
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class ADirectionalLight*                NewLightSource                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IChaosVDSkySphereInterface::SetDirectionalLightSource(class ADirectionalLight* NewLightSource)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChaosVDSkySphereInterface", "SetDirectionalLightSource");

	Params::ChaosVDSkySphereInterface_SetDirectionalLightSource Parms{};

	Parms.NewLightSource = NewLightSource;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

