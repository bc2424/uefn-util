#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DataLayerEditor

#include "Basic.hpp"

#include "DataLayerEditor_classes.hpp"
#include "DataLayerEditor_parameters.hpp"


namespace SDK
{

// Function DataLayerEditor.DataLayerEditorSubsystem.AddActorsToDataLayer
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class AActor*>                   Actors                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// class UDataLayerInstance*               DataLayer                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UDataLayerEditorSubsystem::AddActorsToDataLayer(const TArray<class AActor*>& Actors, class UDataLayerInstance* DataLayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DataLayerEditorSubsystem", "AddActorsToDataLayer");

	Params::DataLayerEditorSubsystem_AddActorsToDataLayer Parms{};

	Parms.Actors = std::move(Actors);
	Parms.DataLayer = DataLayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DataLayerEditor.DataLayerEditorSubsystem.AddActorsToDataLayers
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class AActor*>                   Actors                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<class UDataLayerInstance*>       DataLayers                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UDataLayerEditorSubsystem::AddActorsToDataLayers(const TArray<class AActor*>& Actors, const TArray<class UDataLayerInstance*>& DataLayers)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DataLayerEditorSubsystem", "AddActorsToDataLayers");

	Params::DataLayerEditorSubsystem_AddActorsToDataLayers Parms{};

	Parms.Actors = std::move(Actors);
	Parms.DataLayers = std::move(DataLayers);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DataLayerEditor.DataLayerEditorSubsystem.AddActorToDataLayer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UDataLayerInstance*               DataLayer                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UDataLayerEditorSubsystem::AddActorToDataLayer(class AActor* Actor, class UDataLayerInstance* DataLayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DataLayerEditorSubsystem", "AddActorToDataLayer");

	Params::DataLayerEditorSubsystem_AddActorToDataLayer Parms{};

	Parms.Actor = Actor;
	Parms.DataLayer = DataLayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DataLayerEditor.DataLayerEditorSubsystem.AddActorToDataLayers
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UDataLayerInstance*>       DataLayers                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UDataLayerEditorSubsystem::AddActorToDataLayers(class AActor* Actor, const TArray<class UDataLayerInstance*>& DataLayers)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DataLayerEditorSubsystem", "AddActorToDataLayers");

	Params::DataLayerEditorSubsystem_AddActorToDataLayers Parms{};

	Parms.Actor = Actor;
	Parms.DataLayers = std::move(DataLayers);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DataLayerEditor.DataLayerEditorSubsystem.AddSelectedActorsToDataLayer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UDataLayerInstance*               DataLayer                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UDataLayerEditorSubsystem::AddSelectedActorsToDataLayer(class UDataLayerInstance* DataLayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DataLayerEditorSubsystem", "AddSelectedActorsToDataLayer");

	Params::DataLayerEditorSubsystem_AddSelectedActorsToDataLayer Parms{};

	Parms.DataLayer = DataLayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DataLayerEditor.DataLayerEditorSubsystem.AddSelectedActorsToDataLayers
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class UDataLayerInstance*>       DataLayers                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UDataLayerEditorSubsystem::AddSelectedActorsToDataLayers(const TArray<class UDataLayerInstance*>& DataLayers)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DataLayerEditorSubsystem", "AddSelectedActorsToDataLayers");

	Params::DataLayerEditorSubsystem_AddSelectedActorsToDataLayers Parms{};

	Parms.DataLayers = std::move(DataLayers);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DataLayerEditor.DataLayerEditorSubsystem.AddToActorEditorContext
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UDataLayerInstance*               InDataLayerInstance                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDataLayerEditorSubsystem::AddToActorEditorContext(class UDataLayerInstance* InDataLayerInstance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DataLayerEditorSubsystem", "AddToActorEditorContext");

	Params::DataLayerEditorSubsystem_AddToActorEditorContext Parms{};

	Parms.InDataLayerInstance = InDataLayerInstance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DataLayerEditor.DataLayerEditorSubsystem.CreateDataLayer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UDataLayerInstance*               ParentDataLayer                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UDataLayerInstance*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UDataLayerInstance* UDataLayerEditorSubsystem::CreateDataLayer(class UDataLayerInstance* ParentDataLayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DataLayerEditorSubsystem", "CreateDataLayer");

	Params::DataLayerEditorSubsystem_CreateDataLayer Parms{};

	Parms.ParentDataLayer = ParentDataLayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DataLayerEditor.DataLayerEditorSubsystem.CreateDataLayerInstance
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FDataLayerCreationParameters     Parameters                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// class UDataLayerInstance*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UDataLayerInstance* UDataLayerEditorSubsystem::CreateDataLayerInstance(const struct FDataLayerCreationParameters& Parameters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DataLayerEditorSubsystem", "CreateDataLayerInstance");

	Params::DataLayerEditorSubsystem_CreateDataLayerInstance Parms{};

	Parms.Parameters = std::move(Parameters);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DataLayerEditor.DataLayerEditorSubsystem.DeleteDataLayer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UDataLayerInstance*               DataLayerToDelete                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDataLayerEditorSubsystem::DeleteDataLayer(class UDataLayerInstance* DataLayerToDelete)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DataLayerEditorSubsystem", "DeleteDataLayer");

	Params::DataLayerEditorSubsystem_DeleteDataLayer Parms{};

	Parms.DataLayerToDelete = DataLayerToDelete;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DataLayerEditor.DataLayerEditorSubsystem.DeleteDataLayers
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class UDataLayerInstance*>       DataLayersToDelete                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UDataLayerEditorSubsystem::DeleteDataLayers(const TArray<class UDataLayerInstance*>& DataLayersToDelete)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DataLayerEditorSubsystem", "DeleteDataLayers");

	Params::DataLayerEditorSubsystem_DeleteDataLayers Parms{};

	Parms.DataLayersToDelete = std::move(DataLayersToDelete);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DataLayerEditor.DataLayerEditorSubsystem.GetAllDataLayers
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UDataLayerInstance*>       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UDataLayerInstance*> UDataLayerEditorSubsystem::GetAllDataLayers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DataLayerEditorSubsystem", "GetAllDataLayers");

	Params::DataLayerEditorSubsystem_GetAllDataLayers Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DataLayerEditor.DataLayerEditorSubsystem.IsActorValidForDataLayer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UDataLayerEditorSubsystem::IsActorValidForDataLayer(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DataLayerEditorSubsystem", "IsActorValidForDataLayer");

	Params::DataLayerEditorSubsystem_IsActorValidForDataLayer Parms{};

	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DataLayerEditor.DataLayerEditorSubsystem.IsActorValidForDataLayerInstances
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UDataLayerInstance*>       DataLayerInstances                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UDataLayerEditorSubsystem::IsActorValidForDataLayerInstances(class AActor* Actor, const TArray<class UDataLayerInstance*>& DataLayerInstances)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DataLayerEditorSubsystem", "IsActorValidForDataLayerInstances");

	Params::DataLayerEditorSubsystem_IsActorValidForDataLayerInstances Parms{};

	Parms.Actor = Actor;
	Parms.DataLayerInstances = std::move(DataLayerInstances);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DataLayerEditor.DataLayerEditorSubsystem.MakeAllDataLayersVisible
// (Final, Native, Public, BlueprintCallable)

void UDataLayerEditorSubsystem::MakeAllDataLayersVisible()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DataLayerEditorSubsystem", "MakeAllDataLayersVisible");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DataLayerEditor.DataLayerEditorSubsystem.RemoveActorFromAllDataLayers
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UDataLayerEditorSubsystem::RemoveActorFromAllDataLayers(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DataLayerEditorSubsystem", "RemoveActorFromAllDataLayers");

	Params::DataLayerEditorSubsystem_RemoveActorFromAllDataLayers Parms{};

	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DataLayerEditor.DataLayerEditorSubsystem.RemoveActorFromDataLayer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UDataLayerInstance*               DataLayerToRemove                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UDataLayerEditorSubsystem::RemoveActorFromDataLayer(class AActor* Actor, class UDataLayerInstance* DataLayerToRemove)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DataLayerEditorSubsystem", "RemoveActorFromDataLayer");

	Params::DataLayerEditorSubsystem_RemoveActorFromDataLayer Parms{};

	Parms.Actor = Actor;
	Parms.DataLayerToRemove = DataLayerToRemove;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DataLayerEditor.DataLayerEditorSubsystem.RemoveActorFromDataLayers
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UDataLayerInstance*>       DataLayers                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UDataLayerEditorSubsystem::RemoveActorFromDataLayers(class AActor* Actor, const TArray<class UDataLayerInstance*>& DataLayers)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DataLayerEditorSubsystem", "RemoveActorFromDataLayers");

	Params::DataLayerEditorSubsystem_RemoveActorFromDataLayers Parms{};

	Parms.Actor = Actor;
	Parms.DataLayers = std::move(DataLayers);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DataLayerEditor.DataLayerEditorSubsystem.RemoveActorsFromAllDataLayers
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class AActor*>                   Actors                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UDataLayerEditorSubsystem::RemoveActorsFromAllDataLayers(const TArray<class AActor*>& Actors)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DataLayerEditorSubsystem", "RemoveActorsFromAllDataLayers");

	Params::DataLayerEditorSubsystem_RemoveActorsFromAllDataLayers Parms{};

	Parms.Actors = std::move(Actors);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DataLayerEditor.DataLayerEditorSubsystem.RemoveActorsFromDataLayer
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class AActor*>                   Actors                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// class UDataLayerInstance*               DataLayer                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UDataLayerEditorSubsystem::RemoveActorsFromDataLayer(const TArray<class AActor*>& Actors, class UDataLayerInstance* DataLayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DataLayerEditorSubsystem", "RemoveActorsFromDataLayer");

	Params::DataLayerEditorSubsystem_RemoveActorsFromDataLayer Parms{};

	Parms.Actors = std::move(Actors);
	Parms.DataLayer = DataLayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DataLayerEditor.DataLayerEditorSubsystem.RemoveActorsFromDataLayers
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class AActor*>                   Actors                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<class UDataLayerInstance*>       DataLayers                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UDataLayerEditorSubsystem::RemoveActorsFromDataLayers(const TArray<class AActor*>& Actors, const TArray<class UDataLayerInstance*>& DataLayers)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DataLayerEditorSubsystem", "RemoveActorsFromDataLayers");

	Params::DataLayerEditorSubsystem_RemoveActorsFromDataLayers Parms{};

	Parms.Actors = std::move(Actors);
	Parms.DataLayers = std::move(DataLayers);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DataLayerEditor.DataLayerEditorSubsystem.RemoveFromActorEditorContext
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UDataLayerInstance*               InDataLayerInstance                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDataLayerEditorSubsystem::RemoveFromActorEditorContext(class UDataLayerInstance* InDataLayerInstance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DataLayerEditorSubsystem", "RemoveFromActorEditorContext");

	Params::DataLayerEditorSubsystem_RemoveFromActorEditorContext Parms{};

	Parms.InDataLayerInstance = InDataLayerInstance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DataLayerEditor.DataLayerEditorSubsystem.RemoveSelectedActorsFromDataLayer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UDataLayerInstance*               DataLayer                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UDataLayerEditorSubsystem::RemoveSelectedActorsFromDataLayer(class UDataLayerInstance* DataLayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DataLayerEditorSubsystem", "RemoveSelectedActorsFromDataLayer");

	Params::DataLayerEditorSubsystem_RemoveSelectedActorsFromDataLayer Parms{};

	Parms.DataLayer = DataLayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DataLayerEditor.DataLayerEditorSubsystem.RemoveSelectedActorsFromDataLayers
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class UDataLayerInstance*>       DataLayers                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UDataLayerEditorSubsystem::RemoveSelectedActorsFromDataLayers(const TArray<class UDataLayerInstance*>& DataLayers)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DataLayerEditorSubsystem", "RemoveSelectedActorsFromDataLayers");

	Params::DataLayerEditorSubsystem_RemoveSelectedActorsFromDataLayers Parms{};

	Parms.DataLayers = std::move(DataLayers);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DataLayerEditor.DataLayerEditorSubsystem.RenameDataLayer
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UDataLayerInstance*               DataLayer                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             NewDataLayerLabel                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UDataLayerEditorSubsystem::RenameDataLayer(class UDataLayerInstance* DataLayer, const class FName& NewDataLayerLabel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DataLayerEditorSubsystem", "RenameDataLayer");

	Params::DataLayerEditorSubsystem_RenameDataLayer Parms{};

	Parms.DataLayer = DataLayer;
	Parms.NewDataLayerLabel = NewDataLayerLabel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DataLayerEditor.DataLayerEditorSubsystem.SelectActorsInDataLayer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UDataLayerInstance*               DataLayer                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSelect                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bNotify                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSelectEvenIfHidden                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UDataLayerEditorSubsystem::SelectActorsInDataLayer(class UDataLayerInstance* DataLayer, const bool bSelect, const bool bNotify, const bool bSelectEvenIfHidden)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DataLayerEditorSubsystem", "SelectActorsInDataLayer");

	Params::DataLayerEditorSubsystem_SelectActorsInDataLayer Parms{};

	Parms.DataLayer = DataLayer;
	Parms.bSelect = bSelect;
	Parms.bNotify = bNotify;
	Parms.bSelectEvenIfHidden = bSelectEvenIfHidden;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DataLayerEditor.DataLayerEditorSubsystem.SelectActorsInDataLayers
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class UDataLayerInstance*>       DataLayers                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    bSelect                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bNotify                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSelectEvenIfHidden                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UDataLayerEditorSubsystem::SelectActorsInDataLayers(const TArray<class UDataLayerInstance*>& DataLayers, const bool bSelect, const bool bNotify, const bool bSelectEvenIfHidden)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DataLayerEditorSubsystem", "SelectActorsInDataLayers");

	Params::DataLayerEditorSubsystem_SelectActorsInDataLayers Parms{};

	Parms.DataLayers = std::move(DataLayers);
	Parms.bSelect = bSelect;
	Parms.bNotify = bNotify;
	Parms.bSelectEvenIfHidden = bSelectEvenIfHidden;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DataLayerEditor.DataLayerEditorSubsystem.SetActorEditorContextCurrentExternalDataLayer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UExternalDataLayerAsset*          InExternalDataLayerAsset                               (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UDataLayerEditorSubsystem::SetActorEditorContextCurrentExternalDataLayer(const class UExternalDataLayerAsset* InExternalDataLayerAsset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DataLayerEditorSubsystem", "SetActorEditorContextCurrentExternalDataLayer");

	Params::DataLayerEditorSubsystem_SetActorEditorContextCurrentExternalDataLayer Parms{};

	Parms.InExternalDataLayerAsset = InExternalDataLayerAsset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DataLayerEditor.DataLayerEditorSubsystem.SetDataLayerIsDynamicallyLoadedInEditor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UDataLayer*                       DataLayer                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsLoadedInEditor                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsFromUserChange                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UDataLayerEditorSubsystem::SetDataLayerIsDynamicallyLoadedInEditor(class UDataLayer* DataLayer, const bool bIsLoadedInEditor, const bool bIsFromUserChange)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DataLayerEditorSubsystem", "SetDataLayerIsDynamicallyLoadedInEditor");

	Params::DataLayerEditorSubsystem_SetDataLayerIsDynamicallyLoadedInEditor Parms{};

	Parms.DataLayer = DataLayer;
	Parms.bIsLoadedInEditor = bIsLoadedInEditor;
	Parms.bIsFromUserChange = bIsFromUserChange;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DataLayerEditor.DataLayerEditorSubsystem.SetDataLayerIsLoadedInEditor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UDataLayerInstance*               DataLayer                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsLoadedInEditor                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsFromUserChange                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UDataLayerEditorSubsystem::SetDataLayerIsLoadedInEditor(class UDataLayerInstance* DataLayer, const bool bIsLoadedInEditor, const bool bIsFromUserChange)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DataLayerEditorSubsystem", "SetDataLayerIsLoadedInEditor");

	Params::DataLayerEditorSubsystem_SetDataLayerIsLoadedInEditor Parms{};

	Parms.DataLayer = DataLayer;
	Parms.bIsLoadedInEditor = bIsLoadedInEditor;
	Parms.bIsFromUserChange = bIsFromUserChange;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DataLayerEditor.DataLayerEditorSubsystem.SetDataLayersIsDynamicallyLoadedInEditor
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class UDataLayer*>               DataLayers                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    bIsLoadedInEditor                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsFromUserChange                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UDataLayerEditorSubsystem::SetDataLayersIsDynamicallyLoadedInEditor(const TArray<class UDataLayer*>& DataLayers, const bool bIsLoadedInEditor, const bool bIsFromUserChange)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DataLayerEditorSubsystem", "SetDataLayersIsDynamicallyLoadedInEditor");

	Params::DataLayerEditorSubsystem_SetDataLayersIsDynamicallyLoadedInEditor Parms{};

	Parms.DataLayers = std::move(DataLayers);
	Parms.bIsLoadedInEditor = bIsLoadedInEditor;
	Parms.bIsFromUserChange = bIsFromUserChange;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DataLayerEditor.DataLayerEditorSubsystem.SetDataLayersIsLoadedInEditor
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class UDataLayerInstance*>       DataLayers                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    bIsLoadedInEditor                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsFromUserChange                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UDataLayerEditorSubsystem::SetDataLayersIsLoadedInEditor(const TArray<class UDataLayerInstance*>& DataLayers, const bool bIsLoadedInEditor, const bool bIsFromUserChange)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DataLayerEditorSubsystem", "SetDataLayersIsLoadedInEditor");

	Params::DataLayerEditorSubsystem_SetDataLayersIsLoadedInEditor Parms{};

	Parms.DataLayers = std::move(DataLayers);
	Parms.bIsLoadedInEditor = bIsLoadedInEditor;
	Parms.bIsFromUserChange = bIsFromUserChange;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DataLayerEditor.DataLayerEditorSubsystem.SetDataLayersVisibility
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class UDataLayerInstance*>       DataLayers                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    bIsVisible                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDataLayerEditorSubsystem::SetDataLayersVisibility(const TArray<class UDataLayerInstance*>& DataLayers, const bool bIsVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DataLayerEditorSubsystem", "SetDataLayersVisibility");

	Params::DataLayerEditorSubsystem_SetDataLayersVisibility Parms{};

	Parms.DataLayers = std::move(DataLayers);
	Parms.bIsVisible = bIsVisible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DataLayerEditor.DataLayerEditorSubsystem.SetDataLayerVisibility
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UDataLayerInstance*               DataLayer                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsVisible                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDataLayerEditorSubsystem::SetDataLayerVisibility(class UDataLayerInstance* DataLayer, const bool bIsVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DataLayerEditorSubsystem", "SetDataLayerVisibility");

	Params::DataLayerEditorSubsystem_SetDataLayerVisibility Parms{};

	Parms.DataLayer = DataLayer;
	Parms.bIsVisible = bIsVisible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DataLayerEditor.DataLayerEditorSubsystem.SetParentDataLayer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UDataLayerInstance*               DataLayer                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UDataLayerInstance*               ParentDataLayer                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UDataLayerEditorSubsystem::SetParentDataLayer(class UDataLayerInstance* DataLayer, class UDataLayerInstance* ParentDataLayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DataLayerEditorSubsystem", "SetParentDataLayer");

	Params::DataLayerEditorSubsystem_SetParentDataLayer Parms{};

	Parms.DataLayer = DataLayer;
	Parms.ParentDataLayer = ParentDataLayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DataLayerEditor.DataLayerEditorSubsystem.SetParentDataLayerForDataLayers
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class UDataLayerInstance*>       DataLayers                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// class UDataLayerInstance*               ParentDataLayer                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDataLayerEditorSubsystem::SetParentDataLayerForDataLayers(const TArray<class UDataLayerInstance*>& DataLayers, class UDataLayerInstance* ParentDataLayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DataLayerEditorSubsystem", "SetParentDataLayerForDataLayers");

	Params::DataLayerEditorSubsystem_SetParentDataLayerForDataLayers Parms{};

	Parms.DataLayers = std::move(DataLayers);
	Parms.ParentDataLayer = ParentDataLayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DataLayerEditor.DataLayerEditorSubsystem.ToggleDataLayerIsDynamicallyLoadedInEditor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UDataLayer*                       DataLayer                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsFromUserChange                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UDataLayerEditorSubsystem::ToggleDataLayerIsDynamicallyLoadedInEditor(class UDataLayer* DataLayer, const bool bIsFromUserChange)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DataLayerEditorSubsystem", "ToggleDataLayerIsDynamicallyLoadedInEditor");

	Params::DataLayerEditorSubsystem_ToggleDataLayerIsDynamicallyLoadedInEditor Parms{};

	Parms.DataLayer = DataLayer;
	Parms.bIsFromUserChange = bIsFromUserChange;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DataLayerEditor.DataLayerEditorSubsystem.ToggleDataLayerIsLoadedInEditor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UDataLayerInstance*               DataLayer                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsFromUserChange                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UDataLayerEditorSubsystem::ToggleDataLayerIsLoadedInEditor(class UDataLayerInstance* DataLayer, const bool bIsFromUserChange)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DataLayerEditorSubsystem", "ToggleDataLayerIsLoadedInEditor");

	Params::DataLayerEditorSubsystem_ToggleDataLayerIsLoadedInEditor Parms{};

	Parms.DataLayer = DataLayer;
	Parms.bIsFromUserChange = bIsFromUserChange;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DataLayerEditor.DataLayerEditorSubsystem.ToggleDataLayersIsDynamicallyLoadedInEditor
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class UDataLayer*>               DataLayers                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    bIsFromUserChange                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UDataLayerEditorSubsystem::ToggleDataLayersIsDynamicallyLoadedInEditor(const TArray<class UDataLayer*>& DataLayers, const bool bIsFromUserChange)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DataLayerEditorSubsystem", "ToggleDataLayersIsDynamicallyLoadedInEditor");

	Params::DataLayerEditorSubsystem_ToggleDataLayersIsDynamicallyLoadedInEditor Parms{};

	Parms.DataLayers = std::move(DataLayers);
	Parms.bIsFromUserChange = bIsFromUserChange;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DataLayerEditor.DataLayerEditorSubsystem.ToggleDataLayersIsLoadedInEditor
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class UDataLayerInstance*>       DataLayers                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    bIsFromUserChange                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UDataLayerEditorSubsystem::ToggleDataLayersIsLoadedInEditor(const TArray<class UDataLayerInstance*>& DataLayers, const bool bIsFromUserChange)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DataLayerEditorSubsystem", "ToggleDataLayersIsLoadedInEditor");

	Params::DataLayerEditorSubsystem_ToggleDataLayersIsLoadedInEditor Parms{};

	Parms.DataLayers = std::move(DataLayers);
	Parms.bIsFromUserChange = bIsFromUserChange;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DataLayerEditor.DataLayerEditorSubsystem.ToggleDataLayersVisibility
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class UDataLayerInstance*>       DataLayers                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UDataLayerEditorSubsystem::ToggleDataLayersVisibility(const TArray<class UDataLayerInstance*>& DataLayers)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DataLayerEditorSubsystem", "ToggleDataLayersVisibility");

	Params::DataLayerEditorSubsystem_ToggleDataLayersVisibility Parms{};

	Parms.DataLayers = std::move(DataLayers);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DataLayerEditor.DataLayerEditorSubsystem.ToggleDataLayerVisibility
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UDataLayerInstance*               DataLayer                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDataLayerEditorSubsystem::ToggleDataLayerVisibility(class UDataLayerInstance* DataLayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DataLayerEditorSubsystem", "ToggleDataLayerVisibility");

	Params::DataLayerEditorSubsystem_ToggleDataLayerVisibility Parms{};

	Parms.DataLayer = DataLayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DataLayerEditor.DataLayerEditorSubsystem.UpdateActorAllViewsVisibility
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDataLayerEditorSubsystem::UpdateActorAllViewsVisibility(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DataLayerEditorSubsystem", "UpdateActorAllViewsVisibility");

	Params::DataLayerEditorSubsystem_UpdateActorAllViewsVisibility Parms{};

	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DataLayerEditor.DataLayerEditorSubsystem.UpdateActorVisibility
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bOutSelectionChanged                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bOutActorModified                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bNotifySelectionChange                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bRedrawViewports                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UDataLayerEditorSubsystem::UpdateActorVisibility(class AActor* Actor, bool* bOutSelectionChanged, bool* bOutActorModified, const bool bNotifySelectionChange, const bool bRedrawViewports)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DataLayerEditorSubsystem", "UpdateActorVisibility");

	Params::DataLayerEditorSubsystem_UpdateActorVisibility Parms{};

	Parms.Actor = Actor;
	Parms.bNotifySelectionChange = bNotifySelectionChange;
	Parms.bRedrawViewports = bRedrawViewports;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bOutSelectionChanged != nullptr)
		*bOutSelectionChanged = Parms.bOutSelectionChanged;

	if (bOutActorModified != nullptr)
		*bOutActorModified = Parms.bOutActorModified;

	return Parms.ReturnValue;
}


// Function DataLayerEditor.DataLayerEditorSubsystem.UpdateAllActorsVisibility
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bNotifySelectionChange                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bRedrawViewports                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UDataLayerEditorSubsystem::UpdateAllActorsVisibility(const bool bNotifySelectionChange, const bool bRedrawViewports)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DataLayerEditorSubsystem", "UpdateAllActorsVisibility");

	Params::DataLayerEditorSubsystem_UpdateAllActorsVisibility Parms{};

	Parms.bNotifySelectionChange = bNotifySelectionChange;
	Parms.bRedrawViewports = bRedrawViewports;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DataLayerEditor.DataLayerEditorSubsystem.UpdateAllViewVisibility
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UDataLayer*                       DataLayerThatChanged                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDataLayerEditorSubsystem::UpdateAllViewVisibility(class UDataLayer* DataLayerThatChanged)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DataLayerEditorSubsystem", "UpdateAllViewVisibility");

	Params::DataLayerEditorSubsystem_UpdateAllViewVisibility Parms{};

	Parms.DataLayerThatChanged = DataLayerThatChanged;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DataLayerEditor.DataLayerEditorSubsystem.AppendActorsFromDataLayer
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UDataLayerInstance*               DataLayer                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AActor*>                   InOutActors                                            (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UDataLayerEditorSubsystem::AppendActorsFromDataLayer(class UDataLayerInstance* DataLayer, TArray<class AActor*>* InOutActors) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DataLayerEditorSubsystem", "AppendActorsFromDataLayer");

	Params::DataLayerEditorSubsystem_AppendActorsFromDataLayer Parms{};

	Parms.DataLayer = DataLayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (InOutActors != nullptr)
		*InOutActors = std::move(Parms.InOutActors);
}


// Function DataLayerEditor.DataLayerEditorSubsystem.AppendActorsFromDataLayers
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UDataLayerInstance*>       DataLayers                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<class AActor*>                   InOutActors                                            (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UDataLayerEditorSubsystem::AppendActorsFromDataLayers(const TArray<class UDataLayerInstance*>& DataLayers, TArray<class AActor*>* InOutActors) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DataLayerEditorSubsystem", "AppendActorsFromDataLayers");

	Params::DataLayerEditorSubsystem_AppendActorsFromDataLayers Parms{};

	Parms.DataLayers = std::move(DataLayers);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (InOutActors != nullptr)
		*InOutActors = std::move(Parms.InOutActors);
}


// Function DataLayerEditor.DataLayerEditorSubsystem.GetActorEditorContextCurrentExternalDataLayer
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class UExternalDataLayerAsset*    ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UExternalDataLayerAsset* UDataLayerEditorSubsystem::GetActorEditorContextCurrentExternalDataLayer() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DataLayerEditorSubsystem", "GetActorEditorContextCurrentExternalDataLayer");

	Params::DataLayerEditorSubsystem_GetActorEditorContextCurrentExternalDataLayer Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DataLayerEditor.DataLayerEditorSubsystem.GetActorsFromDataLayer
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UDataLayerInstance*               DataLayer                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AActor*>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class AActor*> UDataLayerEditorSubsystem::GetActorsFromDataLayer(class UDataLayerInstance* DataLayer) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DataLayerEditorSubsystem", "GetActorsFromDataLayer");

	Params::DataLayerEditorSubsystem_GetActorsFromDataLayer Parms{};

	Parms.DataLayer = DataLayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DataLayerEditor.DataLayerEditorSubsystem.GetActorsFromDataLayers
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UDataLayerInstance*>       DataLayers                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<class AActor*>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class AActor*> UDataLayerEditorSubsystem::GetActorsFromDataLayers(const TArray<class UDataLayerInstance*>& DataLayers) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DataLayerEditorSubsystem", "GetActorsFromDataLayers");

	Params::DataLayerEditorSubsystem_GetActorsFromDataLayers Parms{};

	Parms.DataLayers = std::move(DataLayers);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DataLayerEditor.DataLayerEditorSubsystem.GetDataLayer
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FActorDataLayer                  ActorDataLayer                                         (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UDataLayerInstance*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UDataLayerInstance* UDataLayerEditorSubsystem::GetDataLayer(const struct FActorDataLayer& ActorDataLayer) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DataLayerEditorSubsystem", "GetDataLayer");

	Params::DataLayerEditorSubsystem_GetDataLayer Parms{};

	Parms.ActorDataLayer = std::move(ActorDataLayer);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DataLayerEditor.DataLayerEditorSubsystem.GetDataLayerFromLabel
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             DataLayerLabel                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UDataLayerInstance*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UDataLayerInstance* UDataLayerEditorSubsystem::GetDataLayerFromLabel(const class FName& DataLayerLabel) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DataLayerEditorSubsystem", "GetDataLayerFromLabel");

	Params::DataLayerEditorSubsystem_GetDataLayerFromLabel Parms{};

	Parms.DataLayerLabel = DataLayerLabel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DataLayerEditor.DataLayerEditorSubsystem.GetDataLayerInstance
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UDataLayerAsset*                  DataLayerAsset                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UDataLayerInstance*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UDataLayerInstance* UDataLayerEditorSubsystem::GetDataLayerInstance(const class UDataLayerAsset* DataLayerAsset) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DataLayerEditorSubsystem", "GetDataLayerInstance");

	Params::DataLayerEditorSubsystem_GetDataLayerInstance Parms{};

	Parms.DataLayerAsset = DataLayerAsset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DataLayerEditor.DataLayerEditorSubsystem.GetDataLayerInstances
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UDataLayerAsset*>          DataLayerAssets                                        (ConstParm, Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<class UDataLayerInstance*>       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UDataLayerInstance*> UDataLayerEditorSubsystem::GetDataLayerInstances(const TArray<class UDataLayerAsset*>& DataLayerAssets) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DataLayerEditorSubsystem", "GetDataLayerInstances");

	Params::DataLayerEditorSubsystem_GetDataLayerInstances Parms{};

	Parms.DataLayerAssets = std::move(DataLayerAssets);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

