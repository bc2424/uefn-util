#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UMGEditor

#include "Basic.hpp"

#include "UMGEditor_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function UMGEditor.AssetThumbnailWidget.SetAsset
// 0x0098 (0x0098 - 0x0000)
struct AssetThumbnailWidget_SetAsset final
{
public:
	struct FAssetData                             AssetData;                                         // 0x0000(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function UMGEditor.AssetThumbnailWidget.SetAssetByObject
// 0x0008 (0x0008 - 0x0000)
struct AssetThumbnailWidget_SetAssetByObject final
{
public:
	class UObject*                                Object;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function UMGEditor.AssetThumbnailWidget.SetResolution
// 0x0008 (0x0008 - 0x0000)
struct AssetThumbnailWidget_SetResolution final
{
public:
	struct FIntPoint                              InResolution;                                      // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function UMGEditor.AssetThumbnailWidget.SetThumbnailSettings
// 0x0058 (0x0058 - 0x0000)
struct AssetThumbnailWidget_SetThumbnailSettings final
{
public:
	struct FAssetThumbnailWidgetSettings          InThumbnailSettings;                               // 0x0000(0x0058)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
};

// Function UMGEditor.AssetThumbnailWidget.GetResolution
// 0x0008 (0x0008 - 0x0000)
struct AssetThumbnailWidget_GetResolution final
{
public:
	struct FIntPoint                              ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

}

