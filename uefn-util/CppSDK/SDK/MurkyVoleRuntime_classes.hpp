#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MurkyVoleRuntime

#include "Basic.hpp"

#include "FortniteGame_classes.hpp"
#include "GameplayTags_structs.hpp"
#include "MurkyVoleRuntime_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "CoreUObject_classes.hpp"


namespace SDK
{

// Class MurkyVoleRuntime.FortControllerComponent_MurkyVole
// 0x0000 (0x00E0 - 0x00E0)
class UFortControllerComponent_MurkyVole final : public UFortControllerComponent
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortControllerComponent_MurkyVole">();
	}
	static class UFortControllerComponent_MurkyVole* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortControllerComponent_MurkyVole>();
	}
};

// Class MurkyVoleRuntime.FortGameplayAbility_MurkyVoleMissileManager
// 0x0008 (0x0C08 - 0x0C00)
class UFortGameplayAbility_MurkyVoleMissileManager final : public UFortGameplayAbility_Action
{
public:
	class AFortWeaponRangedDual_MurkyVole*        CurrentWeapon;                                     // 0x0C00(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	bool CanFireMissile(const struct FMurkyVoleMissileSpawnInfo& SpawnInfo);
	void HandleMissileSpawned(class AFortProjectileBase* SpawnedProjectile);
	void ServerSpawnProjectile(const struct FMurkyVoleMissileSpawnInfo& SpawnInfo, const struct FPredictionKey& PredictionKey);
	void SpawnPredictiveMissileProjectile(const struct FMurkyVoleMissileSpawnInfo& SpawnInfo);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortGameplayAbility_MurkyVoleMissileManager">();
	}
	static class UFortGameplayAbility_MurkyVoleMissileManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortGameplayAbility_MurkyVoleMissileManager>();
	}
};

// Class MurkyVoleRuntime.FortProjectileAthena_MurkyVole
// 0x0020 (0x0F40 - 0x0F20)
class AFortProjectileAthena_MurkyVole final : public AFortProjectileAthena
{
public:
	uint8                                         Pad_F20[0x20];                                     // 0x0F20(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void TryToExplode(const bool bAllowOnServer);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortProjectileAthena_MurkyVole">();
	}
	static class AFortProjectileAthena_MurkyVole* GetDefaultObj()
	{
		return GetDefaultObjImpl<AFortProjectileAthena_MurkyVole>();
	}
};

// Class MurkyVoleRuntime.FortProjectileMoveComp_DrunkMurkyVole
// 0x06B0 (0x0BA0 - 0x04F0)
class UFortProjectileMoveComp_DrunkMurkyVole final : public UFortProjectileMoveComp_Drunk
{
public:
	struct FMurkyVoleDrunkProjectileConfig        NewDrunkConfig;                                    // 0x04E8(0x0070)(BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                          bKeepInitialSpeed;                                 // 0x0558(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_559[0x7];                                      // 0x0559(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            DrunkSpeedScaleCurve;                              // 0x0560(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveFloat*                            DrunkGravityScaleCurve;                            // 0x0568(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FScalableFloat                         MaxRandomTurnAngle;                                // 0x0570(0x0038)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         MinRandomTurnAngle;                                // 0x05A8(0x0038)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         DirectionChangeRate;                               // 0x05E0(0x0038)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         EnableAbovePlaneLimitation;                        // 0x0618(0x0038)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         AbovePlaneDistanceThreshold;                       // 0x0650(0x0038)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         MaxAngleToLoseAbovePlaneLimit;                     // 0x0688(0x0038)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         MinAngleToLoseAbovePlaneLimit;                     // 0x06C0(0x0038)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         HomingRandomTargetPositionRadius;                  // 0x06F8(0x0038)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         TargetedInitialDelay;                              // 0x0730(0x0038)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         bAutoAdjustInitialVelocity;                        // 0x0768(0x0038)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         InitialMinPitch;                                   // 0x07A0(0x0038)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         InitialRandomYawAngle;                             // 0x07D8(0x0038)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         DrunkVelocityInitialDelay;                         // 0x0810(0x0038)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         DrunkVelocityDuration;                             // 0x0848(0x0038)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         bEnableDrunkTarget;                                // 0x0880(0x0038)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         DrunkTargetInitialDelay;                           // 0x08B8(0x0038)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         DrunkTargetPositionLookaheadDist;                  // 0x08F0(0x0038)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         StartBlendOutRange;                                // 0x0928(0x0038)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         FinishBlendOutRange;                               // 0x0960(0x0038)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         TimeThresholdForBlendOutOnTime;                    // 0x0998(0x0038)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         BlendAlphaThresholdForBlendOutOnTime;              // 0x09D0(0x0038)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         DurationForBlendOutOnTime;                         // 0x0A08(0x0038)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         HomingDrunkBlendOutTurnSpeed;                      // 0x0A40(0x0038)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         TurnAngleBlendOutMultiplier;                       // 0x0A78(0x0038)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         DeviateStartAngle;                                 // 0x0AB0(0x0038)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         DeviateEndAngle;                                   // 0x0AE8(0x0038)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         DeviateMinBlendOutAlphaAddition;                   // 0x0B20(0x0038)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         DeviateMaxBlendOutAlphaAddition;                   // 0x0B58(0x0038)(Edit, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_B90[0x10];                                     // 0x0B90(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void SetNewDrunkConfig(const struct FMurkyVoleDrunkProjectileConfig& NewConfig);

	const struct FMurkyVoleDrunkProjectileConfig GetDrunkConfig() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortProjectileMoveComp_DrunkMurkyVole">();
	}
	static class UFortProjectileMoveComp_DrunkMurkyVole* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortProjectileMoveComp_DrunkMurkyVole>();
	}
};

// Class MurkyVoleRuntime.FortWeaponRangedDual_MurkyVole
// 0x0150 (0x21B0 - 0x2060)
class AFortWeaponRangedDual_MurkyVole final : public AFortWeaponRanged
{
public:
	TMulticastInlineDelegate<void(int32 OldMissileNumber)> OnMissileNumberChanged;                            // 0x2060(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UFortItemDefinition*                    MissileAmmoDefinition;                             // 0x2070(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class AFortProjectileAthena>      MissileProjectileClass;                            // 0x2078(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FScalableFloat                         MissileGravityScale;                               // 0x2080(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         MissileMinTurnSpeed;                               // 0x20B8(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         MissileMaxTurnSpeed;                               // 0x20F0(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         MissileRampTimeForTurnSpeed;                       // 0x2128(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         MissileLockTargetDistanceThreshold;                // 0x2160(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	int32                                         MissileFiredNumber;                                // 0x2198(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         LocalMissileNumber;                                // 0x219C(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         ActualMissileNumber;                               // 0x21A0(0x0004)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_21A4[0xC];                                     // 0x21A4(0x000C)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnRep_MissileNumber(const int32 OldMissileNumber);

	void BPGetMuzzleBlockedLocation(bool* bMuzzleIsBlocked, struct FVector* MuzzleBlockedLocation) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortWeaponRangedDual_MurkyVole">();
	}
	static class AFortWeaponRangedDual_MurkyVole* GetDefaultObj()
	{
		return GetDefaultObjImpl<AFortWeaponRangedDual_MurkyVole>();
	}
};

// Class MurkyVoleRuntime.MurkyVoleHoverLayerAnimInstance
// 0x0130 (0x15D0 - 0x14A0)
class UMurkyVoleHoverLayerAnimInstance final : public UFortPlayerAnimInstanceProxy
{
public:
	float                                         LeanX;                                             // 0x1498(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LeanY;                                             // 0x149C(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsHoverDash;                                      // 0x14A0(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14A1[0x3];                                     // 0x14A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         HoverYawDelta;                                     // 0x14A4(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DashX;                                             // 0x14A8(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DashY;                                             // 0x14AC(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsHoverAddArms;                                   // 0x14B0(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCanEnterPostBoost;                                // 0x14B1(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14B2[0x2];                                     // 0x14B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CooldownTagName;                                   // 0x14B4(0x000C)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                         WeaponDisplayNameSubStringsToAddArmsAnim;          // 0x14C0(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<class FString>                         WeaponDisplayNameSubStringsToAddArmsAnimWhenRelaxedLevel1; // 0x14D0(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FCachedAnimRelevancyData               BoostToPostBoostRelevancyData;                     // 0x14E0(0x0024)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_1504[0xCC];                                    // 0x1504(0x00CC)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MurkyVoleHoverLayerAnimInstance">();
	}
	static class UMurkyVoleHoverLayerAnimInstance* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMurkyVoleHoverLayerAnimInstance>();
	}
};

// Class MurkyVoleRuntime.MurkyVolePackCCPAnimInstance
// 0x01A0 (0x0970 - 0x07D0)
class UMurkyVolePackCCPAnimInstance final : public UCustomCharacterPartAnimInstance
{
public:
	bool                                          bHasHoverJets;                                     // 0x07D0(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHasMissileSwarm;                                  // 0x07D1(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHasTurret;                                        // 0x07D2(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsActiveMissileSwarm;                             // 0x07D3(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsActiveHover;                                    // 0x07D4(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_7D5[0x3];                                      // 0x07D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LeanX;                                             // 0x07D8(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LeanY;                                             // 0x07DC(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsHoverDash;                                      // 0x07E0(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_7E1[0x7];                                      // 0x07E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               AimRotationCurrent;                                // 0x07E8(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bIsWindUp;                                         // 0x0800(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsWindDown;                                       // 0x0801(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_802[0x6];                                      // 0x0802(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               PlayerAimRotation;                                 // 0x0808(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                               TurretAimRotation;                                 // 0x0820(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                               AdjustedRocketPodRot;                              // 0x0838(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bIsTurretFire;                                     // 0x0850(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsTurretReFire;                                   // 0x0851(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_852[0x2];                                      // 0x0852(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TurretRailOffset;                                  // 0x0854(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsAutoTargetOff;                                  // 0x0858(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsAshtonShieldBlocking;                           // 0x0859(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsCrouchMoving;                                   // 0x085A(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsPawnSpeed2DAboveThreshold;                      // 0x085B(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TurretPitchOffset;                                 // 0x085C(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           HoverJetsTagName;                                  // 0x0860(0x000C)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           MissileSwarmTagName;                               // 0x086C(0x000C)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           TurretTagName;                                     // 0x0878(0x000C)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           ActiveTagName;                                     // 0x0884(0x000C)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           CooldownTagName;                                   // 0x0890(0x000C)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           ShotFiredTagName;                                  // 0x089C(0x000C)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveTable*                            MurkyVoleGameplayGameDataCurveTable;               // 0x08A8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_8B0[0xC0];                                     // 0x08B0(0x00C0)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MurkyVolePackCCPAnimInstance">();
	}
	static class UMurkyVolePackCCPAnimInstance* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMurkyVolePackCCPAnimInstance>();
	}
};

// Class MurkyVoleRuntime.MurkyVoleTurretAttachment
// 0x0330 (0x0750 - 0x0420)
class AMurkyVoleTurretAttachment final : public AActor
{
public:
	TMap<struct FGameplayTag, struct FScalableFloat> PlayerPawnTargetTagToPctCapsuleHalfHeightZOffset;  // 0x0420(0x0050)(BlueprintVisible, NativeAccessSpecifierPublic)
	TMap<struct FGameplayTag, struct FScalableFloat> NonPlayerPawnTargetTagToZOffsetMap;                // 0x0470(0x0050)(BlueprintVisible, NativeAccessSpecifierPublic)
	struct FRotator                               AimRotation_Server;                                // 0x04C0(0x0018)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                               AimRotation_Client;                                // 0x04D8(0x0018)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                                TargetActorLastKnownLocation;                      // 0x04F0(0x0018)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                ScannerRays_TargetingScale;                        // 0x0508(0x0018)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                Vector_AimSourceLocationOffset;                    // 0x0520(0x0018)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                Vector_AimSourceLocationOffset_Crouch;             // 0x0538(0x0018)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScalableFloat                         Row_PlayerPctCapsuleHalfHeightOffset_Default;      // 0x0550(0x0038)(BlueprintVisible, NativeAccessSpecifierPublic)
	struct FScalableFloat                         Row_LaserMaxRange;                                 // 0x0588(0x0038)(BlueprintVisible, NativeAccessSpecifierPublic)
	struct FScalableFloat                         Row_LaserDistanceMulti;                            // 0x05C0(0x0038)(BlueprintVisible, NativeAccessSpecifierPublic)
	double                                        ScannerRays_LastScaleUpdateTime;                   // 0x05F8(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        ScannerRays_ScaleUpdateInterval;                   // 0x0600(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        ScannerRays_ScaleUpdateInterpSpeed;                // 0x0608(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 TargetActor;                                       // 0x0610(0x0008)(BlueprintVisible, Net, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bForceLaserOnWhileAttacking;                       // 0x0618(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bTargetIsObstructed;                               // 0x0619(0x0001)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_61A[0x6E];                                     // 0x061A(0x006E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           NativeCrouchTag;                                   // 0x0688(0x000C)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                   NativeBackpackAttachSocket;                        // 0x0694(0x000C)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FScalableFloat                         NativePitchSpeed;                                  // 0x06A0(0x0038)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         NativeYawSpeed;                                    // 0x06D8(0x0038)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	double                                        NativeBigPitchRangeMin;                            // 0x0710(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	double                                        NativeBigPitchRangeMax;                            // 0x0718(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	double                                        NativeBigYawRangeMin;                              // 0x0720(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	double                                        NativeBigYawRangeMax;                              // 0x0728(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	double                                        NativeSmallYawRangeMin;                            // 0x0730(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	double                                        NativeSmallYawRangeMax;                            // 0x0738(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         NativeBigTimerRangeMin;                            // 0x0740(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         NativeBigTimerRangeMax;                            // 0x0744(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         NativeSmallTimerRangeMin;                          // 0x0748(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         NativeSmallTimerRangeMax;                          // 0x074C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void GetCheckBackpackCharacterPartValidity();
	void GetMuzzleSocketLocationAndRotation(struct FVector* SocketLocation, struct FRotator* SocketRotation);
	void GetTurretBlueprintData(class AActor** CurrentOwner, class UStaticMeshComponent** ScannerRays, class UStaticMeshComponent** IdleLaser, EMurkyVoleTurretState* CurrentState, struct FVector* BackpackMuzzleSocketLocation);
	void NativeForceLaserOnWhileAttacking(const class AActor* CurrentOwner, const EMurkyVoleTurretState CurrentState, class UStaticMeshComponent* ScannerRays, class UStaticMeshComponent* IdleLaser);
	void NativeGetAimSourceLocationForServer(const class AActor* CurrentOwner, const struct FVector& AimSourceLocationOffset, const struct FVector& AimSourceLocationOffsetCrouch, struct FVector* AimSourceLocation);
	void NativeGetLaserAimSourceLocationAndRotation(const class AActor* CurrentOwner, const class AFortPlayerController* LocalPlayerController, const struct FRotator& CalculatedAimRotation, struct FVector* AimSourceLocation, struct FRotator* AimSourceRotation);
	void NativeUpdateLaserLocationAndRotation(const class AActor* CurrentOwner, const class AFortPlayerController* LocalPlayerController, const struct FRotator& CalculatedAimRotation, class UStaticMeshComponent* Laser);
	void NativeUpdateLaserVisuals(const struct FMurkyVoleTurretAttachment_UpdateLaserVisualsParams& UpdateParams, const class AActor* CurrentOwner, class UStaticMeshComponent* ScannerRays, class UStaticMeshComponent* IdleLaser);
	void NativeUpdateRotation(const class AActor* CurrentOwner, const struct FRotator& ServerAimRotation, const struct FRotator& ClientAimRotation, const struct FVector& AimLocation, const struct FVector& AimSourceLocation, const bool bInTargetingState, struct FRotator* NewServerAimRotation, struct FRotator* NewClientAimRotation);
	void NativeUpdateTargetingLaserScale(const class AActor* CurrentOwner, const bool bSetMeshScale, const bool bCalculateNow, class UStaticMeshComponent* ScannerRays);
	void NativeUpdateTurret();
	void OnRep_AimRotation_Server();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MurkyVoleTurretAttachment">();
	}
	static class AMurkyVoleTurretAttachment* GetDefaultObj()
	{
		return GetDefaultObjImpl<AMurkyVoleTurretAttachment>();
	}
};

// Class MurkyVoleRuntime.MurkyVoleTurretAttachmentActorInterface
// 0x0000 (0x0030 - 0x0030)
class IMurkyVoleTurretAttachmentActorInterface final : public IInterface
{
public:
	void GetMurkyVoleTurretAttachmentData(bool* bIsInWindUpState, bool* bIsInWindDownState, bool* bIsInManualControlState, struct FRotator* AimRotationClient);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MurkyVoleTurretAttachmentActorInterface">();
	}
	static class IMurkyVoleTurretAttachmentActorInterface* GetDefaultObj()
	{
		return GetDefaultObjImpl<IMurkyVoleTurretAttachmentActorInterface>();
	}
};

}

