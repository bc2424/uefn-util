#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: IKRigEditor

#include "Basic.hpp"

#include "IKRigEditor_classes.hpp"
#include "IKRigEditor_parameters.hpp"


namespace SDK
{

// Function IKRigEditor.IKRetargetBatchOperation.DuplicateAndRetarget
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FAssetData>               AssetsToRetarget                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// class USkeletalMesh*                    SourceMesh                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USkeletalMesh*                    TargetMesh                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UIKRetargeter*                    IKRetargetAsset                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Search                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Replace                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Prefix                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Suffix                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIncludeReferencedAssets                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FAssetData>               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FAssetData> UIKRetargetBatchOperation::DuplicateAndRetarget(const TArray<struct FAssetData>& AssetsToRetarget, class USkeletalMesh* SourceMesh, class USkeletalMesh* TargetMesh, class UIKRetargeter* IKRetargetAsset, const class FString& Search, const class FString& Replace, const class FString& Prefix, const class FString& Suffix, const bool bIncludeReferencedAssets)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("IKRetargetBatchOperation", "DuplicateAndRetarget");

	Params::IKRetargetBatchOperation_DuplicateAndRetarget Parms{};

	Parms.AssetsToRetarget = std::move(AssetsToRetarget);
	Parms.SourceMesh = SourceMesh;
	Parms.TargetMesh = TargetMesh;
	Parms.IKRetargetAsset = IKRetargetAsset;
	Parms.Search = std::move(Search);
	Parms.Replace = std::move(Replace);
	Parms.Prefix = std::move(Prefix);
	Parms.Suffix = std::move(Suffix);
	Parms.bIncludeReferencedAssets = bIncludeReferencedAssets;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function IKRigEditor.IKRetargeterController.GetController
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UIKRetargeter*                    InRetargeterAsset                                      (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UIKRetargeterController*          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UIKRetargeterController* UIKRetargeterController::GetController(const class UIKRetargeter* InRetargeterAsset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("IKRetargeterController", "GetController");

	Params::IKRetargeterController_GetController Parms{};

	Parms.InRetargeterAsset = InRetargeterAsset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function IKRigEditor.IKRetargeterController.SnapBoneToGround
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             ReferenceBone                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ERetargetSourceOrTarget                 SourceOrTarget                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UIKRetargeterController::SnapBoneToGround(class FName ReferenceBone, ERetargetSourceOrTarget SourceOrTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IKRetargeterController", "SnapBoneToGround");

	Params::IKRetargeterController_SnapBoneToGround Parms{};

	Parms.ReferenceBone = ReferenceBone;
	Parms.SourceOrTarget = SourceOrTarget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function IKRigEditor.IKRetargeterController.AddRetargetOp
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// TSubclassOf<class URetargetOpBase>      InOpClass                                              (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UIKRetargeterController::AddRetargetOp(TSubclassOf<class URetargetOpBase> InOpClass) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IKRetargeterController", "AddRetargetOp");

	Params::IKRetargeterController_AddRetargetOp Parms{};

	Parms.InOpClass = InOpClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function IKRigEditor.IKRetargeterController.AutoAlignAllBones
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// ERetargetSourceOrTarget                 SourceOrTarget                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UIKRetargeterController::AutoAlignAllBones(ERetargetSourceOrTarget SourceOrTarget) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IKRetargeterController", "AutoAlignAllBones");

	Params::IKRetargeterController_AutoAlignAllBones Parms{};

	Parms.SourceOrTarget = SourceOrTarget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function IKRigEditor.IKRetargeterController.AutoAlignBones
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class FName>                     BonesToAlign                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// ERetargetAutoAlignMethod                Method                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ERetargetSourceOrTarget                 SourceOrTarget                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UIKRetargeterController::AutoAlignBones(const TArray<class FName>& BonesToAlign, const ERetargetAutoAlignMethod Method, ERetargetSourceOrTarget SourceOrTarget) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IKRetargeterController", "AutoAlignBones");

	Params::IKRetargeterController_AutoAlignBones Parms{};

	Parms.BonesToAlign = std::move(BonesToAlign);
	Parms.Method = Method;
	Parms.SourceOrTarget = SourceOrTarget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function IKRigEditor.IKRetargeterController.AutoMapChains
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// EAutoMapChainType                       AutoMapType                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bForceRemap                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UIKRetargeterController::AutoMapChains(const EAutoMapChainType AutoMapType, const bool bForceRemap) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IKRetargeterController", "AutoMapChains");

	Params::IKRetargeterController_AutoMapChains Parms{};

	Parms.AutoMapType = AutoMapType;
	Parms.bForceRemap = bForceRemap;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function IKRigEditor.IKRetargeterController.CreateRetargetPose
// (Final, Native, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// class FName                             NewPoseName                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ERetargetSourceOrTarget                 SourceOrTarget                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UIKRetargeterController::CreateRetargetPose(const class FName& NewPoseName, const ERetargetSourceOrTarget SourceOrTarget) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IKRetargeterController", "CreateRetargetPose");

	Params::IKRetargeterController_CreateRetargetPose Parms{};

	Parms.NewPoseName = NewPoseName;
	Parms.SourceOrTarget = SourceOrTarget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function IKRigEditor.IKRetargeterController.DuplicateRetargetPose
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// class FName                             PoseToDuplicate                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             NewName                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ERetargetSourceOrTarget                 SourceOrTarget                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UIKRetargeterController::DuplicateRetargetPose(const class FName PoseToDuplicate, const class FName NewName, const ERetargetSourceOrTarget SourceOrTarget) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IKRetargeterController", "DuplicateRetargetPose");

	Params::IKRetargeterController_DuplicateRetargetPose Parms{};

	Parms.PoseToDuplicate = PoseToDuplicate;
	Parms.NewName = NewName;
	Parms.SourceOrTarget = SourceOrTarget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function IKRigEditor.IKRetargeterController.GetAllChainSettings
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const TArray<class URetargetChainSettings*>ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const TArray<class URetargetChainSettings*> UIKRetargeterController::GetAllChainSettings() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IKRetargeterController", "GetAllChainSettings");

	Params::IKRetargeterController_GetAllChainSettings Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function IKRigEditor.IKRetargeterController.GetCurrentRetargetPose
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ERetargetSourceOrTarget                 SourceOrTarget                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FIKRetargetPose                  ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FIKRetargetPose UIKRetargeterController::GetCurrentRetargetPose(const ERetargetSourceOrTarget SourceOrTarget) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IKRetargeterController", "GetCurrentRetargetPose");

	Params::IKRetargeterController_GetCurrentRetargetPose Parms{};

	Parms.SourceOrTarget = SourceOrTarget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function IKRigEditor.IKRetargeterController.GetCurrentRetargetPoseName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ERetargetSourceOrTarget                 SourceOrTarget                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UIKRetargeterController::GetCurrentRetargetPoseName(const ERetargetSourceOrTarget SourceOrTarget) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IKRetargeterController", "GetCurrentRetargetPoseName");

	Params::IKRetargeterController_GetCurrentRetargetPoseName Parms{};

	Parms.SourceOrTarget = SourceOrTarget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function IKRigEditor.IKRetargeterController.GetGlobalSettings
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// struct FRetargetGlobalSettings          ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FRetargetGlobalSettings UIKRetargeterController::GetGlobalSettings() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IKRetargeterController", "GetGlobalSettings");

	Params::IKRetargeterController_GetGlobalSettings Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function IKRigEditor.IKRetargeterController.GetIKRig
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ERetargetSourceOrTarget                 SourceOrTarget                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UIKRigDefinition*           ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UIKRigDefinition* UIKRetargeterController::GetIKRig(const ERetargetSourceOrTarget SourceOrTarget) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IKRetargeterController", "GetIKRig");

	Params::IKRetargeterController_GetIKRig Parms{};

	Parms.SourceOrTarget = SourceOrTarget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function IKRigEditor.IKRetargeterController.GetIndexOfRetargetOp
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class URetargetOpBase*                  RetargetOp                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UIKRetargeterController::GetIndexOfRetargetOp(class URetargetOpBase* RetargetOp) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IKRetargeterController", "GetIndexOfRetargetOp");

	Params::IKRetargeterController_GetIndexOfRetargetOp Parms{};

	Parms.RetargetOp = RetargetOp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function IKRigEditor.IKRetargeterController.GetNumRetargetOps
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UIKRetargeterController::GetNumRetargetOps() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IKRetargeterController", "GetNumRetargetOps");

	Params::IKRetargeterController_GetNumRetargetOps Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function IKRigEditor.IKRetargeterController.GetPreviewMesh
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ERetargetSourceOrTarget                 SourceOrTarget                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USkeletalMesh*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USkeletalMesh* UIKRetargeterController::GetPreviewMesh(const ERetargetSourceOrTarget SourceOrTarget) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IKRetargeterController", "GetPreviewMesh");

	Params::IKRetargeterController_GetPreviewMesh Parms{};

	Parms.SourceOrTarget = SourceOrTarget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function IKRigEditor.IKRetargeterController.GetRetargetChainSettings
// (Final, Native, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// class FName                             TargetChainName                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTargetChainSettings             ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FTargetChainSettings UIKRetargeterController::GetRetargetChainSettings(const class FName& TargetChainName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IKRetargeterController", "GetRetargetChainSettings");

	Params::IKRetargeterController_GetRetargetChainSettings Parms{};

	Parms.TargetChainName = TargetChainName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function IKRigEditor.IKRetargeterController.GetRetargetOpAtIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class URetargetOpBase*                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class URetargetOpBase* UIKRetargeterController::GetRetargetOpAtIndex(int32 Index_0) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IKRetargeterController", "GetRetargetOpAtIndex");

	Params::IKRetargeterController_GetRetargetOpAtIndex Parms{};

	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function IKRigEditor.IKRetargeterController.GetRetargetOpEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   RetargetOpIndex                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UIKRetargeterController::GetRetargetOpEnabled(int32 RetargetOpIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IKRetargeterController", "GetRetargetOpEnabled");

	Params::IKRetargeterController_GetRetargetOpEnabled Parms{};

	Parms.RetargetOpIndex = RetargetOpIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function IKRigEditor.IKRetargeterController.GetRetargetPoses
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ERetargetSourceOrTarget                 SourceOrTarget                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TMap<class FName, struct FIKRetargetPose>ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

TMap<class FName, struct FIKRetargetPose> UIKRetargeterController::GetRetargetPoses(const ERetargetSourceOrTarget SourceOrTarget) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IKRetargeterController", "GetRetargetPoses");

	Params::IKRetargeterController_GetRetargetPoses Parms{};

	Parms.SourceOrTarget = SourceOrTarget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function IKRigEditor.IKRetargeterController.GetRootOffsetInRetargetPose
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ERetargetSourceOrTarget                 SourceOrTarget                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UIKRetargeterController::GetRootOffsetInRetargetPose(const ERetargetSourceOrTarget SourceOrTarget) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IKRetargeterController", "GetRootOffsetInRetargetPose");

	Params::IKRetargeterController_GetRootOffsetInRetargetPose Parms{};

	Parms.SourceOrTarget = SourceOrTarget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function IKRigEditor.IKRetargeterController.GetRootSettings
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// struct FTargetRootSettings              ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FTargetRootSettings UIKRetargeterController::GetRootSettings() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IKRetargeterController", "GetRootSettings");

	Params::IKRetargeterController_GetRootSettings Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function IKRigEditor.IKRetargeterController.GetRotationOffsetForRetargetPoseBone
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, Const)
// Parameters:
// class FName                             BoneName                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ERetargetSourceOrTarget                 SourceOrTarget                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQuat                            ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FQuat UIKRetargeterController::GetRotationOffsetForRetargetPoseBone(const class FName& BoneName, const ERetargetSourceOrTarget SourceOrTarget) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IKRetargeterController", "GetRotationOffsetForRetargetPoseBone");

	Params::IKRetargeterController_GetRotationOffsetForRetargetPoseBone Parms{};

	Parms.BoneName = BoneName;
	Parms.SourceOrTarget = SourceOrTarget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function IKRigEditor.IKRetargeterController.GetSourceChain
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             TargetChainName                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UIKRetargeterController::GetSourceChain(const class FName& TargetChainName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IKRetargeterController", "GetSourceChain");

	Params::IKRetargeterController_GetSourceChain Parms{};

	Parms.TargetChainName = TargetChainName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function IKRigEditor.IKRetargeterController.MoveRetargetOpInStack
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// int32                                   OpToMoveIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   TargetIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UIKRetargeterController::MoveRetargetOpInStack(int32 OpToMoveIndex, int32 TargetIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IKRetargeterController", "MoveRetargetOpInStack");

	Params::IKRetargeterController_MoveRetargetOpInStack Parms{};

	Parms.OpToMoveIndex = OpToMoveIndex;
	Parms.TargetIndex = TargetIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function IKRigEditor.IKRetargeterController.RemoveAllOps
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UIKRetargeterController::RemoveAllOps() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IKRetargeterController", "RemoveAllOps");

	Params::IKRetargeterController_RemoveAllOps Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function IKRigEditor.IKRetargeterController.RemoveRetargetOp
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// int32                                   OpIndex                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UIKRetargeterController::RemoveRetargetOp(const int32 OpIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IKRetargeterController", "RemoveRetargetOp");

	Params::IKRetargeterController_RemoveRetargetOp Parms{};

	Parms.OpIndex = OpIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function IKRigEditor.IKRetargeterController.RemoveRetargetPose
// (Final, Native, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// class FName                             PoseToRemove                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ERetargetSourceOrTarget                 SourceOrTarget                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UIKRetargeterController::RemoveRetargetPose(const class FName& PoseToRemove, const ERetargetSourceOrTarget SourceOrTarget) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IKRetargeterController", "RemoveRetargetPose");

	Params::IKRetargeterController_RemoveRetargetPose Parms{};

	Parms.PoseToRemove = PoseToRemove;
	Parms.SourceOrTarget = SourceOrTarget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function IKRigEditor.IKRetargeterController.RenameRetargetPose
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// class FName                             OldPoseName                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             NewPoseName                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ERetargetSourceOrTarget                 SourceOrTarget                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UIKRetargeterController::RenameRetargetPose(const class FName OldPoseName, const class FName NewPoseName, const ERetargetSourceOrTarget SourceOrTarget) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IKRetargeterController", "RenameRetargetPose");

	Params::IKRetargeterController_RenameRetargetPose Parms{};

	Parms.OldPoseName = OldPoseName;
	Parms.NewPoseName = NewPoseName;
	Parms.SourceOrTarget = SourceOrTarget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function IKRigEditor.IKRetargeterController.ResetRetargetPose
// (Final, Native, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// class FName                             PoseToReset                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FName>                     BonesToReset                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// ERetargetSourceOrTarget                 SourceOrTarget                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UIKRetargeterController::ResetRetargetPose(const class FName& PoseToReset, const TArray<class FName>& BonesToReset, const ERetargetSourceOrTarget SourceOrTarget) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IKRetargeterController", "ResetRetargetPose");

	Params::IKRetargeterController_ResetRetargetPose Parms{};

	Parms.PoseToReset = PoseToReset;
	Parms.BonesToReset = std::move(BonesToReset);
	Parms.SourceOrTarget = SourceOrTarget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function IKRigEditor.IKRetargeterController.SetCurrentRetargetPose
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// class FName                             CurrentPose                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ERetargetSourceOrTarget                 SourceOrTarget                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UIKRetargeterController::SetCurrentRetargetPose(class FName CurrentPose, const ERetargetSourceOrTarget SourceOrTarget) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IKRetargeterController", "SetCurrentRetargetPose");

	Params::IKRetargeterController_SetCurrentRetargetPose Parms{};

	Parms.CurrentPose = CurrentPose;
	Parms.SourceOrTarget = SourceOrTarget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function IKRigEditor.IKRetargeterController.SetGlobalSettings
// (Final, Native, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// struct FRetargetGlobalSettings          GlobalSettings                                         (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UIKRetargeterController::SetGlobalSettings(const struct FRetargetGlobalSettings& GlobalSettings) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IKRetargeterController", "SetGlobalSettings");

	Params::IKRetargeterController_SetGlobalSettings Parms{};

	Parms.GlobalSettings = std::move(GlobalSettings);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function IKRigEditor.IKRetargeterController.SetIKRig
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// ERetargetSourceOrTarget                 SourceOrTarget                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UIKRigDefinition*                 IKRig                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UIKRetargeterController::SetIKRig(const ERetargetSourceOrTarget SourceOrTarget, class UIKRigDefinition* IKRig) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IKRetargeterController", "SetIKRig");

	Params::IKRetargeterController_SetIKRig Parms{};

	Parms.SourceOrTarget = SourceOrTarget;
	Parms.IKRig = IKRig;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function IKRigEditor.IKRetargeterController.SetPreviewMesh
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// ERetargetSourceOrTarget                 SourceOrTarget                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USkeletalMesh*                    InPreviewMesh                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UIKRetargeterController::SetPreviewMesh(const ERetargetSourceOrTarget SourceOrTarget, class USkeletalMesh* InPreviewMesh) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IKRetargeterController", "SetPreviewMesh");

	Params::IKRetargeterController_SetPreviewMesh Parms{};

	Parms.SourceOrTarget = SourceOrTarget;
	Parms.InPreviewMesh = InPreviewMesh;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function IKRigEditor.IKRetargeterController.SetRetargetChainSettings
// (Final, Native, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// class FName                             TargetChainName                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTargetChainSettings             Settings                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UIKRetargeterController::SetRetargetChainSettings(const class FName& TargetChainName, const struct FTargetChainSettings& Settings) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IKRetargeterController", "SetRetargetChainSettings");

	Params::IKRetargeterController_SetRetargetChainSettings Parms{};

	Parms.TargetChainName = TargetChainName;
	Parms.Settings = std::move(Settings);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function IKRigEditor.IKRetargeterController.SetRetargetOpEnabled
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// int32                                   RetargetOpIndex                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsEnabled                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UIKRetargeterController::SetRetargetOpEnabled(int32 RetargetOpIndex, bool bIsEnabled) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IKRetargeterController", "SetRetargetOpEnabled");

	Params::IKRetargeterController_SetRetargetOpEnabled Parms{};

	Parms.RetargetOpIndex = RetargetOpIndex;
	Parms.bIsEnabled = bIsEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function IKRigEditor.IKRetargeterController.SetRootOffsetInRetargetPose
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, Const)
// Parameters:
// struct FVector                          TranslationOffset                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ERetargetSourceOrTarget                 SourceOrTarget                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UIKRetargeterController::SetRootOffsetInRetargetPose(const struct FVector& TranslationOffset, const ERetargetSourceOrTarget SourceOrTarget) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IKRetargeterController", "SetRootOffsetInRetargetPose");

	Params::IKRetargeterController_SetRootOffsetInRetargetPose Parms{};

	Parms.TranslationOffset = std::move(TranslationOffset);
	Parms.SourceOrTarget = SourceOrTarget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function IKRigEditor.IKRetargeterController.SetRootSettings
// (Final, Native, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// struct FTargetRootSettings              RootSettings                                           (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UIKRetargeterController::SetRootSettings(const struct FTargetRootSettings& RootSettings) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IKRetargeterController", "SetRootSettings");

	Params::IKRetargeterController_SetRootSettings Parms{};

	Parms.RootSettings = std::move(RootSettings);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function IKRigEditor.IKRetargeterController.SetRotationOffsetForRetargetPoseBone
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, Const)
// Parameters:
// class FName                             BoneName                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQuat                            RotationOffset                                         (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ERetargetSourceOrTarget                 SkeletonMode                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UIKRetargeterController::SetRotationOffsetForRetargetPoseBone(const class FName& BoneName, const struct FQuat& RotationOffset, const ERetargetSourceOrTarget SkeletonMode) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IKRetargeterController", "SetRotationOffsetForRetargetPoseBone");

	Params::IKRetargeterController_SetRotationOffsetForRetargetPoseBone Parms{};

	Parms.BoneName = BoneName;
	Parms.RotationOffset = std::move(RotationOffset);
	Parms.SkeletonMode = SkeletonMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function IKRigEditor.IKRetargeterController.SetSourceChain
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// class FName                             SourceChainName                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             TargetChainName                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UIKRetargeterController::SetSourceChain(class FName SourceChainName, class FName TargetChainName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IKRetargeterController", "SetSourceChain");

	Params::IKRetargeterController_SetSourceChain Parms{};

	Parms.SourceChainName = SourceChainName;
	Parms.TargetChainName = TargetChainName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function IKRigEditor.IKRigController.GetController
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UIKRigDefinition*                 InIKRigDefinition                                      (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UIKRigController*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UIKRigController* UIKRigController::GetController(const class UIKRigDefinition* InIKRigDefinition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("IKRigController", "GetController");

	Params::IKRigController_GetController Parms{};

	Parms.InIKRigDefinition = InIKRigDefinition;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function IKRigEditor.IKRigController.ApplyAutoFBIK
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UIKRigController::ApplyAutoFBIK()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IKRigController", "ApplyAutoFBIK");

	Params::IKRigController_ApplyAutoFBIK Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function IKRigEditor.IKRigController.ApplyAutoGeneratedRetargetDefinition
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UIKRigController::ApplyAutoGeneratedRetargetDefinition()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IKRigController", "ApplyAutoGeneratedRetargetDefinition");

	Params::IKRigController_ApplyAutoGeneratedRetargetDefinition Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function IKRigEditor.IKRigController.AddBoneSetting
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// class FName                             BoneName                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SolverIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UIKRigController::AddBoneSetting(const class FName BoneName, int32 SolverIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IKRigController", "AddBoneSetting");

	Params::IKRigController_AddBoneSetting Parms{};

	Parms.BoneName = BoneName;
	Parms.SolverIndex = SolverIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function IKRigEditor.IKRigController.AddNewGoal
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// class FName                             GoalName                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             BoneName                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UIKRigController::AddNewGoal(const class FName GoalName, const class FName BoneName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IKRigController", "AddNewGoal");

	Params::IKRigController_AddNewGoal Parms{};

	Parms.GoalName = GoalName;
	Parms.BoneName = BoneName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function IKRigEditor.IKRigController.AddRetargetChain
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// class FName                             ChainName                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             StartBoneName                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             EndBoneName                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             GoalName                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UIKRigController::AddRetargetChain(const class FName ChainName, const class FName StartBoneName, const class FName EndBoneName, const class FName GoalName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IKRigController", "AddRetargetChain");

	Params::IKRigController_AddRetargetChain Parms{};

	Parms.ChainName = ChainName;
	Parms.StartBoneName = StartBoneName;
	Parms.EndBoneName = EndBoneName;
	Parms.GoalName = GoalName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function IKRigEditor.IKRigController.AddSolver
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// TSubclassOf<class UIKRigSolver>         InSolverClass                                          (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UIKRigController::AddSolver(TSubclassOf<class UIKRigSolver> InSolverClass) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IKRigController", "AddSolver");

	Params::IKRigController_AddSolver Parms{};

	Parms.InSolverClass = InSolverClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function IKRigEditor.IKRigController.ConnectGoalToSolver
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// class FName                             GoalName                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SolverIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UIKRigController::ConnectGoalToSolver(const class FName GoalName, int32 SolverIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IKRigController", "ConnectGoalToSolver");

	Params::IKRigController_ConnectGoalToSolver Parms{};

	Parms.GoalName = GoalName;
	Parms.SolverIndex = SolverIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function IKRigEditor.IKRigController.DisconnectGoalFromSolver
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// class FName                             GoalToRemove                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SolverIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UIKRigController::DisconnectGoalFromSolver(const class FName GoalToRemove, int32 SolverIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IKRigController", "DisconnectGoalFromSolver");

	Params::IKRigController_DisconnectGoalFromSolver Parms{};

	Parms.GoalToRemove = GoalToRemove;
	Parms.SolverIndex = SolverIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function IKRigEditor.IKRigController.GetAllGoals
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const TArray<class UIKRigEffectorGoal*> ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const TArray<class UIKRigEffectorGoal*> UIKRigController::GetAllGoals() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IKRigController", "GetAllGoals");

	Params::IKRigController_GetAllGoals Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function IKRigEditor.IKRigController.GetBoneExcluded
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             BoneName                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UIKRigController::GetBoneExcluded(const class FName BoneName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IKRigController", "GetBoneExcluded");

	Params::IKRigController_GetBoneExcluded Parms{};

	Parms.BoneName = BoneName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function IKRigEditor.IKRigController.GetBoneForGoal
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             GoalName                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UIKRigController::GetBoneForGoal(const class FName GoalName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IKRigController", "GetBoneForGoal");

	Params::IKRigController_GetBoneForGoal Parms{};

	Parms.GoalName = GoalName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function IKRigEditor.IKRigController.GetBoneSettings
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// class FName                             BoneName                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SolverIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UObject* UIKRigController::GetBoneSettings(const class FName BoneName, int32 SolverIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IKRigController", "GetBoneSettings");

	Params::IKRigController_GetBoneSettings Parms{};

	Parms.BoneName = BoneName;
	Parms.SolverIndex = SolverIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function IKRigEditor.IKRigController.GetEndBone
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   SolverIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UIKRigController::GetEndBone(int32 SolverIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IKRigController", "GetEndBone");

	Params::IKRigController_GetEndBone Parms{};

	Parms.SolverIndex = SolverIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function IKRigEditor.IKRigController.GetGoal
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             GoalName                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UIKRigEffectorGoal*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UIKRigEffectorGoal* UIKRigController::GetGoal(const class FName GoalName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IKRigController", "GetGoal");

	Params::IKRigController_GetGoal Parms{};

	Parms.GoalName = GoalName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function IKRigEditor.IKRigController.GetGoalNameForBone
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             BoneName                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UIKRigController::GetGoalNameForBone(const class FName BoneName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IKRigController", "GetGoalNameForBone");

	Params::IKRigController_GetGoalNameForBone Parms{};

	Parms.BoneName = BoneName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function IKRigEditor.IKRigController.GetGoalSettingsForSolver
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             GoalName                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SolverIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UObject* UIKRigController::GetGoalSettingsForSolver(const class FName GoalName, int32 SolverIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IKRigController", "GetGoalSettingsForSolver");

	Params::IKRigController_GetGoalSettingsForSolver Parms{};

	Parms.GoalName = GoalName;
	Parms.SolverIndex = SolverIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function IKRigEditor.IKRigController.GetIndexOfSolver
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UIKRigSolver*                     Solver                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UIKRigController::GetIndexOfSolver(class UIKRigSolver* Solver) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IKRigController", "GetIndexOfSolver");

	Params::IKRigController_GetIndexOfSolver Parms{};

	Parms.Solver = Solver;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function IKRigEditor.IKRigController.GetNumSolvers
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UIKRigController::GetNumSolvers() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IKRigController", "GetNumSolvers");

	Params::IKRigController_GetNumSolvers Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function IKRigEditor.IKRigController.GetRefPoseTransformOfBone
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             BoneName                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTransform                       ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FTransform UIKRigController::GetRefPoseTransformOfBone(const class FName BoneName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IKRigController", "GetRefPoseTransformOfBone");

	Params::IKRigController_GetRefPoseTransformOfBone Parms{};

	Parms.BoneName = BoneName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function IKRigEditor.IKRigController.GetRetargetChainEndBone
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             ChainName                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UIKRigController::GetRetargetChainEndBone(const class FName ChainName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IKRigController", "GetRetargetChainEndBone");

	Params::IKRigController_GetRetargetChainEndBone Parms{};

	Parms.ChainName = ChainName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function IKRigEditor.IKRigController.GetRetargetChainGoal
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             ChainName                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UIKRigController::GetRetargetChainGoal(const class FName ChainName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IKRigController", "GetRetargetChainGoal");

	Params::IKRigController_GetRetargetChainGoal Parms{};

	Parms.ChainName = ChainName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function IKRigEditor.IKRigController.GetRetargetChains
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const TArray<struct FBoneChain>         ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const TArray<struct FBoneChain> UIKRigController::GetRetargetChains() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IKRigController", "GetRetargetChains");

	Params::IKRigController_GetRetargetChains Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function IKRigEditor.IKRigController.GetRetargetChainStartBone
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             ChainName                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UIKRigController::GetRetargetChainStartBone(const class FName ChainName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IKRigController", "GetRetargetChainStartBone");

	Params::IKRigController_GetRetargetChainStartBone Parms{};

	Parms.ChainName = ChainName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function IKRigEditor.IKRigController.GetRetargetRoot
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UIKRigController::GetRetargetRoot() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IKRigController", "GetRetargetRoot");

	Params::IKRigController_GetRetargetRoot Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function IKRigEditor.IKRigController.GetRootBone
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   SolverIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UIKRigController::GetRootBone(int32 SolverIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IKRigController", "GetRootBone");

	Params::IKRigController_GetRootBone Parms{};

	Parms.SolverIndex = SolverIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function IKRigEditor.IKRigController.GetSkeletalMesh
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USkeletalMesh*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USkeletalMesh* UIKRigController::GetSkeletalMesh() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IKRigController", "GetSkeletalMesh");

	Params::IKRigController_GetSkeletalMesh Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function IKRigEditor.IKRigController.GetSolverAtIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UIKRigSolver*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UIKRigSolver* UIKRigController::GetSolverAtIndex(int32 Index_0) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IKRigController", "GetSolverAtIndex");

	Params::IKRigController_GetSolverAtIndex Parms{};

	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function IKRigEditor.IKRigController.GetSolverEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   SolverIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UIKRigController::GetSolverEnabled(int32 SolverIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IKRigController", "GetSolverEnabled");

	Params::IKRigController_GetSolverEnabled Parms{};

	Parms.SolverIndex = SolverIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function IKRigEditor.IKRigController.IsGoalConnectedToAnySolver
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             GoalName                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UIKRigController::IsGoalConnectedToAnySolver(const class FName GoalName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IKRigController", "IsGoalConnectedToAnySolver");

	Params::IKRigController_IsGoalConnectedToAnySolver Parms{};

	Parms.GoalName = GoalName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function IKRigEditor.IKRigController.IsGoalConnectedToSolver
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             GoalName                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SolverIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UIKRigController::IsGoalConnectedToSolver(const class FName GoalName, int32 SolverIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IKRigController", "IsGoalConnectedToSolver");

	Params::IKRigController_IsGoalConnectedToSolver Parms{};

	Parms.GoalName = GoalName;
	Parms.SolverIndex = SolverIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function IKRigEditor.IKRigController.IsSkeletalMeshCompatible
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USkeletalMesh*                    SkeletalMeshToCheck                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UIKRigController::IsSkeletalMeshCompatible(class USkeletalMesh* SkeletalMeshToCheck) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IKRigController", "IsSkeletalMeshCompatible");

	Params::IKRigController_IsSkeletalMeshCompatible Parms{};

	Parms.SkeletalMeshToCheck = SkeletalMeshToCheck;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function IKRigEditor.IKRigController.MoveSolverInStack
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// int32                                   SolverToMoveIndex                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   TargetSolverIndex                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UIKRigController::MoveSolverInStack(int32 SolverToMoveIndex, int32 TargetSolverIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IKRigController", "MoveSolverInStack");

	Params::IKRigController_MoveSolverInStack Parms{};

	Parms.SolverToMoveIndex = SolverToMoveIndex;
	Parms.TargetSolverIndex = TargetSolverIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function IKRigEditor.IKRigController.RemoveBoneSetting
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// class FName                             BoneName                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SolverIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UIKRigController::RemoveBoneSetting(const class FName BoneName, int32 SolverIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IKRigController", "RemoveBoneSetting");

	Params::IKRigController_RemoveBoneSetting Parms{};

	Parms.BoneName = BoneName;
	Parms.SolverIndex = SolverIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function IKRigEditor.IKRigController.RemoveGoal
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// class FName                             GoalName                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UIKRigController::RemoveGoal(const class FName GoalName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IKRigController", "RemoveGoal");

	Params::IKRigController_RemoveGoal Parms{};

	Parms.GoalName = GoalName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function IKRigEditor.IKRigController.RemoveRetargetChain
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// class FName                             ChainName                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UIKRigController::RemoveRetargetChain(const class FName ChainName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IKRigController", "RemoveRetargetChain");

	Params::IKRigController_RemoveRetargetChain Parms{};

	Parms.ChainName = ChainName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function IKRigEditor.IKRigController.RemoveSolver
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// int32                                   SolverIndex                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UIKRigController::RemoveSolver(const int32 SolverIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IKRigController", "RemoveSolver");

	Params::IKRigController_RemoveSolver Parms{};

	Parms.SolverIndex = SolverIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function IKRigEditor.IKRigController.RenameGoal
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// class FName                             OldName                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             PotentialNewName                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UIKRigController::RenameGoal(const class FName OldName, const class FName PotentialNewName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IKRigController", "RenameGoal");

	Params::IKRigController_RenameGoal Parms{};

	Parms.OldName = OldName;
	Parms.PotentialNewName = PotentialNewName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function IKRigEditor.IKRigController.RenameRetargetChain
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// class FName                             ChainName                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             NewChainName                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UIKRigController::RenameRetargetChain(const class FName ChainName, const class FName NewChainName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IKRigController", "RenameRetargetChain");

	Params::IKRigController_RenameRetargetChain Parms{};

	Parms.ChainName = ChainName;
	Parms.NewChainName = NewChainName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function IKRigEditor.IKRigController.SetBoneExcluded
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// class FName                             BoneName                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bExclude                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UIKRigController::SetBoneExcluded(const class FName BoneName, const bool bExclude) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IKRigController", "SetBoneExcluded");

	Params::IKRigController_SetBoneExcluded Parms{};

	Parms.BoneName = BoneName;
	Parms.bExclude = bExclude;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function IKRigEditor.IKRigController.SetEndBone
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// class FName                             EndBoneName                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SolverIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UIKRigController::SetEndBone(const class FName EndBoneName, int32 SolverIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IKRigController", "SetEndBone");

	Params::IKRigController_SetEndBone Parms{};

	Parms.EndBoneName = EndBoneName;
	Parms.SolverIndex = SolverIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function IKRigEditor.IKRigController.SetGoalBone
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// class FName                             GoalName                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             NewBoneName                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UIKRigController::SetGoalBone(const class FName GoalName, const class FName NewBoneName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IKRigController", "SetGoalBone");

	Params::IKRigController_SetGoalBone Parms{};

	Parms.GoalName = GoalName;
	Parms.NewBoneName = NewBoneName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function IKRigEditor.IKRigController.SetRetargetChainEndBone
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// class FName                             ChainName                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             EndBoneName                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UIKRigController::SetRetargetChainEndBone(const class FName ChainName, const class FName EndBoneName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IKRigController", "SetRetargetChainEndBone");

	Params::IKRigController_SetRetargetChainEndBone Parms{};

	Parms.ChainName = ChainName;
	Parms.EndBoneName = EndBoneName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function IKRigEditor.IKRigController.SetRetargetChainGoal
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// class FName                             ChainName                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             GoalName                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UIKRigController::SetRetargetChainGoal(const class FName ChainName, const class FName GoalName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IKRigController", "SetRetargetChainGoal");

	Params::IKRigController_SetRetargetChainGoal Parms{};

	Parms.ChainName = ChainName;
	Parms.GoalName = GoalName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function IKRigEditor.IKRigController.SetRetargetChainStartBone
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// class FName                             ChainName                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             StartBoneName                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UIKRigController::SetRetargetChainStartBone(const class FName ChainName, const class FName StartBoneName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IKRigController", "SetRetargetChainStartBone");

	Params::IKRigController_SetRetargetChainStartBone Parms{};

	Parms.ChainName = ChainName;
	Parms.StartBoneName = StartBoneName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function IKRigEditor.IKRigController.SetRetargetRoot
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// class FName                             RootBoneName                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UIKRigController::SetRetargetRoot(const class FName RootBoneName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IKRigController", "SetRetargetRoot");

	Params::IKRigController_SetRetargetRoot Parms{};

	Parms.RootBoneName = RootBoneName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function IKRigEditor.IKRigController.SetRootBone
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// class FName                             RootBoneName                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SolverIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UIKRigController::SetRootBone(const class FName RootBoneName, int32 SolverIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IKRigController", "SetRootBone");

	Params::IKRigController_SetRootBone Parms{};

	Parms.RootBoneName = RootBoneName;
	Parms.SolverIndex = SolverIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function IKRigEditor.IKRigController.SetSkeletalMesh
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// class USkeletalMesh*                    SkeletalMesh                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UIKRigController::SetSkeletalMesh(class USkeletalMesh* SkeletalMesh) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IKRigController", "SetSkeletalMesh");

	Params::IKRigController_SetSkeletalMesh Parms{};

	Parms.SkeletalMesh = SkeletalMesh;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function IKRigEditor.IKRigController.SetSolverEnabled
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// int32                                   SolverIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsEnabled                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UIKRigController::SetSolverEnabled(int32 SolverIndex, bool bIsEnabled) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IKRigController", "SetSolverEnabled");

	Params::IKRigController_SetSolverEnabled Parms{};

	Parms.SolverIndex = SolverIndex;
	Parms.bIsEnabled = bIsEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

