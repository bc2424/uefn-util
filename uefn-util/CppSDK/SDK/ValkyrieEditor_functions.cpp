#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ValkyrieEditor

#include "Basic.hpp"

#include "ValkyrieEditor_classes.hpp"
#include "ValkyrieEditor_parameters.hpp"


namespace SDK
{

// Function ValkyrieEditor.ProjectPickerWrapper.CloseProjectBrowser
// (Final, Native, Public, BlueprintCallable, Const)

void UProjectPickerWrapper::CloseProjectBrowser() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProjectPickerWrapper", "CloseProjectBrowser");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ValkyrieEditor.ValkyrieEditorConfig.GetEnabledPermissionOptions
// (Final, Native, Private, Const)
// Parameters:
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> UValkyrieEditorConfig::GetEnabledPermissionOptions() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ValkyrieEditorConfig", "GetEnabledPermissionOptions");

	Params::ValkyrieEditorConfig_GetEnabledPermissionOptions Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ValkyrieEditor.ValkyrieProject.GetProjectFileName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UValkyrieProject::GetProjectFileName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ValkyrieProject", "GetProjectFileName");

	Params::ValkyrieProject_GetProjectFileName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ValkyrieEditor.ValkyrieProjectSettingsEditorViewModel.GetVerseVersionOptions
// (Final, Native, Private)
// Parameters:
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> UValkyrieProjectSettingsEditorViewModel::GetVerseVersionOptions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ValkyrieProjectSettingsEditorViewModel", "GetVerseVersionOptions");

	Params::ValkyrieProjectSettingsEditorViewModel_GetVerseVersionOptions Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ValkyrieEditor.CMSNewsLayoutWidget.GetOnlyShowUnseenNewsOnStartup
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UCMSNewsLayoutWidget::GetOnlyShowUnseenNewsOnStartup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CMSNewsLayoutWidget", "GetOnlyShowUnseenNewsOnStartup");

	Params::CMSNewsLayoutWidget_GetOnlyShowUnseenNewsOnStartup Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ValkyrieEditor.CMSNewsLayoutWidget.SetOnlyShowUnseenNewsOnStartup
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    bOnlyShowUnseenNewsOnStartup                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCMSNewsLayoutWidget::SetOnlyShowUnseenNewsOnStartup(bool bOnlyShowUnseenNewsOnStartup)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CMSNewsLayoutWidget", "SetOnlyShowUnseenNewsOnStartup");

	Params::CMSNewsLayoutWidget_SetOnlyShowUnseenNewsOnStartup Parms{};

	Parms.bOnlyShowUnseenNewsOnStartup = bOnlyShowUnseenNewsOnStartup;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ValkyrieEditor.CMSNewsLayoutWidget.DataFound
// (Event, Protected, BlueprintEvent)

void UCMSNewsLayoutWidget::DataFound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CMSNewsLayoutWidget", "DataFound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ValkyrieEditor.CMSNewsLayoutWidget.NoData
// (Event, Protected, BlueprintEvent)

void UCMSNewsLayoutWidget::NoData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CMSNewsLayoutWidget", "NoData");

	UObject::ProcessEvent(Func, nullptr);
}

}

