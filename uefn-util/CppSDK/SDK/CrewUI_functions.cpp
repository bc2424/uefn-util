#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CrewUI

#include "Basic.hpp"

#include "CrewUI_classes.hpp"
#include "CrewUI_parameters.hpp"


namespace SDK
{

// Function CrewUI.CrewScreenContentBlockingInterface.BlockScreenContent
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// bool                                    bBlockScreen                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ContentBlockedText                                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void ICrewScreenContentBlockingInterface::BlockScreenContent(const bool bBlockScreen, const class FText& ContentBlockedText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CrewScreenContentBlockingInterface", "BlockScreenContent");

	Params::CrewScreenContentBlockingInterface_BlockScreenContent Parms{};

	Parms.bBlockScreen = bBlockScreen;
	Parms.ContentBlockedText = std::move(ContentBlockedText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function CrewUI.FortTemporaryItemsComponent.OnAthenaProfileInitialized
// (Final, Native, Private)

void UFortTemporaryItemsComponent::OnAthenaProfileInitialized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTemporaryItemsComponent", "OnAthenaProfileInitialized");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function CrewUI.FortTemporaryItemsManager.OnTemporaryItemsStateChanged
// (Final, Native, Private)

void UFortTemporaryItemsManager::OnTemporaryItemsStateChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTemporaryItemsManager", "OnTemporaryItemsStateChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function CrewUI.FortTemporaryItemsRow.SetTileView
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UTileView*                        InTileView                                             (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortTemporaryItemsRow::SetTileView(class UTileView* InTileView)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTemporaryItemsRow", "SetTileView");

	Params::FortTemporaryItemsRow_SetTileView Parms{};

	Parms.InTileView = InTileView;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function CrewUI.FortTemporaryItemsRow.GetCategoryText
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EAthenaCustomizationCategory            InCategory                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UFortTemporaryItemsRow::GetCategoryText(const EAthenaCustomizationCategory InCategory) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTemporaryItemsRow", "GetCategoryText");

	Params::FortTemporaryItemsRow_GetCategoryText Parms{};

	Parms.InCategory = InCategory;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function CrewUI.FortTemporaryItemsScreenItemInfo.OnDataSet
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bValidItem                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsSubscribed                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsOwned                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortTemporaryItemsScreenItemInfo::OnDataSet(bool bValidItem, bool bIsSubscribed, bool IsOwned)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTemporaryItemsScreenItemInfo", "OnDataSet");

	Params::FortTemporaryItemsScreenItemInfo_OnDataSet Parms{};

	Parms.bValidItem = bValidItem;
	Parms.bIsSubscribed = bIsSubscribed;
	Parms.IsOwned = IsOwned;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CrewUI.FortTemporaryItemsScreenItemInfo.SetData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortSubscriptionVM*              SubscriptionVM                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortTemporaryItemsRewardVM*      RewardVM                                               (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortTemporaryItemsScreenItemInfo::SetData(const class UFortSubscriptionVM* SubscriptionVM, const class UFortTemporaryItemsRewardVM* RewardVM)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTemporaryItemsScreenItemInfo", "SetData");

	Params::FortTemporaryItemsScreenItemInfo_SetData Parms{};

	Parms.SubscriptionVM = SubscriptionVM;
	Parms.RewardVM = RewardVM;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function CrewUI.FortTemporaryItemsTileButton.SetupRewardItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortAccountItemDefinition*       ItemDef                                                (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortTemporaryItemsTileButton::SetupRewardItem(const class UFortAccountItemDefinition* ItemDef)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTemporaryItemsTileButton", "SetupRewardItem");

	Params::FortTemporaryItemsTileButton_SetupRewardItem Parms{};

	Parms.ItemDef = ItemDef;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function CrewUI.BattlePassCrewPurchaseButton.OnCurrencyUpdated
// (Event, Protected, BlueprintEvent)

void UBattlePassCrewPurchaseButton::OnCurrencyUpdated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassCrewPurchaseButton", "OnCurrencyUpdated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CrewUI.BattlePassCrewPurchaseContainer.OnContentStateUpdated
// (Event, Protected, BlueprintEvent)
// Parameters:
// EBattlePassCrewContentState             InState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInScreenOpened                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBattlePassCrewPurchaseContainer::OnContentStateUpdated(EBattlePassCrewContentState InState, bool bInScreenOpened)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassCrewPurchaseContainer", "OnContentStateUpdated");

	Params::BattlePassCrewPurchaseContainer_OnContentStateUpdated Parms{};

	Parms.InState = InState;
	Parms.bInScreenOpened = bInScreenOpened;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CrewUI.BattlePassCrewPurchaseContainer.OnTriggerIntroAnimation
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bCanClaimRewards                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBattlePassCrewPurchaseContainer::OnTriggerIntroAnimation(bool bCanClaimRewards)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassCrewPurchaseContainer", "OnTriggerIntroAnimation");

	Params::BattlePassCrewPurchaseContainer_OnTriggerIntroAnimation Parms{};

	Parms.bCanClaimRewards = bCanClaimRewards;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CrewUI.BattlePassPurchaseScreen.OnPurchaseConfirmed
// (Event, Protected, BlueprintEvent)

void UBattlePassPurchaseScreen::OnPurchaseConfirmed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassPurchaseScreen", "OnPurchaseConfirmed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CrewUI.BattlePassPurchaseScreen.OnPurchaseStateChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// EBattlePassPurchaseState                InCurrentState                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBattlePassPurchaseScreen::OnPurchaseStateChanged(EBattlePassPurchaseState InCurrentState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassPurchaseScreen", "OnPurchaseStateChanged");

	Params::BattlePassPurchaseScreen_OnPurchaseStateChanged Parms{};

	Parms.InCurrentState = InCurrentState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CrewUI.BattlePassPurchaseScreen.OnSetNavButtonNotificationText
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             NotificationText                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UBattlePassPurchaseScreen::OnSetNavButtonNotificationText(const class FText& NotificationText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassPurchaseScreen", "OnSetNavButtonNotificationText");

	Params::BattlePassPurchaseScreen_OnSetNavButtonNotificationText Parms{};

	Parms.NotificationText = std::move(NotificationText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function CrewUI.BattlePassPurchaseScreen.OnSetScreenInteractable
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bInteractable                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBattlePassPurchaseScreen::OnSetScreenInteractable(bool bInteractable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassPurchaseScreen", "OnSetScreenInteractable");

	Params::BattlePassPurchaseScreen_OnSetScreenInteractable Parms{};

	Parms.bInteractable = bInteractable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CrewUI.BattlePassPurchaseScreen.OnShowNavButtonNotification
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bShowNotification                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBattlePassPurchaseScreen::OnShowNavButtonNotification(const bool bShowNotification)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassPurchaseScreen", "OnShowNavButtonNotification");

	Params::BattlePassPurchaseScreen_OnShowNavButtonNotification Parms{};

	Parms.bShowNotification = bShowNotification;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CrewUI.BattlePassPurchaseScreen.RefreshFocus
// (Final, Native, Protected, BlueprintCallable)

void UBattlePassPurchaseScreen::RefreshFocus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassPurchaseScreen", "RefreshFocus");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function CrewUI.CrewAsyncActions.PurchaseSubscription
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UUserWidget*                      ContextWidget                                          (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCrewAsyncActions*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UCrewAsyncActions* UCrewAsyncActions::PurchaseSubscription(const class UUserWidget* ContextWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CrewAsyncActions", "PurchaseSubscription");

	Params::CrewAsyncActions_PurchaseSubscription Parms{};

	Parms.ContextWidget = ContextWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function CrewUI.CrewMultiSubscriptionAlertModal.OnSetHowToCancelURL
// (Event, Protected, BlueprintEvent)
// Parameters:
// class FString                           MoreInfoUrl                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCrewMultiSubscriptionAlertModal::OnSetHowToCancelURL(const class FString& MoreInfoUrl)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CrewMultiSubscriptionAlertModal", "OnSetHowToCancelURL");

	Params::CrewMultiSubscriptionAlertModal_OnSetHowToCancelURL Parms{};

	Parms.MoreInfoUrl = std::move(MoreInfoUrl);

	UObject::ProcessEvent(Func, &Parms);
}


// Function CrewUI.CrewPurchaseScreen.BeginProgress
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             ProgressLabel                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UCrewPurchaseScreen::BeginProgress(const class FText& ProgressLabel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CrewPurchaseScreen", "BeginProgress");

	Params::CrewPurchaseScreen_BeginProgress Parms{};

	Parms.ProgressLabel = std::move(ProgressLabel);

	UObject::ProcessEvent(Func, &Parms);
}


// Function CrewUI.CrewPurchaseScreen.EndProgress
// (Event, Protected, BlueprintEvent)

void UCrewPurchaseScreen::EndProgress()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CrewPurchaseScreen", "EndProgress");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CrewUI.CrewPurchaseScreen.FireCrewAnalytic
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class FString                           Interaction                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   HoldTime                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCrewPurchaseScreen::FireCrewAnalytic(const class FString& Interaction, const float HoldTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CrewPurchaseScreen", "FireCrewAnalytic");

	Params::CrewPurchaseScreen_FireCrewAnalytic Parms{};

	Parms.Interaction = std::move(Interaction);
	Parms.HoldTime = HoldTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function CrewUI.CrewPurchaseScreen.HandleCancellationClicked
// (Final, Native, Private, BlueprintCallable)

void UCrewPurchaseScreen::HandleCancellationClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CrewPurchaseScreen", "HandleCancellationClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function CrewUI.CrewPurchaseScreen.HandleContinueEngaged
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// float                                   HoldTime                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCrewPurchaseScreen::HandleContinueEngaged(const float HoldTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CrewPurchaseScreen", "HandleContinueEngaged");

	Params::CrewPurchaseScreen_HandleContinueEngaged Parms{};

	Parms.HoldTime = HoldTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function CrewUI.CrewPurchaseScreen.HandleInspectionScreenClosed
// (Final, Native, Protected, BlueprintCallable)

void UCrewPurchaseScreen::HandleInspectionScreenClosed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CrewPurchaseScreen", "HandleInspectionScreenClosed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function CrewUI.CrewPurchaseScreen.HandlePurchaseEngaged
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// float                                   HoldTime                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCrewPurchaseScreen::HandlePurchaseEngaged(const float HoldTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CrewPurchaseScreen", "HandlePurchaseEngaged");

	Params::CrewPurchaseScreen_HandlePurchaseEngaged Parms{};

	Parms.HoldTime = HoldTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function CrewUI.CrewPurchaseScreen.HandleRejoinEngaged
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// float                                   HoldTime                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCrewPurchaseScreen::HandleRejoinEngaged(const float HoldTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CrewPurchaseScreen", "HandleRejoinEngaged");

	Params::CrewPurchaseScreen_HandleRejoinEngaged Parms{};

	Parms.HoldTime = HoldTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function CrewUI.CrewPurchaseScreen.HandleResolvePaymentClicked
// (Final, Native, Private, BlueprintCallable)

void UCrewPurchaseScreen::HandleResolvePaymentClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CrewPurchaseScreen", "HandleResolvePaymentClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function CrewUI.CrewPurchaseScreen.HandleTermsClicked
// (Final, Native, Private, BlueprintCallable)

void UCrewPurchaseScreen::HandleTermsClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CrewPurchaseScreen", "HandleTermsClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function CrewUI.CrewPurchaseScreen.HandleToBattlePassClicked
// (Final, Native, Private, BlueprintCallable)

void UCrewPurchaseScreen::HandleToBattlePassClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CrewPurchaseScreen", "HandleToBattlePassClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function CrewUI.CrewPurchaseScreen.OnContainerTabVisibilityUpdated
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bTabsVisible                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   SpacingAdjustmentForTabs                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCrewPurchaseScreen::OnContainerTabVisibilityUpdated(const bool bTabsVisible, const float SpacingAdjustmentForTabs)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CrewPurchaseScreen", "OnContainerTabVisibilityUpdated");

	Params::CrewPurchaseScreen_OnContainerTabVisibilityUpdated Parms{};

	Parms.bTabsVisible = bTabsVisible;
	Parms.SpacingAdjustmentForTabs = SpacingAdjustmentForTabs;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CrewUI.CrewPurchaseScreen.OnSetManagementModeEnabled
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bEnabled                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCrewPurchaseScreen::OnSetManagementModeEnabled(const bool bEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CrewPurchaseScreen", "OnSetManagementModeEnabled");

	Params::CrewPurchaseScreen_OnSetManagementModeEnabled Parms{};

	Parms.bEnabled = bEnabled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CrewUI.CrewPurchaseScreen.OnSetNavButtonNotificationText
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             NotificationText                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UCrewPurchaseScreen::OnSetNavButtonNotificationText(const class FText& NotificationText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CrewPurchaseScreen", "OnSetNavButtonNotificationText");

	Params::CrewPurchaseScreen_OnSetNavButtonNotificationText Parms{};

	Parms.NotificationText = std::move(NotificationText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function CrewUI.CrewPurchaseScreen.OnShowNavButtonNotification
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bShowNotification                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCrewPurchaseScreen::OnShowNavButtonNotification(const bool bShowNotification)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CrewPurchaseScreen", "OnShowNavButtonNotification");

	Params::CrewPurchaseScreen_OnShowNavButtonNotification Parms{};

	Parms.bShowNotification = bShowNotification;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CrewUI.CrewPurchaseScreen.RequestBattlePassMoreInfo
// (Final, Native, Protected, BlueprintCallable)

void UCrewPurchaseScreen::RequestBattlePassMoreInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CrewPurchaseScreen", "RequestBattlePassMoreInfo");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function CrewUI.CrewPurchaseScreen.RequestTabTileMoreInfo
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// ESubscriptionContentTab                 SubscriptionContentTab                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCrewPurchaseScreen::RequestTabTileMoreInfo(const ESubscriptionContentTab SubscriptionContentTab)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CrewPurchaseScreen", "RequestTabTileMoreInfo");

	Params::CrewPurchaseScreen_RequestTabTileMoreInfo Parms{};

	Parms.SubscriptionContentTab = SubscriptionContentTab;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function CrewUI.CrewPurchaseScreen.ShowDefaultData
// (Event, Protected, BlueprintCallable, BlueprintEvent)

void UCrewPurchaseScreen::ShowDefaultData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CrewPurchaseScreen", "ShowDefaultData");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CrewUI.CrewPurchaseScreen.CanUseContinueMembershipCTA
// (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UCrewPurchaseScreen::CanUseContinueMembershipCTA() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CrewPurchaseScreen", "CanUseContinueMembershipCTA");

	Params::CrewPurchaseScreen_CanUseContinueMembershipCTA Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function CrewUI.CrewSubscriptionContentContainer.OnTabSelected
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   TabIndex                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCrewSubscriptionContentContainer::OnTabSelected(int32 TabIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CrewSubscriptionContentContainer", "OnTabSelected");

	Params::CrewSubscriptionContentContainer_OnTabSelected Parms{};

	Parms.TabIndex = TabIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CrewUI.FortProgressiveScreenBase.BP_OnContainerTabVisibilityUpdated
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bTabsVisible                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   SpacingAdjustmentForTabs                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortProgressiveScreenBase::BP_OnContainerTabVisibilityUpdated(const bool bTabsVisible, const float SpacingAdjustmentForTabs)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortProgressiveScreenBase", "BP_OnContainerTabVisibilityUpdated");

	Params::FortProgressiveScreenBase_BP_OnContainerTabVisibilityUpdated Parms{};

	Parms.bTabsVisible = bTabsVisible;
	Parms.SpacingAdjustmentForTabs = SpacingAdjustmentForTabs;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CrewUI.FortProgressiveItemScreen.HandleBackClicked
// (Final, Native, Protected, BlueprintCallable)

void UFortProgressiveItemScreen::HandleBackClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortProgressiveItemScreen", "HandleBackClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function CrewUI.FortProgressiveItemScreen.HandleMoreInfoClicked
// (Final, Native, Protected, BlueprintCallable)

void UFortProgressiveItemScreen::HandleMoreInfoClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortProgressiveItemScreen", "HandleMoreInfoClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function CrewUI.FortProgressiveItemScreen.HandleSubscribeEngaged
// (Final, Native, Protected, BlueprintCallable)

void UFortProgressiveItemScreen::HandleSubscribeEngaged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortProgressiveItemScreen", "HandleSubscribeEngaged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function CrewUI.FortProgressiveItemScreen.OnSubscriptionPurchaseComplete
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bSuccess                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortProgressiveItemScreen::OnSubscriptionPurchaseComplete(bool bSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortProgressiveItemScreen", "OnSubscriptionPurchaseComplete");

	Params::FortProgressiveItemScreen_OnSubscriptionPurchaseComplete Parms{};

	Parms.bSuccess = bSuccess;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CrewUI.FortProgressiveItemScreen.SendAnalyticsEvent
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class FString                           Event                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           FullfillmentId                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   StageIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortProgressiveItemScreen::SendAnalyticsEvent(const class FString& Event, const class FString& FullfillmentId, int32 StageIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortProgressiveItemScreen", "SendAnalyticsEvent");

	Params::FortProgressiveItemScreen_SendAnalyticsEvent Parms{};

	Parms.Event = std::move(Event);
	Parms.FullfillmentId = std::move(FullfillmentId);
	Parms.StageIndex = StageIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function CrewUI.FortProgressiveTableOfContentsScreen.HandleBackClicked
// (Final, Native, Protected, BlueprintCallable)

void UFortProgressiveTableOfContentsScreen::HandleBackClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortProgressiveTableOfContentsScreen", "HandleBackClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function CrewUI.FortProgressiveTableOfContentsScreen.HandleInspectSetTile
// (Final, Native, Protected, BlueprintCallable)

void UFortProgressiveTableOfContentsScreen::HandleInspectSetTile()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortProgressiveTableOfContentsScreen", "HandleInspectSetTile");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function CrewUI.FortProgressiveTableOfContentsScreen.HandleMoreInfoClicked
// (Final, Native, Protected, BlueprintCallable)

void UFortProgressiveTableOfContentsScreen::HandleMoreInfoClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortProgressiveTableOfContentsScreen", "HandleMoreInfoClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function CrewUI.FortProgressiveTableOfContentsScreen.HandleSubscribeEngaged
// (Final, Native, Protected, BlueprintCallable)

void UFortProgressiveTableOfContentsScreen::HandleSubscribeEngaged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortProgressiveTableOfContentsScreen", "HandleSubscribeEngaged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function CrewUI.FortProgressiveTableOfContentsScreen.OnSubscriptionPurchaseComplete
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bSuccess                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortProgressiveTableOfContentsScreen::OnSubscriptionPurchaseComplete(bool bSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortProgressiveTableOfContentsScreen", "OnSubscriptionPurchaseComplete");

	Params::FortProgressiveTableOfContentsScreen_OnSubscriptionPurchaseComplete Parms{};

	Parms.bSuccess = bSuccess;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CrewUI.FortTemporaryItemsScreen.BP_OnContainerTabVisibilityUpdated
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bTabsVisible                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   SpacingAdjustmentForTabs                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortTemporaryItemsScreen::BP_OnContainerTabVisibilityUpdated(const bool bTabsVisible, const float SpacingAdjustmentForTabs)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTemporaryItemsScreen", "BP_OnContainerTabVisibilityUpdated");

	Params::FortTemporaryItemsScreen_BP_OnContainerTabVisibilityUpdated Parms{};

	Parms.bTabsVisible = bTabsVisible;
	Parms.SpacingAdjustmentForTabs = SpacingAdjustmentForTabs;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CrewUI.FortTemporaryItemsScreen.GetSubscriptionVM
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UFortSubscriptionVM*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortSubscriptionVM* UFortTemporaryItemsScreen::GetSubscriptionVM()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTemporaryItemsScreen", "GetSubscriptionVM");

	Params::FortTemporaryItemsScreen_GetSubscriptionVM Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function CrewUI.FortTemporaryItemsScreen.SetupRowEntry
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UFortTemporaryItemsRow*           RewardRow                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortTemporaryItemsScreen::SetupRowEntry(class UFortTemporaryItemsRow* RewardRow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTemporaryItemsScreen", "SetupRowEntry");

	Params::FortTemporaryItemsScreen_SetupRowEntry Parms{};

	Parms.RewardRow = RewardRow;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function CrewUI.FortTemporaryItemsScreen.GetRemainingDaysLabel
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortTemporaryItemsVM*            TemporaryItemsVM                                       (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UFortTemporaryItemsScreen::GetRemainingDaysLabel(const class UFortTemporaryItemsVM* TemporaryItemsVM) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTemporaryItemsScreen", "GetRemainingDaysLabel");

	Params::FortTemporaryItemsScreen_GetRemainingDaysLabel Parms{};

	Parms.TemporaryItemsVM = TemporaryItemsVM;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function CrewUI.CrewBenefitVM.GetTagText
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UCrewBenefitVM::GetTagText() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CrewBenefitVM", "GetTagText");

	Params::CrewBenefitVM_GetTagText Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function CrewUI.CrewBenefitVM.IsMonthlySubscription
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UCrewBenefitVM::IsMonthlySubscription() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CrewBenefitVM", "IsMonthlySubscription");

	Params::CrewBenefitVM_IsMonthlySubscription Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function CrewUI.CrewPlatformAndCountriesNotificationVM.ProcessAcknowledgment
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    Accepted                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCrewPlatformAndCountriesNotificationVM::ProcessAcknowledgment(const bool Accepted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CrewPlatformAndCountriesNotificationVM", "ProcessAcknowledgment");

	Params::CrewPlatformAndCountriesNotificationVM_ProcessAcknowledgment Parms{};

	Parms.Accepted = Accepted;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function CrewUI.CrewProgressiveSetVM.GetIsCompleted
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UCrewProgressiveSetVM::GetIsCompleted() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CrewProgressiveSetVM", "GetIsCompleted");

	Params::CrewProgressiveSetVM_GetIsCompleted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function CrewUI.CrewProgressiveSetVM.GetNextStage
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class UCrewProgressiveStageVM*    ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UCrewProgressiveStageVM* UCrewProgressiveSetVM::GetNextStage() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CrewProgressiveSetVM", "GetNextStage");

	Params::CrewProgressiveSetVM_GetNextStage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function CrewUI.CrewProgressiveSetVM.GetStageCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UCrewProgressiveSetVM::GetStageCount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CrewProgressiveSetVM", "GetStageCount");

	Params::CrewProgressiveSetVM_GetStageCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function CrewUI.CrewProgressiveStageVM.GetName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UCrewProgressiveStageVM::GetName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CrewProgressiveStageVM", "GetName");

	Params::CrewProgressiveStageVM_GetName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function CrewUI.CrewSelectionVM.ClearHoveredBenefit
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UCrewBenefitVM*                   Benefit                                                (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCrewSelectionVM::ClearHoveredBenefit(const class UCrewBenefitVM* Benefit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CrewSelectionVM", "ClearHoveredBenefit");

	Params::CrewSelectionVM_ClearHoveredBenefit Parms{};

	Parms.Benefit = Benefit;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function CrewUI.CrewSelectionVM.ClearSelectedBenefit
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UCrewBenefitVM*                   Benefit                                                (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCrewSelectionVM::ClearSelectedBenefit(const class UCrewBenefitVM* Benefit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CrewSelectionVM", "ClearSelectedBenefit");

	Params::CrewSelectionVM_ClearSelectedBenefit Parms{};

	Parms.Benefit = Benefit;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function CrewUI.CrewSelectionVM.Reset
// (Final, Native, Public, BlueprintCallable)

void UCrewSelectionVM::Reset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CrewSelectionVM", "Reset");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function CrewUI.CrewVM.GetSubscriptionError
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UCrewVM::GetSubscriptionError() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CrewVM", "GetSubscriptionError");

	Params::CrewVM_GetSubscriptionError Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function CrewUI.CrewVM.IsSubscribed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UCrewVM::IsSubscribed() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CrewVM", "IsSubscribed");

	Params::CrewVM_IsSubscribed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

