#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SparksSongPlayerRuntime

#include "Basic.hpp"

#include "SparksSongPlayerRuntime_classes.hpp"
#include "SparksSongPlayerRuntime_parameters.hpp"


namespace SDK
{

// Function SparksSongPlayerRuntime.SparksMediaStreamer.OnEndReached
// (Final, Native, Protected)

void USparksMediaStreamer::OnEndReached()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SparksMediaStreamer", "OnEndReached");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SparksSongPlayerRuntime.SparksMediaStreamer.OnSongDataDownloaded
// (Final, Native, Protected)
// Parameters:
// class UCatalogData*                     CatalogData                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSuccess                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USparksMediaStreamer::OnSongDataDownloaded(class UCatalogData* CatalogData, bool bSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SparksMediaStreamer", "OnSongDataDownloaded");

	Params::SparksMediaStreamer_OnSongDataDownloaded Parms{};

	Parms.CatalogData = CatalogData;
	Parms.bSuccess = bSuccess;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SparksSongPlayerRuntime.SparksMediaStreamer.OnVideoClosed
// (Final, Native, Protected)

void USparksMediaStreamer::OnVideoClosed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SparksMediaStreamer", "OnVideoClosed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SparksSongPlayerRuntime.SparksMediaStreamer.OnVideoError
// (Final, Native, Protected)
// Parameters:
// EBaseMediaTerminalErrorReason           Reason                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USparksMediaStreamer::OnVideoError(EBaseMediaTerminalErrorReason Reason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SparksMediaStreamer", "OnVideoError");

	Params::SparksMediaStreamer_OnVideoError Parms{};

	Parms.Reason = Reason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SparksSongPlayerRuntime.SparksMediaStreamer.OnVideoOpened
// (Final, Native, Protected)

void USparksMediaStreamer::OnVideoOpened()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SparksMediaStreamer", "OnVideoOpened");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SparksSongPlayerRuntime.SparksMediaStreamer.OnVideoOpenFailed
// (Final, Native, Protected)
// Parameters:
// class FString                           FailedURL                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USparksMediaStreamer::OnVideoOpenFailed(const class FString& FailedURL)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SparksMediaStreamer", "OnVideoOpenFailed");

	Params::SparksMediaStreamer_OnVideoOpenFailed Parms{};

	Parms.FailedURL = std::move(FailedURL);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SparksSongPlayerRuntime.SparksMediaStreamer.OnVideoOpenTimeout
// (Final, Native, Protected)

void USparksMediaStreamer::OnVideoOpenTimeout()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SparksMediaStreamer", "OnVideoOpenTimeout");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SparksSongPlayerRuntime.SparksMediaStreamer.OnVideoSuccess
// (Final, Native, Protected)

void USparksMediaStreamer::OnVideoSuccess()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SparksMediaStreamer", "OnVideoSuccess");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SparksSongPlayerRuntime.SparksSongPlayerSubsystem.OnLoadingScreenComplete
// (Final, Native, Private)

void USparksSongPlayerSubsystem::OnLoadingScreenComplete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SparksSongPlayerSubsystem", "OnLoadingScreenComplete");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SparksSongPlayerRuntime.SparksSongPlayerSubsystem.PlaySongByCatalogData
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UCatalogData*                     CatalogData                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFortMusicPlayerParams           Params_0                                               (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void USparksSongPlayerSubsystem::PlaySongByCatalogData(const class UCatalogData* CatalogData, const struct FFortMusicPlayerParams& Params_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SparksSongPlayerSubsystem", "PlaySongByCatalogData");

	Params::SparksSongPlayerSubsystem_PlaySongByCatalogData Parms{};

	Parms.CatalogData = CatalogData;
	Parms.Params_0 = std::move(Params_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SparksSongPlayerRuntime.SparksSongPlayerSubsystem.PlaySongByItemDef
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class USparksSongItemDefinition*        ItemDef                                                (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFortMusicPlayerParams           Params_0                                               (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void USparksSongPlayerSubsystem::PlaySongByItemDef(const class USparksSongItemDefinition* ItemDef, const struct FFortMusicPlayerParams& Params_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SparksSongPlayerSubsystem", "PlaySongByItemDef");

	Params::SparksSongPlayerSubsystem_PlaySongByItemDef Parms{};

	Parms.ItemDef = ItemDef;
	Parms.Params_0 = std::move(Params_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SparksSongPlayerRuntime.SparksSongPlayerSubsystem.PlaySongByShortName
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             ShortName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFortMusicPlayerParams           Params_0                                               (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void USparksSongPlayerSubsystem::PlaySongByShortName(class FName ShortName, const struct FFortMusicPlayerParams& Params_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SparksSongPlayerSubsystem", "PlaySongByShortName");

	Params::SparksSongPlayerSubsystem_PlaySongByShortName Parms{};

	Parms.ShortName = ShortName;
	Parms.Params_0 = std::move(Params_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SparksSongPlayerRuntime.SparksSongPlayerSubsystem.StopSong
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   FadeOutTimeSeconds                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bClearPendingSong                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USparksSongPlayerSubsystem::StopSong(float FadeOutTimeSeconds, bool bClearPendingSong)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SparksSongPlayerSubsystem", "StopSong");

	Params::SparksSongPlayerSubsystem_StopSong Parms{};

	Parms.FadeOutTimeSeconds = FadeOutTimeSeconds;
	Parms.bClearPendingSong = bClearPendingSong;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SparksSongPlayerRuntime.SparksSongPreviewerComponent.StartPreviewByCatalogData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UCatalogData*                     CatalogData                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USparksSongPreviewerComponent::StartPreviewByCatalogData(const class UCatalogData* CatalogData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SparksSongPreviewerComponent", "StartPreviewByCatalogData");

	Params::SparksSongPreviewerComponent_StartPreviewByCatalogData Parms{};

	Parms.CatalogData = CatalogData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SparksSongPlayerRuntime.SparksSongPreviewerComponent.StartPreviewByShortName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             ShortName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USparksSongPreviewerComponent::StartPreviewByShortName(class FName ShortName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SparksSongPreviewerComponent", "StartPreviewByShortName");

	Params::SparksSongPreviewerComponent_StartPreviewByShortName Parms{};

	Parms.ShortName = ShortName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SparksSongPlayerRuntime.SparksSongPreviewerComponent.StopCurrentPreview
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bWithFadeout                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USparksSongPreviewerComponent::StopCurrentPreview(bool bWithFadeout)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SparksSongPreviewerComponent", "StopCurrentPreview");

	Params::SparksSongPreviewerComponent_StopCurrentPreview Parms{};

	Parms.bWithFadeout = bWithFadeout;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SparksSongPlayerRuntime.SparksSongPreviewerComponent.GetCurrentPreview
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class UCatalogData*               ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UCatalogData* USparksSongPreviewerComponent::GetCurrentPreview() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SparksSongPreviewerComponent", "GetCurrentPreview");

	Params::SparksSongPreviewerComponent_GetCurrentPreview Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SparksSongPlayerRuntime.SparksSongPreviewerComponent.IsPlayingCurrentPreview
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USparksSongPreviewerComponent::IsPlayingCurrentPreview() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SparksSongPreviewerComponent", "IsPlayingCurrentPreview");

	Params::SparksSongPreviewerComponent_IsPlayingCurrentPreview Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SparksSongPlayerRuntime.SparksSongPreviewerComponent.IsPlayingPreviewForSong
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             Song                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USparksSongPreviewerComponent::IsPlayingPreviewForSong(class FName Song) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SparksSongPreviewerComponent", "IsPlayingPreviewForSong");

	Params::SparksSongPreviewerComponent_IsPlayingPreviewForSong Parms{};

	Parms.Song = Song;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

