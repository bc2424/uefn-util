#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: RandomPrefabSpawningRuntime

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "Engine_classes.hpp"
#include "GameplayAbilities_structs.hpp"
#include "RandomPrefabSpawningRuntime_structs.hpp"
#include "ModularGameplay_classes.hpp"


namespace SDK
{

// Class RandomPrefabSpawningRuntime.FortPrefabSpawner
// 0x0058 (0x0478 - 0x0420)
class AFortPrefabSpawner final : public AActor
{
public:
	uint8                                         Pad_420[0x8];                                      // 0x0420(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  RequiredProperties;                                // 0x0428(0x0020)(Edit, NativeAccessSpecifierPrivate)
	bool                                          bWorldReadyCalled;                                 // 0x0448(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_449[0x7];                                      // 0x0449(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortLevelInstancePrefab*               CurrentPreviewerActor;                             // 0x0450(0x0008)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, EditorOnly, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<TSubclassOf<class AFortLevelInstancePrefab>> CompatiblePrefabs;                                 // 0x0458(0x0010)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, EditorOnly, UObjectWrapper, NativeAccessSpecifierPrivate)
	TSubclassOf<class UFortRandomPrefabSpawnHelper> PrefabListSourceClass;                             // 0x0468(0x0008)(Edit, ZeroConstructor, EditorOnly, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         PreviewIndex;                                      // 0x0470(0x0004)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, EditorOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         LastShownPreviewIndex;                             // 0x0474(0x0004)(ZeroConstructor, Transient, IsPlainOldData, EditorOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void PreviewCompatiblePrefabs();
	void PreviewNextPrefab();
	void PreviewPreviousPrefab();
	void StopPreviewingCompatiblePrefabs();
	void UpdateShownPrefab();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortPrefabSpawner">();
	}
	static class AFortPrefabSpawner* GetDefaultObj()
	{
		return GetDefaultObjImpl<AFortPrefabSpawner>();
	}
};

// Class RandomPrefabSpawningRuntime.FortRandomPrefabSpawnHelper
// 0x0070 (0x0148 - 0x00D8)
class UFortRandomPrefabSpawnHelper final : public UGameStateComponent
{
public:
	uint8                                         Pad_D8[0x10];                                      // 0x00D8(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFortRandomPrefabData>          AllPrefabs;                                        // 0x00E8(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	TArray<struct FFortRandomPrefabData>          PrefabPool;                                        // 0x00F8(0x0010)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	uint8                                         Pad_108[0x8];                                      // 0x0108(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         bAcceptDuplicatesWhenOutOfUniquePrefabs;           // 0x0110(0x0038)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortRandomPrefabSpawnHelper">();
	}
	static class UFortRandomPrefabSpawnHelper* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortRandomPrefabSpawnHelper>();
	}
};

}

