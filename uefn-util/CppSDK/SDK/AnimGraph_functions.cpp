#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AnimGraph

#include "Basic.hpp"

#include "AnimGraph_classes.hpp"
#include "AnimGraph_parameters.hpp"


namespace SDK
{

// Function AnimGraph.AnimationGraph.GetGraphNodesOfClass
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TSubclassOf<class UAnimGraphNode_Base>  NodeClass                                              (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UAnimGraphNode_Base*>      GraphNodes                                             (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    bIncludeChildClasses                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAnimationGraph::GetGraphNodesOfClass(TSubclassOf<class UAnimGraphNode_Base> NodeClass, TArray<class UAnimGraphNode_Base*>* GraphNodes, bool bIncludeChildClasses)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AnimationGraph", "GetGraphNodesOfClass");

	Params::AnimationGraph_GetGraphNodesOfClass Parms{};

	Parms.NodeClass = NodeClass;
	Parms.bIncludeChildClasses = bIncludeChildClasses;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (GraphNodes != nullptr)
		*GraphNodes = std::move(Parms.GraphNodes);
}


// Function AnimGraph.AnimGraphNodeCustomizationInterface.GetTitleColor
// (Native, Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// struct FLinearColor                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FLinearColor IAnimGraphNodeCustomizationInterface::GetTitleColor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AnimGraphNodeCustomizationInterface", "GetTitleColor");

	Params::AnimGraphNodeCustomizationInterface_GetTitleColor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AnimGraph.AnimGraphNode_PoseDriver.CopyTargetsFromPoseAsset
// (Final, Native, Public, BlueprintCallable)

void UAnimGraphNode_PoseDriver::CopyTargetsFromPoseAsset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AnimGraphNode_PoseDriver", "CopyTargetsFromPoseAsset");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AnimGraph.AnimGraphNode_PoseDriver.GetDrivingBoneNames
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<class FName>                     BoneNames                                              (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UAnimGraphNode_PoseDriver::GetDrivingBoneNames(TArray<class FName>* BoneNames)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AnimGraphNode_PoseDriver", "GetDrivingBoneNames");

	Params::AnimGraphNode_PoseDriver_GetDrivingBoneNames Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (BoneNames != nullptr)
		*BoneNames = std::move(Parms.BoneNames);
}


// Function AnimGraph.AnimGraphNode_PoseDriver.GetPoseDriverOutput
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EPoseDriverOutput                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EPoseDriverOutput UAnimGraphNode_PoseDriver::GetPoseDriverOutput()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AnimGraphNode_PoseDriver", "GetPoseDriverOutput");

	Params::AnimGraphNode_PoseDriver_GetPoseDriverOutput Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AnimGraph.AnimGraphNode_PoseDriver.GetPoseDriverSource
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EPoseDriverSource                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EPoseDriverSource UAnimGraphNode_PoseDriver::GetPoseDriverSource()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AnimGraphNode_PoseDriver", "GetPoseDriverSource");

	Params::AnimGraphNode_PoseDriver_GetPoseDriverSource Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AnimGraph.AnimGraphNode_PoseDriver.GetRBFParameters
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FRBFParams                       ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FRBFParams UAnimGraphNode_PoseDriver::GetRBFParameters()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AnimGraphNode_PoseDriver", "GetRBFParameters");

	Params::AnimGraphNode_PoseDriver_GetRBFParameters Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AnimGraph.AnimGraphNode_PoseDriver.GetSourceBoneNames
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<class FName>                     BoneNames                                              (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UAnimGraphNode_PoseDriver::GetSourceBoneNames(TArray<class FName>* BoneNames)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AnimGraphNode_PoseDriver", "GetSourceBoneNames");

	Params::AnimGraphNode_PoseDriver_GetSourceBoneNames Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (BoneNames != nullptr)
		*BoneNames = std::move(Parms.BoneNames);
}


// Function AnimGraph.AnimGraphNode_PoseDriver.SetDrivingBones
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class FName>                     BoneNames                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UAnimGraphNode_PoseDriver::SetDrivingBones(const TArray<class FName>& BoneNames)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AnimGraphNode_PoseDriver", "SetDrivingBones");

	Params::AnimGraphNode_PoseDriver_SetDrivingBones Parms{};

	Parms.BoneNames = std::move(BoneNames);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AnimGraph.AnimGraphNode_PoseDriver.SetPoseDriverOutput
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EPoseDriverOutput                       DriverOutput                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAnimGraphNode_PoseDriver::SetPoseDriverOutput(EPoseDriverOutput DriverOutput)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AnimGraphNode_PoseDriver", "SetPoseDriverOutput");

	Params::AnimGraphNode_PoseDriver_SetPoseDriverOutput Parms{};

	Parms.DriverOutput = DriverOutput;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AnimGraph.AnimGraphNode_PoseDriver.SetPoseDriverSource
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EPoseDriverSource                       DriverSource                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAnimGraphNode_PoseDriver::SetPoseDriverSource(EPoseDriverSource DriverSource)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AnimGraphNode_PoseDriver", "SetPoseDriverSource");

	Params::AnimGraphNode_PoseDriver_SetPoseDriverSource Parms{};

	Parms.DriverSource = DriverSource;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AnimGraph.AnimGraphNode_PoseDriver.SetRBFParameters
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FRBFParams                       Parameters                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UAnimGraphNode_PoseDriver::SetRBFParameters(const struct FRBFParams& Parameters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AnimGraphNode_PoseDriver", "SetRBFParameters");

	Params::AnimGraphNode_PoseDriver_SetRBFParameters Parms{};

	Parms.Parameters = std::move(Parameters);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AnimGraph.AnimGraphNode_PoseDriver.SetSourceBones
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class FName>                     BoneNames                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UAnimGraphNode_PoseDriver::SetSourceBones(const TArray<class FName>& BoneNames)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AnimGraphNode_PoseDriver", "SetSourceBones");

	Params::AnimGraphNode_PoseDriver_SetSourceBones Parms{};

	Parms.BoneNames = std::move(BoneNames);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

