#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ModelViewViewModelEditor

#include "Basic.hpp"

#include "ModelViewViewModelEditor_classes.hpp"
#include "ModelViewViewModelEditor_parameters.hpp"


namespace SDK
{

// Function ModelViewViewModelEditor.MVVMEditorSubsystem.AddBinding
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWidgetBlueprint*                 WidgetBlueprint                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMVVMBlueprintViewBinding        ReturnValue                                            (Parm, OutParm, ReturnParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

struct FMVVMBlueprintViewBinding UMVVMEditorSubsystem::AddBinding(class UWidgetBlueprint* WidgetBlueprint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMEditorSubsystem", "AddBinding");

	Params::MVVMEditorSubsystem_AddBinding Parms{};

	Parms.WidgetBlueprint = WidgetBlueprint;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModelViewViewModelEditor.MVVMEditorSubsystem.AddEvent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWidgetBlueprint*                 WidgetBlueprint                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMVVMBlueprintViewEvent*          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMVVMBlueprintViewEvent* UMVVMEditorSubsystem::AddEvent(class UWidgetBlueprint* WidgetBlueprint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMEditorSubsystem", "AddEvent");

	Params::MVVMEditorSubsystem_AddEvent Parms{};

	Parms.WidgetBlueprint = WidgetBlueprint;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModelViewViewModelEditor.MVVMEditorSubsystem.AddInstancedViewModel
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UWidgetBlueprint*                 WidgetBlueprint                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGuid                            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGuid UMVVMEditorSubsystem::AddInstancedViewModel(class UWidgetBlueprint* WidgetBlueprint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMEditorSubsystem", "AddInstancedViewModel");

	Params::MVVMEditorSubsystem_AddInstancedViewModel Parms{};

	Parms.WidgetBlueprint = WidgetBlueprint;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModelViewViewModelEditor.MVVMEditorSubsystem.AddViewModel
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UWidgetBlueprint*                 WidgetBlueprint                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UClass*                           ViewModel                                              (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGuid                            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGuid UMVVMEditorSubsystem::AddViewModel(class UWidgetBlueprint* WidgetBlueprint, const class UClass* ViewModel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMEditorSubsystem", "AddViewModel");

	Params::MVVMEditorSubsystem_AddViewModel Parms{};

	Parms.WidgetBlueprint = WidgetBlueprint;
	Parms.ViewModel = ViewModel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModelViewViewModelEditor.MVVMEditorSubsystem.GetChildViewModels
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class UObject>              Class_0                                                (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UObject>              Accessor                                               (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FMVVMAvailableBinding>    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FMVVMAvailableBinding> UMVVMEditorSubsystem::GetChildViewModels(TSubclassOf<class UObject> Class_0, TSubclassOf<class UObject> Accessor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMEditorSubsystem", "GetChildViewModels");

	Params::MVVMEditorSubsystem_GetChildViewModels Parms{};

	Parms.Class_0 = Class_0;
	Parms.Accessor = Accessor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModelViewViewModelEditor.MVVMEditorSubsystem.RemoveBinding
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UWidgetBlueprint*                 WidgetBlueprint                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMVVMBlueprintViewBinding        Binding                                                (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UMVVMEditorSubsystem::RemoveBinding(class UWidgetBlueprint* WidgetBlueprint, const struct FMVVMBlueprintViewBinding& Binding)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMEditorSubsystem", "RemoveBinding");

	Params::MVVMEditorSubsystem_RemoveBinding Parms{};

	Parms.WidgetBlueprint = WidgetBlueprint;
	Parms.Binding = std::move(Binding);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModelViewViewModelEditor.MVVMEditorSubsystem.RemoveEvent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWidgetBlueprint*                 WidgetBlueprint                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMVVMBlueprintViewEvent*          Event                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMVVMEditorSubsystem::RemoveEvent(class UWidgetBlueprint* WidgetBlueprint, class UMVVMBlueprintViewEvent* Event)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMEditorSubsystem", "RemoveEvent");

	Params::MVVMEditorSubsystem_RemoveEvent Parms{};

	Parms.WidgetBlueprint = WidgetBlueprint;
	Parms.Event = Event;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModelViewViewModelEditor.MVVMEditorSubsystem.RemoveViewModel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWidgetBlueprint*                 WidgetBlueprint                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ViewModel                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMVVMEditorSubsystem::RemoveViewModel(class UWidgetBlueprint* WidgetBlueprint, class FName ViewModel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMEditorSubsystem", "RemoveViewModel");

	Params::MVVMEditorSubsystem_RemoveViewModel Parms{};

	Parms.WidgetBlueprint = WidgetBlueprint;
	Parms.ViewModel = ViewModel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModelViewViewModelEditor.MVVMEditorSubsystem.RenameViewModel
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UWidgetBlueprint*                 WidgetBlueprint                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ViewModel                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             NewViewModel                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             OutError                                               (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMVVMEditorSubsystem::RenameViewModel(class UWidgetBlueprint* WidgetBlueprint, class FName ViewModel, class FName NewViewModel, class FText* OutError)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMEditorSubsystem", "RenameViewModel");

	Params::MVVMEditorSubsystem_RenameViewModel Parms{};

	Parms.WidgetBlueprint = WidgetBlueprint;
	Parms.ViewModel = ViewModel;
	Parms.NewViewModel = NewViewModel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutError != nullptr)
		*OutError = std::move(Parms.OutError);

	return Parms.ReturnValue;
}


// Function ModelViewViewModelEditor.MVVMEditorSubsystem.ReparentViewModel
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UWidgetBlueprint*                 WidgetBlueprint                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ViewModel                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UClass*                           NewViewModel                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             OutError                                               (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMVVMEditorSubsystem::ReparentViewModel(class UWidgetBlueprint* WidgetBlueprint, class FName ViewModel, const class UClass* NewViewModel, class FText* OutError)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMEditorSubsystem", "ReparentViewModel");

	Params::MVVMEditorSubsystem_ReparentViewModel Parms{};

	Parms.WidgetBlueprint = WidgetBlueprint;
	Parms.ViewModel = ViewModel;
	Parms.NewViewModel = NewViewModel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutError != nullptr)
		*OutError = std::move(Parms.OutError);

	return Parms.ReturnValue;
}


// Function ModelViewViewModelEditor.MVVMEditorSubsystem.VerifyViewModelRename
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UWidgetBlueprint*                 WidgetBlueprint                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ViewModel                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             NewViewModel                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             OutError                                               (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMVVMEditorSubsystem::VerifyViewModelRename(class UWidgetBlueprint* WidgetBlueprint, class FName ViewModel, class FName NewViewModel, class FText* OutError)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMEditorSubsystem", "VerifyViewModelRename");

	Params::MVVMEditorSubsystem_VerifyViewModelRename Parms{};

	Parms.WidgetBlueprint = WidgetBlueprint;
	Parms.ViewModel = ViewModel;
	Parms.NewViewModel = NewViewModel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutError != nullptr)
		*OutError = std::move(Parms.OutError);

	return Parms.ReturnValue;
}


// Function ModelViewViewModelEditor.MVVMEditorSubsystem.GetAvailableConversionFunctions
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UWidgetBlueprint*                 WidgetBlueprint                                        (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMVVMBlueprintPropertyPath       Source                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FMVVMBlueprintPropertyPath       Destination                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<class UFunction*>                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UFunction*> UMVVMEditorSubsystem::GetAvailableConversionFunctions(const class UWidgetBlueprint* WidgetBlueprint, const struct FMVVMBlueprintPropertyPath& Source, const struct FMVVMBlueprintPropertyPath& Destination) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMEditorSubsystem", "GetAvailableConversionFunctions");

	Params::MVVMEditorSubsystem_GetAvailableConversionFunctions Parms{};

	Parms.WidgetBlueprint = WidgetBlueprint;
	Parms.Source = std::move(Source);
	Parms.Destination = std::move(Destination);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModelViewViewModelEditor.MVVMEditorSubsystem.GetConversionFunction
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UWidgetBlueprint*                 WidgetBlueprint                                        (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMVVMBlueprintViewBinding        Binding                                                (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// bool                                    bSourceToDestination                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFunction*                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFunction* UMVVMEditorSubsystem::GetConversionFunction(const class UWidgetBlueprint* WidgetBlueprint, const struct FMVVMBlueprintViewBinding& Binding, bool bSourceToDestination) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMEditorSubsystem", "GetConversionFunction");

	Params::MVVMEditorSubsystem_GetConversionFunction Parms{};

	Parms.WidgetBlueprint = WidgetBlueprint;
	Parms.Binding = std::move(Binding);
	Parms.bSourceToDestination = bSourceToDestination;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModelViewViewModelEditor.MVVMEditorSubsystem.GetConversionFunctionGraph
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UWidgetBlueprint*                 WidgetBlueprint                                        (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMVVMBlueprintViewBinding        Binding                                                (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// bool                                    bSourceToDestination                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UEdGraph*                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UEdGraph* UMVVMEditorSubsystem::GetConversionFunctionGraph(const class UWidgetBlueprint* WidgetBlueprint, const struct FMVVMBlueprintViewBinding& Binding, bool bSourceToDestination) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMEditorSubsystem", "GetConversionFunctionGraph");

	Params::MVVMEditorSubsystem_GetConversionFunctionGraph Parms{};

	Parms.WidgetBlueprint = WidgetBlueprint;
	Parms.Binding = std::move(Binding);
	Parms.bSourceToDestination = bSourceToDestination;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModelViewViewModelEditor.MVVMEditorSubsystem.GetConversionFunctionNode
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UWidgetBlueprint*                 WidgetBlueprint                                        (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMVVMBlueprintViewBinding        Binding                                                (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// bool                                    bSourceToDestination                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UK2Node_CallFunction*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UK2Node_CallFunction* UMVVMEditorSubsystem::GetConversionFunctionNode(const class UWidgetBlueprint* WidgetBlueprint, const struct FMVVMBlueprintViewBinding& Binding, bool bSourceToDestination) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMEditorSubsystem", "GetConversionFunctionNode");

	Params::MVVMEditorSubsystem_GetConversionFunctionNode Parms{};

	Parms.WidgetBlueprint = WidgetBlueprint;
	Parms.Binding = std::move(Binding);
	Parms.bSourceToDestination = bSourceToDestination;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModelViewViewModelEditor.MVVMEditorSubsystem.GetView
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UWidgetBlueprint*                 WidgetBlueprint                                        (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMVVMBlueprintView*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMVVMBlueprintView* UMVVMEditorSubsystem::GetView(const class UWidgetBlueprint* WidgetBlueprint) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMEditorSubsystem", "GetView");

	Params::MVVMEditorSubsystem_GetView Parms{};

	Parms.WidgetBlueprint = WidgetBlueprint;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModelViewViewModelEditor.MVVMEditorSubsystem.IsSimpleConversionFunction
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFunction*                        Function                                               (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMVVMEditorSubsystem::IsSimpleConversionFunction(const class UFunction* Function) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMEditorSubsystem", "IsSimpleConversionFunction");

	Params::MVVMEditorSubsystem_IsSimpleConversionFunction Parms{};

	Parms.Function = Function;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModelViewViewModelEditor.MVVMEditorSubsystem.IsValidConversionFunction
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UWidgetBlueprint*                 WidgetBlueprint                                        (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFunction*                        Function                                               (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMVVMBlueprintPropertyPath       Source                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FMVVMBlueprintPropertyPath       Destination                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMVVMEditorSubsystem::IsValidConversionFunction(const class UWidgetBlueprint* WidgetBlueprint, const class UFunction* Function, const struct FMVVMBlueprintPropertyPath& Source, const struct FMVVMBlueprintPropertyPath& Destination) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMEditorSubsystem", "IsValidConversionFunction");

	Params::MVVMEditorSubsystem_IsValidConversionFunction Parms{};

	Parms.WidgetBlueprint = WidgetBlueprint;
	Parms.Function = Function;
	Parms.Source = std::move(Source);
	Parms.Destination = std::move(Destination);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModelViewViewModelEditor.MVVMEditorSubsystem.RequestView
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UWidgetBlueprint*                 WidgetBlueprint                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMVVMBlueprintView*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMVVMBlueprintView* UMVVMEditorSubsystem::RequestView(class UWidgetBlueprint* WidgetBlueprint) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMEditorSubsystem", "RequestView");

	Params::MVVMEditorSubsystem_RequestView Parms{};

	Parms.WidgetBlueprint = WidgetBlueprint;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModelViewViewModelEditor.MVVMViewModelBindingExecTest.ConversionArrayIntToArrayStruct
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<int32>                           Values                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<struct FMVVMBindingExecTextCounter>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FMVVMBindingExecTextCounter> UMVVMViewModelBindingExecTest::ConversionArrayIntToArrayStruct(const TArray<int32>& Values)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MVVMViewModelBindingExecTest", "ConversionArrayIntToArrayStruct");

	Params::MVVMViewModelBindingExecTest_ConversionArrayIntToArrayStruct Parms{};

	Parms.Values = std::move(Values);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModelViewViewModelEditor.MVVMViewModelBindingExecTest.ConversionArrayStructToArrayInt
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FMVVMBindingExecTextCounter>Values                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UMVVMViewModelBindingExecTest::ConversionArrayStructToArrayInt(const TArray<struct FMVVMBindingExecTextCounter>& Values)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MVVMViewModelBindingExecTest", "ConversionArrayStructToArrayInt");

	Params::MVVMViewModelBindingExecTest_ConversionArrayStructToArrayInt Parms{};

	Parms.Values = std::move(Values);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModelViewViewModelEditor.MVVMViewModelBindingExecTest.ConversionConstIntToStruct
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Value                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMVVMBindingExecTextCounter      ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FMVVMBindingExecTextCounter UMVVMViewModelBindingExecTest::ConversionConstIntToStruct(const int32& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MVVMViewModelBindingExecTest", "ConversionConstIntToStruct");

	Params::MVVMViewModelBindingExecTest_ConversionConstIntToStruct Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModelViewViewModelEditor.MVVMViewModelBindingExecTest.ConversionConstStructToInt
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FMVVMBindingExecTextCounter      Value                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMVVMViewModelBindingExecTest::ConversionConstStructToInt(const struct FMVVMBindingExecTextCounter& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MVVMViewModelBindingExecTest", "ConversionConstStructToInt");

	Params::MVVMViewModelBindingExecTest_ConversionConstStructToInt Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModelViewViewModelEditor.MVVMViewModelBindingExecTest.ConversionIncDouble
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// double                                  Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UMVVMViewModelBindingExecTest::ConversionIncDouble(double Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MVVMViewModelBindingExecTest", "ConversionIncDouble");

	Params::MVVMViewModelBindingExecTest_ConversionIncDouble Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModelViewViewModelEditor.MVVMViewModelBindingExecTest.ConversionIncFloat
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UMVVMViewModelBindingExecTest::ConversionIncFloat(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MVVMViewModelBindingExecTest", "ConversionIncFloat");

	Params::MVVMViewModelBindingExecTest_ConversionIncFloat Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModelViewViewModelEditor.MVVMViewModelBindingExecTest.ConversionIntToStruct
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMVVMBindingExecTextCounter      ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FMVVMBindingExecTextCounter UMVVMViewModelBindingExecTest::ConversionIntToStruct(int32 Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MVVMViewModelBindingExecTest", "ConversionIntToStruct");

	Params::MVVMViewModelBindingExecTest_ConversionIntToStruct Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModelViewViewModelEditor.MVVMViewModelBindingExecTest.ConversionStructToInt
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FMVVMBindingExecTextCounter      Value                                                  (Parm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMVVMViewModelBindingExecTest::ConversionStructToInt(const struct FMVVMBindingExecTextCounter& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MVVMViewModelBindingExecTest", "ConversionStructToInt");

	Params::MVVMViewModelBindingExecTest_ConversionStructToInt Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModelViewViewModelEditor.MVVMViewModelBindingExecTest.SetterA
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FMVVMBindingExecTextCounter      Value                                                  (Parm, NativeAccessSpecifierPublic)

void UMVVMViewModelBindingExecTest::SetterA(const struct FMVVMBindingExecTextCounter& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMViewModelBindingExecTest", "SetterA");

	Params::MVVMViewModelBindingExecTest_SetterA Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModelViewViewModelEditor.MVVMViewModelBindingExecTest.SetterB
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<struct FMVVMBindingExecTextCounter>Value                                                  (Parm, ZeroConstructor, NativeAccessSpecifierPublic)

void UMVVMViewModelBindingExecTest::SetterB(const TArray<struct FMVVMBindingExecTextCounter>& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMViewModelBindingExecTest", "SetterB");

	Params::MVVMViewModelBindingExecTest_SetterB Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModelViewViewModelEditor.MVVMViewModelBindingExecTest.SetterC
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMVVMViewModelBindingExecTest::SetterC(int32 Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMViewModelBindingExecTest", "SetterC");

	Params::MVVMViewModelBindingExecTest_SetterC Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModelViewViewModelEditor.MVVMViewModelBindingExecTest.SetterD
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<int32>                           Value                                                  (Parm, ZeroConstructor, NativeAccessSpecifierPublic)

void UMVVMViewModelBindingExecTest::SetterD(const TArray<int32>& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMViewModelBindingExecTest", "SetterD");

	Params::MVVMViewModelBindingExecTest_SetterD Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModelViewViewModelEditor.MVVMViewModelBindingExecTest.SetterDouble
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// double                                  Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMVVMViewModelBindingExecTest::SetterDouble(double Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMViewModelBindingExecTest", "SetterDouble");

	Params::MVVMViewModelBindingExecTest_SetterDouble Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModelViewViewModelEditor.MVVMViewModelBindingExecTest.SetterFloat
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMVVMViewModelBindingExecTest::SetterFloat(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMViewModelBindingExecTest", "SetterFloat");

	Params::MVVMViewModelBindingExecTest_SetterFloat Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModelViewViewModelEditor.MVVMViewModelBindingExecTest.GetterA
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FMVVMBindingExecTextCounter      ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FMVVMBindingExecTextCounter UMVVMViewModelBindingExecTest::GetterA() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMViewModelBindingExecTest", "GetterA");

	Params::MVVMViewModelBindingExecTest_GetterA Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModelViewViewModelEditor.MVVMViewModelBindingExecTest.GetterB
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct FMVVMBindingExecTextCounter>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FMVVMBindingExecTextCounter> UMVVMViewModelBindingExecTest::GetterB() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMViewModelBindingExecTest", "GetterB");

	Params::MVVMViewModelBindingExecTest_GetterB Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModelViewViewModelEditor.MVVMViewModelBindingExecTest.GetterC
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMVVMViewModelBindingExecTest::GetterC() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMViewModelBindingExecTest", "GetterC");

	Params::MVVMViewModelBindingExecTest_GetterC Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModelViewViewModelEditor.MVVMViewModelBindingExecTest.GetterD
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UMVVMViewModelBindingExecTest::GetterD() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMViewModelBindingExecTest", "GetterD");

	Params::MVVMViewModelBindingExecTest_GetterD Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModelViewViewModelEditor.MVVMViewModelBindingExecTest.GetterDouble
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// double                                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

double UMVVMViewModelBindingExecTest::GetterDouble() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMViewModelBindingExecTest", "GetterDouble");

	Params::MVVMViewModelBindingExecTest_GetterDouble Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModelViewViewModelEditor.MVVMViewModelBindingExecTest.GetterFloat
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UMVVMViewModelBindingExecTest::GetterFloat() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMViewModelBindingExecTest", "GetterFloat");

	Params::MVVMViewModelBindingExecTest_GetterFloat Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModelViewViewModelEditor.MVVMViewModelBindingHelperTest.FunctionConversionA
// (Final, Native, Static, Public, BlueprintCallable)

void UMVVMViewModelBindingHelperTest::FunctionConversionA()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MVVMViewModelBindingHelperTest", "FunctionConversionA");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModelViewViewModelEditor.MVVMViewModelBindingHelperTest.FunctionConversionB
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMVVMViewModelBindingHelperTest::FunctionConversionB()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MVVMViewModelBindingHelperTest", "FunctionConversionB");

	Params::MVVMViewModelBindingHelperTest_FunctionConversionB Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModelViewViewModelEditor.MVVMViewModelBindingHelperTest.FunctionConversionC
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   Param1                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMVVMViewModelBindingHelperTest::FunctionConversionC(int32 Param1)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MVVMViewModelBindingHelperTest", "FunctionConversionC");

	Params::MVVMViewModelBindingHelperTest_FunctionConversionC Parms{};

	Parms.Param1 = Param1;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModelViewViewModelEditor.MVVMViewModelBindingHelperTest.FunctionConversionD
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   Param1                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Param2                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMVVMViewModelBindingHelperTest::FunctionConversionD(int32 Param1, int32 Param2)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MVVMViewModelBindingHelperTest", "FunctionConversionD");

	Params::MVVMViewModelBindingHelperTest_FunctionConversionD Parms{};

	Parms.Param1 = Param1;
	Parms.Param2 = Param2;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModelViewViewModelEditor.MVVMViewModelBindingHelperTest.FunctionConversionE
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   Param1                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMVVMViewModelBindingHelperTest::FunctionConversionE(int32 Param1)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MVVMViewModelBindingHelperTest", "FunctionConversionE");

	Params::MVVMViewModelBindingHelperTest_FunctionConversionE Parms{};

	Parms.Param1 = Param1;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModelViewViewModelEditor.MVVMViewModelBindingHelperTest.FunctionConversionF
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   Param1                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Param2                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMVVMViewModelBindingHelperTest::FunctionConversionF(int32 Param1, int32 Param2)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MVVMViewModelBindingHelperTest", "FunctionConversionF");

	Params::MVVMViewModelBindingHelperTest_FunctionConversionF Parms{};

	Parms.Param1 = Param1;
	Parms.Param2 = Param2;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModelViewViewModelEditor.MVVMViewModelBindingHelperTest.FunctionConversionG
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<int32>                           Param1                                                 (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// TSet<int32>                             Param2                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UMVVMViewModelBindingHelperTest::FunctionConversionG(TArray<int32>* Param1, const TSet<int32>& Param2)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MVVMViewModelBindingHelperTest", "FunctionConversionG");

	Params::MVVMViewModelBindingHelperTest_FunctionConversionG Parms{};

	Parms.Param2 = std::move(Param2);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Param1 != nullptr)
		*Param1 = std::move(Parms.Param1);
}


// Function ModelViewViewModelEditor.MVVMViewModelBindingHelperTest.FunctionConversionH
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TSet<int32>                             Param1                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UMVVMViewModelBindingHelperTest::FunctionConversionH(const TSet<int32>& Param1)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MVVMViewModelBindingHelperTest", "FunctionConversionH");

	Params::MVVMViewModelBindingHelperTest_FunctionConversionH Parms{};

	Parms.Param1 = std::move(Param1);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModelViewViewModelEditor.MVVMViewModelBindingHelperTest.FunctionConversionI
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TSet<int32>                             Param1                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TMap<int32, int32>                      Param2                                                 (Parm, OutParm, NativeAccessSpecifierPublic)
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UMVVMViewModelBindingHelperTest::FunctionConversionI(const TSet<int32>& Param1, TMap<int32, int32>* Param2)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MVVMViewModelBindingHelperTest", "FunctionConversionI");

	Params::MVVMViewModelBindingHelperTest_FunctionConversionI Parms{};

	Parms.Param1 = std::move(Param1);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Param2 != nullptr)
		*Param2 = std::move(Parms.Param2);

	return Parms.ReturnValue;
}


// Function ModelViewViewModelEditor.MVVMViewModelBindingHelperTest.FunctionConversionJ
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TSet<int32>                             Param1                                                 (Parm, OutParm, NativeAccessSpecifierPublic)
// TMap<int32, int32>                      Param2                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UMVVMViewModelBindingHelperTest::FunctionConversionJ(TSet<int32>* Param1, const TMap<int32, int32>& Param2)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MVVMViewModelBindingHelperTest", "FunctionConversionJ");

	Params::MVVMViewModelBindingHelperTest_FunctionConversionJ Parms{};

	Parms.Param2 = std::move(Param2);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Param1 != nullptr)
		*Param1 = std::move(Parms.Param1);

	return Parms.ReturnValue;
}


// Function ModelViewViewModelEditor.MVVMViewModelBindingHelperTest.FunctionGetB
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMVVMViewModelBindingHelperTest::FunctionGetB()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMViewModelBindingHelperTest", "FunctionGetB");

	Params::MVVMViewModelBindingHelperTest_FunctionGetB Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModelViewViewModelEditor.MVVMViewModelBindingHelperTest.FunctionSetA
// (Final, Native, Public)
// Parameters:
// int32                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMVVMViewModelBindingHelperTest::FunctionSetA(int32 Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMViewModelBindingHelperTest", "FunctionSetA");

	Params::MVVMViewModelBindingHelperTest_FunctionSetA Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModelViewViewModelEditor.MVVMViewModelBindingHelperTest.FunctionSetB
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMVVMViewModelBindingHelperTest::FunctionSetB(int32 Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMViewModelBindingHelperTest", "FunctionSetB");

	Params::MVVMViewModelBindingHelperTest_FunctionSetB Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModelViewViewModelEditor.MVVMViewModelBindingHelperTest.FunctionSetC
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Param1                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMVVMViewModelBindingHelperTest::FunctionSetC(int32 Param1)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMViewModelBindingHelperTest", "FunctionSetC");

	Params::MVVMViewModelBindingHelperTest_FunctionSetC Parms{};

	Parms.Param1 = Param1;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModelViewViewModelEditor.MVVMViewModelBindingHelperTest.FunctionSetF
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<int32>                           Param1                                                 (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UMVVMViewModelBindingHelperTest::FunctionSetF(TArray<int32>* Param1)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMViewModelBindingHelperTest", "FunctionSetF");

	Params::MVVMViewModelBindingHelperTest_FunctionSetF Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Param1 != nullptr)
		*Param1 = std::move(Parms.Param1);
}


// Function ModelViewViewModelEditor.MVVMViewModelBindingHelperTest.FunctionSetG
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<int32>                           Param1                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UMVVMViewModelBindingHelperTest::FunctionSetG(const TArray<int32>& Param1)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMViewModelBindingHelperTest", "FunctionSetG");

	Params::MVVMViewModelBindingHelperTest_FunctionSetG Parms{};

	Parms.Param1 = std::move(Param1);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModelViewViewModelEditor.MVVMViewModelBindingHelperTest.FunctionSetH
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<int32>                           Param1                                                 (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<int32>                           Param2                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UMVVMViewModelBindingHelperTest::FunctionSetH(TArray<int32>* Param1, const TArray<int32>& Param2)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMViewModelBindingHelperTest", "FunctionSetH");

	Params::MVVMViewModelBindingHelperTest_FunctionSetH Parms{};

	Parms.Param2 = std::move(Param2);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Param1 != nullptr)
		*Param1 = std::move(Parms.Param1);
}


// Function ModelViewViewModelEditor.MVVMViewModelBindingHelperTest.FunctionSetProtected
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// int32                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMVVMViewModelBindingHelperTest::FunctionSetProtected(int32 Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMViewModelBindingHelperTest", "FunctionSetProtected");

	Params::MVVMViewModelBindingHelperTest_FunctionSetProtected Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModelViewViewModelEditor.MVVMViewModelBindingHelperTest.FunctionSetter
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// int32                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMVVMViewModelBindingHelperTest::FunctionSetter(int32 Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMViewModelBindingHelperTest", "FunctionSetter");

	Params::MVVMViewModelBindingHelperTest_FunctionSetter Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModelViewViewModelEditor.MVVMViewModelBindingHelperTest.FunctionGetA
// (Final, Native, Public, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMVVMViewModelBindingHelperTest::FunctionGetA() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMViewModelBindingHelperTest", "FunctionGetA");

	Params::MVVMViewModelBindingHelperTest_FunctionGetA Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModelViewViewModelEditor.MVVMViewModelBindingHelperTest.FunctionGetC
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMVVMViewModelBindingHelperTest::FunctionGetC() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMViewModelBindingHelperTest", "FunctionGetC");

	Params::MVVMViewModelBindingHelperTest_FunctionGetC Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModelViewViewModelEditor.MVVMViewModelBindingHelperTest.FunctionGetD
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   Param1                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMVVMViewModelBindingHelperTest::FunctionGetD(int32 Param1) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMViewModelBindingHelperTest", "FunctionGetD");

	Params::MVVMViewModelBindingHelperTest_FunctionGetD Parms{};

	Parms.Param1 = Param1;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModelViewViewModelEditor.MVVMViewModelBindingHelperTest.FunctionGetE
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   Param1                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Param2                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMVVMViewModelBindingHelperTest::FunctionGetE(int32 Param1, int32 Param2) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMViewModelBindingHelperTest", "FunctionGetE");

	Params::MVVMViewModelBindingHelperTest_FunctionGetE Parms{};

	Parms.Param1 = Param1;
	Parms.Param2 = Param2;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModelViewViewModelEditor.MVVMViewModelBindingHelperTest.FunctionGetF
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UMVVMViewModelBindingHelperTest::FunctionGetF() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMViewModelBindingHelperTest", "FunctionGetF");

	Params::MVVMViewModelBindingHelperTest_FunctionGetF Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModelViewViewModelEditor.MVVMViewModelBindingHelperTest.FunctionGetG
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<int32>                           Result                                                 (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UMVVMViewModelBindingHelperTest::FunctionGetG(TArray<int32>* Result) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMViewModelBindingHelperTest", "FunctionGetG");

	Params::MVVMViewModelBindingHelperTest_FunctionGetG Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = std::move(Parms.Result);
}


// Function ModelViewViewModelEditor.MVVMViewModelBindingHelperTest.FunctionGetH
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<int32>                           Result                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UMVVMViewModelBindingHelperTest::FunctionGetH(const TArray<int32>& Result) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMViewModelBindingHelperTest", "FunctionGetH");

	Params::MVVMViewModelBindingHelperTest_FunctionGetH Parms{};

	Parms.Result = std::move(Result);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModelViewViewModelEditor.MVVMViewModelBindingHelperTest.FunctionGetI
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<int32>                           Result                                                 (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UMVVMViewModelBindingHelperTest::FunctionGetI(TArray<int32>* Result) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMViewModelBindingHelperTest", "FunctionGetI");

	Params::MVVMViewModelBindingHelperTest_FunctionGetI Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = std::move(Parms.Result);

	return Parms.ReturnValue;
}


// Function ModelViewViewModelEditor.MVVMViewModelBindingHelperTest.FunctionGetJ
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<int32>                           Result                                                 (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<int32>                           Value                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UMVVMViewModelBindingHelperTest::FunctionGetJ(TArray<int32>* Result, const TArray<int32>& Value) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMViewModelBindingHelperTest", "FunctionGetJ");

	Params::MVVMViewModelBindingHelperTest_FunctionGetJ Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = std::move(Parms.Result);
}


// Function ModelViewViewModelEditor.MVVMViewModelBindingHelperTest.FunctionGetProtected
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMVVMViewModelBindingHelperTest::FunctionGetProtected() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMViewModelBindingHelperTest", "FunctionGetProtected");

	Params::MVVMViewModelBindingHelperTest_FunctionGetProtected Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModelViewViewModelEditor.MVVMViewModelBindingHelperTest.FunctionGetter
// (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMVVMViewModelBindingHelperTest::FunctionGetter() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMViewModelBindingHelperTest", "FunctionGetter");

	Params::MVVMViewModelBindingHelperTest_FunctionGetter Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModelViewViewModelEditor.MVVMViewModelBindingHelperTest.FunctionSetD
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// int32                                   Param1                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMVVMViewModelBindingHelperTest::FunctionSetD(int32 Param1) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMViewModelBindingHelperTest", "FunctionSetD");

	Params::MVVMViewModelBindingHelperTest_FunctionSetD Parms{};

	Parms.Param1 = Param1;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModelViewViewModelEditor.MVVMViewModelBindingHelperTest.FunctionSetE
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// int32                                   Param1                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Param2                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMVVMViewModelBindingHelperTest::FunctionSetE(int32 Param1, int32 Param2) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMViewModelBindingHelperTest", "FunctionSetE");

	Params::MVVMViewModelBindingHelperTest_FunctionSetE Parms{};

	Parms.Param1 = Param1;
	Parms.Param2 = Param2;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModelViewViewModelEditor.MVVMObjectFieldPathHelperTest.SetPropertyInt
// (Final, Native, Public)
// Parameters:
// int32                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMVVMObjectFieldPathHelperTest::SetPropertyInt(int32 Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMObjectFieldPathHelperTest", "SetPropertyInt");

	Params::MVVMObjectFieldPathHelperTest_SetPropertyInt Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModelViewViewModelEditor.MVVMObjectFieldPathHelperTest.SetPropertyIntWithBPGetterSetter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMVVMObjectFieldPathHelperTest::SetPropertyIntWithBPGetterSetter(int32 Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMObjectFieldPathHelperTest", "SetPropertyIntWithBPGetterSetter");

	Params::MVVMObjectFieldPathHelperTest_SetPropertyIntWithBPGetterSetter Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModelViewViewModelEditor.MVVMObjectFieldPathHelperTest.SetPropertyIntWithGetterSetter
// (Final, Native, Public)
// Parameters:
// int32                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMVVMObjectFieldPathHelperTest::SetPropertyIntWithGetterSetter(int32 Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMObjectFieldPathHelperTest", "SetPropertyIntWithGetterSetter");

	Params::MVVMObjectFieldPathHelperTest_SetPropertyIntWithGetterSetter Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModelViewViewModelEditor.MVVMObjectFieldPathHelperTest.SetPropertyIntWithGetterSetterAndBP
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMVVMObjectFieldPathHelperTest::SetPropertyIntWithGetterSetterAndBP(int32 Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMObjectFieldPathHelperTest", "SetPropertyIntWithGetterSetterAndBP");

	Params::MVVMObjectFieldPathHelperTest_SetPropertyIntWithGetterSetterAndBP Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModelViewViewModelEditor.MVVMObjectFieldPathHelperTest.SetPropertyObject
// (Final, Native, Public)
// Parameters:
// class UMVVMObjectFieldPathHelperTest*   Value                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMVVMObjectFieldPathHelperTest::SetPropertyObject(class UMVVMObjectFieldPathHelperTest* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMObjectFieldPathHelperTest", "SetPropertyObject");

	Params::MVVMObjectFieldPathHelperTest_SetPropertyObject Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModelViewViewModelEditor.MVVMObjectFieldPathHelperTest.SetPropertyObjectWithBPGetterSetter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UMVVMObjectFieldPathHelperTest*   Value                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMVVMObjectFieldPathHelperTest::SetPropertyObjectWithBPGetterSetter(class UMVVMObjectFieldPathHelperTest* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMObjectFieldPathHelperTest", "SetPropertyObjectWithBPGetterSetter");

	Params::MVVMObjectFieldPathHelperTest_SetPropertyObjectWithBPGetterSetter Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModelViewViewModelEditor.MVVMObjectFieldPathHelperTest.SetPropertyObjectWithGetterSetter
// (Final, Native, Public)
// Parameters:
// class UMVVMObjectFieldPathHelperTest*   Value                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMVVMObjectFieldPathHelperTest::SetPropertyObjectWithGetterSetter(class UMVVMObjectFieldPathHelperTest* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMObjectFieldPathHelperTest", "SetPropertyObjectWithGetterSetter");

	Params::MVVMObjectFieldPathHelperTest_SetPropertyObjectWithGetterSetter Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModelViewViewModelEditor.MVVMObjectFieldPathHelperTest.SetPropertyObjectWithGetterSetterAndBP
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UMVVMObjectFieldPathHelperTest*   Value                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMVVMObjectFieldPathHelperTest::SetPropertyObjectWithGetterSetterAndBP(class UMVVMObjectFieldPathHelperTest* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMObjectFieldPathHelperTest", "SetPropertyObjectWithGetterSetterAndBP");

	Params::MVVMObjectFieldPathHelperTest_SetPropertyObjectWithGetterSetterAndBP Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModelViewViewModelEditor.MVVMObjectFieldPathHelperTest.SetPropertyStruct
// (Final, Native, Public)
// Parameters:
// struct FMVVMStructFieldPathHelperTest   Value                                                  (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UMVVMObjectFieldPathHelperTest::SetPropertyStruct(const struct FMVVMStructFieldPathHelperTest& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMObjectFieldPathHelperTest", "SetPropertyStruct");

	Params::MVVMObjectFieldPathHelperTest_SetPropertyStruct Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModelViewViewModelEditor.MVVMObjectFieldPathHelperTest.SetPropertyStructWithBPGetterSetter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FMVVMStructFieldPathHelperTest   Value                                                  (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UMVVMObjectFieldPathHelperTest::SetPropertyStructWithBPGetterSetter(const struct FMVVMStructFieldPathHelperTest& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMObjectFieldPathHelperTest", "SetPropertyStructWithBPGetterSetter");

	Params::MVVMObjectFieldPathHelperTest_SetPropertyStructWithBPGetterSetter Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModelViewViewModelEditor.MVVMObjectFieldPathHelperTest.SetPropertyStructWithGetterSetter
// (Final, Native, Public)
// Parameters:
// struct FMVVMStructFieldPathHelperTest   Value                                                  (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UMVVMObjectFieldPathHelperTest::SetPropertyStructWithGetterSetter(const struct FMVVMStructFieldPathHelperTest& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMObjectFieldPathHelperTest", "SetPropertyStructWithGetterSetter");

	Params::MVVMObjectFieldPathHelperTest_SetPropertyStructWithGetterSetter Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModelViewViewModelEditor.MVVMObjectFieldPathHelperTest.SetPropertyStructWithGetterSetterAndBP
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FMVVMStructFieldPathHelperTest   Value                                                  (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UMVVMObjectFieldPathHelperTest::SetPropertyStructWithGetterSetterAndBP(const struct FMVVMStructFieldPathHelperTest& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMObjectFieldPathHelperTest", "SetPropertyStructWithGetterSetterAndBP");

	Params::MVVMObjectFieldPathHelperTest_SetPropertyStructWithGetterSetterAndBP Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModelViewViewModelEditor.MVVMObjectFieldPathHelperTest.SetPropertyVector
// (Final, Native, Public, HasDefaults)
// Parameters:
// struct FVector                          Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMVVMObjectFieldPathHelperTest::SetPropertyVector(const struct FVector& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMObjectFieldPathHelperTest", "SetPropertyVector");

	Params::MVVMObjectFieldPathHelperTest_SetPropertyVector Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModelViewViewModelEditor.MVVMObjectFieldPathHelperTest.SetPropertyVectorWithBPGetterSetter
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMVVMObjectFieldPathHelperTest::SetPropertyVectorWithBPGetterSetter(const struct FVector& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMObjectFieldPathHelperTest", "SetPropertyVectorWithBPGetterSetter");

	Params::MVVMObjectFieldPathHelperTest_SetPropertyVectorWithBPGetterSetter Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModelViewViewModelEditor.MVVMObjectFieldPathHelperTest.SetPropertyVectorWithGetterSetter
// (Final, Native, Public, HasDefaults)
// Parameters:
// struct FVector                          Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMVVMObjectFieldPathHelperTest::SetPropertyVectorWithGetterSetter(const struct FVector& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMObjectFieldPathHelperTest", "SetPropertyVectorWithGetterSetter");

	Params::MVVMObjectFieldPathHelperTest_SetPropertyVectorWithGetterSetter Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModelViewViewModelEditor.MVVMObjectFieldPathHelperTest.SetPropertyVectorWithGetterSetterAndBP
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMVVMObjectFieldPathHelperTest::SetPropertyVectorWithGetterSetterAndBP(const struct FVector& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMObjectFieldPathHelperTest", "SetPropertyVectorWithGetterSetterAndBP");

	Params::MVVMObjectFieldPathHelperTest_SetPropertyVectorWithGetterSetterAndBP Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModelViewViewModelEditor.MVVMObjectFieldPathHelperTest.SetPropertyViewModel
// (Final, Native, Public)
// Parameters:
// class UMVVMViewModelFieldPathHelperTest*Value                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMVVMObjectFieldPathHelperTest::SetPropertyViewModel(class UMVVMViewModelFieldPathHelperTest* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMObjectFieldPathHelperTest", "SetPropertyViewModel");

	Params::MVVMObjectFieldPathHelperTest_SetPropertyViewModel Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModelViewViewModelEditor.MVVMObjectFieldPathHelperTest.SetPropertyViewModelWithBPGetterSetter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UMVVMViewModelFieldPathHelperTest*Value                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMVVMObjectFieldPathHelperTest::SetPropertyViewModelWithBPGetterSetter(class UMVVMViewModelFieldPathHelperTest* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMObjectFieldPathHelperTest", "SetPropertyViewModelWithBPGetterSetter");

	Params::MVVMObjectFieldPathHelperTest_SetPropertyViewModelWithBPGetterSetter Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModelViewViewModelEditor.MVVMObjectFieldPathHelperTest.SetPropertyViewModelWithGetterSetter
// (Final, Native, Public)
// Parameters:
// class UMVVMViewModelFieldPathHelperTest*Value                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMVVMObjectFieldPathHelperTest::SetPropertyViewModelWithGetterSetter(class UMVVMViewModelFieldPathHelperTest* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMObjectFieldPathHelperTest", "SetPropertyViewModelWithGetterSetter");

	Params::MVVMObjectFieldPathHelperTest_SetPropertyViewModelWithGetterSetter Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModelViewViewModelEditor.MVVMObjectFieldPathHelperTest.SetPropertyViewModelWithGetterSetterAndBP
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UMVVMViewModelFieldPathHelperTest*Value                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMVVMObjectFieldPathHelperTest::SetPropertyViewModelWithGetterSetterAndBP(class UMVVMViewModelFieldPathHelperTest* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMObjectFieldPathHelperTest", "SetPropertyViewModelWithGetterSetterAndBP");

	Params::MVVMObjectFieldPathHelperTest_SetPropertyViewModelWithGetterSetterAndBP Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModelViewViewModelEditor.MVVMObjectFieldPathHelperTest.GetPropertyInt
// (Final, Native, Public, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMVVMObjectFieldPathHelperTest::GetPropertyInt() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMObjectFieldPathHelperTest", "GetPropertyInt");

	Params::MVVMObjectFieldPathHelperTest_GetPropertyInt Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModelViewViewModelEditor.MVVMObjectFieldPathHelperTest.GetPropertyIntWithBPGetterSetter
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMVVMObjectFieldPathHelperTest::GetPropertyIntWithBPGetterSetter() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMObjectFieldPathHelperTest", "GetPropertyIntWithBPGetterSetter");

	Params::MVVMObjectFieldPathHelperTest_GetPropertyIntWithBPGetterSetter Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModelViewViewModelEditor.MVVMObjectFieldPathHelperTest.GetPropertyIntWithGetterSetter
// (Final, Native, Public, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMVVMObjectFieldPathHelperTest::GetPropertyIntWithGetterSetter() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMObjectFieldPathHelperTest", "GetPropertyIntWithGetterSetter");

	Params::MVVMObjectFieldPathHelperTest_GetPropertyIntWithGetterSetter Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModelViewViewModelEditor.MVVMObjectFieldPathHelperTest.GetPropertyIntWithGetterSetterAndBP
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMVVMObjectFieldPathHelperTest::GetPropertyIntWithGetterSetterAndBP() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMObjectFieldPathHelperTest", "GetPropertyIntWithGetterSetterAndBP");

	Params::MVVMObjectFieldPathHelperTest_GetPropertyIntWithGetterSetterAndBP Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModelViewViewModelEditor.MVVMObjectFieldPathHelperTest.GetPropertyObject
// (Final, Native, Public, Const)
// Parameters:
// class UMVVMObjectFieldPathHelperTest*   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMVVMObjectFieldPathHelperTest* UMVVMObjectFieldPathHelperTest::GetPropertyObject() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMObjectFieldPathHelperTest", "GetPropertyObject");

	Params::MVVMObjectFieldPathHelperTest_GetPropertyObject Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModelViewViewModelEditor.MVVMObjectFieldPathHelperTest.GetPropertyObjectWithBPGetterSetter
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UMVVMObjectFieldPathHelperTest*   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMVVMObjectFieldPathHelperTest* UMVVMObjectFieldPathHelperTest::GetPropertyObjectWithBPGetterSetter() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMObjectFieldPathHelperTest", "GetPropertyObjectWithBPGetterSetter");

	Params::MVVMObjectFieldPathHelperTest_GetPropertyObjectWithBPGetterSetter Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModelViewViewModelEditor.MVVMObjectFieldPathHelperTest.GetPropertyObjectWithGetterSetter
// (Final, Native, Public, Const)
// Parameters:
// class UMVVMObjectFieldPathHelperTest*   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMVVMObjectFieldPathHelperTest* UMVVMObjectFieldPathHelperTest::GetPropertyObjectWithGetterSetter() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMObjectFieldPathHelperTest", "GetPropertyObjectWithGetterSetter");

	Params::MVVMObjectFieldPathHelperTest_GetPropertyObjectWithGetterSetter Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModelViewViewModelEditor.MVVMObjectFieldPathHelperTest.GetPropertyObjectWithGetterSetterAndBP
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UMVVMObjectFieldPathHelperTest*   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMVVMObjectFieldPathHelperTest* UMVVMObjectFieldPathHelperTest::GetPropertyObjectWithGetterSetterAndBP() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMObjectFieldPathHelperTest", "GetPropertyObjectWithGetterSetterAndBP");

	Params::MVVMObjectFieldPathHelperTest_GetPropertyObjectWithGetterSetterAndBP Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModelViewViewModelEditor.MVVMObjectFieldPathHelperTest.GetPropertyStruct
// (Final, Native, Public, Const)
// Parameters:
// struct FMVVMStructFieldPathHelperTest   ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FMVVMStructFieldPathHelperTest UMVVMObjectFieldPathHelperTest::GetPropertyStruct() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMObjectFieldPathHelperTest", "GetPropertyStruct");

	Params::MVVMObjectFieldPathHelperTest_GetPropertyStruct Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModelViewViewModelEditor.MVVMObjectFieldPathHelperTest.GetPropertyStructWithBPGetterSetter
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FMVVMStructFieldPathHelperTest   ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FMVVMStructFieldPathHelperTest UMVVMObjectFieldPathHelperTest::GetPropertyStructWithBPGetterSetter() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMObjectFieldPathHelperTest", "GetPropertyStructWithBPGetterSetter");

	Params::MVVMObjectFieldPathHelperTest_GetPropertyStructWithBPGetterSetter Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModelViewViewModelEditor.MVVMObjectFieldPathHelperTest.GetPropertyStructWithGetterSetter
// (Final, Native, Public, Const)
// Parameters:
// struct FMVVMStructFieldPathHelperTest   ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FMVVMStructFieldPathHelperTest UMVVMObjectFieldPathHelperTest::GetPropertyStructWithGetterSetter() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMObjectFieldPathHelperTest", "GetPropertyStructWithGetterSetter");

	Params::MVVMObjectFieldPathHelperTest_GetPropertyStructWithGetterSetter Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModelViewViewModelEditor.MVVMObjectFieldPathHelperTest.GetPropertyStructWithGetterSetterAndBP
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FMVVMStructFieldPathHelperTest   ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FMVVMStructFieldPathHelperTest UMVVMObjectFieldPathHelperTest::GetPropertyStructWithGetterSetterAndBP() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMObjectFieldPathHelperTest", "GetPropertyStructWithGetterSetterAndBP");

	Params::MVVMObjectFieldPathHelperTest_GetPropertyStructWithGetterSetterAndBP Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModelViewViewModelEditor.MVVMObjectFieldPathHelperTest.GetPropertyVector
// (Final, Native, Public, HasDefaults, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UMVVMObjectFieldPathHelperTest::GetPropertyVector() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMObjectFieldPathHelperTest", "GetPropertyVector");

	Params::MVVMObjectFieldPathHelperTest_GetPropertyVector Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModelViewViewModelEditor.MVVMObjectFieldPathHelperTest.GetPropertyVectorWithBPGetterSetter
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UMVVMObjectFieldPathHelperTest::GetPropertyVectorWithBPGetterSetter() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMObjectFieldPathHelperTest", "GetPropertyVectorWithBPGetterSetter");

	Params::MVVMObjectFieldPathHelperTest_GetPropertyVectorWithBPGetterSetter Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModelViewViewModelEditor.MVVMObjectFieldPathHelperTest.GetPropertyVectorWithGetterSetter
// (Final, Native, Public, HasDefaults, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UMVVMObjectFieldPathHelperTest::GetPropertyVectorWithGetterSetter() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMObjectFieldPathHelperTest", "GetPropertyVectorWithGetterSetter");

	Params::MVVMObjectFieldPathHelperTest_GetPropertyVectorWithGetterSetter Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModelViewViewModelEditor.MVVMObjectFieldPathHelperTest.GetPropertyVectorWithGetterSetterAndBP
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UMVVMObjectFieldPathHelperTest::GetPropertyVectorWithGetterSetterAndBP() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMObjectFieldPathHelperTest", "GetPropertyVectorWithGetterSetterAndBP");

	Params::MVVMObjectFieldPathHelperTest_GetPropertyVectorWithGetterSetterAndBP Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModelViewViewModelEditor.MVVMObjectFieldPathHelperTest.GetPropertyViewModel
// (Final, Native, Public, Const)
// Parameters:
// class UMVVMViewModelFieldPathHelperTest*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMVVMViewModelFieldPathHelperTest* UMVVMObjectFieldPathHelperTest::GetPropertyViewModel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMObjectFieldPathHelperTest", "GetPropertyViewModel");

	Params::MVVMObjectFieldPathHelperTest_GetPropertyViewModel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModelViewViewModelEditor.MVVMObjectFieldPathHelperTest.GetPropertyViewModelWithBPGetterSetter
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UMVVMViewModelFieldPathHelperTest*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMVVMViewModelFieldPathHelperTest* UMVVMObjectFieldPathHelperTest::GetPropertyViewModelWithBPGetterSetter() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMObjectFieldPathHelperTest", "GetPropertyViewModelWithBPGetterSetter");

	Params::MVVMObjectFieldPathHelperTest_GetPropertyViewModelWithBPGetterSetter Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModelViewViewModelEditor.MVVMObjectFieldPathHelperTest.GetPropertyViewModelWithGetterSetter
// (Final, Native, Public, Const)
// Parameters:
// class UMVVMViewModelFieldPathHelperTest*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMVVMViewModelFieldPathHelperTest* UMVVMObjectFieldPathHelperTest::GetPropertyViewModelWithGetterSetter() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMObjectFieldPathHelperTest", "GetPropertyViewModelWithGetterSetter");

	Params::MVVMObjectFieldPathHelperTest_GetPropertyViewModelWithGetterSetter Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModelViewViewModelEditor.MVVMObjectFieldPathHelperTest.GetPropertyViewModelWithGetterSetterAndBP
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UMVVMViewModelFieldPathHelperTest*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMVVMViewModelFieldPathHelperTest* UMVVMObjectFieldPathHelperTest::GetPropertyViewModelWithGetterSetterAndBP() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMObjectFieldPathHelperTest", "GetPropertyViewModelWithGetterSetterAndBP");

	Params::MVVMObjectFieldPathHelperTest_GetPropertyViewModelWithGetterSetterAndBP Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModelViewViewModelEditor.MVVMViewModelFieldPathHelperTest.SetPropertyIntNotify
// (Final, Native, Public)
// Parameters:
// int32                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMVVMViewModelFieldPathHelperTest::SetPropertyIntNotify(int32 Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMViewModelFieldPathHelperTest", "SetPropertyIntNotify");

	Params::MVVMViewModelFieldPathHelperTest_SetPropertyIntNotify Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModelViewViewModelEditor.MVVMViewModelFieldPathHelperTest.SetPropertyObjectNotify
// (Final, Native, Public)
// Parameters:
// class UMVVMObjectFieldPathHelperTest*   Value                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMVVMViewModelFieldPathHelperTest::SetPropertyObjectNotify(class UMVVMObjectFieldPathHelperTest* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMViewModelFieldPathHelperTest", "SetPropertyObjectNotify");

	Params::MVVMViewModelFieldPathHelperTest_SetPropertyObjectNotify Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModelViewViewModelEditor.MVVMViewModelFieldPathHelperTest.SetPropertyStructNotify
// (Final, Native, Public)
// Parameters:
// struct FMVVMStructFieldPathHelperTest   Value                                                  (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UMVVMViewModelFieldPathHelperTest::SetPropertyStructNotify(const struct FMVVMStructFieldPathHelperTest& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMViewModelFieldPathHelperTest", "SetPropertyStructNotify");

	Params::MVVMViewModelFieldPathHelperTest_SetPropertyStructNotify Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModelViewViewModelEditor.MVVMViewModelFieldPathHelperTest.SetPropertyVectorNotify
// (Final, Native, Public, HasDefaults)
// Parameters:
// struct FVector                          Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMVVMViewModelFieldPathHelperTest::SetPropertyVectorNotify(const struct FVector& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMViewModelFieldPathHelperTest", "SetPropertyVectorNotify");

	Params::MVVMViewModelFieldPathHelperTest_SetPropertyVectorNotify Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModelViewViewModelEditor.MVVMViewModelFieldPathHelperTest.SetPropertyViewModelNotify
// (Final, Native, Public)
// Parameters:
// class UMVVMViewModelFieldPathHelperTest*Value                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMVVMViewModelFieldPathHelperTest::SetPropertyViewModelNotify(class UMVVMViewModelFieldPathHelperTest* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMViewModelFieldPathHelperTest", "SetPropertyViewModelNotify");

	Params::MVVMViewModelFieldPathHelperTest_SetPropertyViewModelNotify Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModelViewViewModelEditor.MVVMViewModelFieldPathHelperTest.GetPropertyIntNotify
// (Final, Native, Public, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMVVMViewModelFieldPathHelperTest::GetPropertyIntNotify() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMViewModelFieldPathHelperTest", "GetPropertyIntNotify");

	Params::MVVMViewModelFieldPathHelperTest_GetPropertyIntNotify Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModelViewViewModelEditor.MVVMViewModelFieldPathHelperTest.GetPropertyObjectNotify
// (Final, Native, Public, Const)
// Parameters:
// class UMVVMObjectFieldPathHelperTest*   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMVVMObjectFieldPathHelperTest* UMVVMViewModelFieldPathHelperTest::GetPropertyObjectNotify() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMViewModelFieldPathHelperTest", "GetPropertyObjectNotify");

	Params::MVVMViewModelFieldPathHelperTest_GetPropertyObjectNotify Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModelViewViewModelEditor.MVVMViewModelFieldPathHelperTest.GetPropertyStructNotify
// (Final, Native, Public, Const)
// Parameters:
// struct FMVVMStructFieldPathHelperTest   ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FMVVMStructFieldPathHelperTest UMVVMViewModelFieldPathHelperTest::GetPropertyStructNotify() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMViewModelFieldPathHelperTest", "GetPropertyStructNotify");

	Params::MVVMViewModelFieldPathHelperTest_GetPropertyStructNotify Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModelViewViewModelEditor.MVVMViewModelFieldPathHelperTest.GetPropertyVectorNotify
// (Final, Native, Public, HasDefaults, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UMVVMViewModelFieldPathHelperTest::GetPropertyVectorNotify() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMViewModelFieldPathHelperTest", "GetPropertyVectorNotify");

	Params::MVVMViewModelFieldPathHelperTest_GetPropertyVectorNotify Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModelViewViewModelEditor.MVVMViewModelFieldPathHelperTest.GetPropertyViewModelNotify
// (Final, Native, Public, Const)
// Parameters:
// class UMVVMViewModelFieldPathHelperTest*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMVVMViewModelFieldPathHelperTest* UMVVMViewModelFieldPathHelperTest::GetPropertyViewModelNotify() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMViewModelFieldPathHelperTest", "GetPropertyViewModelNotify");

	Params::MVVMViewModelFieldPathHelperTest_GetPropertyViewModelNotify Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModelViewViewModelEditor.MVVMWidgetFieldPathHelperTest.SetPropertyInt
// (Final, Native, Public)
// Parameters:
// int32                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMVVMWidgetFieldPathHelperTest::SetPropertyInt(int32 Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMWidgetFieldPathHelperTest", "SetPropertyInt");

	Params::MVVMWidgetFieldPathHelperTest_SetPropertyInt Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModelViewViewModelEditor.MVVMWidgetFieldPathHelperTest.SetPropertyIntNotify
// (Final, Native, Public)
// Parameters:
// int32                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMVVMWidgetFieldPathHelperTest::SetPropertyIntNotify(int32 Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMWidgetFieldPathHelperTest", "SetPropertyIntNotify");

	Params::MVVMWidgetFieldPathHelperTest_SetPropertyIntNotify Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModelViewViewModelEditor.MVVMWidgetFieldPathHelperTest.SetPropertyIntWithBPGetterSetter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMVVMWidgetFieldPathHelperTest::SetPropertyIntWithBPGetterSetter(int32 Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMWidgetFieldPathHelperTest", "SetPropertyIntWithBPGetterSetter");

	Params::MVVMWidgetFieldPathHelperTest_SetPropertyIntWithBPGetterSetter Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModelViewViewModelEditor.MVVMWidgetFieldPathHelperTest.SetPropertyIntWithGetterSetter
// (Final, Native, Public)
// Parameters:
// int32                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMVVMWidgetFieldPathHelperTest::SetPropertyIntWithGetterSetter(int32 Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMWidgetFieldPathHelperTest", "SetPropertyIntWithGetterSetter");

	Params::MVVMWidgetFieldPathHelperTest_SetPropertyIntWithGetterSetter Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModelViewViewModelEditor.MVVMWidgetFieldPathHelperTest.SetPropertyIntWithGetterSetterAndBP
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMVVMWidgetFieldPathHelperTest::SetPropertyIntWithGetterSetterAndBP(int32 Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMWidgetFieldPathHelperTest", "SetPropertyIntWithGetterSetterAndBP");

	Params::MVVMWidgetFieldPathHelperTest_SetPropertyIntWithGetterSetterAndBP Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModelViewViewModelEditor.MVVMWidgetFieldPathHelperTest.SetPropertyObject
// (Final, Native, Public)
// Parameters:
// class UMVVMObjectFieldPathHelperTest*   Value                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMVVMWidgetFieldPathHelperTest::SetPropertyObject(class UMVVMObjectFieldPathHelperTest* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMWidgetFieldPathHelperTest", "SetPropertyObject");

	Params::MVVMWidgetFieldPathHelperTest_SetPropertyObject Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModelViewViewModelEditor.MVVMWidgetFieldPathHelperTest.SetPropertyObjectNotify
// (Final, Native, Public)
// Parameters:
// class UMVVMObjectFieldPathHelperTest*   Value                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMVVMWidgetFieldPathHelperTest::SetPropertyObjectNotify(class UMVVMObjectFieldPathHelperTest* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMWidgetFieldPathHelperTest", "SetPropertyObjectNotify");

	Params::MVVMWidgetFieldPathHelperTest_SetPropertyObjectNotify Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModelViewViewModelEditor.MVVMWidgetFieldPathHelperTest.SetPropertyObjectWithBPGetterSetter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UMVVMObjectFieldPathHelperTest*   Value                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMVVMWidgetFieldPathHelperTest::SetPropertyObjectWithBPGetterSetter(class UMVVMObjectFieldPathHelperTest* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMWidgetFieldPathHelperTest", "SetPropertyObjectWithBPGetterSetter");

	Params::MVVMWidgetFieldPathHelperTest_SetPropertyObjectWithBPGetterSetter Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModelViewViewModelEditor.MVVMWidgetFieldPathHelperTest.SetPropertyObjectWithGetterSetter
// (Final, Native, Public)
// Parameters:
// class UMVVMObjectFieldPathHelperTest*   Value                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMVVMWidgetFieldPathHelperTest::SetPropertyObjectWithGetterSetter(class UMVVMObjectFieldPathHelperTest* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMWidgetFieldPathHelperTest", "SetPropertyObjectWithGetterSetter");

	Params::MVVMWidgetFieldPathHelperTest_SetPropertyObjectWithGetterSetter Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModelViewViewModelEditor.MVVMWidgetFieldPathHelperTest.SetPropertyObjectWithGetterSetterAndBP
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UMVVMObjectFieldPathHelperTest*   Value                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMVVMWidgetFieldPathHelperTest::SetPropertyObjectWithGetterSetterAndBP(class UMVVMObjectFieldPathHelperTest* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMWidgetFieldPathHelperTest", "SetPropertyObjectWithGetterSetterAndBP");

	Params::MVVMWidgetFieldPathHelperTest_SetPropertyObjectWithGetterSetterAndBP Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModelViewViewModelEditor.MVVMWidgetFieldPathHelperTest.SetPropertyStruct
// (Final, Native, Public)
// Parameters:
// struct FMVVMStructFieldPathHelperTest   Value                                                  (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UMVVMWidgetFieldPathHelperTest::SetPropertyStruct(const struct FMVVMStructFieldPathHelperTest& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMWidgetFieldPathHelperTest", "SetPropertyStruct");

	Params::MVVMWidgetFieldPathHelperTest_SetPropertyStruct Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModelViewViewModelEditor.MVVMWidgetFieldPathHelperTest.SetPropertyStructNotify
// (Final, Native, Public)
// Parameters:
// struct FMVVMStructFieldPathHelperTest   Value                                                  (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UMVVMWidgetFieldPathHelperTest::SetPropertyStructNotify(const struct FMVVMStructFieldPathHelperTest& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMWidgetFieldPathHelperTest", "SetPropertyStructNotify");

	Params::MVVMWidgetFieldPathHelperTest_SetPropertyStructNotify Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModelViewViewModelEditor.MVVMWidgetFieldPathHelperTest.SetPropertyStructWithBPGetterSetter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FMVVMStructFieldPathHelperTest   Value                                                  (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UMVVMWidgetFieldPathHelperTest::SetPropertyStructWithBPGetterSetter(const struct FMVVMStructFieldPathHelperTest& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMWidgetFieldPathHelperTest", "SetPropertyStructWithBPGetterSetter");

	Params::MVVMWidgetFieldPathHelperTest_SetPropertyStructWithBPGetterSetter Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModelViewViewModelEditor.MVVMWidgetFieldPathHelperTest.SetPropertyStructWithGetterSetter
// (Final, Native, Public)
// Parameters:
// struct FMVVMStructFieldPathHelperTest   Value                                                  (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UMVVMWidgetFieldPathHelperTest::SetPropertyStructWithGetterSetter(const struct FMVVMStructFieldPathHelperTest& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMWidgetFieldPathHelperTest", "SetPropertyStructWithGetterSetter");

	Params::MVVMWidgetFieldPathHelperTest_SetPropertyStructWithGetterSetter Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModelViewViewModelEditor.MVVMWidgetFieldPathHelperTest.SetPropertyStructWithGetterSetterAndBP
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FMVVMStructFieldPathHelperTest   Value                                                  (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UMVVMWidgetFieldPathHelperTest::SetPropertyStructWithGetterSetterAndBP(const struct FMVVMStructFieldPathHelperTest& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMWidgetFieldPathHelperTest", "SetPropertyStructWithGetterSetterAndBP");

	Params::MVVMWidgetFieldPathHelperTest_SetPropertyStructWithGetterSetterAndBP Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModelViewViewModelEditor.MVVMWidgetFieldPathHelperTest.SetPropertyVector
// (Final, Native, Public, HasDefaults)
// Parameters:
// struct FVector                          Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMVVMWidgetFieldPathHelperTest::SetPropertyVector(const struct FVector& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMWidgetFieldPathHelperTest", "SetPropertyVector");

	Params::MVVMWidgetFieldPathHelperTest_SetPropertyVector Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModelViewViewModelEditor.MVVMWidgetFieldPathHelperTest.SetPropertyVectorNotify
// (Final, Native, Public, HasDefaults)
// Parameters:
// struct FVector                          Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMVVMWidgetFieldPathHelperTest::SetPropertyVectorNotify(const struct FVector& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMWidgetFieldPathHelperTest", "SetPropertyVectorNotify");

	Params::MVVMWidgetFieldPathHelperTest_SetPropertyVectorNotify Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModelViewViewModelEditor.MVVMWidgetFieldPathHelperTest.SetPropertyVectorWithBPGetterSetter
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMVVMWidgetFieldPathHelperTest::SetPropertyVectorWithBPGetterSetter(const struct FVector& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMWidgetFieldPathHelperTest", "SetPropertyVectorWithBPGetterSetter");

	Params::MVVMWidgetFieldPathHelperTest_SetPropertyVectorWithBPGetterSetter Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModelViewViewModelEditor.MVVMWidgetFieldPathHelperTest.SetPropertyVectorWithGetterSetter
// (Final, Native, Public, HasDefaults)
// Parameters:
// struct FVector                          Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMVVMWidgetFieldPathHelperTest::SetPropertyVectorWithGetterSetter(const struct FVector& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMWidgetFieldPathHelperTest", "SetPropertyVectorWithGetterSetter");

	Params::MVVMWidgetFieldPathHelperTest_SetPropertyVectorWithGetterSetter Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModelViewViewModelEditor.MVVMWidgetFieldPathHelperTest.SetPropertyVectorWithGetterSetterAndBP
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMVVMWidgetFieldPathHelperTest::SetPropertyVectorWithGetterSetterAndBP(const struct FVector& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMWidgetFieldPathHelperTest", "SetPropertyVectorWithGetterSetterAndBP");

	Params::MVVMWidgetFieldPathHelperTest_SetPropertyVectorWithGetterSetterAndBP Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModelViewViewModelEditor.MVVMWidgetFieldPathHelperTest.SetPropertyViewModel
// (Final, Native, Public)
// Parameters:
// class UMVVMViewModelFieldPathHelperTest*Value                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMVVMWidgetFieldPathHelperTest::SetPropertyViewModel(class UMVVMViewModelFieldPathHelperTest* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMWidgetFieldPathHelperTest", "SetPropertyViewModel");

	Params::MVVMWidgetFieldPathHelperTest_SetPropertyViewModel Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModelViewViewModelEditor.MVVMWidgetFieldPathHelperTest.SetPropertyViewModelNotify
// (Final, Native, Public)
// Parameters:
// class UMVVMViewModelFieldPathHelperTest*Value                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMVVMWidgetFieldPathHelperTest::SetPropertyViewModelNotify(class UMVVMViewModelFieldPathHelperTest* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMWidgetFieldPathHelperTest", "SetPropertyViewModelNotify");

	Params::MVVMWidgetFieldPathHelperTest_SetPropertyViewModelNotify Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModelViewViewModelEditor.MVVMWidgetFieldPathHelperTest.SetPropertyViewModelWithBPGetterSetter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UMVVMViewModelFieldPathHelperTest*Value                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMVVMWidgetFieldPathHelperTest::SetPropertyViewModelWithBPGetterSetter(class UMVVMViewModelFieldPathHelperTest* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMWidgetFieldPathHelperTest", "SetPropertyViewModelWithBPGetterSetter");

	Params::MVVMWidgetFieldPathHelperTest_SetPropertyViewModelWithBPGetterSetter Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModelViewViewModelEditor.MVVMWidgetFieldPathHelperTest.SetPropertyViewModelWithGetterSetter
// (Final, Native, Public)
// Parameters:
// class UMVVMViewModelFieldPathHelperTest*Value                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMVVMWidgetFieldPathHelperTest::SetPropertyViewModelWithGetterSetter(class UMVVMViewModelFieldPathHelperTest* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMWidgetFieldPathHelperTest", "SetPropertyViewModelWithGetterSetter");

	Params::MVVMWidgetFieldPathHelperTest_SetPropertyViewModelWithGetterSetter Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModelViewViewModelEditor.MVVMWidgetFieldPathHelperTest.SetPropertyViewModelWithGetterSetterAndBP
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UMVVMViewModelFieldPathHelperTest*Value                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMVVMWidgetFieldPathHelperTest::SetPropertyViewModelWithGetterSetterAndBP(class UMVVMViewModelFieldPathHelperTest* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMWidgetFieldPathHelperTest", "SetPropertyViewModelWithGetterSetterAndBP");

	Params::MVVMWidgetFieldPathHelperTest_SetPropertyViewModelWithGetterSetterAndBP Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModelViewViewModelEditor.MVVMWidgetFieldPathHelperTest.GetPropertyInt
// (Final, Native, Public, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMVVMWidgetFieldPathHelperTest::GetPropertyInt() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMWidgetFieldPathHelperTest", "GetPropertyInt");

	Params::MVVMWidgetFieldPathHelperTest_GetPropertyInt Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModelViewViewModelEditor.MVVMWidgetFieldPathHelperTest.GetPropertyIntNotify
// (Final, Native, Public, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMVVMWidgetFieldPathHelperTest::GetPropertyIntNotify() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMWidgetFieldPathHelperTest", "GetPropertyIntNotify");

	Params::MVVMWidgetFieldPathHelperTest_GetPropertyIntNotify Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModelViewViewModelEditor.MVVMWidgetFieldPathHelperTest.GetPropertyIntWithBPGetterSetter
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMVVMWidgetFieldPathHelperTest::GetPropertyIntWithBPGetterSetter() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMWidgetFieldPathHelperTest", "GetPropertyIntWithBPGetterSetter");

	Params::MVVMWidgetFieldPathHelperTest_GetPropertyIntWithBPGetterSetter Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModelViewViewModelEditor.MVVMWidgetFieldPathHelperTest.GetPropertyIntWithGetterSetter
// (Final, Native, Public, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMVVMWidgetFieldPathHelperTest::GetPropertyIntWithGetterSetter() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMWidgetFieldPathHelperTest", "GetPropertyIntWithGetterSetter");

	Params::MVVMWidgetFieldPathHelperTest_GetPropertyIntWithGetterSetter Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModelViewViewModelEditor.MVVMWidgetFieldPathHelperTest.GetPropertyIntWithGetterSetterAndBP
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMVVMWidgetFieldPathHelperTest::GetPropertyIntWithGetterSetterAndBP() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMWidgetFieldPathHelperTest", "GetPropertyIntWithGetterSetterAndBP");

	Params::MVVMWidgetFieldPathHelperTest_GetPropertyIntWithGetterSetterAndBP Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModelViewViewModelEditor.MVVMWidgetFieldPathHelperTest.GetPropertyObject
// (Final, Native, Public, Const)
// Parameters:
// class UMVVMObjectFieldPathHelperTest*   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMVVMObjectFieldPathHelperTest* UMVVMWidgetFieldPathHelperTest::GetPropertyObject() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMWidgetFieldPathHelperTest", "GetPropertyObject");

	Params::MVVMWidgetFieldPathHelperTest_GetPropertyObject Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModelViewViewModelEditor.MVVMWidgetFieldPathHelperTest.GetPropertyObjectNotify
// (Final, Native, Public, Const)
// Parameters:
// class UMVVMObjectFieldPathHelperTest*   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMVVMObjectFieldPathHelperTest* UMVVMWidgetFieldPathHelperTest::GetPropertyObjectNotify() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMWidgetFieldPathHelperTest", "GetPropertyObjectNotify");

	Params::MVVMWidgetFieldPathHelperTest_GetPropertyObjectNotify Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModelViewViewModelEditor.MVVMWidgetFieldPathHelperTest.GetPropertyObjectWithBPGetterSetter
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UMVVMObjectFieldPathHelperTest*   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMVVMObjectFieldPathHelperTest* UMVVMWidgetFieldPathHelperTest::GetPropertyObjectWithBPGetterSetter() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMWidgetFieldPathHelperTest", "GetPropertyObjectWithBPGetterSetter");

	Params::MVVMWidgetFieldPathHelperTest_GetPropertyObjectWithBPGetterSetter Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModelViewViewModelEditor.MVVMWidgetFieldPathHelperTest.GetPropertyObjectWithGetterSetter
// (Final, Native, Public, Const)
// Parameters:
// class UMVVMObjectFieldPathHelperTest*   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMVVMObjectFieldPathHelperTest* UMVVMWidgetFieldPathHelperTest::GetPropertyObjectWithGetterSetter() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMWidgetFieldPathHelperTest", "GetPropertyObjectWithGetterSetter");

	Params::MVVMWidgetFieldPathHelperTest_GetPropertyObjectWithGetterSetter Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModelViewViewModelEditor.MVVMWidgetFieldPathHelperTest.GetPropertyObjectWithGetterSetterAndBP
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UMVVMObjectFieldPathHelperTest*   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMVVMObjectFieldPathHelperTest* UMVVMWidgetFieldPathHelperTest::GetPropertyObjectWithGetterSetterAndBP() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMWidgetFieldPathHelperTest", "GetPropertyObjectWithGetterSetterAndBP");

	Params::MVVMWidgetFieldPathHelperTest_GetPropertyObjectWithGetterSetterAndBP Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModelViewViewModelEditor.MVVMWidgetFieldPathHelperTest.GetPropertyStruct
// (Final, Native, Public, Const)
// Parameters:
// struct FMVVMStructFieldPathHelperTest   ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FMVVMStructFieldPathHelperTest UMVVMWidgetFieldPathHelperTest::GetPropertyStruct() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMWidgetFieldPathHelperTest", "GetPropertyStruct");

	Params::MVVMWidgetFieldPathHelperTest_GetPropertyStruct Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModelViewViewModelEditor.MVVMWidgetFieldPathHelperTest.GetPropertyStructNotify
// (Final, Native, Public, Const)
// Parameters:
// struct FMVVMStructFieldPathHelperTest   ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FMVVMStructFieldPathHelperTest UMVVMWidgetFieldPathHelperTest::GetPropertyStructNotify() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMWidgetFieldPathHelperTest", "GetPropertyStructNotify");

	Params::MVVMWidgetFieldPathHelperTest_GetPropertyStructNotify Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModelViewViewModelEditor.MVVMWidgetFieldPathHelperTest.GetPropertyStructWithBPGetterSetter
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FMVVMStructFieldPathHelperTest   ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FMVVMStructFieldPathHelperTest UMVVMWidgetFieldPathHelperTest::GetPropertyStructWithBPGetterSetter() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMWidgetFieldPathHelperTest", "GetPropertyStructWithBPGetterSetter");

	Params::MVVMWidgetFieldPathHelperTest_GetPropertyStructWithBPGetterSetter Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModelViewViewModelEditor.MVVMWidgetFieldPathHelperTest.GetPropertyStructWithGetterSetter
// (Final, Native, Public, Const)
// Parameters:
// struct FMVVMStructFieldPathHelperTest   ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FMVVMStructFieldPathHelperTest UMVVMWidgetFieldPathHelperTest::GetPropertyStructWithGetterSetter() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMWidgetFieldPathHelperTest", "GetPropertyStructWithGetterSetter");

	Params::MVVMWidgetFieldPathHelperTest_GetPropertyStructWithGetterSetter Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModelViewViewModelEditor.MVVMWidgetFieldPathHelperTest.GetPropertyStructWithGetterSetterAndBP
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FMVVMStructFieldPathHelperTest   ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FMVVMStructFieldPathHelperTest UMVVMWidgetFieldPathHelperTest::GetPropertyStructWithGetterSetterAndBP() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMWidgetFieldPathHelperTest", "GetPropertyStructWithGetterSetterAndBP");

	Params::MVVMWidgetFieldPathHelperTest_GetPropertyStructWithGetterSetterAndBP Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModelViewViewModelEditor.MVVMWidgetFieldPathHelperTest.GetPropertyVector
// (Final, Native, Public, HasDefaults, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UMVVMWidgetFieldPathHelperTest::GetPropertyVector() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMWidgetFieldPathHelperTest", "GetPropertyVector");

	Params::MVVMWidgetFieldPathHelperTest_GetPropertyVector Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModelViewViewModelEditor.MVVMWidgetFieldPathHelperTest.GetPropertyVectorNotify
// (Final, Native, Public, HasDefaults, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UMVVMWidgetFieldPathHelperTest::GetPropertyVectorNotify() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMWidgetFieldPathHelperTest", "GetPropertyVectorNotify");

	Params::MVVMWidgetFieldPathHelperTest_GetPropertyVectorNotify Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModelViewViewModelEditor.MVVMWidgetFieldPathHelperTest.GetPropertyVectorWithBPGetterSetter
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UMVVMWidgetFieldPathHelperTest::GetPropertyVectorWithBPGetterSetter() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMWidgetFieldPathHelperTest", "GetPropertyVectorWithBPGetterSetter");

	Params::MVVMWidgetFieldPathHelperTest_GetPropertyVectorWithBPGetterSetter Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModelViewViewModelEditor.MVVMWidgetFieldPathHelperTest.GetPropertyVectorWithGetterSetter
// (Final, Native, Public, HasDefaults, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UMVVMWidgetFieldPathHelperTest::GetPropertyVectorWithGetterSetter() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMWidgetFieldPathHelperTest", "GetPropertyVectorWithGetterSetter");

	Params::MVVMWidgetFieldPathHelperTest_GetPropertyVectorWithGetterSetter Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModelViewViewModelEditor.MVVMWidgetFieldPathHelperTest.GetPropertyVectorWithGetterSetterAndBP
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UMVVMWidgetFieldPathHelperTest::GetPropertyVectorWithGetterSetterAndBP() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMWidgetFieldPathHelperTest", "GetPropertyVectorWithGetterSetterAndBP");

	Params::MVVMWidgetFieldPathHelperTest_GetPropertyVectorWithGetterSetterAndBP Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModelViewViewModelEditor.MVVMWidgetFieldPathHelperTest.GetPropertyViewModel
// (Final, Native, Public, Const)
// Parameters:
// class UMVVMViewModelFieldPathHelperTest*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMVVMViewModelFieldPathHelperTest* UMVVMWidgetFieldPathHelperTest::GetPropertyViewModel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMWidgetFieldPathHelperTest", "GetPropertyViewModel");

	Params::MVVMWidgetFieldPathHelperTest_GetPropertyViewModel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModelViewViewModelEditor.MVVMWidgetFieldPathHelperTest.GetPropertyViewModelNotify
// (Final, Native, Public, Const)
// Parameters:
// class UMVVMViewModelFieldPathHelperTest*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMVVMViewModelFieldPathHelperTest* UMVVMWidgetFieldPathHelperTest::GetPropertyViewModelNotify() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMWidgetFieldPathHelperTest", "GetPropertyViewModelNotify");

	Params::MVVMWidgetFieldPathHelperTest_GetPropertyViewModelNotify Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModelViewViewModelEditor.MVVMWidgetFieldPathHelperTest.GetPropertyViewModelWithBPGetterSetter
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UMVVMViewModelFieldPathHelperTest*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMVVMViewModelFieldPathHelperTest* UMVVMWidgetFieldPathHelperTest::GetPropertyViewModelWithBPGetterSetter() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMWidgetFieldPathHelperTest", "GetPropertyViewModelWithBPGetterSetter");

	Params::MVVMWidgetFieldPathHelperTest_GetPropertyViewModelWithBPGetterSetter Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModelViewViewModelEditor.MVVMWidgetFieldPathHelperTest.GetPropertyViewModelWithGetterSetter
// (Final, Native, Public, Const)
// Parameters:
// class UMVVMViewModelFieldPathHelperTest*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMVVMViewModelFieldPathHelperTest* UMVVMWidgetFieldPathHelperTest::GetPropertyViewModelWithGetterSetter() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMWidgetFieldPathHelperTest", "GetPropertyViewModelWithGetterSetter");

	Params::MVVMWidgetFieldPathHelperTest_GetPropertyViewModelWithGetterSetter Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModelViewViewModelEditor.MVVMWidgetFieldPathHelperTest.GetPropertyViewModelWithGetterSetterAndBP
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UMVVMViewModelFieldPathHelperTest*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMVVMViewModelFieldPathHelperTest* UMVVMWidgetFieldPathHelperTest::GetPropertyViewModelWithGetterSetterAndBP() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMWidgetFieldPathHelperTest", "GetPropertyViewModelWithGetterSetterAndBP");

	Params::MVVMWidgetFieldPathHelperTest_GetPropertyViewModelWithGetterSetterAndBP Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModelViewViewModelEditor.MVVMFieldValueChangedTest.FunctionFloat
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UMVVMFieldValueChangedTest::FunctionFloat() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMFieldValueChangedTest", "FunctionFloat");

	Params::MVVMFieldValueChangedTest_FunctionFloat Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModelViewViewModelEditor.MVVMFieldValueChangedTest.FunctionInt
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMVVMFieldValueChangedTest::FunctionInt() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MVVMFieldValueChangedTest", "FunctionInt");

	Params::MVVMFieldValueChangedTest_FunctionInt Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

