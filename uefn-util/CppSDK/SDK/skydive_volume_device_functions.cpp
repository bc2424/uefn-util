#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: skydive_volume_device

#include "Basic.hpp"

#include "skydive_volume_device_classes.hpp"
#include "skydive_volume_device_parameters.hpp"


namespace SDK
{

// Function skydive_volume_device.skydive_volume_device.$Block
// ()

void Uskydive_volume_device::_Block()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("skydive_volume_device", "$Block");

	UObject::ProcessEvent(Func, nullptr);
}


// Function skydive_volume_device.skydive_volume_device.$InitCDO
// (HasDefaults)

void Uskydive_volume_device::_InitCDO()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("skydive_volume_device", "$InitCDO");

	UObject::ProcessEvent(Func, nullptr);
}


// Function skydive_volume_device.skydive_volume_device.$InitInstance
// ()

void Uskydive_volume_device::_InitInstance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("skydive_volume_device", "$InitInstance");

	UObject::ProcessEvent(Func, nullptr);
}


// Function skydive_volume_device.skydive_volume_device._L_2fFortnite_2ecom_2fDevices_2fskydive__volume__device_N_RDisableVolumeLocking
// (Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct skydive_volume_device::Ftuple_L_R__verse_0xB2CDDD72_Argument                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void Uskydive_volume_device::_L_2fFortnite_2ecom_2fDevices_2fskydive__volume__device_N_RDisableVolumeLocking(const struct skydive_volume_device::Ftuple_L_R& __verse_0xB2CDDD72_Argument)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("skydive_volume_device", "_L_2fFortnite_2ecom_2fDevices_2fskydive__volume__device_N_RDisableVolumeLocking");

	Params::skydive_volume_device__L_2fFortnite_2ecom_2fDevices_2fskydive__volume__device_N_RDisableVolumeLocking Parms{};

	Parms.__verse_0xB2CDDD72_Argument = std::move(__verse_0xB2CDDD72_Argument);

	UObject::ProcessEvent(Func, &Parms);
}


// Function skydive_volume_device.skydive_volume_device._L_2fFortnite_2ecom_2fDevices_2fskydive__volume__device_N_REnableVolumeLocking
// (Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct skydive_volume_device::Ftuple_L_R__verse_0xB2CDDD72_Argument                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void Uskydive_volume_device::_L_2fFortnite_2ecom_2fDevices_2fskydive__volume__device_N_REnableVolumeLocking(const struct skydive_volume_device::Ftuple_L_R& __verse_0xB2CDDD72_Argument)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("skydive_volume_device", "_L_2fFortnite_2ecom_2fDevices_2fskydive__volume__device_N_REnableVolumeLocking");

	Params::skydive_volume_device__L_2fFortnite_2ecom_2fDevices_2fskydive__volume__device_N_REnableVolumeLocking Parms{};

	Parms.__verse_0xB2CDDD72_Argument = std::move(__verse_0xB2CDDD72_Argument);

	UObject::ProcessEvent(Func, &Parms);
}


// Function skydive_volume_device.skydive_volume_device._L_2fFortnite_2ecom_2fDevices_2fskydive__volume__device_N_RIsInVolume_L_Nagent_R
// (Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class USimulation_agent*                __verse_0xB2CDDD72_Argument                            (ExportObject, Parm, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash)
// TOptional<EVerseTrue>                   RetVal                                                 (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

TOptional<EVerseTrue> Uskydive_volume_device::_L_2fFortnite_2ecom_2fDevices_2fskydive__volume__device_N_RIsInVolume_L_Nagent_R(class USimulation_agent* __verse_0xB2CDDD72_Argument)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("skydive_volume_device", "_L_2fFortnite_2ecom_2fDevices_2fskydive__volume__device_N_RIsInVolume_L_Nagent_R");

	Params::skydive_volume_device__L_2fFortnite_2ecom_2fDevices_2fskydive__volume__device_N_RIsInVolume_L_Nagent_R Parms{};

	Parms.__verse_0xB2CDDD72_Argument = __verse_0xB2CDDD72_Argument;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

