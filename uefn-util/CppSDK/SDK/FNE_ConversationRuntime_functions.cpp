#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FNE_ConversationRuntime

#include "Basic.hpp"

#include "FNE_ConversationRuntime_classes.hpp"
#include "FNE_ConversationRuntime_parameters.hpp"


namespace SDK
{

// Function FNE_ConversationRuntime.ConversationEntityProxyActor.OnRep_ControllersInConversation
// (Final, Native, Protected)

void AConversationEntityProxyActor::OnRep_ControllersInConversation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ConversationEntityProxyActor", "OnRep_ControllersInConversation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FNE_ConversationRuntime.ConversationEntityProxyActor.OnRep_SpeakerName
// (Final, Native, Protected)

void AConversationEntityProxyActor::OnRep_SpeakerName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ConversationEntityProxyActor", "OnRep_SpeakerName");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FNE_ConversationRuntime.ConversationEntityProxyActor.OnServerConversationEnded
// (Final, Native, Protected)
// Parameters:
// class AActor*                           ParticipantActorPlayer                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AConversationEntityProxyActor::OnServerConversationEnded(class AActor* ParticipantActorPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ConversationEntityProxyActor", "OnServerConversationEnded");

	Params::ConversationEntityProxyActor_OnServerConversationEnded Parms{};

	Parms.ParticipantActorPlayer = ParticipantActorPlayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FNE_ConversationRuntime.ConversationEntityProxyActor.OnServerConversationStarted
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class AActor*                           ParticipantActorPlayer                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     ParticipantID                                          (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AConversationEntityProxyActor::OnServerConversationStarted(class AActor* ParticipantActorPlayer, const struct FGameplayTag& ParticipantID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ConversationEntityProxyActor", "OnServerConversationStarted");

	Params::ConversationEntityProxyActor_OnServerConversationStarted Parms{};

	Parms.ParticipantActorPlayer = ParticipantActorPlayer;
	Parms.ParticipantID = std::move(ParticipantID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

