#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PhysicsUtilities

#include "Basic.hpp"

#include "PhysicsCore_structs.hpp"


namespace SDK
{

// Enum PhysicsUtilities.EPhysAssetFitGeomType
// NumValues: 0x0009
enum class EPhysAssetFitGeomType : uint8
{
	EFG_Box                                  = 0,
	EFG_Sphyl                                = 1,
	EFG_Sphere                               = 2,
	EFG_TaperedCapsule                       = 3,
	EFG_SingleConvexHull                     = 4,
	EFG_MultiConvexHull                      = 5,
	EFG_LevelSet                             = 6,
	EFG_SkinnedLevelSet                      = 7,
	EFG_MAX                                  = 8,
};

// Enum PhysicsUtilities.EPhysAssetFitVertWeight
// NumValues: 0x0003
enum class EPhysAssetFitVertWeight : uint8
{
	EVW_AnyWeight                            = 0,
	EVW_DominantWeight                       = 1,
	EVW_MAX                                  = 2,
};

// ScriptStruct PhysicsUtilities.PhysAssetCreateParams
// 0x0020 (0x0020 - 0x0000)
struct FPhysAssetCreateParams final
{
public:
	float                                         MinBoneSize;                                       // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MinWeldSize;                                       // 0x0004(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EPhysAssetFitGeomType                         GeomType;                                          // 0x0008(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EPhysAssetFitVertWeight                       VertWeight;                                        // 0x0009(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAutoOrientToBone;                                 // 0x000A(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCreateConstraints;                                // 0x000B(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bWalkPastSmall;                                    // 0x000C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bBodyForAll;                                       // 0x000D(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDisableCollisionsByDefault;                       // 0x000E(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAngularConstraintMotion                      AngularConstraintMode;                             // 0x000F(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         HullCount;                                         // 0x0010(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MaxHullVerts;                                      // 0x0014(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         LevelSetResolution;                                // 0x0018(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         LatticeResolution;                                 // 0x001C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

}

