#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: RigVMEditor

#include "Basic.hpp"

#include "RigVMEditor_classes.hpp"
#include "RigVMEditor_parameters.hpp"


namespace SDK
{

// Function RigVMEditor.RigVMEditorMenuContext.GetGraphMenuContext
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FRigVMEditorGraphMenuContext     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FRigVMEditorGraphMenuContext URigVMEditorMenuContext::GetGraphMenuContext()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RigVMEditorMenuContext", "GetGraphMenuContext");

	Params::RigVMEditorMenuContext_GetGraphMenuContext Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RigVMEditor.RigVMEditorMenuContext.GetRigVMBlueprint
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class URigVMBlueprint*                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class URigVMBlueprint* URigVMEditorMenuContext::GetRigVMBlueprint() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RigVMEditorMenuContext", "GetRigVMBlueprint");

	Params::RigVMEditorMenuContext_GetRigVMBlueprint Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RigVMEditor.RigVMEditorMenuContext.GetRigVMHost
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class URigVMHost*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class URigVMHost* URigVMEditorMenuContext::GetRigVMHost() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RigVMEditorMenuContext", "GetRigVMHost");

	Params::RigVMEditorMenuContext_GetRigVMHost Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RigVMEditor.RigVMEditorMenuContext.IsAltDown
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URigVMEditorMenuContext::IsAltDown() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RigVMEditorMenuContext", "IsAltDown");

	Params::RigVMEditorMenuContext_IsAltDown Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RigVMEditor.RigVMEditorBlueprintLibrary.GetAssetsWithFilter_ForBlueprint
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class URigVMBlueprint>      InClass                                                (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FAssetData& AssetData)>InAssetDataFilter                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FAssetData>               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FAssetData> URigVMEditorBlueprintLibrary::GetAssetsWithFilter_ForBlueprint(TSubclassOf<class URigVMBlueprint> InClass, TDelegate<void(const struct FAssetData& AssetData)> InAssetDataFilter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RigVMEditorBlueprintLibrary", "GetAssetsWithFilter_ForBlueprint");

	Params::RigVMEditorBlueprintLibrary_GetAssetsWithFilter_ForBlueprint Parms{};

	Parms.InClass = InClass;
	Parms.InAssetDataFilter = InAssetDataFilter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RigVMEditor.RigVMEditorBlueprintLibrary.GetController
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class URigVMBlueprint*                  InBlueprint                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class URigVMController*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class URigVMController* URigVMEditorBlueprintLibrary::GetController(class URigVMBlueprint* InBlueprint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RigVMEditorBlueprintLibrary", "GetController");

	Params::RigVMEditorBlueprintLibrary_GetController Parms{};

	Parms.InBlueprint = InBlueprint;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RigVMEditor.RigVMEditorBlueprintLibrary.GetModel
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class URigVMBlueprint*                  InBlueprint                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class URigVMGraph*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class URigVMGraph* URigVMEditorBlueprintLibrary::GetModel(class URigVMBlueprint* InBlueprint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RigVMEditorBlueprintLibrary", "GetModel");

	Params::RigVMEditorBlueprintLibrary_GetModel Parms{};

	Parms.InBlueprint = InBlueprint;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RigVMEditor.RigVMEditorBlueprintLibrary.LoadAssets
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TArray<class URigVMBlueprint*>          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class URigVMBlueprint*> URigVMEditorBlueprintLibrary::LoadAssets()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RigVMEditorBlueprintLibrary", "LoadAssets");

	Params::RigVMEditorBlueprintLibrary_LoadAssets Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RigVMEditor.RigVMEditorBlueprintLibrary.LoadAssetsByClass
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class URigVMBlueprint>      InClass                                                (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class URigVMBlueprint*>          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class URigVMBlueprint*> URigVMEditorBlueprintLibrary::LoadAssetsByClass(TSubclassOf<class URigVMBlueprint> InClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RigVMEditorBlueprintLibrary", "LoadAssetsByClass");

	Params::RigVMEditorBlueprintLibrary_LoadAssetsByClass Parms{};

	Parms.InClass = InClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RigVMEditor.RigVMEditorBlueprintLibrary.LoadAssetsWithAssetDataAndBlueprintFilters_ForBlueprint
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class URigVMBlueprint>      InClass                                                (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FAssetData& AssetData)>InAssetDataFilter                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(class URigVMBlueprint* Blueprint, const TArray<struct FRigVMBlueprintLoadLogEntry>& LogDuringLoad)>InBlueprintFilter                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class URigVMBlueprint*>          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class URigVMBlueprint*> URigVMEditorBlueprintLibrary::LoadAssetsWithAssetDataAndBlueprintFilters_ForBlueprint(TSubclassOf<class URigVMBlueprint> InClass, TDelegate<void(const struct FAssetData& AssetData)> InAssetDataFilter, TDelegate<void(class URigVMBlueprint* Blueprint, const TArray<struct FRigVMBlueprintLoadLogEntry>& LogDuringLoad)> InBlueprintFilter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RigVMEditorBlueprintLibrary", "LoadAssetsWithAssetDataAndBlueprintFilters_ForBlueprint");

	Params::RigVMEditorBlueprintLibrary_LoadAssetsWithAssetDataAndBlueprintFilters_ForBlueprint Parms{};

	Parms.InClass = InClass;
	Parms.InAssetDataFilter = InAssetDataFilter;
	Parms.InBlueprintFilter = InBlueprintFilter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RigVMEditor.RigVMEditorBlueprintLibrary.LoadAssetsWithAssetDataAndNodeFilters_ForBlueprint
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class URigVMBlueprint>      InClass                                                (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FAssetData& AssetData)>InAssetDataFilter                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(class URigVMBlueprint* Blueprint, class URigVMNode* Node)>InNodeFilter                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class URigVMBlueprint*>          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class URigVMBlueprint*> URigVMEditorBlueprintLibrary::LoadAssetsWithAssetDataAndNodeFilters_ForBlueprint(TSubclassOf<class URigVMBlueprint> InClass, TDelegate<void(const struct FAssetData& AssetData)> InAssetDataFilter, TDelegate<void(class URigVMBlueprint* Blueprint, class URigVMNode* Node)> InNodeFilter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RigVMEditorBlueprintLibrary", "LoadAssetsWithAssetDataAndNodeFilters_ForBlueprint");

	Params::RigVMEditorBlueprintLibrary_LoadAssetsWithAssetDataAndNodeFilters_ForBlueprint Parms{};

	Parms.InClass = InClass;
	Parms.InAssetDataFilter = InAssetDataFilter;
	Parms.InNodeFilter = InNodeFilter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RigVMEditor.RigVMEditorBlueprintLibrary.LoadAssetsWithAssetDataFilter_ForBlueprint
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class URigVMBlueprint>      InClass                                                (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FAssetData& AssetData)>InAssetDataFilter                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class URigVMBlueprint*>          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class URigVMBlueprint*> URigVMEditorBlueprintLibrary::LoadAssetsWithAssetDataFilter_ForBlueprint(TSubclassOf<class URigVMBlueprint> InClass, TDelegate<void(const struct FAssetData& AssetData)> InAssetDataFilter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RigVMEditorBlueprintLibrary", "LoadAssetsWithAssetDataFilter_ForBlueprint");

	Params::RigVMEditorBlueprintLibrary_LoadAssetsWithAssetDataFilter_ForBlueprint Parms{};

	Parms.InClass = InClass;
	Parms.InAssetDataFilter = InAssetDataFilter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RigVMEditor.RigVMEditorBlueprintLibrary.LoadAssetsWithBlueprintFilter_ForBlueprint
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class URigVMBlueprint>      InClass                                                (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(class URigVMBlueprint* Blueprint, const TArray<struct FRigVMBlueprintLoadLogEntry>& LogDuringLoad)>InBlueprintFilter                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class URigVMBlueprint*>          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class URigVMBlueprint*> URigVMEditorBlueprintLibrary::LoadAssetsWithBlueprintFilter_ForBlueprint(TSubclassOf<class URigVMBlueprint> InClass, TDelegate<void(class URigVMBlueprint* Blueprint, const TArray<struct FRigVMBlueprintLoadLogEntry>& LogDuringLoad)> InBlueprintFilter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RigVMEditorBlueprintLibrary", "LoadAssetsWithBlueprintFilter_ForBlueprint");

	Params::RigVMEditorBlueprintLibrary_LoadAssetsWithBlueprintFilter_ForBlueprint Parms{};

	Parms.InClass = InClass;
	Parms.InBlueprintFilter = InBlueprintFilter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RigVMEditor.RigVMEditorBlueprintLibrary.LoadAssetsWithNodeFilter_ForBlueprint
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class URigVMBlueprint>      InClass                                                (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(class URigVMBlueprint* Blueprint, class URigVMNode* Node)>InNodeFilter                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class URigVMBlueprint*>          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class URigVMBlueprint*> URigVMEditorBlueprintLibrary::LoadAssetsWithNodeFilter_ForBlueprint(TSubclassOf<class URigVMBlueprint> InClass, TDelegate<void(class URigVMBlueprint* Blueprint, class URigVMNode* Node)> InNodeFilter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RigVMEditorBlueprintLibrary", "LoadAssetsWithNodeFilter_ForBlueprint");

	Params::RigVMEditorBlueprintLibrary_LoadAssetsWithNodeFilter_ForBlueprint Parms{};

	Parms.InClass = InClass;
	Parms.InNodeFilter = InNodeFilter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RigVMEditor.RigVMEditorBlueprintLibrary.RecompileVM
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class URigVMBlueprint*                  InBlueprint                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URigVMEditorBlueprintLibrary::RecompileVM(class URigVMBlueprint* InBlueprint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RigVMEditorBlueprintLibrary", "RecompileVM");

	Params::RigVMEditorBlueprintLibrary_RecompileVM Parms{};

	Parms.InBlueprint = InBlueprint;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RigVMEditor.RigVMEditorBlueprintLibrary.RecompileVMIfRequired
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class URigVMBlueprint*                  InBlueprint                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URigVMEditorBlueprintLibrary::RecompileVMIfRequired(class URigVMBlueprint* InBlueprint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RigVMEditorBlueprintLibrary", "RecompileVMIfRequired");

	Params::RigVMEditorBlueprintLibrary_RecompileVMIfRequired Parms{};

	Parms.InBlueprint = InBlueprint;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RigVMEditor.RigVMEditorBlueprintLibrary.RequestAutoVMRecompilation
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class URigVMBlueprint*                  InBlueprint                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URigVMEditorBlueprintLibrary::RequestAutoVMRecompilation(class URigVMBlueprint* InBlueprint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RigVMEditorBlueprintLibrary", "RequestAutoVMRecompilation");

	Params::RigVMEditorBlueprintLibrary_RequestAutoVMRecompilation Parms{};

	Parms.InBlueprint = InBlueprint;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

