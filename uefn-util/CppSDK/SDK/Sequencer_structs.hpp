#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Sequencer

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "MovieScene_structs.hpp"


namespace SDK
{

// Enum Sequencer.EAutoChangeMode
// NumValues: 0x0005
enum class EAutoChangeMode : uint8
{
	AutoKey                                  = 0,
	AutoTrack                                = 1,
	All                                      = 2,
	None                                     = 3,
	EAutoChangeMode_MAX                      = 4,
};

// Enum Sequencer.EAllowEditsMode
// NumValues: 0x0004
enum class EAllowEditsMode : uint8
{
	AllEdits                                 = 0,
	AllowSequencerEditsOnly                  = 1,
	AllowLevelEditsOnly                      = 2,
	EAllowEditsMode_MAX                      = 3,
};

// Enum Sequencer.EKeyGroupMode
// NumValues: 0x0004
enum class EKeyGroupMode : uint8
{
	KeyChanged                               = 0,
	KeyGroup                                 = 1,
	KeyAll                                   = 2,
	EKeyGroupMode_MAX                        = 3,
};

// Enum Sequencer.ESequencerSectionResizeMode
// NumValues: 0x0003
enum class ESequencerSectionResizeMode : uint8
{
	SSRM_LeadingEdge                         = 0,
	SSRM_TrailingEdge                        = 1,
	SSRM_MAX                                 = 2,
};

// Enum Sequencer.ESequencerSpawnPosition
// NumValues: 0x0003
enum class ESequencerSpawnPosition : uint8
{
	SSP_Origin                               = 0,
	SSP_PlaceInFrontOfCamera                 = 1,
	SSP_MAX                                  = 2,
};

// Enum Sequencer.ESequencerZoomPosition
// NumValues: 0x0003
enum class ESequencerZoomPosition : uint8
{
	SZP_CurrentTime                          = 0,
	SZP_MousePosition                        = 1,
	SZP_MAX                                  = 2,
};

// Enum Sequencer.ESequencerLoopMode
// NumValues: 0x0004
enum class ESequencerLoopMode : uint8
{
	SLM_NoLoop                               = 0,
	SLM_Loop                                 = 1,
	SLM_LoopSelectionRange                   = 2,
	SLM_MAX                                  = 3,
};

// ScriptStruct Sequencer.ColumnVisibilitySetting
// 0x0010 (0x0010 - 0x0000)
struct FColumnVisibilitySetting final
{
public:
	class FName                                   ColumnName;                                        // 0x0000(0x000C)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsVisible;                                        // 0x000C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct Sequencer.MovieScenePasteFoldersParams
// 0x0010 (0x0010 - 0x0000)
struct FMovieScenePasteFoldersParams final
{
public:
	class UMovieSceneSequence*                    Sequence;                                          // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMovieSceneFolder*                      ParentFolder;                                      // 0x0008(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct Sequencer.MovieScenePasteSectionsParams
// 0x0028 (0x0028 - 0x0000)
struct FMovieScenePasteSectionsParams final
{
public:
	TArray<class UMovieSceneTrack*>               Tracks;                                            // 0x0000(0x0010)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<int32>                                 TrackRowIndices;                                   // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FFrameTime                             Time;                                              // 0x0020(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct Sequencer.MovieScenePasteTracksParams
// 0x0030 (0x0030 - 0x0000)
struct FMovieScenePasteTracksParams final
{
public:
	class UMovieSceneSequence*                    Sequence;                                          // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FMovieSceneBindingProxy>        Bindings;                                          // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	class UMovieSceneFolder*                      ParentFolder;                                      // 0x0018(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UMovieSceneFolder*>              Folders;                                           // 0x0020(0x0010)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, UObjectWrapper, NativeAccessSpecifierPublic)
};

// ScriptStruct Sequencer.MovieScenePasteBindingsParams
// 0x0080 (0x0080 - 0x0000)
struct FMovieScenePasteBindingsParams final
{
public:
	TArray<struct FMovieSceneBindingProxy>        Bindings;                                          // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	class UMovieSceneFolder*                      ParentFolder;                                      // 0x0010(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UMovieSceneFolder*>              Folders;                                           // 0x0018(0x0010)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, UObjectWrapper, NativeAccessSpecifierPublic)
	bool                                          bDuplicateExistingActors;                          // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FName, class AActor*>              PastedActors;                                      // 0x0030(0x0050)(Edit, BlueprintVisible, UObjectWrapper, NativeAccessSpecifierPublic)
};

// ScriptStruct Sequencer.SequencerConvertBindingInfo
// 0x0014 (0x0014 - 0x0000)
struct FSequencerConvertBindingInfo final
{
public:
	struct FGuid                                  BindingID;                                         // 0x0000(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         BindingIndex;                                      // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

}

