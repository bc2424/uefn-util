#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ValkyrieEditor

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "UnrealEd_structs.hpp"
#include "VkEngineTypes_structs.hpp"


namespace SDK
{

// Enum ValkyrieEditor.EValkyrieSubclassRule
// NumValues: 0x0004
enum class EValkyrieSubclassRule : uint8
{
	None                                     = 0,
	NativeOnly                               = 1,
	All                                      = 2,
	EValkyrieSubclassRule_MAX                = 3,
};

// Enum ValkyrieEditor.EValkyrieAssetTypeRule
// NumValues: 0x0006
enum class EValkyrieAssetTypeRule : uint8
{
	Create                                   = 0,
	View                                     = 1,
	Import                                   = 2,
	Export                                   = 3,
	Public                                   = 4,
	EValkyrieAssetTypeRule_MAX               = 5,
};

// Enum ValkyrieEditor.EValkyrieReadOnlyAssetsPermission
// NumValues: 0x0004
enum class EValkyrieReadOnlyAssetsPermission : uint8
{
	All                                      = 0,
	None                                     = 1,
	VkAssetsOnly                             = 2,
	EValkyrieReadOnlyAssetsPermission_MAX    = 3,
};

// Enum ValkyrieEditor.EOnlineRegionSelection
// NumValues: 0x0003
enum class EOnlineRegionSelection : uint8
{
	Auto                                     = 0,
	User                                     = 1,
	EOnlineRegionSelection_MAX               = 2,
};

// Enum ValkyrieEditor.EValkyrieLibraryPluginFolderMode
// NumValues: 0x0006
enum class EValkyrieLibraryPluginFolderMode : uint8
{
	Absent                                   = 0,
	PluginName                               = 1,
	CustomPath                               = 2,
	COUNT                                    = 3,
	DEFAULT                                  = 0,
	EValkyrieLibraryPluginFolderMode_MAX     = 4,
};

// Enum ValkyrieEditor.EValkyrieSourceControlSettingsFileVersion
// NumValues: 0x0005
enum class EValkyrieSourceControlSettingsFileVersion : uint8
{
	Invalid                                  = 0,
	Initial                                  = 1,
	LatestPlusOne                            = 2,
	Latest                                   = 1,
	EValkyrieSourceControlSettingsFileVersion_MAX = 3,
};

// ScriptStruct ValkyrieEditor.AssetAdapterInfo
// 0x0060 (0x0060 - 0x0000)
struct FAssetAdapterInfo final
{
public:
	struct FSoftClassPath                         AssetClassPath;                                    // 0x0000(0x0028)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftClassPath                         AdaptedClassPath;                                  // 0x0028(0x0028)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 AdaptedPropertyName;                               // 0x0050(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct ValkyrieEditor.ValkyrieEditorPermissionSettingsAdditionalFeaturesList
// 0x0010 (0x0010 - 0x0000)
struct FValkyrieEditorPermissionSettingsAdditionalFeaturesList final
{
public:
	TArray<class FString>                         AdditionalFeatures;                                // 0x0000(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// ScriptStruct ValkyrieEditor.ValkyrieAllowedAssetType
// 0x0018 (0x0018 - 0x0000)
struct FValkyrieAllowedAssetType final
{
public:
	TArray<EValkyrieAssetTypeRule>                Rules;                                             // 0x0000(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	EValkyrieSubclassRule                         Subclasses;                                        // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct ValkyrieEditor.ValkyrieAllowedClass
// 0x0003 (0x0003 - 0x0000)
struct FValkyrieAllowedClass final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Deny;                                              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EValkyrieSubclassRule                         Subclasses;                                        // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct ValkyrieEditor.ValkyrieAllowedNameList
// 0x0010 (0x0010 - 0x0000)
struct FValkyrieAllowedNameList final
{
public:
	TArray<class FName>                           Names;                                             // 0x0000(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// ScriptStruct ValkyrieEditor.ValkyrieAllowDenyList
// 0x0020 (0x0020 - 0x0000)
struct FValkyrieAllowDenyList
{
public:
	TArray<class FName>                           AllowList;                                         // 0x0000(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FName>                           DenyList;                                          // 0x0010(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// ScriptStruct ValkyrieEditor.ValkyrieMenuRules
// 0x0008 (0x0028 - 0x0020)
struct FValkyrieMenuRules final : public FValkyrieAllowDenyList
{
public:
	bool                                          AllowExtenders;                                    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct ValkyrieEditor.AllowedPlacementToolEntries
// 0x0020 (0x0020 - 0x0000)
struct FAllowedPlacementToolEntries final
{
public:
	TArray<class FName>                           AllowedCategories;                                 // 0x0000(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FName>                           AllowedClasses;                                    // 0x0010(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// ScriptStruct ValkyrieEditor.ValkyrieTemplateMapInfo
// 0x00B0 (0x00B0 - 0x0000)
struct FValkyrieTemplateMapInfo final
{
public:
	struct FTemplateMapInfo                       BaseInfo;                                          // 0x0000(0x00A0)(NativeAccessSpecifierPublic)
	class FText                                   Description;                                       // 0x00A0(0x0010)(Config, NativeAccessSpecifierPublic)
};

// ScriptStruct ValkyrieEditor.ValkyrieEditorPermissionSettings_Editor
// 0x02A8 (0x02A8 - 0x0000)
struct FValkyrieEditorPermissionSettings_Editor final
{
public:
	TMap<class FString, struct FValkyrieAllowedAssetType> AllowedAssetTypes;                                 // 0x0000(0x0050)(NativeAccessSpecifierPublic)
	TMap<class FString, struct FValkyrieAllowedClass> AllowedClasses;                                    // 0x0050(0x0050)(NativeAccessSpecifierPublic)
	TArray<class FString>                         VerseScopesToShowAssetsFor;                        // 0x00A0(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          bShowConsole;                                      // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnablePropertyMatrix;                             // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShowValidateProjectMenuEntry;                     // 0x00B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_B3[0x5];                                       // 0x00B3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           AllowedEditorModes;                                // 0x00B8(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FName>                           AllowedImportExtensions;                           // 0x00C8(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FString>                         AllowedContentBrowserFolders;                      // 0x00D8(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FString>                         AllowedGatherFolders;                              // 0x00E8(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FString>                         AllowedGatherAssets;                               // 0x00F8(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          bAllowGatherCreativePlots;                         // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FValkyrieTemplateMapInfo>       AdditionalTemplateMaps;                            // 0x0110(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FClassPickerDefaults>           AdditionalClassPickerDefaults;                     // 0x0120(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	TMap<class FName, struct FValkyrieAllowedNameList> AllowedEditorPreferencesSections;                  // 0x0130(0x0050)(NativeAccessSpecifierPublic)
	TMap<class FName, struct FValkyrieMenuRules>  AllowedMenus;                                      // 0x0180(0x0050)(NativeAccessSpecifierPublic)
	TMap<class FName, struct FValkyrieAllowDenyList> AllowedTabs;                                       // 0x01D0(0x0050)(NativeAccessSpecifierPublic)
	TMap<class FName, struct FValkyrieAllowDenyList> AllowedInputCommands;                              // 0x0220(0x0050)(NativeAccessSpecifierPublic)
	struct FAllowedPlacementToolEntries           AllowedPlacementToolEntries;                       // 0x0270(0x0020)(NativeAccessSpecifierPublic)
	EValkyrieReadOnlyAssetsPermission             ReadOnlyAssetsPermission;                          // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_291[0x7];                                      // 0x0291(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           DefaultLogCategories;                              // 0x0298(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// ScriptStruct ValkyrieEditor.ValkyrieEditorPermissionSettings_Project
// 0x0020 (0x0020 - 0x0000)
struct FValkyrieEditorPermissionSettings_Project final
{
public:
	bool                                          bPublishingEnabled;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bLocalizationEnabled;                              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bProjectExternalContentAllowed;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAddProjectExternalContentAllowed;                 // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FValkyrieProjectReferenceDescriptor> DefaultProjectReferencedContent;                   // 0x0008(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          bMultiPluginProjectAllowed;                        // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bMultiProjectAllowed;                              // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bModuleIdNamedPlugins;                             // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bWorkspaceAllowed;                                 // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bProjectRenameAllowed;                             // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bProjectKindExposed;                               // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1E[0x2];                                       // 0x001E(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct ValkyrieEditor.ValkyrieEditorPermissionSettings_Blueprints
// 0x0048 (0x0048 - 0x0000)
struct FValkyrieEditorPermissionSettings_Blueprints final
{
public:
	bool                                          bEnableBlueprintGraph;                             // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         AllowedFunctions;                                  // 0x0008(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FString>                         AllowedEnums;                                      // 0x0018(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FString>                         AllowedStructs;                                    // 0x0028(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FName>                           AllowedPinCategories;                              // 0x0038(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// ScriptStruct ValkyrieEditor.ValkyrieEditorPermissionSettings_Animation
// 0x0028 (0x0028 - 0x0000)
struct FValkyrieEditorPermissionSettings_Animation final
{
public:
	TArray<class FName>                           AllowedAnimationEditorTracks;                      // 0x0000(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          bEnableAnimationBlueprints;                        // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnableAnimationBlueprintEventGraphs;              // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnableAnimationBlueprintMacros;                   // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnableAnimationBlueprintDelegates;                // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           AnimationBlueprintBaseFunctionOverridesAllowList;  // 0x0018(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// ScriptStruct ValkyrieEditor.ValkyrieEditorPermissionSettings_Audio
// 0x0018 (0x0018 - 0x0000)
struct FValkyrieEditorPermissionSettings_Audio final
{
public:
	float                                         MaxSoundWaveImportLengthSeconds;                   // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnableLoadingBehaviorForceInline;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         AllowedCompressionTypes;                           // 0x0008(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// ScriptStruct ValkyrieEditor.ValkyrieEditorPermissionSettings_UMG
// 0x0050 (0x0050 - 0x0000)
struct FValkyrieEditorPermissionSettings_UMG final
{
public:
	TArray<class FName>                           AllowedPaletteCategories;                          // 0x0000(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FString>                         AllowedPaletteWidgets;                             // 0x0010(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FString>                         FavoriteWidgetParentClasses;                       // 0x0020(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FString>                         AllowedMVVMConversionClass;                        // 0x0030(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FString>                         DeniedMVVMConversionClass;                         // 0x0040(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// ScriptStruct ValkyrieEditor.ValkyrieEditorPermissionSettings_EditorUtility
// 0x00C0 (0x00C0 - 0x0000)
struct FValkyrieEditorPermissionSettings_EditorUtility final
{
public:
	TMap<class FName, struct FValkyrieAllowedNameList> AllowedEditorUtilityWidgets;                       // 0x0000(0x0050)(NativeAccessSpecifierPublic)
	TMap<class FName, struct FValkyrieAllowedNameList> AllowedEditorUtilityActions;                       // 0x0050(0x0050)(NativeAccessSpecifierPublic)
	TArray<class FName>                           AllowedEditorUtilityActorActions;                  // 0x00A0(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FName>                           AllowedEditorUtilityAssetActions;                  // 0x00B0(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// ScriptStruct ValkyrieEditor.ValkyrieEditorPermissionSettings_Analytics
// 0x0010 (0x0010 - 0x0000)
struct FValkyrieEditorPermissionSettings_Analytics final
{
public:
	TArray<class FString>                         AllowedProjectTemplateNames;                       // 0x0000(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// ScriptStruct ValkyrieEditor.ValkyrieEditorPermissionSettings_WorldPartition
// 0x0001 (0x0001 - 0x0000)
struct FValkyrieEditorPermissionSettings_WorldPartition final
{
public:
	bool                                          bEnableLevelInstanceSupport;                       // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct ValkyrieEditor.ValkyrieExperimentalBaseSetting
// 0x0010 (0x0010 - 0x0000)
struct alignas(0x08) FValkyrieExperimentalBaseSetting
{
public:
	uint8                                         Pad_0[0x10];                                       // 0x0000(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct ValkyrieEditor.ValkyrieExperimentalContentSetting
// 0x0008 (0x0018 - 0x0010)
struct FValkyrieExperimentalContentSetting final : public FValkyrieExperimentalBaseSetting
{
public:
	bool                                          bIsExperimentalContentAllowed;                     // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct ValkyrieEditor.ValkyrieExperimentalSceneGraphSetting
// 0x0008 (0x0018 - 0x0010)
struct FValkyrieExperimentalSceneGraphSetting final : public FValkyrieExperimentalBaseSetting
{
public:
	bool                                          bIsSceneGraphSystemAllowed;                        // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct ValkyrieEditor.ValkyrieExperimentalSettings
// 0x0030 (0x0030 - 0x0000)
struct FValkyrieExperimentalSettings final
{
public:
	struct FValkyrieExperimentalSceneGraphSetting SceneGraph;                                        // 0x0000(0x0018)(NativeAccessSpecifierPublic)
	struct FValkyrieExperimentalContentSetting    ExperimentalContent;                               // 0x0018(0x0018)(NativeAccessSpecifierPublic)
};

// ScriptStruct ValkyrieEditor.ValkyrieModuleCookedSizeStats
// 0x00F8 (0x00F8 - 0x0000)
struct FValkyrieModuleCookedSizeStats final
{
public:
	int64                                         SizeBytes;                                         // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<struct FTopLevelAssetPath, int64>        PerTypeSizesBytes;                                 // 0x0008(0x0050)(NativeAccessSpecifierPublic)
	TMap<class FName, int64>                      PerPackageSizesBytes;                              // 0x0058(0x0050)(NativeAccessSpecifierPublic)
	TMap<class FName, struct FTopLevelAssetPath>  PerPackagePrimaryTypes;                            // 0x00A8(0x0050)(NativeAccessSpecifierPublic)
};

// ScriptStruct ValkyrieEditor.ValkyrieModuleDependencySizeStats
// 0x0030 (0x0030 - 0x0000)
struct FValkyrieModuleDependencySizeStats final
{
public:
	struct FVkModuleVersion                       ModuleVersionId;                                   // 0x0000(0x0018)(HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ModuleName;                                        // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         DownloadSizeBytes;                                 // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct ValkyrieEditor.ValkyrieProjectSizeStats
// 0x0140 (0x0140 - 0x0000)
struct FValkyrieProjectSizeStats final
{
public:
	struct FDateTime                              LastUploaded;                                      // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVkModuleVersion                       RootModuleVersionId;                               // 0x0008(0x0018)(HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         UploadSizeBytes;                                   // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         DownloadSizeBytes;                                 // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FValkyrieModuleCookedSizeStats         CookedSize;                                        // 0x0030(0x00F8)(NativeAccessSpecifierPublic)
	TArray<struct FValkyrieModuleDependencySizeStats> DependencySizes;                                   // 0x0128(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          bIsValid;                                          // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct ValkyrieEditor.ValkyrieTemplateProjectLocalizationInfo
// 0x0030 (0x0038 - 0x0008)
struct FValkyrieTemplateProjectLocalizationInfo final : public FTableRowBase
{
public:
	class FString                                 ProjectFilePath;                                   // 0x0008(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   ProjectTitle;                                      // 0x0018(0x0010)(Edit, NativeAccessSpecifierPublic)
	class FText                                   ProjectDescription;                                // 0x0028(0x0010)(Edit, NativeAccessSpecifierPublic)
};

// ScriptStruct ValkyrieEditor.ValkyrieStructRules
// 0x0001 (0x0001 - 0x0000)
struct FValkyrieStructRules final
{
public:
	uint8                                         Pad_0[0x1];                                        // 0x0000(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct ValkyrieEditor.ValkyrieEditorPermission
// 0x0048 (0x0048 - 0x0000)
struct FValkyrieEditorPermission final
{
public:
	class FString                                 Role;                                              // 0x0000(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 EntitlementId;                                     // 0x0010(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 JsonFileRelativeToProjectDir;                      // 0x0020(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                         IncludedRoles;                                     // 0x0030(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          bDefaultToDisabled;                                // 0x0040(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct ValkyrieEditor.ValkyrieEditorEnvironmentUrl
// 0x0040 (0x0040 - 0x0000)
struct FValkyrieEditorEnvironmentUrl final
{
public:
	class FString                                 Live;                                              // 0x0000(0x0010)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Prod;                                              // 0x0010(0x0010)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Cert;                                              // 0x0020(0x0010)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 GameDev;                                           // 0x0030(0x0010)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct ValkyrieEditor.ValkyriePluginSettings
// 0x0018 (0x0018 - 0x0000)
struct FValkyriePluginSettings final
{
public:
	EValkyrieLibraryPluginFolderMode              LibraryFolderMode;                                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 LibraryCustomPath;                                 // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct ValkyrieEditor.GameFeaturePluginDescriptor
// 0x0001 (0x0001 - 0x0000)
struct FGameFeaturePluginDescriptor final
{
public:
	bool                                          BuiltInAutoActivate;                               // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct ValkyrieEditor.ValkyriePluginDescriptor
// 0x02C8 (0x02C8 - 0x0000)
struct FValkyriePluginDescriptor final
{
public:
	struct FValkyriePluginSettings                ValkyrieSettings;                                  // 0x0000(0x0018)(NativeAccessSpecifierPublic)
	struct FGameFeaturePluginDescriptor           GameFeaturePluginDescriptor;                       // 0x0018(0x0001)(NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x2AF];                                     // 0x0019(0x02AF)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct ValkyrieEditor.ValkyrieProjectContentServiceCreationParams
// 0x0010 (0x0010 - 0x0000)
struct FValkyrieProjectContentServiceCreationParams final
{
public:
	class FString                                 TeamId;                                            // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct ValkyrieEditor.ValkyriePropertyPermissionList
// 0x0028 (0x0028 - 0x0000)
struct FValkyriePropertyPermissionList
{
public:
	TArray<class FName>                           AllowList;                                         // 0x0000(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FName>                           DenyList;                                          // 0x0010(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          bAllowListAllProperties;                           // 0x0020(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAllowListAllSubclassProperties;                   // 0x0021(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct ValkyrieEditor.ValkyrieClassPropertyPermissionList
// 0x0030 (0x0058 - 0x0028)
struct FValkyrieClassPropertyPermissionList final : public FValkyriePropertyPermissionList
{
public:
	TSoftClassPtr<class UClass>                   Type;                                              // 0x0028(0x0030)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct ValkyrieEditor.ValkyrieStructPropertyPermissionList
// 0x0008 (0x0030 - 0x0028)
struct FValkyrieStructPropertyPermissionList final : public FValkyriePropertyPermissionList
{
public:
	class UScriptStruct*                          Type;                                              // 0x0028(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct ValkyrieEditor.ValkyrieSourceControlSettings
// 0x0068 (0x0068 - 0x0000)
struct FValkyrieSourceControlSettings final
{
public:
	uint8                                         FileVersion;                                       // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ProviderName;                                      // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<class FString, class FString>            ProviderParameters;                                // 0x0018(0x0050)(NativeAccessSpecifierPrivate)
};

}

