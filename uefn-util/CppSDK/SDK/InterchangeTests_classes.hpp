#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: InterchangeTests

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "CoreUObject_classes.hpp"
#include "Engine_structs.hpp"
#include "InterchangeTests_structs.hpp"


namespace SDK
{

// Class InterchangeTests.InterchangeImportTestSettings
// 0x0020 (0x0050 - 0x0030)
class UInterchangeImportTestSettings final : public UObject
{
public:
	class FString                                 ImportTestsPath;                                   // 0x0030(0x0010)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                         ImportFiles;                                       // 0x0040(0x0010)(Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"InterchangeImportTestSettings">();
	}
	static class UInterchangeImportTestSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UInterchangeImportTestSettings>();
	}
};

// Class InterchangeTests.ImportTestFunctionsBase
// 0x0000 (0x0030 - 0x0030)
class UImportTestFunctionsBase : public UObject
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ImportTestFunctionsBase">();
	}
	static class UImportTestFunctionsBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UImportTestFunctionsBase>();
	}
};

// Class InterchangeTests.ActorImportTestFunctions
// 0x0000 (0x0030 - 0x0030)
class UActorImportTestFunctions : public UImportTestFunctionsBase
{
public:
	static struct FInterchangeTestFunctionResult CheckActorClass(const class AActor* Actor, TSubclassOf<class AActor> ExpectedClass);
	static struct FInterchangeTestFunctionResult CheckActorClassCount(const TArray<class AActor*>& Actors, TSubclassOf<class AActor> Class_0, int32 ExpectedNumberOfActors);
	static struct FInterchangeTestFunctionResult CheckActorPropertyValue(const class AActor* Actor, const class FString& PropertyName, bool bUseRegexToMatchValue, const class FString& ExpectedValue);
	static struct FInterchangeTestFunctionResult CheckComponentPropertyValue(const class AActor* Actor, const class FString& ComponentName, const class FString& PropertyName, bool bUseRegexToMatchValue, const class FString& ExpectedValue);
	static struct FInterchangeTestFunctionResult CheckImportedActorCount(const TArray<class AActor*>& Actors, int32 ExpectedNumberOfImportedActors);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ActorImportTestFunctions">();
	}
	static class UActorImportTestFunctions* GetDefaultObj()
	{
		return GetDefaultObjImpl<UActorImportTestFunctions>();
	}
};

// Class InterchangeTests.LightImportTestFunctions
// 0x0000 (0x0030 - 0x0030)
class ULightImportTestFunctions : public UActorImportTestFunctions
{
public:
	static struct FInterchangeTestFunctionResult CheckLightColor(class ALight* Light, const struct FLinearColor& ExpectedLightColor);
	static struct FInterchangeTestFunctionResult CheckLightDirection(class ALight* Light, const struct FVector& ExpectedLightDirection);
	static struct FInterchangeTestFunctionResult CheckLightIntensity(class ALight* Light, float ExpectedLightIntensity);
	static struct FInterchangeTestFunctionResult CheckLightPosition(class ALight* Light, const struct FVector& ExpectedLightPosition);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"LightImportTestFunctions">();
	}
	static class ULightImportTestFunctions* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULightImportTestFunctions>();
	}
};

// Class InterchangeTests.MaterialXTestFunctions
// 0x0000 (0x0030 - 0x0030)
class UMaterialXTestFunctions final : public UImportTestFunctionsBase
{
public:
	static struct FInterchangeTestFunctionResult CheckConnectedInputCount(const class UMaterialInterface* MaterialInterface, int32 ExpectedNumber);
	static struct FInterchangeTestFunctionResult CheckInputConnected(const class UMaterialInterface* MaterialInterface, const class FString& InputName, bool bIsConnected);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MaterialXTestFunctions">();
	}
	static class UMaterialXTestFunctions* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMaterialXTestFunctions>();
	}
};

// Class InterchangeTests.PointLightImportTestFunctions
// 0x0000 (0x0030 - 0x0030)
class UPointLightImportTestFunctions : public ULightImportTestFunctions
{
public:
	static struct FInterchangeTestFunctionResult CheckLightFalloffExponent(class APointLight* Light, float ExpectedLightFalloff);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PointLightImportTestFunctions">();
	}
	static class UPointLightImportTestFunctions* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPointLightImportTestFunctions>();
	}
};

// Class InterchangeTests.SpotLightImportTestFunctions
// 0x0000 (0x0030 - 0x0030)
class USpotLightImportTestFunctions final : public UPointLightImportTestFunctions
{
public:
	static struct FInterchangeTestFunctionResult CheckLightInnerConeAngle(class ASpotLight* Light, float ExpectedLightInnerConeAngle);
	static struct FInterchangeTestFunctionResult CheckLightOuterConeAngle(class ASpotLight* Light, float ExpectedLightOuterConeAngle);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SpotLightImportTestFunctions">();
	}
	static class USpotLightImportTestFunctions* GetDefaultObj()
	{
		return GetDefaultObjImpl<USpotLightImportTestFunctions>();
	}
};

// Class InterchangeTests.AnimationImportTestFunctions
// 0x0000 (0x0030 - 0x0030)
class UAnimationImportTestFunctions final : public UImportTestFunctionsBase
{
public:
	static struct FInterchangeTestFunctionResult CheckAnimationFrameNumber(class UAnimSequence* AnimSequence, int32 ExpectedFrameNumber);
	static struct FInterchangeTestFunctionResult CheckAnimationLength(class UAnimSequence* AnimSequence, float ExpectedAnimationLength);
	static struct FInterchangeTestFunctionResult CheckCurveKeyArriveTangent(class UAnimSequence* AnimSequence, const class FString& CurveName, int32 KeyIndex, float ExpectedCurveKeyArriveTangent);
	static struct FInterchangeTestFunctionResult CheckCurveKeyArriveTangentWeight(class UAnimSequence* AnimSequence, const class FString& CurveName, int32 KeyIndex, float ExpectedCurveKeyArriveTangentWeight);
	static struct FInterchangeTestFunctionResult CheckCurveKeyLeaveTangent(class UAnimSequence* AnimSequence, const class FString& CurveName, int32 KeyIndex, float ExpectedCurveKeyLeaveTangent);
	static struct FInterchangeTestFunctionResult CheckCurveKeyLeaveTangentWeight(class UAnimSequence* AnimSequence, const class FString& CurveName, int32 KeyIndex, float ExpectedCurveKeyLeaveTangentWeight);
	static struct FInterchangeTestFunctionResult CheckCurveKeyTime(class UAnimSequence* AnimSequence, const class FString& CurveName, int32 KeyIndex, float ExpectedCurveKeyTime);
	static struct FInterchangeTestFunctionResult CheckCurveKeyValue(class UAnimSequence* AnimSequence, const class FString& CurveName, int32 KeyIndex, float ExpectedCurveKeyValue);
	static struct FInterchangeTestFunctionResult CheckImportedAnimSequenceCount(const TArray<class UAnimSequence*>& AnimSequences, int32 ExpectedNumberOfImportedAnimSequences);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AnimationImportTestFunctions">();
	}
	static class UAnimationImportTestFunctions* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimationImportTestFunctions>();
	}
};

// Class InterchangeTests.AssetImportTestFunctions
// 0x0000 (0x0030 - 0x0030)
class UAssetImportTestFunctions final : public UImportTestFunctionsBase
{
public:
	static struct FInterchangeTestFunctionResult CheckImportedMetadataCount(const class UObject* Object, const int32 ExpectedNumberOfMetadataForThisObject);
	static struct FInterchangeTestFunctionResult CheckMetadataExist(const class UObject* Object, const class FString& ExpectedMetadataKey);
	static struct FInterchangeTestFunctionResult CheckMetadataValue(const class UObject* Object, const class FString& ExpectedMetadataKey, const class FString& ExpectedMetadataValue);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AssetImportTestFunctions">();
	}
	static class UAssetImportTestFunctions* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAssetImportTestFunctions>();
	}
};

// Class InterchangeTests.InterchangeResultImportTestFunctions
// 0x0000 (0x0030 - 0x0030)
class UInterchangeResultImportTestFunctions final : public UImportTestFunctionsBase
{
public:
	static struct FInterchangeTestFunctionResult CheckIfErrorOrWarningWasGenerated(class UInterchangeResultsContainer* ResultsContainer, TSubclassOf<class UInterchangeResult> ErrorOrWarningClass);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"InterchangeResultImportTestFunctions">();
	}
	static class UInterchangeResultImportTestFunctions* GetDefaultObj()
	{
		return GetDefaultObjImpl<UInterchangeResultImportTestFunctions>();
	}
};

// Class InterchangeTests.LevelSequenceImportTestFunctions
// 0x0000 (0x0030 - 0x0030)
class ULevelSequenceImportTestFunctions final : public UImportTestFunctionsBase
{
public:
	static struct FInterchangeTestFunctionResult CheckLevelSequenceCount(const TArray<class ULevelSequence*>& LevelSequences, int32 ExpectedNumberOfLevelSequences);
	static struct FInterchangeTestFunctionResult CheckSectionCount(const class ULevelSequence* LevelSequence, int32 ExpectedNumberOfSections);
	static struct FInterchangeTestFunctionResult CheckSectionInterpolationMode(const class ULevelSequence* LevelSequence, int32 SectionIndex, ERichCurveInterpMode ExpectedInterpolationMode);
	static struct FInterchangeTestFunctionResult CheckSequenceLength(const class ULevelSequence* LevelSequence, float ExpectedLevelSequenceLength);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"LevelSequenceImportTestFunctions">();
	}
	static class ULevelSequenceImportTestFunctions* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULevelSequenceImportTestFunctions>();
	}
};

// Class InterchangeTests.LevelVariantSetsImportTestFunctions
// 0x0000 (0x0030 - 0x0030)
class ULevelVariantSetsImportTestFunctions final : public UImportTestFunctionsBase
{
public:
	static struct FInterchangeTestFunctionResult CheckBindingsCount(class ULevelVariantSets* LevelVariantSets, const class FString& VariantSetName, const class FString& VariantName, int32 ExpectedNumberOfBindings);
	static struct FInterchangeTestFunctionResult CheckLevelVariantSetsCount(const TArray<class ULevelVariantSets*>& LevelVariantSetsAssets, int32 ExpectedNumberOfLevelVariantSets);
	static struct FInterchangeTestFunctionResult CheckVariantsCount(class ULevelVariantSets* LevelVariantSets, const class FString& VariantSetName, int32 ExpectedNumberOfVariants);
	static struct FInterchangeTestFunctionResult CheckVariantSetsCount(class ULevelVariantSets* LevelVariantSets, int32 ExpectedNumberOfVariantSets);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"LevelVariantSetsImportTestFunctions">();
	}
	static class ULevelVariantSetsImportTestFunctions* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULevelVariantSetsImportTestFunctions>();
	}
};

// Class InterchangeTests.MaterialImportTestFunctions
// 0x0000 (0x0030 - 0x0030)
class UMaterialImportTestFunctions final : public UImportTestFunctionsBase
{
public:
	static struct FInterchangeTestFunctionResult CheckBlendMode(const class UMaterialInterface* MaterialInterface, EBlendMode ExpectedBlendMode);
	static struct FInterchangeTestFunctionResult CheckImportedMaterialCount(const TArray<class UMaterialInterface*>& MaterialInterfaces, int32 ExpectedNumberOfImportedMaterials);
	static struct FInterchangeTestFunctionResult CheckImportedMaterialInstanceCount(const TArray<class UMaterialInterface*>& MaterialInterfaces, int32 ExpectedNumberOfImportedMaterialInstances);
	static struct FInterchangeTestFunctionResult CheckIsTwoSided(const class UMaterialInterface* MaterialInterface, bool ExpectedIsTwoSided);
	static struct FInterchangeTestFunctionResult CheckOpacityMaskClipValue(const class UMaterialInterface* MaterialInterface, float ExpectedOpacityMaskClipValue);
	static struct FInterchangeTestFunctionResult CheckScalarParameter(const class UMaterialInterface* MaterialInterface, const class FString& ParameterName, float ExpectedParameterValue);
	static struct FInterchangeTestFunctionResult CheckShadingModel(const class UMaterialInterface* MaterialInterface, EMaterialShadingModel ExpectedShadingModel);
	static struct FInterchangeTestFunctionResult CheckVectorParameter(const class UMaterialInterface* MaterialInterface, const class FString& ParameterName, const struct FLinearColor& ExpectedParameterValue);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MaterialImportTestFunctions">();
	}
	static class UMaterialImportTestFunctions* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMaterialImportTestFunctions>();
	}
};

// Class InterchangeTests.SkeletalMeshImportTestFunctions
// 0x0000 (0x0030 - 0x0030)
class USkeletalMeshImportTestFunctions final : public UImportTestFunctionsBase
{
public:
	static struct FInterchangeTestFunctionResult CheckBoneCount(class USkeletalMesh* Mesh, int32 ExpectedNumberOfBones);
	static struct FInterchangeTestFunctionResult CheckBonePosition(class USkeletalMesh* Mesh, int32 BoneIndex, const struct FVector& ExpectedBonePosition);
	static struct FInterchangeTestFunctionResult CheckImportedSkeletalMeshCount(const TArray<class USkeletalMesh*>& Meshes, int32 ExpectedNumberOfImportedSkeletalMeshes);
	static struct FInterchangeTestFunctionResult CheckLodCount(class USkeletalMesh* Mesh, int32 ExpectedNumberOfLods);
	static struct FInterchangeTestFunctionResult CheckMaterialSlotCount(class USkeletalMesh* Mesh, int32 ExpectedNumberOfMaterialSlots);
	static struct FInterchangeTestFunctionResult CheckRenderTriangleCount(class USkeletalMesh* Mesh, int32 LodIndex, int32 ExpectedNumberOfRenderTriangles);
	static struct FInterchangeTestFunctionResult CheckRenderVertexCount(class USkeletalMesh* Mesh, int32 LodIndex, int32 ExpectedNumberOfRenderVertices);
	static struct FInterchangeTestFunctionResult CheckSectionCount(class USkeletalMesh* Mesh, int32 LodIndex, int32 ExpectedNumberOfSections);
	static struct FInterchangeTestFunctionResult CheckSectionImportedMaterialSlotName(class USkeletalMesh* Mesh, int32 LodIndex, int32 SectionIndex, const class FString& ExpectedImportedMaterialSlotName);
	static struct FInterchangeTestFunctionResult CheckSectionMaterialName(class USkeletalMesh* Mesh, int32 LodIndex, int32 SectionIndex, const class FString& ExpectedMaterialName);
	static struct FInterchangeTestFunctionResult CheckSkinnedVertexCountForBone(class USkeletalMesh* Mesh, const class FString& BoneName, bool bTestFirstAlternateProfile, int32 ExpectedSkinnedVertexCount);
	static struct FInterchangeTestFunctionResult CheckTriangleCountInSection(class USkeletalMesh* Mesh, int32 LodIndex, int32 SectionIndex, int32 ExpectedNumberOfTriangles);
	static struct FInterchangeTestFunctionResult CheckUVChannelCount(class USkeletalMesh* Mesh, int32 LodIndex, int32 ExpectedNumberOfUVChannels);
	static struct FInterchangeTestFunctionResult CheckVertexIndexNormal(class USkeletalMesh* Mesh, int32 LodIndex, int32 VertexIndex, const struct FVector& ExpectedVertexNormal);
	static struct FInterchangeTestFunctionResult CheckVertexIndexPosition(class USkeletalMesh* Mesh, int32 LodIndex, int32 VertexIndex, const struct FVector& ExpectedVertexPosition);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SkeletalMeshImportTestFunctions">();
	}
	static class USkeletalMeshImportTestFunctions* GetDefaultObj()
	{
		return GetDefaultObjImpl<USkeletalMeshImportTestFunctions>();
	}
};

// Class InterchangeTests.StaticMeshImportTestFunctions
// 0x0000 (0x0030 - 0x0030)
class UStaticMeshImportTestFunctions final : public UImportTestFunctionsBase
{
public:
	static struct FInterchangeTestFunctionResult CheckAgainstGroundTruth(class UStaticMesh* Mesh, TSoftObjectPtr<class UStaticMesh> MeshToCompare, bool bCheckVertexCountEqual, bool bCheckTriangleCountEqual, bool bCheckUVChannelCountEqual, bool bCheckCollisionPrimitiveCountEqual, bool bCheckVertexPositionsEqual, bool bCheckNormalsEqual);
	static struct FInterchangeTestFunctionResult CheckBoundingBoxSize(class UStaticMesh* Mesh, const struct FVector3f& ExpectedSize);
	static struct FInterchangeTestFunctionResult CheckBoundingBoxSizeGreaterThan(class UStaticMesh* Mesh, const struct FVector3f& GreaterThanSize);
	static struct FInterchangeTestFunctionResult CheckBoundingBoxSizeLessThan(class UStaticMesh* Mesh, const struct FVector3f& LessThanSize);
	static struct FInterchangeTestFunctionResult CheckBuildSettings(class UStaticMesh* Mesh, int32 LodIndex, const struct FMeshBuildSettings& ExpectedBuildSettings);
	static struct FInterchangeTestFunctionResult CheckImportedMaterialSlotName(class UStaticMesh* Mesh, int32 MaterialIndex, const class FString& ExpectedImportedMaterialSlotName);
	static struct FInterchangeTestFunctionResult CheckImportedStaticMeshCount(const TArray<class UStaticMesh*>& Meshes, int32 ExpectedNumberOfImportedStaticMeshes);
	static struct FInterchangeTestFunctionResult CheckLodCount(class UStaticMesh* Mesh, int32 ExpectedNumberOfLods);
	static struct FInterchangeTestFunctionResult CheckMaterialSlotCount(class UStaticMesh* Mesh, int32 ExpectedNumberOfMaterialSlots);
	static struct FInterchangeTestFunctionResult CheckNaniteSettings(class UStaticMesh* Mesh, const struct FMeshNaniteSettings& ExpectedNaniteSettings);
	static struct FInterchangeTestFunctionResult CheckPolygonCount(class UStaticMesh* Mesh, int32 LodIndex, int32 ExpectedNumberOfPolygons);
	static struct FInterchangeTestFunctionResult CheckPolygonCountInPolygonGroup(class UStaticMesh* Mesh, int32 LodIndex, int32 PolygonGroupIndex, int32 ExpectedNumberOfPolygons);
	static struct FInterchangeTestFunctionResult CheckPolygonGroupCount(class UStaticMesh* Mesh, int32 LodIndex, int32 ExpectedNumberOfPolygonGroups);
	static struct FInterchangeTestFunctionResult CheckPolygonGroupImportedMaterialSlotName(class UStaticMesh* Mesh, int32 LodIndex, int32 PolygonGroupIndex, const class FString& ExpectedImportedMaterialSlotName);
	static struct FInterchangeTestFunctionResult CheckRenderHasVertexColors(class UStaticMesh* Mesh, int32 LodIndex, bool bExpectedHasVertexColors);
	static struct FInterchangeTestFunctionResult CheckRenderTriangleCount(class UStaticMesh* Mesh, int32 LodIndex, int32 ExpectedTotalNumberOfTriangles);
	static struct FInterchangeTestFunctionResult CheckRenderUVChannelCount(class UStaticMesh* Mesh, int32 LodIndex, int32 ExpectedNumberOfUVChannels);
	static struct FInterchangeTestFunctionResult CheckRenderVertexCount(class UStaticMesh* Mesh, int32 LodIndex, int32 ExpectedNumberOfRenderVertices);
	static struct FInterchangeTestFunctionResult CheckRenderVertexIndexColor(class UStaticMesh* Mesh, int32 LodIndex, int32 VertexIndex, const struct FColor& ExpectedVertexColor);
	static struct FInterchangeTestFunctionResult CheckRenderVertexIndexNormal(class UStaticMesh* Mesh, int32 LodIndex, int32 VertexIndex, const struct FVector4f& ExpectedVertexNormal);
	static struct FInterchangeTestFunctionResult CheckSectionCount(class UStaticMesh* Mesh, int32 LodIndex, int32 ExpectedNumberOfSections);
	static struct FInterchangeTestFunctionResult CheckSectionImportedMaterialSlotName(class UStaticMesh* Mesh, int32 LodIndex, int32 SectionIndex, const class FString& ExpectedImportedMaterialSlotName);
	static struct FInterchangeTestFunctionResult CheckSectionMaterialIndex(class UStaticMesh* Mesh, int32 LodIndex, int32 SectionIndex, int32 ExpectedMaterialIndex);
	static struct FInterchangeTestFunctionResult CheckSectionMaterialName(class UStaticMesh* Mesh, int32 LodIndex, int32 SectionIndex, const class FString& ExpectedMaterialName);
	static struct FInterchangeTestFunctionResult CheckSimpleCollisionPrimitiveCount(class UStaticMesh* Mesh, int32 ExpectedSphereElementCount, int32 ExpectedBoxElementCount, int32 ExpectedCapsuleElementCount, int32 ExpectedConvexElementCount, int32 ExpectedTaperedCapsuleElementCount);
	static struct FInterchangeTestFunctionResult CheckSocketCount(class UStaticMesh* Mesh, int32 ExpectedSocketCount);
	static struct FInterchangeTestFunctionResult CheckSocketLocation(class UStaticMesh* Mesh, int32 SocketIndex, const struct FVector& ExpectedSocketLocation);
	static struct FInterchangeTestFunctionResult CheckSocketName(class UStaticMesh* Mesh, int32 SocketIndex, const class FString& ExpectedSocketName);
	static struct FInterchangeTestFunctionResult CheckThatMeshHasQuadsOrNgons(class UStaticMesh* Mesh, int32 LodIndex, bool bMeshHasQuadsOrNgons);
	static struct FInterchangeTestFunctionResult CheckTriangleCount(class UStaticMesh* Mesh, int32 LodIndex, int32 ExpectedTotalNumberOfTriangles);
	static struct FInterchangeTestFunctionResult CheckTriangleCountInPolygonGroup(class UStaticMesh* Mesh, int32 LodIndex, int32 PolygonGroupIndex, int32 ExpectedNumberOfTriangles);
	static struct FInterchangeTestFunctionResult CheckUVChannelCount(class UStaticMesh* Mesh, int32 LodIndex, int32 ExpectedNumberOfUVChannels);
	static struct FInterchangeTestFunctionResult CheckVertexCount(class UStaticMesh* Mesh, int32 LodIndex, int32 ExpectedNumberOfVertices);
	static struct FInterchangeTestFunctionResult CheckVertexIndexPosition(class UStaticMesh* Mesh, int32 LodIndex, int32 VertexIndex, const struct FVector& ExpectedVertexPosition);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"StaticMeshImportTestFunctions">();
	}
	static class UStaticMeshImportTestFunctions* GetDefaultObj()
	{
		return GetDefaultObjImpl<UStaticMeshImportTestFunctions>();
	}
};

// Class InterchangeTests.TextureImportTestFunctions
// 0x0000 (0x0030 - 0x0030)
class UTextureImportTestFunctions final : public UImportTestFunctionsBase
{
public:
	static struct FInterchangeTestFunctionResult CheckImportedTextureCount(const TArray<class UTexture*>& Textures, int32 ExpectedNumberOfImportedTextures);
	static struct FInterchangeTestFunctionResult CheckTextureAddressX(const class UTexture* Texture, ETextureAddress ExpectedTextureAddressX);
	static struct FInterchangeTestFunctionResult CheckTextureAddressY(const class UTexture* Texture, ETextureAddress ExpectedTextureAddressY);
	static struct FInterchangeTestFunctionResult CheckTextureAddressZ(const class UTexture* Texture, ETextureAddress ExpectedTextureAddressZ);
	static struct FInterchangeTestFunctionResult CheckTextureFilter(const class UTexture* Texture, ETextureFilter ExpectedTextureFilter);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TextureImportTestFunctions">();
	}
	static class UTextureImportTestFunctions* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTextureImportTestFunctions>();
	}
};

// Class InterchangeTests.InterchangeImportTestPlan
// 0x0028 (0x0058 - 0x0030)
class UInterchangeImportTestPlan final : public UObject
{
public:
	TArray<class UInterchangeImportTestStepBase*> Steps;                                             // 0x0030(0x0010)(Edit, ExportObject, ZeroConstructor, ContainsInstancedReference, UObjectWrapper, NativeAccessSpecifierPublic)
	bool                                          bIsEnabledInAutomationTests;                       // 0x0040(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 DisabledTestReason;                                // 0x0048(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void RunThisTest();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"InterchangeImportTestPlan">();
	}
	static class UInterchangeImportTestPlan* GetDefaultObj()
	{
		return GetDefaultObjImpl<UInterchangeImportTestPlan>();
	}
};

// Class InterchangeTests.InterchangeImportTestStepBase
// 0x0010 (0x0040 - 0x0030)
class UInterchangeImportTestStepBase : public UObject
{
public:
	TArray<struct FInterchangeTestFunction>       Tests;                                             // 0x0030(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"InterchangeImportTestStepBase">();
	}
	static class UInterchangeImportTestStepBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UInterchangeImportTestStepBase>();
	}
};

// Class InterchangeTests.InterchangeImportTestStepImport
// 0x0030 (0x0070 - 0x0040)
class UInterchangeImportTestStepImport final : public UInterchangeImportTestStepBase
{
public:
	struct FFilePath                              SourceFile;                                        // 0x0040(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UInterchangePipelineBase*>       PipelineStack;                                     // 0x0050(0x0010)(Edit, ExportObject, ZeroConstructor, ContainsInstancedReference, UObjectWrapper, NativeAccessSpecifierPublic)
	bool                                          bEmptyDestinationFolderPriorToImport;              // 0x0060(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSaveThenReloadImportedAssets;                     // 0x0061(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bImportIntoLevel;                                  // 0x0062(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_63[0xD];                                       // 0x0063(0x000D)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"InterchangeImportTestStepImport">();
	}
	static class UInterchangeImportTestStepImport* GetDefaultObj()
	{
		return GetDefaultObjImpl<UInterchangeImportTestStepImport>();
	}
};

// Class InterchangeTests.InterchangeImportTestStepReimport
// 0x0030 (0x0070 - 0x0040)
class UInterchangeImportTestStepReimport final : public UInterchangeImportTestStepBase
{
public:
	struct FFilePath                              SourceFileToReimport;                              // 0x0040(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UObject>                    AssetTypeToReimport;                               // 0x0050(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 AssetNameToReimport;                               // 0x0058(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSaveThenReloadImportedAssets;                     // 0x0068(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"InterchangeImportTestStepReimport">();
	}
	static class UInterchangeImportTestStepReimport* GetDefaultObj()
	{
		return GetDefaultObjImpl<UInterchangeImportTestStepReimport>();
	}
};

}

