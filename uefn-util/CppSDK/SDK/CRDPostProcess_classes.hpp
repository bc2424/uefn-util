#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CRDPostProcess

#include "Basic.hpp"

#include "Engine_classes.hpp"
#include "CRDPostProcess_structs.hpp"


namespace SDK
{

// Class CRDPostProcess.CRDPostProcessDeviceComponent
// 0x0058 (0x0130 - 0x00D8)
class UCRDPostProcessDeviceComponent final : public UActorComponent
{
public:
	class UPostProcessComponent*                  PostProcessComponent;                              // 0x00D8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class APlayerController*                      BlendInstigator;                                   // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_E8[0x48];                                      // 0x00E8(0x0048)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	bool ApplyPostProcessSettingsToDeviceComponent(const class UClass* ActorClass, const bool bInEnabled, const float InMaxStrength, const int32 InPriority, const float InEffectDuration, const float InBlendInDuration, const float InBlendOutDuration);
	void SetCurrentStrength(float Value);
	void SetHiddenStrength(float Value);
	void SetPostProcessEnabled(bool bEnabled);
	void StartBlending(class APlayerController* InBlendInstigator, bool bBlendIn, float Duration);
	void StartBlendingFromPriority(bool bShouldHide, float Duration);
	void StartEffectTimer(class APlayerController* InBlendInstigator);

	float GetBlendInTime() const;
	float GetBlendOutTime() const;
	bool GetClientEnabled() const;
	float GetCurrentStrength() const;
	int32 GetPriority() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CRDPostProcessDeviceComponent">();
	}
	static class UCRDPostProcessDeviceComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCRDPostProcessDeviceComponent>();
	}
};

// Class CRDPostProcess.CRDPostProcessDevicePriorityControllerComponent
// 0x0010 (0x00E8 - 0x00D8)
class UCRDPostProcessDevicePriorityControllerComponent final : public UActorComponent
{
public:
	TArray<class UCRDPostProcessDeviceComponent*> CachedAppliedEffects;                              // 0x00D8(0x0010)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)

public:
	static class UCRDPostProcessDevicePriorityControllerComponent* GetPostProcessDevicePriorityControllerComponentFromPlayerController(class APlayerController* PC, bool bCreateIfNotFound);

	void CachePostProcessDeviceApplication(class UCRDPostProcessDeviceComponent* InPostProcessDeviceComponent);
	void GetEffectsForPriority(int32 Priority, TArray<class UCRDPostProcessDeviceComponent*>* OutEffects);
	int32 GetHighestPriorityValue();
	void RemovePostProcessDevice(class UCRDPostProcessDeviceComponent* InPostProcessDeviceComponent);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CRDPostProcessDevicePriorityControllerComponent">();
	}
	static class UCRDPostProcessDevicePriorityControllerComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCRDPostProcessDevicePriorityControllerComponent>();
	}
};

// Class CRDPostProcess.CRDPostProcessDeviceControllerComponent
// 0x0198 (0x0270 - 0x00D8)
class UCRDPostProcessDeviceControllerComponent final : public UActorComponent
{
public:
	TMulticastInlineDelegate<void(class AFortCreativeDeviceProp* PostProcessDevice, class AFortPlayerState* PlayerState, EPostProcessDeviceState EndState)> OnPostProcessDeviceMessageRecieved;                // 0x00D8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class AFortCreativeDeviceProp* PostProcessDevice, class APlayerController* Instigator, bool bBlendIn)> OnPostProcessDeviceBlendFinished;                  // 0x00E8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FPostProcessDeviceMessageRingBuffer    PostProcessDeviceMessageBatch;                     // 0x00F8(0x0138)(Net, Transient, RepNotify, NativeAccessSpecifierPrivate)
	uint8                                         Pad_230[0x8];                                      // 0x0230(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FPostProcessDeviceMessage>      PostProcessDeviceMessageQueue;                     // 0x0238(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                         Pad_248[0x28];                                     // 0x0248(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static void GetMinigamePlayersForPostProcessDevice(const class AFortMinigame* FortMinigame, TArray<class APlayerState*>* OutPlayers);
	static class UCRDPostProcessDeviceControllerComponent* GetPostProcessDeviceControllerComponentFromPlayerController(class APlayerController* PC, bool bCreateIfNotFound);

	void AddBlendMessageToQueue(const class AFortCreativeDeviceProp* PostProcessDevice, const class AFortPlayerState* PlayerStateMessage, const EPostProcessDeviceState EndState);
	void OnRep_PostProcessDeviceMessageBatch();
	void Reset();
	void ServerBlendFinished(const class AFortCreativeDeviceProp* PostProcessDevice, const class APlayerController* Instigator, bool bBlendIn);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CRDPostProcessDeviceControllerComponent">();
	}
	static class UCRDPostProcessDeviceControllerComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCRDPostProcessDeviceControllerComponent>();
	}
};

}

