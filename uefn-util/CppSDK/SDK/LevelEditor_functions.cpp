#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LevelEditor

#include "Basic.hpp"

#include "LevelEditor_classes.hpp"
#include "LevelEditor_parameters.hpp"


namespace SDK
{

// Function LevelEditor.LevelEditorContextMenuContext.GetScriptHitProxyElement
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FScriptTypedElementHandle        ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FScriptTypedElementHandle ULevelEditorContextMenuContext::GetScriptHitProxyElement()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LevelEditorContextMenuContext", "GetScriptHitProxyElement");

	Params::LevelEditorContextMenuContext_GetScriptHitProxyElement Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LevelEditor.LevelEditorSubsystem.BuildLightMaps
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ELightingBuildQuality                   Quality                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bWithReflectionCaptures                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULevelEditorSubsystem::BuildLightMaps(ELightingBuildQuality Quality, bool bWithReflectionCaptures)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LevelEditorSubsystem", "BuildLightMaps");

	Params::LevelEditorSubsystem_BuildLightMaps Parms{};

	Parms.Quality = Quality;
	Parms.bWithReflectionCaptures = bWithReflectionCaptures;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LevelEditor.LevelEditorSubsystem.EditorGetGameView
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             ViewportConfigKey                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULevelEditorSubsystem::EditorGetGameView(class FName ViewportConfigKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LevelEditorSubsystem", "EditorGetGameView");

	Params::LevelEditorSubsystem_EditorGetGameView Parms{};

	Parms.ViewportConfigKey = ViewportConfigKey;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LevelEditor.LevelEditorSubsystem.EditorInvalidateViewports
// (Final, Native, Public, BlueprintCallable)

void ULevelEditorSubsystem::EditorInvalidateViewports()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LevelEditorSubsystem", "EditorInvalidateViewports");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function LevelEditor.LevelEditorSubsystem.EditorPlaySimulate
// (Final, Native, Public, BlueprintCallable)

void ULevelEditorSubsystem::EditorPlaySimulate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LevelEditorSubsystem", "EditorPlaySimulate");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function LevelEditor.LevelEditorSubsystem.EditorRequestBeginPlay
// (Final, Native, Public, BlueprintCallable)

void ULevelEditorSubsystem::EditorRequestBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LevelEditorSubsystem", "EditorRequestBeginPlay");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function LevelEditor.LevelEditorSubsystem.EditorRequestEndPlay
// (Final, Native, Public, BlueprintCallable)

void ULevelEditorSubsystem::EditorRequestEndPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LevelEditorSubsystem", "EditorRequestEndPlay");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function LevelEditor.LevelEditorSubsystem.EditorSetGameView
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bGameView                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ViewportConfigKey                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULevelEditorSubsystem::EditorSetGameView(bool bGameView, class FName ViewportConfigKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LevelEditorSubsystem", "EditorSetGameView");

	Params::LevelEditorSubsystem_EditorSetGameView Parms{};

	Parms.bGameView = bGameView;
	Parms.ViewportConfigKey = ViewportConfigKey;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LevelEditor.LevelEditorSubsystem.EditorSetViewportRealtime
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInRealtime                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ViewportConfigKey                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULevelEditorSubsystem::EditorSetViewportRealtime(bool bInRealtime, class FName ViewportConfigKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LevelEditorSubsystem", "EditorSetViewportRealtime");

	Params::LevelEditorSubsystem_EditorSetViewportRealtime Parms{};

	Parms.bInRealtime = bInRealtime;
	Parms.ViewportConfigKey = ViewportConfigKey;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LevelEditor.LevelEditorSubsystem.EjectPilotLevelActor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             ViewportConfigKey                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULevelEditorSubsystem::EjectPilotLevelActor(class FName ViewportConfigKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LevelEditorSubsystem", "EjectPilotLevelActor");

	Params::LevelEditorSubsystem_EjectPilotLevelActor Parms{};

	Parms.ViewportConfigKey = ViewportConfigKey;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LevelEditor.LevelEditorSubsystem.GetActiveViewportConfigKey
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName ULevelEditorSubsystem::GetActiveViewportConfigKey()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LevelEditorSubsystem", "GetActiveViewportConfigKey");

	Params::LevelEditorSubsystem_GetActiveViewportConfigKey Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LevelEditor.LevelEditorSubsystem.GetAllowsCinematicControl
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             ViewportConfigKey                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULevelEditorSubsystem::GetAllowsCinematicControl(class FName ViewportConfigKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LevelEditorSubsystem", "GetAllowsCinematicControl");

	Params::LevelEditorSubsystem_GetAllowsCinematicControl Parms{};

	Parms.ViewportConfigKey = ViewportConfigKey;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LevelEditor.LevelEditorSubsystem.GetCurrentLevel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ULevel*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ULevel* ULevelEditorSubsystem::GetCurrentLevel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LevelEditorSubsystem", "GetCurrentLevel");

	Params::LevelEditorSubsystem_GetCurrentLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LevelEditor.LevelEditorSubsystem.GetPilotLevelActor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             ViewportConfigKey                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* ULevelEditorSubsystem::GetPilotLevelActor(class FName ViewportConfigKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LevelEditorSubsystem", "GetPilotLevelActor");

	Params::LevelEditorSubsystem_GetPilotLevelActor Parms{};

	Parms.ViewportConfigKey = ViewportConfigKey;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LevelEditor.LevelEditorSubsystem.GetSelectionSet
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTypedElementSelectionSet*        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTypedElementSelectionSet* ULevelEditorSubsystem::GetSelectionSet()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LevelEditorSubsystem", "GetSelectionSet");

	Params::LevelEditorSubsystem_GetSelectionSet Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LevelEditor.LevelEditorSubsystem.GetViewportConfigKeys
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class FName>                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FName> ULevelEditorSubsystem::GetViewportConfigKeys()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LevelEditorSubsystem", "GetViewportConfigKeys");

	Params::LevelEditorSubsystem_GetViewportConfigKeys Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LevelEditor.LevelEditorSubsystem.LoadLevel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           AssetPath                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULevelEditorSubsystem::LoadLevel(const class FString& AssetPath)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LevelEditorSubsystem", "LoadLevel");

	Params::LevelEditorSubsystem_LoadLevel Parms{};

	Parms.AssetPath = std::move(AssetPath);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LevelEditor.LevelEditorSubsystem.NewLevel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           AssetPath                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsPartitionedWorld                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULevelEditorSubsystem::NewLevel(const class FString& AssetPath, bool bIsPartitionedWorld)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LevelEditorSubsystem", "NewLevel");

	Params::LevelEditorSubsystem_NewLevel Parms{};

	Parms.AssetPath = std::move(AssetPath);
	Parms.bIsPartitionedWorld = bIsPartitionedWorld;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LevelEditor.LevelEditorSubsystem.NewLevelFromTemplate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           AssetPath                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           TemplateAssetPath                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULevelEditorSubsystem::NewLevelFromTemplate(const class FString& AssetPath, const class FString& TemplateAssetPath)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LevelEditorSubsystem", "NewLevelFromTemplate");

	Params::LevelEditorSubsystem_NewLevelFromTemplate Parms{};

	Parms.AssetPath = std::move(AssetPath);
	Parms.TemplateAssetPath = std::move(TemplateAssetPath);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LevelEditor.LevelEditorSubsystem.PilotLevelActor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           ActorToPilot                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ViewportConfigKey                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULevelEditorSubsystem::PilotLevelActor(class AActor* ActorToPilot, class FName ViewportConfigKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LevelEditorSubsystem", "PilotLevelActor");

	Params::LevelEditorSubsystem_PilotLevelActor Parms{};

	Parms.ActorToPilot = ActorToPilot;
	Parms.ViewportConfigKey = ViewportConfigKey;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LevelEditor.LevelEditorSubsystem.SaveAllDirtyLevels
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULevelEditorSubsystem::SaveAllDirtyLevels()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LevelEditorSubsystem", "SaveAllDirtyLevels");

	Params::LevelEditorSubsystem_SaveAllDirtyLevels Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LevelEditor.LevelEditorSubsystem.SaveCurrentLevel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULevelEditorSubsystem::SaveCurrentLevel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LevelEditorSubsystem", "SaveCurrentLevel");

	Params::LevelEditorSubsystem_SaveCurrentLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LevelEditor.LevelEditorSubsystem.SetAllowsCinematicControl
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bAllow                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ViewportConfigKey                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULevelEditorSubsystem::SetAllowsCinematicControl(bool bAllow, class FName ViewportConfigKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LevelEditorSubsystem", "SetAllowsCinematicControl");

	Params::LevelEditorSubsystem_SetAllowsCinematicControl Parms{};

	Parms.bAllow = bAllow;
	Parms.ViewportConfigKey = ViewportConfigKey;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LevelEditor.LevelEditorSubsystem.SetCurrentLevelByName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             LevelName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULevelEditorSubsystem::SetCurrentLevelByName(class FName LevelName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LevelEditorSubsystem", "SetCurrentLevelByName");

	Params::LevelEditorSubsystem_SetCurrentLevelByName Parms{};

	Parms.LevelName = LevelName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LevelEditor.LevelEditorSubsystem.IsInPlayInEditor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULevelEditorSubsystem::IsInPlayInEditor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LevelEditorSubsystem", "IsInPlayInEditor");

	Params::LevelEditorSubsystem_IsInPlayInEditor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

