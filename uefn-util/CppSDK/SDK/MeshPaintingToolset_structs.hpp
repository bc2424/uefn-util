#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MeshPaintingToolset

#include "Basic.hpp"


namespace SDK
{

// Enum MeshPaintingToolset.EMeshPaintDataColorViewMode
// NumValues: 0x0007
enum class EMeshPaintDataColorViewMode : uint8
{
	Normal                                   = 0,
	RGB                                      = 1,
	Alpha                                    = 2,
	Red                                      = 3,
	Green                                    = 4,
	Blue                                     = 5,
	EMeshPaintDataColorViewMode_MAX          = 6,
};

// Enum MeshPaintingToolset.EMeshVertexPaintModeTarget
// NumValues: 0x0003
enum class EMeshVertexPaintModeTarget : uint8
{
	ComponentInstance                        = 0,
	Mesh                                     = 1,
	EMeshVertexPaintModeTarget_MAX           = 2,
};

// Enum MeshPaintingToolset.ETexturePaintWeightTypes
// NumValues: 0x0005
enum class ETexturePaintWeightTypes : uint8
{
	AlphaLerp                                = 2,
	RGB                                      = 3,
	ARGB                                     = 4,
	OneMinusARGB                             = 5,
	ETexturePaintWeightTypes_MAX             = 6,
};

// Enum MeshPaintingToolset.ETexturePaintWeightIndex
// NumValues: 0x0006
enum class ETexturePaintWeightIndex : uint8
{
	TextureOne                               = 0,
	TextureTwo                               = 1,
	TextureThree                             = 2,
	TextureFour                              = 3,
	TextureFive                              = 4,
	ETexturePaintWeightIndex_MAX             = 5,
};

// Enum MeshPaintingToolset.EMeshPaintWeightTypes
// NumValues: 0x0005
enum class EMeshPaintWeightTypes : uint8
{
	AlphaLerp                                = 2,
	RGB                                      = 3,
	ARGB                                     = 4,
	OneMinusARGB                             = 5,
	EMeshPaintWeightTypes_MAX                = 6,
};

// Enum MeshPaintingToolset.EMeshPaintTextureIndex
// NumValues: 0x0006
enum class EMeshPaintTextureIndex : uint8
{
	TextureOne                               = 0,
	TextureTwo                               = 1,
	TextureThree                             = 2,
	TextureFour                              = 3,
	TextureFive                              = 4,
	EMeshPaintTextureIndex_MAX               = 5,
};

// ScriptStruct MeshPaintingToolset.PaintTexture2DData
// 0x0040 (0x0040 - 0x0000)
struct FPaintTexture2DData final
{
public:
	class UTexture2D*                             PaintingTexture2D;                                 // 0x0000(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsPaintingTexture2DModified;                      // 0x0008(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             ScratchTexture;                                    // 0x0010(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextureRenderTarget2D*                 PaintRenderTargetTexture;                          // 0x0018(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UMeshComponent*>                 PaintedComponents;                                 // 0x0020(0x0010)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, UObjectWrapper, NativeAccessSpecifierPublic)
	class UTextureRenderTarget2D*                 PaintBrushRenderTargetTexture;                     // 0x0030(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UVirtualTextureAdapter*                 PaintRenderTargetTextureAdapter;                   // 0x0038(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct MeshPaintingToolset.PaintComponentOverride
// 0x0010 (0x0010 - 0x0000)
struct FPaintComponentOverride final
{
public:
	TArray<class UMeshComponent*>                 PaintedComponents;                                 // 0x0000(0x0010)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, UObjectWrapper, NativeAccessSpecifierPublic)
};

}

