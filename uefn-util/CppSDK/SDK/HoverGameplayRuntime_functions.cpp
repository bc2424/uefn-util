#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HoverGameplayRuntime

#include "Basic.hpp"

#include "HoverGameplayRuntime_classes.hpp"
#include "HoverGameplayRuntime_parameters.hpp"


namespace SDK
{

// Function HoverGameplayRuntime.FortGameplayCueNotifyLoop_Hover.Cleanup
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)

void AFortGameplayCueNotifyLoop_Hover::Cleanup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameplayCueNotifyLoop_Hover", "Cleanup");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function HoverGameplayRuntime.FortGameplayCueNotifyLoop_Hover.OnFuelLow
// (Event, Protected, BlueprintEvent)

void AFortGameplayCueNotifyLoop_Hover::OnFuelLow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameplayCueNotifyLoop_Hover", "OnFuelLow");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HoverGameplayRuntime.FortGameplayCueNotifyLoop_Hover.OnOutOfFuel
// (Event, Protected, BlueprintEvent)

void AFortGameplayCueNotifyLoop_Hover::OnOutOfFuel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameplayCueNotifyLoop_Hover", "OnOutOfFuel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HoverGameplayRuntime.FortGameplayCueNotifyLoop_Hover.UpdateAudioParameters
// (Event, Protected, BlueprintEvent)
// Parameters:
// float                                   HeightMod                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   VelocityMod                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortGameplayCueNotifyLoop_Hover::UpdateAudioParameters(const float HeightMod, const float VelocityMod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameplayCueNotifyLoop_Hover", "UpdateAudioParameters");

	Params::FortGameplayCueNotifyLoop_Hover_UpdateAudioParameters Parms{};

	Parms.HeightMod = HeightMod;
	Parms.VelocityMod = VelocityMod;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HoverGameplayRuntime.FortGameplayCueNotifyLoop_Hover.UpdateFuelFlicker
// (Event, Protected, BlueprintEvent)
// Parameters:
// float                                   FlickerPercent                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortGameplayCueNotifyLoop_Hover::UpdateFuelFlicker(float FlickerPercent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameplayCueNotifyLoop_Hover", "UpdateFuelFlicker");

	Params::FortGameplayCueNotifyLoop_Hover_UpdateFuelFlicker Parms{};

	Parms.FlickerPercent = FlickerPercent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HoverGameplayRuntime.FortGameplayCueNotifyLoop_Hover.UpdateFX
// (Native, Event, Protected, BlueprintEvent)

void AFortGameplayCueNotifyLoop_Hover::UpdateFX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameplayCueNotifyLoop_Hover", "UpdateFX");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function HoverGameplayRuntime.FortGameplayCueNotifyLoop_Hover.UpdateGroundFX
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortGameplayCueNotifyLoop_Hover::UpdateGroundFX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameplayCueNotifyLoop_Hover", "UpdateGroundFX");

	Params::FortGameplayCueNotifyLoop_Hover_UpdateGroundFX Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function HoverGameplayRuntime.FortGameplayCueNotifyLoop_Hover.GetFuelAmount
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AFortGameplayCueNotifyLoop_Hover::GetFuelAmount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameplayCueNotifyLoop_Hover", "GetFuelAmount");

	Params::FortGameplayCueNotifyLoop_Hover_GetFuelAmount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function HoverGameplayRuntime.FortGameplayCueNotifyLoop_Hover.IsAboveAscendFailHeight
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortGameplayCueNotifyLoop_Hover::IsAboveAscendFailHeight() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameplayCueNotifyLoop_Hover", "IsAboveAscendFailHeight");

	Params::FortGameplayCueNotifyLoop_Hover_IsAboveAscendFailHeight Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function HoverGameplayRuntime.FortMovementMode_ExtHover.TryActivateHoverMME
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AFortPawn*                        TargetPawn                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UFortMovementMode_ExtHover>HoverMME                                               (ConstParm, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFortMovementMode_BaseExtCreationDataCreationData                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class UFortMovementMode_HoverRuntimeData*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortMovementMode_HoverRuntimeData* UFortMovementMode_ExtHover::TryActivateHoverMME(const class AFortPawn* TargetPawn, const TSubclassOf<class UFortMovementMode_ExtHover> HoverMME, const struct FFortMovementMode_BaseExtCreationData& CreationData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortMovementMode_ExtHover", "TryActivateHoverMME");

	Params::FortMovementMode_ExtHover_TryActivateHoverMME Parms{};

	Parms.TargetPawn = TargetPawn;
	Parms.HoverMME = HoverMME;
	Parms.CreationData = std::move(CreationData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function HoverGameplayRuntime.FortMovementMode_ExtHover.BP_HandleHitResponse
// (Event, Protected, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// struct FMMERuntimeContext               RuntimeContext                                         (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// struct FVector                          InVelocity                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          OldPosition                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          NewLocation                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Adjustement                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       Hit                                                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UFortMovementMode_ExtHover::BP_HandleHitResponse(const struct FMMERuntimeContext& RuntimeContext, const struct FVector& InVelocity, const struct FVector& OldPosition, const struct FVector& NewLocation, const struct FVector& Adjustement, const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMovementMode_ExtHover", "BP_HandleHitResponse");

	Params::FortMovementMode_ExtHover_BP_HandleHitResponse Parms{};

	Parms.RuntimeContext = std::move(RuntimeContext);
	Parms.InVelocity = std::move(InVelocity);
	Parms.OldPosition = std::move(OldPosition);
	Parms.NewLocation = std::move(NewLocation);
	Parms.Adjustement = std::move(Adjustement);
	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}


// Function HoverGameplayRuntime.FortMovementMode_ExtHover.BP_PhysUpdate
// (Event, Protected, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                          OutVelocity                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          OutAcceleration                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMMERuntimeContext               RuntimeContext                                         (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// struct FVector                          InVelocity                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InAcceleration                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMovementMode_ExtHover::BP_PhysUpdate(struct FVector* OutVelocity, struct FVector* OutAcceleration, const struct FMMERuntimeContext& RuntimeContext, const struct FVector& InVelocity, const struct FVector& InAcceleration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMovementMode_ExtHover", "BP_PhysUpdate");

	Params::FortMovementMode_ExtHover_BP_PhysUpdate Parms{};

	Parms.RuntimeContext = std::move(RuntimeContext);
	Parms.InVelocity = std::move(InVelocity);
	Parms.InAcceleration = std::move(InAcceleration);

	UObject::ProcessEvent(Func, &Parms);

	if (OutVelocity != nullptr)
		*OutVelocity = std::move(Parms.OutVelocity);

	if (OutAcceleration != nullptr)
		*OutAcceleration = std::move(Parms.OutAcceleration);
}


// Function HoverGameplayRuntime.FortMovementMode_ExtHover.BP_UpdateBeforeCharacterMovement
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// EFortMovementModeExt_UpdateResult       NativeUpdateResult                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMMERuntimeContext               RuntimeContext                                         (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// EFortMovementModeExt_UpdateResult       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFortMovementModeExt_UpdateResult UFortMovementMode_ExtHover::BP_UpdateBeforeCharacterMovement(const EFortMovementModeExt_UpdateResult& NativeUpdateResult, const struct FMMERuntimeContext& RuntimeContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMovementMode_ExtHover", "BP_UpdateBeforeCharacterMovement");

	Params::FortMovementMode_ExtHover_BP_UpdateBeforeCharacterMovement Parms{};

	Parms.NativeUpdateResult = NativeUpdateResult;
	Parms.RuntimeContext = std::move(RuntimeContext);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HoverGameplayRuntime.FortMovementMode_ExtHover.EndHover
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortMovementMode_HoverRuntimeData*HoverRuntimeData                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMovementMode_ExtHover::EndHover(class UFortMovementMode_HoverRuntimeData* HoverRuntimeData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMovementMode_ExtHover", "EndHover");

	Params::FortMovementMode_ExtHover_EndHover Parms{};

	Parms.HoverRuntimeData = HoverRuntimeData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function HoverGameplayRuntime.FortMovementMode_ExtHover.OnAscendEnd
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UFortMovementMode_HoverRuntimeData*HoverRuntimeData                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMovementMode_ExtHover::OnAscendEnd(class UFortMovementMode_HoverRuntimeData* HoverRuntimeData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMovementMode_ExtHover", "OnAscendEnd");

	Params::FortMovementMode_ExtHover_OnAscendEnd Parms{};

	Parms.HoverRuntimeData = HoverRuntimeData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function HoverGameplayRuntime.FortMovementMode_ExtHover.OnAscendStart
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UFortMovementMode_HoverRuntimeData*HoverRuntimeData                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMovementMode_ExtHover::OnAscendStart(class UFortMovementMode_HoverRuntimeData* HoverRuntimeData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMovementMode_ExtHover", "OnAscendStart");

	Params::FortMovementMode_ExtHover_OnAscendStart Parms{};

	Parms.HoverRuntimeData = HoverRuntimeData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function HoverGameplayRuntime.FortMovementMode_ExtHover.OnBoostEnd
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UFortMovementMode_HoverRuntimeData*HoverRuntimeData                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMovementMode_ExtHover::OnBoostEnd(class UFortMovementMode_HoverRuntimeData* HoverRuntimeData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMovementMode_ExtHover", "OnBoostEnd");

	Params::FortMovementMode_ExtHover_OnBoostEnd Parms{};

	Parms.HoverRuntimeData = HoverRuntimeData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function HoverGameplayRuntime.FortMovementMode_ExtHover.OnBoostStart
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UFortMovementMode_HoverRuntimeData*HoverRuntimeData                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMovementMode_ExtHover::OnBoostStart(class UFortMovementMode_HoverRuntimeData* HoverRuntimeData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMovementMode_ExtHover", "OnBoostStart");

	Params::FortMovementMode_ExtHover_OnBoostStart Parms{};

	Parms.HoverRuntimeData = HoverRuntimeData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function HoverGameplayRuntime.FortMovementMode_ExtHover.OnHoverEnd
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UFortMovementMode_HoverRuntimeData*HoverRuntimeData                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMovementMode_ExtHover::OnHoverEnd(class UFortMovementMode_HoverRuntimeData* HoverRuntimeData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMovementMode_ExtHover", "OnHoverEnd");

	Params::FortMovementMode_ExtHover_OnHoverEnd Parms{};

	Parms.HoverRuntimeData = HoverRuntimeData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function HoverGameplayRuntime.FortMovementMode_ExtHover.OnHoverStart
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UFortMovementMode_HoverRuntimeData*HoverRuntimeData                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMovementMode_ExtHover::OnHoverStart(class UFortMovementMode_HoverRuntimeData* HoverRuntimeData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMovementMode_ExtHover", "OnHoverStart");

	Params::FortMovementMode_ExtHover_OnHoverStart Parms{};

	Parms.HoverRuntimeData = HoverRuntimeData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function HoverGameplayRuntime.FortMovementMode_ExtHover.StartAscending
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortMovementMode_HoverRuntimeData*HoverRuntimeData                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMovementMode_ExtHover::StartAscending(class UFortMovementMode_HoverRuntimeData* HoverRuntimeData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMovementMode_ExtHover", "StartAscending");

	Params::FortMovementMode_ExtHover_StartAscending Parms{};

	Parms.HoverRuntimeData = HoverRuntimeData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function HoverGameplayRuntime.FortMovementMode_ExtHover.StartHover
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortMovementMode_HoverRuntimeData*HoverRuntimeData                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMovementMode_ExtHover::StartHover(class UFortMovementMode_HoverRuntimeData* HoverRuntimeData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMovementMode_ExtHover", "StartHover");

	Params::FortMovementMode_ExtHover_StartHover Parms{};

	Parms.HoverRuntimeData = HoverRuntimeData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function HoverGameplayRuntime.FortMovementMode_ExtHover.StopAscending
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortMovementMode_HoverRuntimeData*HoverRuntimeData                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMovementMode_ExtHover::StopAscending(class UFortMovementMode_HoverRuntimeData* HoverRuntimeData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMovementMode_ExtHover", "StopAscending");

	Params::FortMovementMode_ExtHover_StopAscending Parms{};

	Parms.HoverRuntimeData = HoverRuntimeData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function HoverGameplayRuntime.FortMovementMode_ExtHover.TryStartBoost
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortMovementMode_HoverRuntimeData*HoverRuntimeData                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMovementMode_ExtHover::TryStartBoost(class UFortMovementMode_HoverRuntimeData* HoverRuntimeData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMovementMode_ExtHover", "TryStartBoost");

	Params::FortMovementMode_ExtHover_TryStartBoost Parms{};

	Parms.HoverRuntimeData = HoverRuntimeData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function HoverGameplayRuntime.FortMovementMode_ExtHover.CanStartBoosting
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortMovementMode_ExtHover::CanStartBoosting() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMovementMode_ExtHover", "CanStartBoosting");

	Params::FortMovementMode_ExtHover_CanStartBoosting Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function HoverGameplayRuntime.HoverAttributeSet.OnRep_Fuel
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FFortGameplayAttributeData       OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHoverAttributeSet::OnRep_Fuel(const struct FFortGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HoverAttributeSet", "OnRep_Fuel");

	Params::HoverAttributeSet_OnRep_Fuel Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

