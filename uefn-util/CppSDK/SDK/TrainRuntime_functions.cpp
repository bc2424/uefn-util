#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TrainRuntime

#include "Basic.hpp"

#include "TrainRuntime_classes.hpp"
#include "TrainRuntime_parameters.hpp"


namespace SDK
{

// Function TrainRuntime.FortTrainCheatManager.SetTrainMoveInPositiveRailDirection
// (Final, BlueprintAuthorityOnly, Exec, Native, Private)
// Parameters:
// bool                                    bMoveInPositiveRailDirection                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortTrainCheatManager::SetTrainMoveInPositiveRailDirection(bool bMoveInPositiveRailDirection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTrainCheatManager", "SetTrainMoveInPositiveRailDirection");

	Params::FortTrainCheatManager_SetTrainMoveInPositiveRailDirection Parms{};

	Parms.bMoveInPositiveRailDirection = bMoveInPositiveRailDirection;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TrainRuntime.FortTrainCheatManager.SetTrainStartLocationToCursor
// (Final, BlueprintAuthorityOnly, Exec, Native, Private)

void UFortTrainCheatManager::SetTrainStartLocationToCursor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTrainCheatManager", "SetTrainStartLocationToCursor");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TrainRuntime.FortTrainCheatManager.TeleportToTrain
// (Final, BlueprintAuthorityOnly, Exec, Native, Private)

void UFortTrainCheatManager::TeleportToTrain()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTrainCheatManager", "TeleportToTrain");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TrainRuntime.FortTrainCheatManager.TeleportToTrainStartLocation
// (Final, BlueprintAuthorityOnly, Exec, Native, Private)

void UFortTrainCheatManager::TeleportToTrainStartLocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTrainCheatManager", "TeleportToTrainStartLocation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TrainRuntime.FortTrainCheatManager.TeleportTrainToCursor
// (Final, BlueprintAuthorityOnly, Exec, Native, Private)

void UFortTrainCheatManager::TeleportTrainToCursor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTrainCheatManager", "TeleportTrainToCursor");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TrainRuntime.FortTrainCheatManager.TeleportTrainToTrainStartLocation
// (Final, BlueprintAuthorityOnly, Exec, Native, Private)

void UFortTrainCheatManager::TeleportTrainToTrainStartLocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTrainCheatManager", "TeleportTrainToTrainStartLocation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TrainRuntime.FortTrainCheatManager.PrintTrainDebug
// (Final, Exec, Native, Private, Const)

void UFortTrainCheatManager::PrintTrainDebug() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTrainCheatManager", "PrintTrainDebug");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TrainRuntime.TrainCar.EnableAudioProcessingForLocalPlayerOnboard
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// float                                   TimeIntervalToUpdate                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortSoundIndicatorComponent*     SoundIndicatorComponent                                (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAudioShapeLineListComponent*     AudioShapeLineList                                     (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ControlBusFadeTime                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATrainCar::EnableAudioProcessingForLocalPlayerOnboard(const float TimeIntervalToUpdate, class UFortSoundIndicatorComponent* SoundIndicatorComponent, class UAudioShapeLineListComponent* AudioShapeLineList, const float ControlBusFadeTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainCar", "EnableAudioProcessingForLocalPlayerOnboard");

	Params::TrainCar_EnableAudioProcessingForLocalPlayerOnboard Parms{};

	Parms.TimeIntervalToUpdate = TimeIntervalToUpdate;
	Parms.SoundIndicatorComponent = SoundIndicatorComponent;
	Parms.AudioShapeLineList = AudioShapeLineList;
	Parms.ControlBusFadeTime = ControlBusFadeTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TrainRuntime.TrainCar.HandleMovementBaseChanged
// (Final, Native, Protected)
// Parameters:
// class UPrimitiveComponent*              NewBaseComponent                                       (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             BoneName                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATrainCar::HandleMovementBaseChanged(class UPrimitiveComponent* NewBaseComponent, const class FName BoneName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainCar", "HandleMovementBaseChanged");

	Params::TrainCar_HandleMovementBaseChanged Parms{};

	Parms.NewBaseComponent = NewBaseComponent;
	Parms.BoneName = BoneName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TrainRuntime.TrainCar.HandlePossessedPawnChanged
// (Final, Native, Protected)
// Parameters:
// class APawn*                            OldPawn                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APawn*                            NewPawn                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATrainCar::HandlePossessedPawnChanged(class APawn* OldPawn, class APawn* NewPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainCar", "HandlePossessedPawnChanged");

	Params::TrainCar_HandlePossessedPawnChanged Parms{};

	Parms.OldPawn = OldPawn;
	Parms.NewPawn = NewPawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TrainRuntime.TrainCar.OnActorTargetedForImpulse
// (Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATrainCar::OnActorTargetedForImpulse(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainCar", "OnActorTargetedForImpulse");

	Params::TrainCar_OnActorTargetedForImpulse Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainRuntime.TrainCar.OnPawnBasedOnTrainCar
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AFortPawn*                        Pawn                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATrainCar::OnPawnBasedOnTrainCar(class AFortPawn* Pawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainCar", "OnPawnBasedOnTrainCar");

	Params::TrainCar_OnPawnBasedOnTrainCar Parms{};

	Parms.Pawn = Pawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainRuntime.TrainCar.OnPawnDebasedTrainCar
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AFortPawn*                        Pawn                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           NewBase                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATrainCar::OnPawnDebasedTrainCar(class AFortPawn* Pawn, class AActor* NewBase)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainCar", "OnPawnDebasedTrainCar");

	Params::TrainCar_OnPawnDebasedTrainCar Parms{};

	Parms.Pawn = Pawn;
	Parms.NewBase = NewBase;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainRuntime.TrainCar.GetCarIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ATrainCar::GetCarIndex() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainCar", "GetCarIndex");

	Params::TrainCar_GetCarIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TrainRuntime.TrainCar.GetTrainManager
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortTrainManager*                ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortTrainManager* ATrainCar::GetTrainManager() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainCar", "GetTrainManager");

	Params::TrainCar_GetTrainManager Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TrainRuntime.TrainCar.GetTransformAtServerTime
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ServerTime                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTransform                       ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FTransform ATrainCar::GetTransformAtServerTime(float ServerTime) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainCar", "GetTransformAtServerTime");

	Params::TrainCar_GetTransformAtServerTime Parms{};

	Parms.ServerTime = ServerTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TrainRuntime.FortTrainManager.MoveAlongRail
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   DeltaDistance                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bUpdateReplicatedMovementData                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortTrainManager::MoveAlongRail(float DeltaDistance, bool bUpdateReplicatedMovementData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTrainManager", "MoveAlongRail");

	Params::FortTrainManager_MoveAlongRail Parms{};

	Parms.DeltaDistance = DeltaDistance;
	Parms.bUpdateReplicatedMovementData = bUpdateReplicatedMovementData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TrainRuntime.FortTrainManager.MoveToPositionOnRail
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   RailDistance                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bUpdateReplicatedMovementData                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortTrainManager::MoveToPositionOnRail(float RailDistance, bool bUpdateReplicatedMovementData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTrainManager", "MoveToPositionOnRail");

	Params::FortTrainManager_MoveToPositionOnRail Parms{};

	Parms.RailDistance = RailDistance;
	Parms.bUpdateReplicatedMovementData = bUpdateReplicatedMovementData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TrainRuntime.FortTrainManager.MoveToPositionOnRailAtCurrentServerTime
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bUpdateReplicatedMovementData                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortTrainManager::MoveToPositionOnRailAtCurrentServerTime(bool bUpdateReplicatedMovementData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTrainManager", "MoveToPositionOnRailAtCurrentServerTime");

	Params::FortTrainManager_MoveToPositionOnRailAtCurrentServerTime Parms{};

	Parms.bUpdateReplicatedMovementData = bUpdateReplicatedMovementData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TrainRuntime.FortTrainManager.MoveToTimeAlongRail
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   Time                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bUpdateReplicatedMovementData                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortTrainManager::MoveToTimeAlongRail(float Time, bool bUpdateReplicatedMovementData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTrainManager", "MoveToTimeAlongRail");

	Params::FortTrainManager_MoveToTimeAlongRail Parms{};

	Parms.Time = Time;
	Parms.bUpdateReplicatedMovementData = bUpdateReplicatedMovementData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TrainRuntime.FortTrainManager.OnRep_Rail
// (Final, Native, Protected)

void UFortTrainManager::OnRep_Rail()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTrainManager", "OnRep_Rail");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TrainRuntime.FortTrainManager.OnRep_ReplicatedMovementData
// (Final, Native, Protected)

void UFortTrainManager::OnRep_ReplicatedMovementData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTrainManager", "OnRep_ReplicatedMovementData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TrainRuntime.FortTrainManager.PlaceOnRails
// (Final, Native, Protected)

void UFortTrainManager::PlaceOnRails()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTrainManager", "PlaceOnRails");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TrainRuntime.FortTrainManager.GetWorldLocationAtServerTime
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ServerTime                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UFortTrainManager::GetWorldLocationAtServerTime(float ServerTime) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTrainManager", "GetWorldLocationAtServerTime");

	Params::FortTrainManager_GetWorldLocationAtServerTime Parms{};

	Parms.ServerTime = ServerTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TrainRuntime.FortTrainRail.GenerateSpline
// (Final, Native, Private, Const)

void AFortTrainRail::GenerateSpline() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTrainRail", "GenerateSpline");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TrainRuntime.FortTrainRail.GetTimeFromNextTrainArrival
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTag                     StationIdentifierTag                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AFortTrainRail::GetTimeFromNextTrainArrival(const struct FGameplayTag& StationIdentifierTag) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTrainRail", "GetTimeFromNextTrainArrival");

	Params::FortTrainRail_GetTimeFromNextTrainArrival Parms{};

	Parms.StationIdentifierTag = std::move(StationIdentifierTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TrainRuntime.FortTrainRail.ValidateSpline
// (Final, Native, Private, Const)

void AFortTrainRail::ValidateSpline() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTrainRail", "ValidateSpline");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TrainRuntime.FortTrainMovingPlatformComponent.FindOrGetTrainManager
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortTrainManager*                ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortTrainManager* UFortTrainMovingPlatformComponent::FindOrGetTrainManager() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTrainMovingPlatformComponent", "FindOrGetTrainManager");

	Params::FortTrainMovingPlatformComponent_FindOrGetTrainManager Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

