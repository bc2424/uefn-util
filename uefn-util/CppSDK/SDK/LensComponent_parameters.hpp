#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LensComponent

#include "Basic.hpp"

#include "CameraCalibrationCore_structs.hpp"
#include "CinematicCamera_structs.hpp"
#include "LensComponent_structs.hpp"


namespace SDK::Params
{

// Function LensComponent.LensComponent.ApplyNodalOffset
// 0x0018 (0x0018 - 0x0000)
struct LensComponent_ApplyNodalOffset final
{
public:
	class USceneComponent*                        ComponentToOffset;                                 // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseManualInputs;                                  // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ManualFocusInput;                                  // 0x000C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ManualZoomInput;                                   // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function LensComponent.LensComponent.SetApplyDistortion
// 0x0001 (0x0001 - 0x0000)
struct LensComponent_SetApplyDistortion final
{
public:
	bool                                          bApply;                                            // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function LensComponent.LensComponent.SetApplyNodalOffsetOnTick
// 0x0001 (0x0001 - 0x0000)
struct LensComponent_SetApplyNodalOffsetOnTick final
{
public:
	bool                                          bApplyNodalOffset;                                 // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function LensComponent.LensComponent.SetCroppedFilmback
// 0x000C (0x000C - 0x0000)
struct LensComponent_SetCroppedFilmback final
{
public:
	struct FCameraFilmbackSettings                Filmback;                                          // 0x0000(0x000C)(Parm, NoDestructor, NativeAccessSpecifierPublic)
};

// Function LensComponent.LensComponent.SetDistortionSource
// 0x0001 (0x0001 - 0x0000)
struct LensComponent_SetDistortionSource final
{
public:
	EDistortionSource                             Source;                                            // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function LensComponent.LensComponent.SetDistortionState
// 0x0030 (0x0030 - 0x0000)
struct LensComponent_SetDistortionState final
{
public:
	struct FLensDistortionState                   State;                                             // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
};

// Function LensComponent.LensComponent.SetFilmbackOverrideSetting
// 0x0001 (0x0001 - 0x0000)
struct LensComponent_SetFilmbackOverrideSetting final
{
public:
	EFilmbackOverrideSource                       Setting;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function LensComponent.LensComponent.SetFIZEvaluationMode
// 0x0001 (0x0001 - 0x0000)
struct LensComponent_SetFIZEvaluationMode final
{
public:
	EFIZEvaluationMode                            Mode;                                              // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function LensComponent.LensComponent.SetLensFile
// 0x0008 (0x0008 - 0x0000)
struct LensComponent_SetLensFile final
{
public:
	class ULensFile*                              LensFile;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function LensComponent.LensComponent.SetLensFilePicker
// 0x0010 (0x0010 - 0x0000)
struct LensComponent_SetLensFilePicker final
{
public:
	struct FLensFilePicker                        LensFile;                                          // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
};

// Function LensComponent.LensComponent.SetLensModel
// 0x0008 (0x0008 - 0x0000)
struct LensComponent_SetLensModel final
{
public:
	TSubclassOf<class ULensModel>                 Model;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function LensComponent.LensComponent.SetOverscanMultiplier
// 0x0004 (0x0004 - 0x0000)
struct LensComponent_SetOverscanMultiplier final
{
public:
	float                                         Multiplier;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function LensComponent.LensComponent.GetCroppedFilmback
// 0x000C (0x000C - 0x0000)
struct LensComponent_GetCroppedFilmback final
{
public:
	struct FCameraFilmbackSettings                ReturnValue;                                       // 0x0000(0x000C)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};

// Function LensComponent.LensComponent.GetDistortionSource
// 0x0001 (0x0001 - 0x0000)
struct LensComponent_GetDistortionSource final
{
public:
	EDistortionSource                             ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function LensComponent.LensComponent.GetDistortionState
// 0x0030 (0x0030 - 0x0000)
struct LensComponent_GetDistortionState final
{
public:
	struct FLensDistortionState                   ReturnValue;                                       // 0x0000(0x0030)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};

// Function LensComponent.LensComponent.GetFilmbackOverrideSetting
// 0x0001 (0x0001 - 0x0000)
struct LensComponent_GetFilmbackOverrideSetting final
{
public:
	EFilmbackOverrideSource                       ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function LensComponent.LensComponent.GetFIZEvaluationMode
// 0x0001 (0x0001 - 0x0000)
struct LensComponent_GetFIZEvaluationMode final
{
public:
	EFIZEvaluationMode                            ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function LensComponent.LensComponent.GetLensDistortionHandler
// 0x0008 (0x0008 - 0x0000)
struct LensComponent_GetLensDistortionHandler final
{
public:
	class ULensDistortionModelHandlerBase*        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function LensComponent.LensComponent.GetLensFile
// 0x0008 (0x0008 - 0x0000)
struct LensComponent_GetLensFile final
{
public:
	class ULensFile*                              ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function LensComponent.LensComponent.GetLensFileEvaluationInputs
// 0x001C (0x001C - 0x0000)
struct LensComponent_GetLensFileEvaluationInputs final
{
public:
	struct FLensFileEvaluationInputs              ReturnValue;                                       // 0x0000(0x001C)(ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};

// Function LensComponent.LensComponent.GetLensFilePicker
// 0x0010 (0x0010 - 0x0000)
struct LensComponent_GetLensFilePicker final
{
public:
	struct FLensFilePicker                        ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};

// Function LensComponent.LensComponent.GetLensModel
// 0x0008 (0x0008 - 0x0000)
struct LensComponent_GetLensModel final
{
public:
	TSubclassOf<class ULensModel>                 ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function LensComponent.LensComponent.GetOriginalFocalLength
// 0x0004 (0x0004 - 0x0000)
struct LensComponent_GetOriginalFocalLength final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function LensComponent.LensComponent.GetOverscanMultiplier
// 0x0004 (0x0004 - 0x0000)
struct LensComponent_GetOverscanMultiplier final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function LensComponent.LensComponent.ShouldApplyDistortion
// 0x0001 (0x0001 - 0x0000)
struct LensComponent_ShouldApplyDistortion final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function LensComponent.LensComponent.ShouldApplyNodalOffsetOnTick
// 0x0001 (0x0001 - 0x0000)
struct LensComponent_ShouldApplyNodalOffsetOnTick final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function LensComponent.LensComponent.WasDistortionEvaluated
// 0x0001 (0x0001 - 0x0000)
struct LensComponent_WasDistortionEvaluated final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function LensComponent.LensComponent.WasNodalOffsetAppliedThisTick
// 0x0001 (0x0001 - 0x0000)
struct LensComponent_WasNodalOffsetAppliedThisTick final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

}

