#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MLDeformerFramework

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "CoreUObject_classes.hpp"
#include "MLDeformerFramework_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "OptimusCore_classes.hpp"
#include "ComputeFramework_classes.hpp"


namespace SDK
{

// Class MLDeformerFramework.MLDeformerAsset
// 0x0008 (0x0038 - 0x0030)
class UMLDeformerAsset final : public UObject
{
public:
	class UMLDeformerModel*                       Model;                                             // 0x0030(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MLDeformerAsset">();
	}
	static class UMLDeformerAsset* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMLDeformerAsset>();
	}
};

// Class MLDeformerFramework.MLDeformerVizSettings
// 0x00B8 (0x00E8 - 0x0030)
class UMLDeformerVizSettings : public UObject
{
public:
	EMLDeformerVizMode                            VisualizationMode;                                 // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, EditorOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UAnimSequence>           TestAnimSequence;                                  // 0x0038(0x0030)(Edit, EditorOnly, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UMeshDeformer>           DeformerGraph;                                     // 0x0068(0x0030)(Edit, EditorOnly, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FMLDeformerCompareActor>        CompareActors;                                     // 0x0098(0x0010)(Edit, ZeroConstructor, EditorOnly, Protected, NativeAccessSpecifierProtected)
	float                                         AnimPlaySpeed;                                     // 0x00A8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, EditorOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         TrainingFrameNumber;                               // 0x00AC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, EditorOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bDrawLabels;                                       // 0x00B0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, EditorOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LabelHeight;                                       // 0x00B4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, EditorOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         LabelScale;                                        // 0x00B8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, EditorOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         MeshSpacing;                                       // 0x00BC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, EditorOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         TestingFrameNumber;                                // 0x00C0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, EditorOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         QualityLevel;                                      // 0x00C4(0x0004)(ZeroConstructor, Transient, Deprecated, IsPlainOldData, EditorOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bShowHeatMap;                                      // 0x00C8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, EditorOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EMLDeformerHeatMapMode                        HeatMapMode;                                       // 0x00C9(0x0001)(Edit, ZeroConstructor, IsPlainOldData, EditorOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_CA[0x2];                                       // 0x00CA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         HeatMapMax;                                        // 0x00CC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, EditorOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         GroundTruthLerp;                                   // 0x00D0(0x0004)(Edit, ZeroConstructor, Transient, IsPlainOldData, EditorOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bDrawLinearSkinnedActor;                           // 0x00D4(0x0001)(Edit, ZeroConstructor, IsPlainOldData, EditorOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bDrawMLDeformedActor;                              // 0x00D5(0x0001)(Edit, ZeroConstructor, IsPlainOldData, EditorOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bDrawGroundTruthActor;                             // 0x00D6(0x0001)(Edit, ZeroConstructor, IsPlainOldData, EditorOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bDrawMLCompareActors;                              // 0x00D7(0x0001)(Edit, ZeroConstructor, IsPlainOldData, EditorOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bDrawDebugActorBounds;                             // 0x00D8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, EditorOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_D9[0x3];                                       // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FColor                                 DebugBoundsColor;                                  // 0x00DC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, EditorOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         Weight;                                            // 0x00E0(0x0004)(Edit, ZeroConstructor, Transient, IsPlainOldData, EditorOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bDrawDeltas;                                       // 0x00E4(0x0001)(Edit, ZeroConstructor, IsPlainOldData, EditorOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bXRayDeltas;                                       // 0x00E5(0x0001)(Edit, ZeroConstructor, IsPlainOldData, EditorOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_E6[0x2];                                       // 0x00E6(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MLDeformerVizSettings">();
	}
	static class UMLDeformerVizSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMLDeformerVizSettings>();
	}
};

// Class MLDeformerFramework.MLDeformerGeomCacheVizSettings
// 0x0030 (0x0118 - 0x00E8)
class UMLDeformerGeomCacheVizSettings : public UMLDeformerVizSettings
{
public:
	TSoftObjectPtr<class UGeometryCache>          GroundTruth;                                       // 0x00E8(0x0030)(Edit, EditorOnly, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MLDeformerGeomCacheVizSettings">();
	}
	static class UMLDeformerGeomCacheVizSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMLDeformerGeomCacheVizSettings>();
	}
};

// Class MLDeformerFramework.MLDeformerMorphModelVizSettings
// 0x0010 (0x0128 - 0x0118)
class UMLDeformerMorphModelVizSettings : public UMLDeformerGeomCacheVizSettings
{
public:
	float                                         MorphTargetDeltaThreshold;                         // 0x0118(0x0004)(ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         MorphTargetNumber;                                 // 0x011C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bDrawMorphTargets;                                 // 0x0120(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_121[0x7];                                      // 0x0121(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MLDeformerMorphModelVizSettings">();
	}
	static class UMLDeformerMorphModelVizSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMLDeformerMorphModelVizSettings>();
	}
};

// Class MLDeformerFramework.MLDeformerComponent
// 0x0070 (0x0148 - 0x00D8)
class UMLDeformerComponent : public UActorComponent
{
public:
	uint8                                         Pad_D8[0x58];                                      // 0x00D8(0x0058)(Fixing Size After Last Property [ Dumper-7 ])
	class UMLDeformerAsset*                       DeformerAsset;                                     // 0x0130(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         Weight;                                            // 0x0138(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         QualityLevel;                                      // 0x013C(0x0004)(ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMLDeformerModelInstance*               ModelInstance;                                     // 0x0140(0x0008)(ZeroConstructor, Transient, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void SetDeformerAsset(class UMLDeformerAsset* InDeformerAsset);
	void SetQualityLevel(int32 InQualityLevel);
	void SetWeight(float NormalizedWeightValue);
	void UpdateSkeletalMeshComponent();

	class USkeletalMeshComponent* FindSkeletalMeshComponent(const class UMLDeformerAsset* Asset) const;
	class UMLDeformerAsset* GetDeformerAsset() const;
	class UMLDeformerModelInstance* GetModelInstance() const;
	int32 GetQualityLevel() const;
	class USkeletalMeshComponent* GetSkeletalMeshComponent() const;
	float GetWeight() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MLDeformerComponent">();
	}
	static class UMLDeformerComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMLDeformerComponent>();
	}
};

// Class MLDeformerFramework.MLDeformerComponentSource
// 0x0000 (0x0030 - 0x0030)
class UMLDeformerComponentSource final : public UOptimusComponentSource
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MLDeformerComponentSource">();
	}
	static class UMLDeformerComponentSource* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMLDeformerComponentSource>();
	}
};

// Class MLDeformerFramework.MLDeformerModel
// 0x01F0 (0x0220 - 0x0030)
class UMLDeformerModel : public UObject
{
public:
	uint8                                         Pad_30[0x38];                                      // 0x0030(0x0038)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UAnimSequence>           AnimSequence;                                      // 0x0068(0x0030)(Deprecated, EditorOnly, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_98[0x90];                                      // 0x0098(0x0090)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         NumBaseMeshVerts;                                  // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         NumTargetMeshVerts;                                // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                 TrainingDevice;                                    // 0x0130(0x0010)(Edit, ZeroConstructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_140[0x10];                                     // 0x0140(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MaxNumLODs;                                        // 0x0150(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_154[0x4];                                      // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMLDeformerInputInfo*                   InputInfo;                                         // 0x0158(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<int32>                                 VertexMap;                                         // 0x0160(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)
	class USkeletalMesh*                          SkeletalMesh;                                      // 0x0170(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMLDeformerVizSettings*                 VizSettings;                                       // 0x0178(0x0008)(ZeroConstructor, EditorOnly, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bIncludeBones;                                     // 0x0180(0x0001)(ZeroConstructor, Deprecated, IsPlainOldData, EditorOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bIncludeCurves;                                    // 0x0181(0x0001)(ZeroConstructor, Deprecated, IsPlainOldData, EditorOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_182[0xE];                                      // 0x0182(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             AlignmentTransform;                                // 0x0190(0x0060)(Edit, IsPlainOldData, EditorOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FBoneReference>                 BoneIncludeList;                                   // 0x01F0(0x0010)(ZeroConstructor, EditorOnly, NativeAccessSpecifierPrivate)
	TArray<struct FMLDeformerCurveReference>      CurveIncludeList;                                  // 0x0200(0x0010)(ZeroConstructor, EditorOnly, NativeAccessSpecifierPrivate)
	int32                                         MaxTrainingFrames;                                 // 0x0210(0x0004)(Edit, ZeroConstructor, IsPlainOldData, EditorOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         DeltaCutoffLength;                                 // 0x0214(0x0004)(ZeroConstructor, Deprecated, IsPlainOldData, EditorOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_218[0x8];                                      // 0x0218(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void SetTrainingDevice(const class FString& DeviceName);

	class FString GetTrainingDevice() const;
	const TArray<class FString> GetTrainingDeviceList() const;
	TArray<class FName> GetVertexAttributeNames() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MLDeformerModel">();
	}
	static class UMLDeformerModel* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMLDeformerModel>();
	}
};

// Class MLDeformerFramework.MLDeformerGeomCacheModel
// 0x0050 (0x0270 - 0x0220)
class UMLDeformerGeomCacheModel : public UMLDeformerModel
{
public:
	uint8                                         Pad_220[0x10];                                     // 0x0220(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UGeometryCache>          GeometryCache;                                     // 0x0230(0x0030)(Deprecated, EditorOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FMLDeformerGeomCacheTrainingInputAnim> TrainingInputAnims;                                // 0x0260(0x0010)(Edit, ZeroConstructor, EditorOnly, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MLDeformerGeomCacheModel">();
	}
	static class UMLDeformerGeomCacheModel* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMLDeformerGeomCacheModel>();
	}
};

// Class MLDeformerFramework.MLDeformerGraphDebugDataInterface
// 0x0000 (0x0030 - 0x0030)
class UMLDeformerGraphDebugDataInterface final : public UOptimusComputeDataInterface
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MLDeformerGraphDebugDataInterface">();
	}
	static class UMLDeformerGraphDebugDataInterface* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMLDeformerGraphDebugDataInterface>();
	}
};

// Class MLDeformerFramework.MLDeformerGraphDebugDataProvider
// 0x0010 (0x0040 - 0x0030)
class UMLDeformerGraphDebugDataProvider final : public UComputeDataProvider
{
public:
	class UMLDeformerComponent*                   DeformerComponent;                                 // 0x0030(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMLDeformerAsset*                       DeformerAsset;                                     // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MLDeformerGraphDebugDataProvider">();
	}
	static class UMLDeformerGraphDebugDataProvider* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMLDeformerGraphDebugDataProvider>();
	}
};

// Class MLDeformerFramework.MLDeformerInputInfo
// 0x0070 (0x00A0 - 0x0030)
class UMLDeformerInputInfo : public UObject
{
public:
	struct FSoftObjectPath                        SkeletalMesh;                                      // 0x0030(0x0028)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class FString>                         BoneNameStrings;                                   // 0x0058(0x0010)(ZeroConstructor, Deprecated, EditorOnly, Protected, NativeAccessSpecifierProtected)
	TArray<class FString>                         CurveNameStrings;                                  // 0x0068(0x0010)(ZeroConstructor, Deprecated, EditorOnly, Protected, NativeAccessSpecifierProtected)
	TArray<class FName>                           BoneNames;                                         // 0x0078(0x0010)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<class FName>                           CurveNames;                                        // 0x0088(0x0010)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	int32                                         NumBaseMeshVertices;                               // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         NumTargetMeshVertices;                             // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MLDeformerInputInfo">();
	}
	static class UMLDeformerInputInfo* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMLDeformerInputInfo>();
	}
};

// Class MLDeformerFramework.MLDeformerModelInstance
// 0x0060 (0x0090 - 0x0030)
class UMLDeformerModelInstance : public UObject
{
public:
	uint8                                         Pad_30[0x8];                                       // 0x0030(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UMLDeformerModel*                       Model;                                             // 0x0038(0x0008)(ZeroConstructor, Transient, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_40[0x50];                                      // 0x0040(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MLDeformerModelInstance">();
	}
	static class UMLDeformerModelInstance* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMLDeformerModelInstance>();
	}
};

// Class MLDeformerFramework.MLDeformerMorphModel
// 0x00D0 (0x0340 - 0x0270)
class UMLDeformerMorphModel : public UMLDeformerGeomCacheModel
{
public:
	uint8                                         Pad_270[0x20];                                     // 0x0270(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bClampMorphWeights;                                // 0x0290(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_291[0x7];                                      // 0x0291(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector3f>                      MorphTargetDeltas;                                 // 0x0298(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)
	int32                                         NumMorphTargets;                                   // 0x02A8(0x0004)(ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2AC[0x4];                                      // 0x02AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	uint64                                        CompressedMorphDataSizeInBytes;                    // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint64                                        UncompressedMorphDataSizeInBytes;                  // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<int32>                                 MorphTargetErrorOrder;                             // 0x02C0(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<float>                                 MorphTargetErrors;                                 // 0x02D0(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<float>                                 MaxMorphWeights;                                   // 0x02E0(0x0010)(ZeroConstructor, Deprecated, NativeAccessSpecifierPrivate)
	TArray<struct FFloatInterval>                 MorphTargetsMinMaxWeights;                         // 0x02F0(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FMLDeformerMorphModelQualityLevel> QualityLevels;                                     // 0x0300(0x0010)(ZeroConstructor, Deprecated, NativeAccessSpecifierPrivate)
	bool                                          bIncludeNormals;                                   // 0x0310(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_311[0x3];                                      // 0x0311(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MorphDeltaZeroThreshold;                           // 0x0314(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         MorphCompressionLevel;                             // 0x0318(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EMLDeformerMaskChannel                        MaskChannel;                                       // 0x031C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_31D[0x3];                                      // 0x031D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   VertexAttributeName;                               // 0x0320(0x000C)(Edit, ZeroConstructor, IsPlainOldData, EditorOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bInvertMaskChannel;                                // 0x032C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_32D[0x13];                                     // 0x032D(0x0013)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void SetMorphTargetDeltaFloats(const TArray<float>& Deltas);
	void SetMorphTargetDeltas(const TArray<struct FVector3f>& Deltas);
	void SetMorphTargetsErrorOrder(const TArray<int32>& MorphTargetOrder, const TArray<float>& ErrorValues);
	void SetMorphTargetsMaxWeights(const TArray<float>& MaxWeights);
	void SetMorphTargetsMinMaxWeights(const TArray<float>& MinValues, const TArray<float>& MaxValues);

	bool CanDynamicallyUpdateMorphTargets() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MLDeformerMorphModel">();
	}
	static class UMLDeformerMorphModel* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMLDeformerMorphModel>();
	}
};

// Class MLDeformerFramework.MLDeformerMorphModelInputInfo
// 0x0010 (0x00B0 - 0x00A0)
class UMLDeformerMorphModelInputInfo : public UMLDeformerInputInfo
{
public:
	TArray<float>                                 InputItemMaskBuffer;                               // 0x00A0(0x0010)(ZeroConstructor, EditorOnly, Protected, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MLDeformerMorphModelInputInfo">();
	}
	static class UMLDeformerMorphModelInputInfo* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMLDeformerMorphModelInputInfo>();
	}
};

// Class MLDeformerFramework.MLDeformerMorphModelInstance
// 0x0008 (0x0098 - 0x0090)
class UMLDeformerMorphModelInstance : public UMLDeformerModelInstance
{
public:
	uint8                                         Pad_90[0x8];                                       // 0x0090(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MLDeformerMorphModelInstance">();
	}
	static class UMLDeformerMorphModelInstance* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMLDeformerMorphModelInstance>();
	}
};

}

