#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DynamicAthenaHUD

#include "Basic.hpp"

#include "DynamicAthenaHUD_classes.hpp"
#include "DynamicAthenaHUD_parameters.hpp"


namespace SDK
{

// Function DynamicAthenaHUD.DynamicAthenaHUDDirector.HandleCreativeQuickbarEquippedChanged
// (Final, Native, Private)
// Parameters:
// bool                                    bIsQuickbarEquipped                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ADynamicAthenaHUDDirector::HandleCreativeQuickbarEquippedChanged(bool bIsQuickbarEquipped)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DynamicAthenaHUDDirector", "HandleCreativeQuickbarEquippedChanged");

	Params::DynamicAthenaHUDDirector_HandleCreativeQuickbarEquippedChanged Parms{};

	Parms.bIsQuickbarEquipped = bIsQuickbarEquipped;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DynamicAthenaHUD.DynamicAthenaHUDDirector.HandleEnterVehicle
// (Final, Native, Private)

void ADynamicAthenaHUDDirector::HandleEnterVehicle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DynamicAthenaHUDDirector", "HandleEnterVehicle");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DynamicAthenaHUD.DynamicAthenaHUDDirector.HandleExitVehicle
// (Final, Native, Private)

void ADynamicAthenaHUDDirector::HandleExitVehicle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DynamicAthenaHUDDirector", "HandleExitVehicle");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DynamicAthenaHUD.DynamicAthenaHUDDirector.HandleHUDElementVisibilityRefreshed
// (Final, Native, Private)

void ADynamicAthenaHUDDirector::HandleHUDElementVisibilityRefreshed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DynamicAthenaHUDDirector", "HandleHUDElementVisibilityRefreshed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DynamicAthenaHUD.DynamicAthenaHUDDirector.HandleInGameLoadScreenChanged
// (Final, Native, Private)
// Parameters:
// class AFortPlayerControllerAthena*      PlayerController                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bEnableLoadScreen                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             HUDReasonText                                          (Parm, NativeAccessSpecifierPublic)

void ADynamicAthenaHUDDirector::HandleInGameLoadScreenChanged(class AFortPlayerControllerAthena* PlayerController, bool bEnableLoadScreen, const class FText& HUDReasonText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DynamicAthenaHUDDirector", "HandleInGameLoadScreenChanged");

	Params::DynamicAthenaHUDDirector_HandleInGameLoadScreenChanged Parms{};

	Parms.PlayerController = PlayerController;
	Parms.bEnableLoadScreen = bEnableLoadScreen;
	Parms.HUDReasonText = std::move(HUDReasonText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DynamicAthenaHUD.DynamicAthenaHUDDirector.HandleNpcHired
// (Final, Native, Private)

void ADynamicAthenaHUDDirector::HandleNpcHired()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DynamicAthenaHUDDirector", "HandleNpcHired");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}

}

