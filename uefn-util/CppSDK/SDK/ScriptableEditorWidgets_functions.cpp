#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ScriptableEditorWidgets

#include "Basic.hpp"

#include "ScriptableEditorWidgets_classes.hpp"
#include "ScriptableEditorWidgets_parameters.hpp"


namespace SDK
{

// Function ScriptableEditorWidgets.PropertyViewBase.SetObject
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          NewObject                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPropertyViewBase::SetObject(class UObject* NewObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PropertyViewBase", "SetObject");

	Params::PropertyViewBase_SetObject Parms{};

	Parms.NewObject = NewObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ScriptableEditorWidgets.PropertyViewBase.GetObject
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UObject* UPropertyViewBase::GetObject() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PropertyViewBase", "GetObject");

	Params::PropertyViewBase_GetObject Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ScriptableEditorWidgets.SinglePropertyView.SetNameOverride
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FText                             NewPropertyName                                        (Parm, NativeAccessSpecifierPublic)

void USinglePropertyView::SetNameOverride(const class FText& NewPropertyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SinglePropertyView", "SetNameOverride");

	Params::SinglePropertyView_SetNameOverride Parms{};

	Parms.NewPropertyName = std::move(NewPropertyName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ScriptableEditorWidgets.SinglePropertyView.SetPropertyName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             NewPropertyName                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USinglePropertyView::SetPropertyName(class FName NewPropertyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SinglePropertyView", "SetPropertyName");

	Params::SinglePropertyView_SetPropertyName Parms{};

	Parms.NewPropertyName = NewPropertyName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ScriptableEditorWidgets.SinglePropertyView.GetNameOverride
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText USinglePropertyView::GetNameOverride() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SinglePropertyView", "GetNameOverride");

	Params::SinglePropertyView_GetNameOverride Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ScriptableEditorWidgets.SinglePropertyView.GetPropertyName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName USinglePropertyView::GetPropertyName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SinglePropertyView", "GetPropertyName");

	Params::SinglePropertyView_GetPropertyName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

