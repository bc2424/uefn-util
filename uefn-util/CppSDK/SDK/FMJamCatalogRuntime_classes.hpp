#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FMJamCatalogRuntime

#include "Basic.hpp"

#include "SparksCoreRuntime_structs.hpp"
#include "DeveloperSettings_classes.hpp"
#include "FMCoreRuntime_structs.hpp"
#include "Engine_classes.hpp"
#include "GameplayTags_structs.hpp"
#include "ModularGameplay_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// Class FMJamCatalogRuntime.FMJamCatalogDeveloperSettings
// 0x0018 (0x0078 - 0x0060)
class UFMJamCatalogDeveloperSettings final : public UDeveloperSettings
{
public:
	bool                                          bOverrideJamSongLoadout;                           // 0x0060(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           JamSongLoadout;                                    // 0x0068(0x0010)(Edit, EditFixedSize, ZeroConstructor, Config, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FMJamCatalogDeveloperSettings">();
	}
	static class UFMJamCatalogDeveloperSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFMJamCatalogDeveloperSettings>();
	}
};

// Class FMJamCatalogRuntime.FMJamLoop
// 0x0148 (0x0190 - 0x0048)
class UFMJamLoop final : public UPrimaryDataAsset
{
public:
	TSoftObjectPtr<class UMidiFile>               MidiFileMajor;                                     // 0x0048(0x0030)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UMidiFile>               MidiFileMinor;                                     // 0x0078(0x0030)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UFusionPatch>            FusionPatchMajor;                                  // 0x00A8(0x0030)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UFusionPatch>            FusionPatchMinor;                                  // 0x00D8(0x0030)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bOverrideDefaultTransposition;                     // 0x0108(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<EMusicKey, int32>                        Transposes;                                        // 0x0110(0x0050)(Edit, EditFixedSize, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UFMJamSong>              Song;                                              // 0x0160(0x0030)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void AutoPopulateAssetRefs();

	EMusicKey GetKey() const;
	EFMJamLoopType GetLoopType() const;
	void GetMajorMidi(TSoftObjectPtr<class UMidiFile>* OutMetasoundMidi, TSoftObjectPtr<class UFusionPatch>* OutMetasoundFusion) const;
	void GetMidi(const EMusicKeyMode Mode, TSoftObjectPtr<class UMidiFile>* OutMetasoundMidi, TSoftObjectPtr<class UFusionPatch>* OutMetasoundFusion) const;
	void GetMinorMidi(TSoftObjectPtr<class UMidiFile>* OutMetasoundMidi, TSoftObjectPtr<class UFusionPatch>* OutMetasoundFusion) const;
	int32 GetSemitoneTranspose(const EMusicKey ToKey) const;
	class UFMJamSong* GetSong() const;
	bool HasPitch() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FMJamLoop">();
	}
	static class UFMJamLoop* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFMJamLoop>();
	}
};

// Class FMJamCatalogRuntime.FMJamSong
// 0x00C0 (0x0108 - 0x0048)
class UFMJamSong final : public UPrimaryDataAsset
{
public:
	class FName                                   SongShortName;                                     // 0x0048(0x000C)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_54[0xC];                                       // 0x0054(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Title;                                             // 0x0060(0x0010)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class FText                                   Artist;                                            // 0x0070(0x0010)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                  AdditionalTags;                                    // 0x0080(0x0020)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	EMusicKey                                     Key;                                               // 0x00A0(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EMusicKeyMode                                 Mode;                                              // 0x00A1(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_A2[0x2];                                       // 0x00A2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Tempo;                                             // 0x00A4(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFMJamLoop*                             Lead;                                              // 0x00A8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFMJamLoop*                             Misc;                                              // 0x00B0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFMJamLoop*                             Bass;                                              // 0x00B8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFMJamLoop*                             Beat;                                              // 0x00C0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UAnimSequence>           LipSyncAnimAsset;                                  // 0x00C8(0x0030)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FDirectoryPath                         AutoPopulateSearchPathOverride;                    // 0x00F8(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, EditorOnly, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void AutoPopulateAssetRefs();

	const struct FGameplayTagContainer GetAdditionalTags() const;
	class FString GetArtist() const;
	EMusicKey GetKey() const;
	const TSoftObjectPtr<class UAnimSequence> GetLipSyncAnimAsset() const;
	class UFMJamLoop* GetLoop(const EFMJamLoopType LoopType) const;
	EFMJamLoopType GetLoopTypeForLoop(const class UFMJamLoop* Loop) const;
	EMusicKeyMode GetMode() const;
	class FName GetSongShortName() const;
	int32 GetTempo() const;
	class FString GetTitle() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FMJamSong">();
	}
	static class UFMJamSong* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFMJamSong>();
	}
};

// Class FMJamCatalogRuntime.FMJamSongCatalog
// 0x00C0 (0x0198 - 0x00D8)
class UFMJamSongCatalog final : public UGameStateComponent
{
public:
	uint8                                         Pad_D8[0x58];                                      // 0x00D8(0x0058)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FName, class UFMJamSong*>          SongsByShortName;                                  // 0x0130(0x0050)(NativeAccessSpecifierPrivate)
	class USparksSongCatalog*                     CachedCMSCatalog;                                  // 0x0180(0x0008)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         NumCMSRetries;                                     // 0x0188(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bHaveSongCatalog;                                  // 0x018C(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_18D[0xB];                                      // 0x018D(0x000B)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UFMJamSongCatalog* GetFMJamSongCatalog(const class UObject* WorldContextObject);
	static EFMJamLoopType GetLoopTypeByTag(const struct FGameplayTag& LoopTag);
	static class FText GetLoopTypeText(const EFMJamLoopType& LoopType);
	static class UFMJamSongCatalog* TryGetFMJamSongCatalog(const class UObject* WorldContextObject);

	void OnSongCatalogRetrieved(bool bSuccess);

	class UFMJamSong* GetSongByShortName(const class FName ShortName) const;
	class UCatalogData* GetSongCatalogEntryByShortName(const class FName ShortName) const;
	bool HaveCMSSongCatalog() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FMJamSongCatalog">();
	}
	static class UFMJamSongCatalog* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFMJamSongCatalog>();
	}
};

}

