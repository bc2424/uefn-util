#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ViewportInteraction

#include "Basic.hpp"

#include "ViewportInteraction_classes.hpp"
#include "ViewportInteraction_parameters.hpp"


namespace SDK
{

// Function ViewportInteraction.ViewportTransformer.Init
// (Native, Public)
// Parameters:
// class UViewportWorldInteraction*        InitViewportWorldInteraction                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UViewportTransformer::Init(class UViewportWorldInteraction* InitViewportWorldInteraction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ViewportTransformer", "Init");

	Params::ViewportTransformer_Init Parms{};

	Parms.InitViewportWorldInteraction = InitViewportWorldInteraction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ViewportInteraction.ViewportTransformer.OnStartDragging
// (Native, Public)
// Parameters:
// class UViewportInteractor*              Interactor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UViewportTransformer::OnStartDragging(class UViewportInteractor* Interactor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ViewportTransformer", "OnStartDragging");

	Params::ViewportTransformer_OnStartDragging Parms{};

	Parms.Interactor = Interactor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ViewportInteraction.ViewportTransformer.OnStopDragging
// (Native, Public)
// Parameters:
// class UViewportInteractor*              Interactor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UViewportTransformer::OnStopDragging(class UViewportInteractor* Interactor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ViewportTransformer", "OnStopDragging");

	Params::ViewportTransformer_OnStopDragging Parms{};

	Parms.Interactor = Interactor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ViewportInteraction.ViewportTransformer.Shutdown
// (Native, Public)

void UViewportTransformer::Shutdown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ViewportTransformer", "Shutdown");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ViewportInteraction.ViewportTransformer.CanAlignToActors
// (Native, Public, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UViewportTransformer::CanAlignToActors() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ViewportTransformer", "CanAlignToActors");

	Params::ViewportTransformer_CanAlignToActors Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ViewportInteraction.ViewportTransformer.ShouldCenterTransformGizmoPivot
// (Native, Public, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UViewportTransformer::ShouldCenterTransformGizmoPivot() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ViewportTransformer", "ShouldCenterTransformGizmoPivot");

	Params::ViewportTransformer_ShouldCenterTransformGizmoPivot Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ViewportInteraction.ViewportInteractor.GetHoverLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UViewportInteractor::GetHoverLocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ViewportInteractor", "GetHoverLocation");

	Params::ViewportInteractor_GetHoverLocation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ViewportInteraction.ViewportInteractor.GetLaserPointer
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          LaserPointerStart                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          LaserPointerEnd                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bEvenIfBlocked                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   LaserLengthOverride                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UViewportInteractor::GetLaserPointer(struct FVector* LaserPointerStart, struct FVector* LaserPointerEnd, const bool bEvenIfBlocked, const float LaserLengthOverride)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ViewportInteractor", "GetLaserPointer");

	Params::ViewportInteractor_GetLaserPointer Parms{};

	Parms.bEvenIfBlocked = bEvenIfBlocked;
	Parms.LaserLengthOverride = LaserLengthOverride;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (LaserPointerStart != nullptr)
		*LaserPointerStart = std::move(Parms.LaserPointerStart);

	if (LaserPointerEnd != nullptr)
		*LaserPointerEnd = std::move(Parms.LaserPointerEnd);

	return Parms.ReturnValue;
}


// Function ViewportInteraction.ViewportInteractor.HandleInputAxis_BP
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// struct FViewportActionKeyInput          Action                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FKey                             Key                                                    (ConstParm, Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delta                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DeltaTime                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bOutWasHandled                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UViewportInteractor::HandleInputAxis_BP(const struct FViewportActionKeyInput& Action, const struct FKey& Key, const float Delta, const float DeltaTime, bool* bOutWasHandled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ViewportInteractor", "HandleInputAxis_BP");

	Params::ViewportInteractor_HandleInputAxis_BP Parms{};

	Parms.Action = std::move(Action);
	Parms.Key = std::move(Key);
	Parms.Delta = Delta;
	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);

	if (bOutWasHandled != nullptr)
		*bOutWasHandled = Parms.bOutWasHandled;
}


// Function ViewportInteraction.ViewportInteractor.HandleInputKey_BP
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// struct FViewportActionKeyInput          Action                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FKey                             Key                                                    (ConstParm, Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EInputEvent                             Event                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bOutWasHandled                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UViewportInteractor::HandleInputKey_BP(const struct FViewportActionKeyInput& Action, const struct FKey& Key, const EInputEvent Event, bool* bOutWasHandled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ViewportInteractor", "HandleInputKey_BP");

	Params::ViewportInteractor_HandleInputKey_BP Parms{};

	Parms.Action = std::move(Action);
	Parms.Key = std::move(Key);
	Parms.Event = Event;

	UObject::ProcessEvent(Func, &Parms);

	if (bOutWasHandled != nullptr)
		*bOutWasHandled = Parms.bOutWasHandled;
}


// Function ViewportInteraction.ViewportInteractor.SetCanCarry
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInCanCarry                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UViewportInteractor::SetCanCarry(const bool bInCanCarry)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ViewportInteractor", "SetCanCarry");

	Params::ViewportInteractor_SetCanCarry Parms{};

	Parms.bInCanCarry = bInCanCarry;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ViewportInteraction.ViewportInteractor.SetDraggingMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EViewportInteractionDraggingMode        NewDraggingMode                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UViewportInteractor::SetDraggingMode(const EViewportInteractionDraggingMode NewDraggingMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ViewportInteractor", "SetDraggingMode");

	Params::ViewportInteractor_SetDraggingMode Parms{};

	Parms.NewDraggingMode = NewDraggingMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ViewportInteraction.ViewportInteractor.SetHitResultGizmoFilterMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EHitResultGizmoFilterMode               newFilter                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UViewportInteractor::SetHitResultGizmoFilterMode(EHitResultGizmoFilterMode newFilter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ViewportInteractor", "SetHitResultGizmoFilterMode");

	Params::ViewportInteractor_SetHitResultGizmoFilterMode Parms{};

	Parms.newFilter = newFilter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ViewportInteraction.ViewportInteractor.Shutdown
// (Native, Event, Public, BlueprintEvent)

void UViewportInteractor::Shutdown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ViewportInteractor", "Shutdown");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ViewportInteraction.ViewportInteractor.Tick
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaTime                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UViewportInteractor::Tick(const float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ViewportInteractor", "Tick");

	Params::ViewportInteractor_Tick Parms{};

	Parms.DeltaTime = DeltaTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ViewportInteraction.ViewportInteractor.CanCarry
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UViewportInteractor::CanCarry() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ViewportInteractor", "CanCarry");

	Params::ViewportInteractor_CanCarry Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ViewportInteraction.ViewportInteractor.GetDraggingMode
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EViewportInteractionDraggingMode        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EViewportInteractionDraggingMode UViewportInteractor::GetDraggingMode() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ViewportInteractor", "GetDraggingMode");

	Params::ViewportInteractor_GetDraggingMode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ViewportInteraction.ViewportInteractor.GetHitResultGizmoFilterMode
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EHitResultGizmoFilterMode               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EHitResultGizmoFilterMode UViewportInteractor::GetHitResultGizmoFilterMode() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ViewportInteractor", "GetHitResultGizmoFilterMode");

	Params::ViewportInteractor_GetHitResultGizmoFilterMode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ViewportInteraction.ViewportInteractor.GetLastRoomSpaceTransform
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FTransform                       ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FTransform UViewportInteractor::GetLastRoomSpaceTransform() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ViewportInteractor", "GetLastRoomSpaceTransform");

	Params::ViewportInteractor_GetLastRoomSpaceTransform Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ViewportInteraction.ViewportInteractor.GetLastTransform
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FTransform                       ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FTransform UViewportInteractor::GetLastTransform() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ViewportInteractor", "GetLastTransform");

	Params::ViewportInteractor_GetLastTransform Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ViewportInteraction.ViewportInteractor.GetOtherInteractor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UViewportInteractor*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UViewportInteractor* UViewportInteractor::GetOtherInteractor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ViewportInteractor", "GetOtherInteractor");

	Params::ViewportInteractor_GetOtherInteractor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ViewportInteraction.ViewportInteractor.GetRoomSpaceTransform
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FTransform                       ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FTransform UViewportInteractor::GetRoomSpaceTransform() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ViewportInteractor", "GetRoomSpaceTransform");

	Params::ViewportInteractor_GetRoomSpaceTransform Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ViewportInteraction.ViewportInteractor.GetTransform
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FTransform                       ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FTransform UViewportInteractor::GetTransform() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ViewportInteractor", "GetTransform");

	Params::ViewportInteractor_GetTransform Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ViewportInteraction.ViewportInteractor.GetTransformAndForwardVector
// (Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FTransform                       OutHandTransform                                       (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          OutForwardVector                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UViewportInteractor::GetTransformAndForwardVector(struct FTransform* OutHandTransform, struct FVector* OutForwardVector) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ViewportInteractor", "GetTransformAndForwardVector");

	Params::ViewportInteractor_GetTransformAndForwardVector Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutHandTransform != nullptr)
		*OutHandTransform = std::move(Parms.OutHandTransform);

	if (OutForwardVector != nullptr)
		*OutForwardVector = std::move(Parms.OutForwardVector);

	return Parms.ReturnValue;
}


// Function ViewportInteraction.ViewportInteractor.GetWorldInteraction
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UViewportWorldInteraction*        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UViewportWorldInteraction* UViewportInteractor::GetWorldInteraction() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ViewportInteractor", "GetWorldInteraction");

	Params::ViewportInteractor_GetWorldInteraction Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ViewportInteraction.ViewportInteractor.IsHoveringOverGizmo
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UViewportInteractor::IsHoveringOverGizmo() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ViewportInteractor", "IsHoveringOverGizmo");

	Params::ViewportInteractor_IsHoveringOverGizmo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ViewportInteraction.ViewportWorldInteraction.AddActorToExcludeFromHitTests
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           ActorToExcludeFromHitTests                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UViewportWorldInteraction::AddActorToExcludeFromHitTests(class AActor* ActorToExcludeFromHitTests)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ViewportWorldInteraction", "AddActorToExcludeFromHitTests");

	Params::ViewportWorldInteraction_AddActorToExcludeFromHitTests Parms{};

	Parms.ActorToExcludeFromHitTests = ActorToExcludeFromHitTests;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ViewportInteraction.ViewportWorldInteraction.AddInteractor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UViewportInteractor*              Interactor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UViewportWorldInteraction::AddInteractor(class UViewportInteractor* Interactor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ViewportWorldInteraction", "AddInteractor");

	Params::ViewportWorldInteraction_AddInteractor Parms{};

	Parms.Interactor = Interactor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ViewportInteraction.ViewportWorldInteraction.GetTransformGizmoActor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ABaseTransformGizmo*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ABaseTransformGizmo* UViewportWorldInteraction::GetTransformGizmoActor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ViewportWorldInteraction", "GetTransformGizmoActor");

	Params::ViewportWorldInteraction_GetTransformGizmoActor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ViewportInteraction.ViewportWorldInteraction.RemoveInteractor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UViewportInteractor*              Interactor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UViewportWorldInteraction::RemoveInteractor(class UViewportInteractor* Interactor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ViewportWorldInteraction", "RemoveInteractor");

	Params::ViewportWorldInteraction_RemoveInteractor Parms{};

	Parms.Interactor = Interactor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ViewportInteraction.ViewportWorldInteraction.SetHeadTransform
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FTransform                       NewHeadTransform                                       (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UViewportWorldInteraction::SetHeadTransform(const struct FTransform& NewHeadTransform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ViewportWorldInteraction", "SetHeadTransform");

	Params::ViewportWorldInteraction_SetHeadTransform Parms{};

	Parms.NewHeadTransform = std::move(NewHeadTransform);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ViewportInteraction.ViewportWorldInteraction.SetRoomTransformForNextFrame
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FTransform                       NewRoomTransform                                       (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UViewportWorldInteraction::SetRoomTransformForNextFrame(const struct FTransform& NewRoomTransform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ViewportWorldInteraction", "SetRoomTransformForNextFrame");

	Params::ViewportWorldInteraction_SetRoomTransformForNextFrame Parms{};

	Parms.NewRoomTransform = std::move(NewRoomTransform);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ViewportInteraction.ViewportWorldInteraction.SetWorldToMetersScale
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   NewWorldToMetersScale                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bCompensateRoomWorldScale                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UViewportWorldInteraction::SetWorldToMetersScale(const float NewWorldToMetersScale, const bool bCompensateRoomWorldScale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ViewportWorldInteraction", "SetWorldToMetersScale");

	Params::ViewportWorldInteraction_SetWorldToMetersScale Parms{};

	Parms.NewWorldToMetersScale = NewWorldToMetersScale;
	Parms.bCompensateRoomWorldScale = bCompensateRoomWorldScale;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ViewportInteraction.ViewportWorldInteraction.GetHeadTransform
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FTransform                       ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FTransform UViewportWorldInteraction::GetHeadTransform() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ViewportWorldInteraction", "GetHeadTransform");

	Params::ViewportWorldInteraction_GetHeadTransform Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ViewportInteraction.ViewportWorldInteraction.GetInteractors
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const TArray<class UViewportInteractor*>ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const TArray<class UViewportInteractor*> UViewportWorldInteraction::GetInteractors() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ViewportWorldInteraction", "GetInteractors");

	Params::ViewportWorldInteraction_GetInteractors Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ViewportInteraction.ViewportWorldInteraction.GetRoomSpaceHeadTransform
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FTransform                       ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FTransform UViewportWorldInteraction::GetRoomSpaceHeadTransform() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ViewportWorldInteraction", "GetRoomSpaceHeadTransform");

	Params::ViewportWorldInteraction_GetRoomSpaceHeadTransform Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ViewportInteraction.ViewportWorldInteraction.GetRoomTransform
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FTransform                       ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FTransform UViewportWorldInteraction::GetRoomTransform() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ViewportWorldInteraction", "GetRoomTransform");

	Params::ViewportWorldInteraction_GetRoomTransform Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ViewportInteraction.ViewportWorldInteraction.GetWorldScaleFactor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UViewportWorldInteraction::GetWorldScaleFactor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ViewportWorldInteraction", "GetWorldScaleFactor");

	Params::ViewportWorldInteraction_GetWorldScaleFactor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

