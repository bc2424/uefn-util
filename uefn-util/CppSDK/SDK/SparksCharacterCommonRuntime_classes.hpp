#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SparksCharacterCommonRuntime

#include "Basic.hpp"

#include "Engine_classes.hpp"
#include "SparksCoreRuntime_structs.hpp"
#include "FortniteGame_classes.hpp"
#include "BeatSyncedAnimRuntime_structs.hpp"
#include "SparksCharacterCommonRuntime_structs.hpp"
#include "ModularGameplay_classes.hpp"


namespace SDK
{

// Class SparksCharacterCommonRuntime.SparksAnimationSubsystem
// 0x00A8 (0x00E0 - 0x0038)
class USparksAnimationSubsystem final : public UWorldSubsystem
{
public:
	TSoftObjectPtr<class USparksInstrumentAnimations> Anims_Default;                                     // 0x0038(0x0030)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class USparksInstrumentAnimations> Anims_Light;                                       // 0x0068(0x0030)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_98[0x28];                                      // 0x0098(0x0028)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         NumAnimationRefs;                                  // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_C4[0x1C];                                      // 0x00C4(0x001C)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	class USparksInstrumentAnimations* GetLoadedSparksAnimations();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SparksAnimationSubsystem">();
	}
	static class USparksAnimationSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<USparksAnimationSubsystem>();
	}
};

// Class SparksCharacterCommonRuntime.SparksBaseLayerAnimInstance
// 0x00A0 (0x05A0 - 0x0500)
class USparksBaseLayerAnimInstance final : public UFortBaseLayerAnimInstance
{
public:
	float                                         MinTempo;                                          // 0x0500(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxTempo;                                          // 0x0504(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<float>                                 BPMBucketMaxTempos;                                // 0x0508(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                         BPMBucketCooldownBeats;                            // 0x0518(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PreviewBPM;                                        // 0x051C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BPMBucketHysteresis;                               // 0x0520(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_524[0x4];                                      // 0x0524(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USparksInstrumentAnimPlayerStateComponent* InstrumentPSC;                                     // 0x0528(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ASparksMusicPlayspace*                  SparksPlayspace;                                   // 0x0530(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMusicClockComponent*                   MusicClock;                                        // 0x0538(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FBeatAndTime                           SongBeatAndTime;                                   // 0x0540(0x000C)(Edit, BlueprintVisible, EditConst, NoDestructor, NativeAccessSpecifierPublic)
	struct FBeatAndTime                           AnimBeatAndTime;                                   // 0x054C(0x000C)(Edit, BlueprintVisible, EditConst, NoDestructor, NativeAccessSpecifierPublic)
	float                                         SongBPM;                                           // 0x0558(0x0004)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         BPMBucketCooldownRemaining;                        // 0x055C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         BPMBucket;                                         // 0x0560(0x0004)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESparksInstrumentType                         Instrument;                                        // 0x0564(0x0001)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCanPlayMidiAnimations;                            // 0x0565(0x0001)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bMusicBeatIsActive;                                // 0x0566(0x0001)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsRoamingOrNotAnimatable;                         // 0x0567(0x0001)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   InstrumentSlotTag;                                 // 0x0568(0x000C)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FBeatAndTime                           PrevSongBeatAndTime;                               // 0x0574(0x000C)(Edit, EditConst, NoDestructor, NativeAccessSpecifierPrivate)
	struct FBeatAndTime                           PrevAnimBeatAndTime;                               // 0x0580(0x000C)(Edit, EditConst, NoDestructor, NativeAccessSpecifierPrivate)
	float                                         TempoHalfOrDoubleFactor;                           // 0x058C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	ESparksAnimatableState                        AnimatableState;                                   // 0x0590(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bIsRoaming;                                        // 0x0591(0x0001)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_592[0xE];                                      // 0x0592(0x000E)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BP_OnSetInstrumentPSC(class USparksInstrumentAnimPlayerStateComponent* OldInstrumentPSC, class USparksInstrumentAnimPlayerStateComponent* NewInstrumentPSC);
	void SetIsRoaming(bool bInIsRoaming);

	ESparksAnimatableState GetAnimatableState() const;
	bool GetIsRoaming() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SparksBaseLayerAnimInstance">();
	}
	static class USparksBaseLayerAnimInstance* GetDefaultObj()
	{
		return GetDefaultObjImpl<USparksBaseLayerAnimInstance>();
	}
};

// Class SparksCharacterCommonRuntime.SparksInstrumentAnimInstance
// 0x0060 (0x0460 - 0x0400)
class USparksInstrumentAnimInstance : public UAnimInstance
{
public:
	class USparksInstrumentAnimPlayerStateComponent* InstrumentPSC;                                     // 0x03F8(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ASparksMusicPlayspace*                  SparksMusicPlayspace;                              // 0x0400(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMusicClockComponent*                   MusicClock;                                        // 0x0408(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TScriptInterface<class IMidiEventDriverInterface> MidiEventDriver;                                   // 0x0410(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESparksInstrumentType                         Instrument;                                        // 0x0420(0x0001)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_421[0x3];                                      // 0x0421(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         PreviewBPM;                                        // 0x0424(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FBeatAndTime                           SongBeatAndTime;                                   // 0x0428(0x000C)(Edit, BlueprintVisible, EditConst, NoDestructor, NativeAccessSpecifierPublic)
	struct FBeatAndTime                           AnimBeatAndTime;                                   // 0x0434(0x000C)(Edit, BlueprintVisible, EditConst, NoDestructor, NativeAccessSpecifierPublic)
	class UAnimSequence*                          LipSyncAsset;                                      // 0x0440(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_448[0x10];                                     // 0x0448(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bAllowLipSyncAnimations;                           // 0x0458(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_459[0x7];                                      // 0x0459(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BP_OnCosmeticInstrumentTypeChanged(ESparksInstrumentType NewInstrument);
	void BP_OnLipSyncAssetChanged(const class UAnimSequence* NewLipSyncAsset);
	void BP_OnMidiEventDriverChanged(const TScriptInterface<class IMidiEventDriverInterface>& NewMidiEventDriver);
	void BP_OnSetInstrumentPSC(class USparksInstrumentAnimPlayerStateComponent* OldInstrumentPSC, class USparksInstrumentAnimPlayerStateComponent* NewInstrumentPSC);
	void BP_SparksDebugUpdate();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SparksInstrumentAnimInstance">();
	}
	static class USparksInstrumentAnimInstance* GetDefaultObj()
	{
		return GetDefaultObjImpl<USparksInstrumentAnimInstance>();
	}
};

// Class SparksCharacterCommonRuntime.SparksGuitarAnimInstance
// 0x0010 (0x0470 - 0x0460)
class USparksGuitarAnimInstance : public USparksInstrumentAnimInstance
{
public:
	int32                                         FretNumber;                                        // 0x0460(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_464[0xC];                                      // 0x0464(0x000C)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static int32 GetFretNumberFromMidiNote(const uint8 MidiNote);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SparksGuitarAnimInstance">();
	}
	static class USparksGuitarAnimInstance* GetDefaultObj()
	{
		return GetDefaultObjImpl<USparksGuitarAnimInstance>();
	}
};

// Class SparksCharacterCommonRuntime.SparksBassAnimInstance
// 0x0000 (0x0470 - 0x0470)
class USparksBassAnimInstance final : public USparksGuitarAnimInstance
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SparksBassAnimInstance">();
	}
	static class USparksBassAnimInstance* GetDefaultObj()
	{
		return GetDefaultObjImpl<USparksBassAnimInstance>();
	}
};

// Class SparksCharacterCommonRuntime.SparksDrumsAnimInstance
// 0x0000 (0x0460 - 0x0460)
class USparksDrumsAnimInstance final : public USparksInstrumentAnimInstance
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SparksDrumsAnimInstance">();
	}
	static class USparksDrumsAnimInstance* GetDefaultObj()
	{
		return GetDefaultObjImpl<USparksDrumsAnimInstance>();
	}
};

// Class SparksCharacterCommonRuntime.SparksInstrumentAnimations
// 0x0030 (0x0068 - 0x0038)
class USparksInstrumentAnimations final : public UDataAsset
{
public:
	TSubclassOf<class USparksBaseLayerAnimInstance> BandPlayAnimBP;                                    // 0x0038(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class USparksInstrumentAnimInstance> InstrumentAnimBPs[0x5];                            // 0x0040(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	TSubclassOf<class USparksInstrumentAnimInstance> GetAnimClassForInstrument(ESparksInstrumentType Instrument);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SparksInstrumentAnimations">();
	}
	static class USparksInstrumentAnimations* GetDefaultObj()
	{
		return GetDefaultObjImpl<USparksInstrumentAnimations>();
	}
};

// Class SparksCharacterCommonRuntime.SparksInstrumentAnimPlayerStateComponent
// 0x01C0 (0x0298 - 0x00D8)
class USparksInstrumentAnimPlayerStateComponent final : public UPlayerStateComponent
{
public:
	uint8                                         Pad_D8[0x8];                                       // 0x00D8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class USparksInstrumentAnimations*            InstrumentAnimations;                              // 0x00E0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ASparksMusicPlayspace*                  SparksPlayspace;                                   // 0x00E8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMusicClockComponent*                   MusicClock;                                        // 0x00F0(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TScriptInterface<class IMidiEventDriverInterface> MidiEventDriver;                                   // 0x00F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UAnimSequence>           LipSyncAsset;                                      // 0x0108(0x0030)(Edit, BlueprintVisible, EditConst, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	ESparksInstrumentType                         CosmeticInstrumentType;                            // 0x0138(0x0001)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	ESparksAnimatableState                        AnimatableState;                                   // 0x0139(0x0001)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bCanPlayMidiAnimations;                            // 0x013A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_13B[0x5];                                      // 0x013B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class ASparksMusicPlayspace>      SparksPlayspaceType;                               // 0x0140(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class ASparksMusicPlayspace* Playspace)> BP_OnEnteredSparksMusicPlayspace;                  // 0x0148(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_158[0x18];                                     // 0x0158(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class ASparksMusicPlayspace* Playspace)> BP_OnExitedSparksMusicPlayspace;                   // 0x0170(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_180[0x18];                                     // 0x0180(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class UMusicClockComponent* MusicClock)> BP_OnPlayerMusicClockChanged;                      // 0x0198(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A8[0x18];                                     // 0x01A8(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(TScriptInterface<class IMidiEventDriverInterface> MidiEventDriver)> BP_OnPlayerMidiEventDriverChanged;                 // 0x01C0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D0[0x18];                                     // 0x01D0(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(TSoftObjectPtr<class UAnimSequence> LipSyncAsset)> BP_OnPlayerLipSyncAssetChanged;                    // 0x01E8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_1F8[0x18];                                     // 0x01F8(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(ESparksInstrumentType CosmeticInstrumentType)> BP_OnPlayerCosmeticInstrumentTypeChanged;          // 0x0210(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_220[0x18];                                     // 0x0220(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(ESparksAnimatableState AnimatableState)> BP_OnPlayerAnimatableStateChanged;                 // 0x0238(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_248[0x18];                                     // 0x0248(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(bool bCanPlayMidiAnimations)> BP_OnPlayerCanPlayMidiAnimationsChanged;           // 0x0260(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_270[0x28];                                     // 0x0270(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	bool CanSwapToInstrument(ESparksInstrumentType NewInstrumentType);
	void HandlePawnFinishedCharacterCustomization(class AFortPlayerPawn* Pawn);
	void HandlePlayerPawnSet(class APlayerState* Player, class APawn* NewPawn, class APawn* OldPawn);
	void LinkInstrumentAnimationLayer(class USparksInstrumentAnimations* Animations);
	void OverridePlayspace(class ASparksMusicPlayspace* Playspace);
	void SetAnimatableState(ESparksAnimatableState NewAnimatableState);
	void SetCanPlayMidiAnimations(bool bNewCanPlayMidiAnimations);
	void SetCosmeticInstrumentType(ESparksInstrumentType NewCosmeticInstrumentType);
	void SetLipSyncAsset(TSoftObjectPtr<class UAnimSequence> NewLipSyncAsset);
	void SetMidiEventDriver(TScriptInterface<class IMidiEventDriverInterface> NewMidiEventDriver);
	void SetMusicClock(class UMusicClockComponent* NewMusicClock);
	void SwapCosmeticInstrument(ESparksInstrumentType NewInstrumentType);
	void UnlinkInstrumentAnimationLayer();

	bool CanPlayMidiAnimations() const;
	ESparksAnimatableState GetAnimatableState() const;
	ESparksInstrumentType GetCosmeticInstrumentType() const;
	class FName GetCurrentTrackName() const;
	class USparksInstrumentAnimations* GetInstrumentAnimations() const;
	class USparksBaseLayerAnimInstance* GetLinkedInstrumentAnimationLayer() const;
	TSoftObjectPtr<class UAnimSequence> GetLipSyncAsset() const;
	TScriptInterface<class IMidiEventDriverInterface> GetMidiEventDriver() const;
	class UMusicClockComponent* GetMusicClock() const;
	ESparksInstrumentType GetRecentOrFirstInstrument() const;
	class ASparksMusicPlayspace* GetSparksPlayspace() const;
	ESparksInstrumentType GetTrackInstrumentType() const;
	bool IsInstrumentAnimationLayerLinked() const;
	bool IsUsable() const;
	bool PlayerHasCosmeticInstrument(ESparksInstrumentType InstrumentType) const;
	bool PlayerHasTrackInstrument(ESparksInstrumentType InstrumentType) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SparksInstrumentAnimPlayerStateComponent">();
	}
	static class USparksInstrumentAnimPlayerStateComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<USparksInstrumentAnimPlayerStateComponent>();
	}
};

// Class SparksCharacterCommonRuntime.SparksMicAnimInstance
// 0x0000 (0x0460 - 0x0460)
class USparksMicAnimInstance final : public USparksInstrumentAnimInstance
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SparksMicAnimInstance">();
	}
	static class USparksMicAnimInstance* GetDefaultObj()
	{
		return GetDefaultObjImpl<USparksMicAnimInstance>();
	}
};

}

