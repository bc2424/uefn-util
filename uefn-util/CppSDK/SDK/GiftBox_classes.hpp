#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GiftBox

#include "Basic.hpp"

#include "FortniteUI_classes.hpp"
#include "ModelViewViewModel_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK
{

// Class GiftBox.GiftBoxGameFeatureAction_SetGiftBoxData
// 0x0000 (0x0080 - 0x0080)
class UGiftBoxGameFeatureAction_SetGiftBoxData final : public UFortUIGameFeatureAction_SetGiftBoxData
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GiftBoxGameFeatureAction_SetGiftBoxData">();
	}
	static class UGiftBoxGameFeatureAction_SetGiftBoxData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGiftBoxGameFeatureAction_SetGiftBoxData>();
	}
};

// Class GiftBox.GiftBoxGroupVM
// 0x0010 (0x0080 - 0x0070)
class UGiftBoxGroupVM final : public UMVVMViewModelBase
{
public:
	TArray<class UGiftBoxVM*>                     GiftBoxes;                                         // 0x0070(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GiftBoxGroupVM">();
	}
	static class UGiftBoxGroupVM* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGiftBoxGroupVM>();
	}
};

// Class GiftBox.GiftBoxItemVM
// 0x0090 (0x0100 - 0x0070)
class UGiftBoxItemVM final : public UMVVMViewModelBase
{
public:
	class UFortItemVM*                            ItemVM;                                            // 0x0070(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UTexture2D>              HeaderImage;                                       // 0x0078(0x0030)(BlueprintVisible, BlueprintReadOnly, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FText                                   HeaderText;                                        // 0x00A8(0x0010)(BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	class FText                                   BannerText;                                        // 0x00B8(0x0010)(BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UObject>                 BannerIcon;                                        // 0x00C8(0x0030)(BlueprintVisible, BlueprintReadOnly, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         Quantity;                                          // 0x00F8(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_FC[0x4];                                       // 0x00FC(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GiftBoxItemVM">();
	}
	static class UGiftBoxItemVM* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGiftBoxItemVM>();
	}
};

// Class GiftBox.GiftBoxVM
// 0x0140 (0x01B0 - 0x0070)
class UGiftBoxVM final : public UMVVMViewModelBase
{
public:
	TArray<class UGiftBoxItemVM*>                 Items;                                             // 0x0070(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	class FText                                   HeaderText;                                        // 0x0080(0x0010)(BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	class FText                                   SubHeaderText;                                     // 0x0090(0x0010)(BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	class FText                                   HeaderBodyText;                                    // 0x00A0(0x0010)(BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	class FText                                   BadgeText;                                         // 0x00B0(0x0010)(BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UObject>                 RewardImage;                                       // 0x00C0(0x0030)(BlueprintVisible, BlueprintReadOnly, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UObject>                 HeaderImage;                                       // 0x00F0(0x0030)(BlueprintVisible, BlueprintReadOnly, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                              HeaderImageSize;                                   // 0x0120(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class UClass>                   CustomHeaderWidget;                                // 0x0130(0x0030)(BlueprintVisible, BlueprintReadOnly, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FCurrencyData>                  CurrencyData;                                      // 0x0160(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class USoundBase*                             ActivateSound;                                     // 0x0170(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USoundBase*                             HoveredSoundOverride;                              // 0x0178(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USoundBase*                             PressedSoundOverride;                              // 0x0180(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FSlateColor                            ColorOverride;                                     // 0x0188(0x0014)(BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTag                           VaultWorldOverrideTag;                             // 0x019C(0x000C)(BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         VaultWorldMaterialIndex;                           // 0x01A8(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bShowVaultWorldPedestals;                          // 0x01AC(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bFromSelf;                                         // 0x01AD(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bOverrideColor;                                    // 0x01AE(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_1AF[0x1];                                      // 0x01AF(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GiftBoxVM">();
	}
	static class UGiftBoxVM* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGiftBoxVM>();
	}
};

}

