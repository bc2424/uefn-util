#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BeatSyncedAnimRuntime

#include "Basic.hpp"

#include "BeatSyncedAnimRuntime_classes.hpp"
#include "BeatSyncedAnimRuntime_parameters.hpp"


namespace SDK
{

// Function BeatSyncedAnimRuntime.BeatSyncedAnimLibrary.CalculateMontageBeatSyncInfo
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UMusicClockComponent*             MusicClock                                             (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   SongBeatOffset                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   AnimBeatOffset                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAnimMontage*                     Montage                                                (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   HalfDoubleFactor                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFMontageBeatSyncInfo            ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FFMontageBeatSyncInfo UBeatSyncedAnimLibrary::CalculateMontageBeatSyncInfo(const class UMusicClockComponent* MusicClock, const float SongBeatOffset, const float AnimBeatOffset, const class UAnimMontage* Montage, float HalfDoubleFactor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BeatSyncedAnimLibrary", "CalculateMontageBeatSyncInfo");

	Params::BeatSyncedAnimLibrary_CalculateMontageBeatSyncInfo Parms{};

	Parms.MusicClock = MusicClock;
	Parms.SongBeatOffset = SongBeatOffset;
	Parms.AnimBeatOffset = AnimBeatOffset;
	Parms.Montage = Montage;
	Parms.HalfDoubleFactor = HalfDoubleFactor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BeatSyncedAnimRuntime.BeatSyncedAnimLibrary.CalculateMontagePlayRate
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UMusicClockComponent*             MusicClock                                             (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAnimMontage*                     Montage                                                (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   HalfDoubleFactor                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UBeatSyncedAnimLibrary::CalculateMontagePlayRate(const class UMusicClockComponent* MusicClock, const class UAnimMontage* Montage, float HalfDoubleFactor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BeatSyncedAnimLibrary", "CalculateMontagePlayRate");

	Params::BeatSyncedAnimLibrary_CalculateMontagePlayRate Parms{};

	Parms.MusicClock = MusicClock;
	Parms.Montage = Montage;
	Parms.HalfDoubleFactor = HalfDoubleFactor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BeatSyncedAnimRuntime.BeatSyncedAnimLibrary.GetLastEmoteExecuted
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AController*                      Controller                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortItemDefinition*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortItemDefinition* UBeatSyncedAnimLibrary::GetLastEmoteExecuted(const class AController* Controller)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BeatSyncedAnimLibrary", "GetLastEmoteExecuted");

	Params::BeatSyncedAnimLibrary_GetLastEmoteExecuted Parms{};

	Parms.Controller = Controller;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BeatSyncedAnimRuntime.FMBeatTimingUtils.GetBeatsPerMeasure
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFMBeatTimingUtils::GetBeatsPerMeasure()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FMBeatTimingUtils", "GetBeatsPerMeasure");

	Params::FMBeatTimingUtils_GetBeatsPerMeasure Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BeatSyncedAnimRuntime.FMBeatTimingUtils.GetCurrentBeat
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UMusicClockComponent*             InMusicClock                                           (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bRounded                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFMBeatTimingUtils::GetCurrentBeat(const class UMusicClockComponent* InMusicClock, bool bRounded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FMBeatTimingUtils", "GetCurrentBeat");

	Params::FMBeatTimingUtils_GetCurrentBeat Parms{};

	Parms.InMusicClock = InMusicClock;
	Parms.bRounded = bRounded;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BeatSyncedAnimRuntime.FMBeatTimingUtils.GetCurrentBeat_Unsafe
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UMusicClockComponent*             InMusicClock                                           (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bRounded                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFMBeatTimingUtils::GetCurrentBeat_Unsafe(const class UMusicClockComponent* InMusicClock, bool bRounded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FMBeatTimingUtils", "GetCurrentBeat_Unsafe");

	Params::FMBeatTimingUtils_GetCurrentBeat_Unsafe Parms{};

	Parms.InMusicClock = InMusicClock;
	Parms.bRounded = bRounded;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BeatSyncedAnimRuntime.FMBeatTimingUtils.GetCurrentBeatAndTime
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UMusicClockComponent*             MusicClock                                             (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          WorldContext                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAlwaysAllowPreviewBPM                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   PreviewBPM                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bForceUnsafe                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FBeatAndTime                     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FBeatAndTime UFMBeatTimingUtils::GetCurrentBeatAndTime(const class UMusicClockComponent* MusicClock, const class UObject* WorldContext, bool bAlwaysAllowPreviewBPM, float PreviewBPM, bool bForceUnsafe)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FMBeatTimingUtils", "GetCurrentBeatAndTime");

	Params::FMBeatTimingUtils_GetCurrentBeatAndTime Parms{};

	Parms.MusicClock = MusicClock;
	Parms.WorldContext = WorldContext;
	Parms.bAlwaysAllowPreviewBPM = bAlwaysAllowPreviewBPM;
	Parms.PreviewBPM = PreviewBPM;
	Parms.bForceUnsafe = bForceUnsafe;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BeatSyncedAnimRuntime.FMBeatTimingUtils.GetCurrentBeatForBPM
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   InBPM                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          worldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFMBeatTimingUtils::GetCurrentBeatForBPM(float InBPM, const class UObject* worldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FMBeatTimingUtils", "GetCurrentBeatForBPM");

	Params::FMBeatTimingUtils_GetCurrentBeatForBPM Parms{};

	Parms.InBPM = InBPM;
	Parms.worldContextObject = worldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BeatSyncedAnimRuntime.FMBeatTimingUtils.GetCurrentSongTime
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UMusicClockComponent*             InMusicClock                                           (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bRounded                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFMBeatTimingUtils::GetCurrentSongTime(const class UMusicClockComponent* InMusicClock, bool bRounded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FMBeatTimingUtils", "GetCurrentSongTime");

	Params::FMBeatTimingUtils_GetCurrentSongTime Parms{};

	Parms.InMusicClock = InMusicClock;
	Parms.bRounded = bRounded;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BeatSyncedAnimRuntime.FMBeatTimingUtils.GetCurrentSongTime_Unsafe
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UMusicClockComponent*             InMusicClock                                           (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bRounded                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFMBeatTimingUtils::GetCurrentSongTime_Unsafe(const class UMusicClockComponent* InMusicClock, bool bRounded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FMBeatTimingUtils", "GetCurrentSongTime_Unsafe");

	Params::FMBeatTimingUtils_GetCurrentSongTime_Unsafe Parms{};

	Parms.InMusicClock = InMusicClock;
	Parms.bRounded = bRounded;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BeatSyncedAnimRuntime.MontageBeatSyncComponent.BeganPlayingMusic
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UMontageBeatSyncComponent::BeganPlayingMusic()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MontageBeatSyncComponent", "BeganPlayingMusic");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BeatSyncedAnimRuntime.MontageBeatSyncComponent.EndedPlayingMusic
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UMontageBeatSyncComponent::EndedPlayingMusic()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MontageBeatSyncComponent", "EndedPlayingMusic");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BeatSyncedAnimRuntime.MontageBeatSyncComponent.GetOwnerFortPlayerPawn
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AFortPlayerPawn*                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AFortPlayerPawn* UMontageBeatSyncComponent::GetOwnerFortPlayerPawn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MontageBeatSyncComponent", "GetOwnerFortPlayerPawn");

	Params::MontageBeatSyncComponent_GetOwnerFortPlayerPawn Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BeatSyncedAnimRuntime.MontageBeatSyncComponent.GetOwnerSkeletalMeshComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class USkeletalMeshComponent*           ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USkeletalMeshComponent* UMontageBeatSyncComponent::GetOwnerSkeletalMeshComponent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MontageBeatSyncComponent", "GetOwnerSkeletalMeshComponent");

	Params::MontageBeatSyncComponent_GetOwnerSkeletalMeshComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BeatSyncedAnimRuntime.MontageBeatSyncComponent.LookupMontageTimingInfo_BP
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class UAnimMontage*                     Montage                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortPlayerPawn*                  PlayerPawn                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UPreciseBeatSyncedAnimMetaData*ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UPreciseBeatSyncedAnimMetaData* UMontageBeatSyncComponent::LookupMontageTimingInfo_BP(class UAnimMontage* Montage, const class AFortPlayerPawn* PlayerPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MontageBeatSyncComponent", "LookupMontageTimingInfo_BP");

	Params::MontageBeatSyncComponent_LookupMontageTimingInfo_BP Parms{};

	Parms.Montage = Montage;
	Parms.PlayerPawn = PlayerPawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BeatSyncedAnimRuntime.MontageBeatSyncComponent.ServerRPC_ReceiveNewAllowingBeatSyncingTheirEmotes
// (Net, NetReliable, Native, Event, Protected, NetServer)
// Parameters:
// bool                                    bNewState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMontageBeatSyncComponent::ServerRPC_ReceiveNewAllowingBeatSyncingTheirEmotes(bool bNewState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MontageBeatSyncComponent", "ServerRPC_ReceiveNewAllowingBeatSyncingTheirEmotes");

	Params::MontageBeatSyncComponent_ServerRPC_ReceiveNewAllowingBeatSyncingTheirEmotes Parms{};

	Parms.bNewState = bNewState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BeatSyncedAnimRuntime.MontageBeatSyncComponent.SetMusicClockReference
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UMusicClockComponent*             MusicClock                                             (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMontageBeatSyncComponent::SetMusicClockReference(class UMusicClockComponent* MusicClock)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MontageBeatSyncComponent", "SetMusicClockReference");

	Params::MontageBeatSyncComponent_SetMusicClockReference Parms{};

	Parms.MusicClock = MusicClock;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BeatSyncedAnimRuntime.MontageBeatSyncComponent.IsMusicPlaying
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMontageBeatSyncComponent::IsMusicPlaying() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MontageBeatSyncComponent", "IsMusicPlaying");

	Params::MontageBeatSyncComponent_IsMusicPlaying Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BeatSyncedAnimRuntime.SparksAnimLoggingComponent.GetCurrentFullBodyAnimName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString USparksAnimLoggingComponent::GetCurrentFullBodyAnimName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SparksAnimLoggingComponent", "GetCurrentFullBodyAnimName");

	Params::SparksAnimLoggingComponent_GetCurrentFullBodyAnimName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

