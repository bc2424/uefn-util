#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LandmassEditor

#include "Basic.hpp"

#include "Landscape_structs.hpp"
#include "Landscape_classes.hpp"
#include "LandmassEditor_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// Class LandmassEditor.LandmassActor
// 0x00E0 (0x0500 - 0x0420)
class ALandmassActor final : public AActor
{
public:
	float                                         BrushSize;                                         // 0x0420(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          DrawToEntireLandscape;                             // 0x0424(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          AffectsHeightmap;                                  // 0x0425(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          AffectsWeightmaps;                                 // 0x0426(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          AffectsVisibility;                                 // 0x0427(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EBrushBlendMode                               HeightBlendMode;                                   // 0x0428(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_429[0x7];                                      // 0x0429(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     HeightMaterial;                                    // 0x0430(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EBrushBlendMode                               WeightMapBlendMode;                                // 0x0438(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_439[0x7];                                      // 0x0439(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     WeightmapMaterial;                                 // 0x0440(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_448[0x8];                                      // 0x0448(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector4                               BrushExtents;                                      // 0x0450(0x0020)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                           WeightmapLayers;                                   // 0x0470(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FLandscapeBrushParameters              BrushRenderParameters;                             // 0x0480(0x0020)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	class ALandmassManagerBase*                   BrushManager;                                      // 0x04A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          EditorTickIsEnabled;                               // 0x04A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4A9[0x7];                                      // 0x04A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              OnBrushUpdated;                                    // 0x04B0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UMaterialInstanceDynamic*               ExtentsPreviewMID;                                 // 0x04C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstanceDynamic*               HeightmapRenderMID;                                // 0x04C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstanceDynamic*               WeightmapRenderMID;                                // 0x04D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4D8[0x8];                                      // 0x04D8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   MeshExtentsQuad;                                   // 0x04E0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStaticMeshComponent*                   BrushSpriteMesh;                                   // 0x04E8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_4F0[0x10];                                     // 0x04F0(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void ActorSelectionChanged(bool bSelected);
	void CustomTick(float DeltaSeconds);
	void DrawBrushMaterial(class UMaterialInterface* Material);
	void FastPreviewMode();
	void MoveBrushDown();
	void MoveBrushUp();
	void MoveToBottom();
	void MoveToTop();
	void RenderLayer(const struct FLandscapeBrushParameters& InParameters);
	void RenderLayer_Native(const struct FLandscapeBrushParameters& InParameters);
	void RestoreLandscapeEditing();
	void SetEditorTickEnabled(bool bEnabled);
	void SetMeshExentsMaterial(class UMaterialInterface* Material);
	void UpdateBrushExtents();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"LandmassActor">();
	}
	static class ALandmassActor* GetDefaultObj()
	{
		return GetDefaultObjImpl<ALandmassActor>();
	}
};

// Class LandmassEditor.LandmassBlueprintFunctionLibrary
// 0x0000 (0x0030 - 0x0030)
class ULandmassBlueprintFunctionLibrary final : public UBlueprintFunctionLibrary
{
public:
	static void CombineWorldExtents(const struct FVector4& ExtentsA, const struct FVector4& ExtentsB, struct FVector4* CombinedExtents);
	static void ForceUpdateTexture(class UTexture* InTexture);
	static bool GetCursorWorldRay(struct FVector* CameraLocation, struct FVector* RayOrigin, struct FVector* RayDirection);
	static void WorldExtentsToCanvasCoordinates(const struct FVector4& WorldExtents, const struct FLandmassLandscapeInfo& LandscapeInfo, struct FVector2D* ScreenPosition, struct FVector2D* ScreenSize, struct FVector2D* CoordinatePosition, struct FVector2D* CoordinateSize);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"LandmassBlueprintFunctionLibrary">();
	}
	static class ULandmassBlueprintFunctionLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULandmassBlueprintFunctionLibrary>();
	}
};

// Class LandmassEditor.LandmassErosionBrushBase
// 0x0018 (0x0468 - 0x0450)
class ALandmassErosionBrushBase final : public ALandscapeBlueprintBrushBase
{
public:
	uint8                                         Pad_450[0x10];                                     // 0x0450(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class ALandscape*                             DetailPanelLandscape;                              // 0x0460(0x0008)(Edit, ZeroConstructor, Transient, EditorOnly, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void ActorSelectionChanged(bool bSelected);
	class ALandscape* GetLandscape();
	void SetTargetLandscape(class ALandscape* InOwningLandscape);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"LandmassErosionBrushBase">();
	}
	static class ALandmassErosionBrushBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<ALandmassErosionBrushBase>();
	}
};

// Class LandmassEditor.LandmassManagerBase
// 0x00B0 (0x0500 - 0x0450)
class ALandmassManagerBase final : public ALandscapeBlueprintBrushBase
{
public:
	TArray<struct FBrushDataTree>                 BrushNodeData;                                     // 0x0450(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FLandmassLandscapeInfo                 LandscapeInformation;                              // 0x0460(0x0070)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	int32                                         BrushTreeDepth;                                    // 0x04D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4D4[0x4];                                      // 0x04D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ALandmassActor*>                 LandmassBrushes;                                   // 0x04D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	uint8                                         Pad_4E8[0x10];                                     // 0x04E8(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class ALandscape*                             DetailPanelLandscape;                              // 0x04F8(0x0008)(Edit, ZeroConstructor, Transient, EditorOnly, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void ActorSelectionChanged(bool bSelected);
	void AddBrushToArray(class ALandmassActor* BrushToAdd);
	void AddBrushToTree(class ALandmassActor* BrushToAdd, const struct FVector4& InExtents, bool InMapToWholeLandscape, struct FVector4* ModifiedExtents, TArray<class ALandmassActor*>* InvalidatedBrushes, TArray<int32>* ModifiedNodes);
	void ConsolidateNodes(TArray<int32>* NodesToConsolidate);
	void DrawBrushMaterial(class ALandmassActor* Brush, class UMaterialInterface* BrushMaterial);
	TArray<class ALandmassActor*> GetActorsWithinModifiedNodes(TArray<int32>* InModifiedNodes);
	class ALandscape* GetLandscape();
	TArray<int32> GetNodesWithinExtents(struct FVector4* InExtents);
	void LaunchLandmassEditor(class ALandmassActor* BrushRequestingEditor);
	void PopulateNodeTree();
	TArray<int32> RemoveBrushFromTree(class ALandmassActor* BrushToRemove);
	void RequestUpdateFromBrush(class ALandmassActor* BrushRequestingUpdate);
	void SetCaptureBoundaryNormals(bool bInCaptureBoundaryNormals);
	void SetTargetLandscape(class ALandscape* InOwningLandscape);
	TArray<class ALandmassActor*> SortBrushes(const TArray<class ALandmassActor*>& BrushArrayToMatch, const TArray<class ALandmassActor*>& ActorsToSort);
	void TogglePreviewMode(bool bEnablePreviewMode);
	void UpdateChildDataCounts();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"LandmassManagerBase">();
	}
	static class ALandmassManagerBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<ALandmassManagerBase>();
	}
};

}

