#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MeshModelingToolsEditorOnlyExp

#include "Basic.hpp"

#include "MeshModelingToolsEditorOnlyExp_classes.hpp"
#include "MeshModelingToolsEditorOnlyExp_parameters.hpp"


namespace SDK
{

// Function MeshModelingToolsEditorOnlyExp.ISMEditorToolActionPropertySet.ClearSelection
// (Final, Native, Public)

void UISMEditorToolActionPropertySet::ClearSelection()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ISMEditorToolActionPropertySet", "ClearSelection");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function MeshModelingToolsEditorOnlyExp.ISMEditorToolActionPropertySet.Delete
// (Final, Native, Public)

void UISMEditorToolActionPropertySet::Delete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ISMEditorToolActionPropertySet", "Delete");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function MeshModelingToolsEditorOnlyExp.ISMEditorToolActionPropertySet.Duplicate
// (Final, Native, Public)

void UISMEditorToolActionPropertySet::Duplicate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ISMEditorToolActionPropertySet", "Duplicate");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function MeshModelingToolsEditorOnlyExp.ISMEditorToolReplacePropertySet.Replace
// (Final, Native, Public)

void UISMEditorToolReplacePropertySet::Replace()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ISMEditorToolReplacePropertySet", "Replace");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function MeshModelingToolsEditorOnlyExp.AttributeEditorNormalsActions.DiscardTangents
// (Final, Native, Public)

void UAttributeEditorNormalsActions::DiscardTangents()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AttributeEditorNormalsActions", "DiscardTangents");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function MeshModelingToolsEditorOnlyExp.AttributeEditorNormalsActions.ResetHardNormals
// (Final, Native, Public)

void UAttributeEditorNormalsActions::ResetHardNormals()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AttributeEditorNormalsActions", "ResetHardNormals");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function MeshModelingToolsEditorOnlyExp.AttributeEditorUVActions.AddNew
// (Final, Native, Public)

void UAttributeEditorUVActions::AddNew()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AttributeEditorUVActions", "AddNew");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function MeshModelingToolsEditorOnlyExp.AttributeEditorUVActions.ClearAll
// (Final, Native, Public)

void UAttributeEditorUVActions::ClearAll()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AttributeEditorUVActions", "ClearAll");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function MeshModelingToolsEditorOnlyExp.AttributeEditorUVActions.DeleteSelected
// (Final, Native, Public)

void UAttributeEditorUVActions::DeleteSelected()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AttributeEditorUVActions", "DeleteSelected");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function MeshModelingToolsEditorOnlyExp.AttributeEditorUVActions.DuplicateSelected
// (Final, Native, Public)

void UAttributeEditorUVActions::DuplicateSelected()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AttributeEditorUVActions", "DuplicateSelected");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function MeshModelingToolsEditorOnlyExp.AttributeEditorUVActions.GetUVLayerNamesFunc
// (Final, Native, Public)
// Parameters:
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> UAttributeEditorUVActions::GetUVLayerNamesFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AttributeEditorUVActions", "GetUVLayerNamesFunc");

	Params::AttributeEditorUVActions_GetUVLayerNamesFunc Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MeshModelingToolsEditorOnlyExp.AttributeEditorLightmapUVActions.Disable
// (Final, Native, Public)

void UAttributeEditorLightmapUVActions::Disable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AttributeEditorLightmapUVActions", "Disable");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function MeshModelingToolsEditorOnlyExp.AttributeEditorLightmapUVActions.Enable
// (Final, Native, Public)

void UAttributeEditorLightmapUVActions::Enable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AttributeEditorLightmapUVActions", "Enable");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function MeshModelingToolsEditorOnlyExp.AttributeEditorLightmapUVActions.Reset
// (Final, Native, Public)

void UAttributeEditorLightmapUVActions::Reset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AttributeEditorLightmapUVActions", "Reset");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function MeshModelingToolsEditorOnlyExp.AttributeEditorNewAttributeActions.AddPolyGroupLayer
// (Final, Native, Public)

void UAttributeEditorNewAttributeActions::AddPolyGroupLayer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AttributeEditorNewAttributeActions", "AddPolyGroupLayer");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function MeshModelingToolsEditorOnlyExp.AttributeEditorNewAttributeActions.AddWeightMapLayer
// (Final, Native, Public)

void UAttributeEditorNewAttributeActions::AddWeightMapLayer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AttributeEditorNewAttributeActions", "AddWeightMapLayer");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function MeshModelingToolsEditorOnlyExp.AttributeEditorModifyAttributeActions.DeleteSelected
// (Final, Native, Public)

void UAttributeEditorModifyAttributeActions::DeleteSelected()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AttributeEditorModifyAttributeActions", "DeleteSelected");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function MeshModelingToolsEditorOnlyExp.AttributeEditorModifyAttributeActions.GetAttributeNamesFunc
// (Final, Native, Public)
// Parameters:
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> UAttributeEditorModifyAttributeActions::GetAttributeNamesFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AttributeEditorModifyAttributeActions", "GetAttributeNamesFunc");

	Params::AttributeEditorModifyAttributeActions_GetAttributeNamesFunc Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MeshModelingToolsEditorOnlyExp.AttributeEditorCopyAttributeActions.CopyFromTo
// (Final, Native, Public)

void UAttributeEditorCopyAttributeActions::CopyFromTo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AttributeEditorCopyAttributeActions", "CopyFromTo");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function MeshModelingToolsEditorOnlyExp.BakeRenderCaptureToolProperties.GetMapPreviewNamesFunc
// (Final, Native, Public)
// Parameters:
// const TArray<class FString>             ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const TArray<class FString> UBakeRenderCaptureToolProperties::GetMapPreviewNamesFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BakeRenderCaptureToolProperties", "GetMapPreviewNamesFunc");

	Params::BakeRenderCaptureToolProperties_GetMapPreviewNamesFunc Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MeshModelingToolsEditorOnlyExp.BakeRenderCaptureInputToolProperties.GetTargetUVLayerIndex
// (Final, Native, Public, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UBakeRenderCaptureInputToolProperties::GetTargetUVLayerIndex() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BakeRenderCaptureInputToolProperties", "GetTargetUVLayerIndex");

	Params::BakeRenderCaptureInputToolProperties_GetTargetUVLayerIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MeshModelingToolsEditorOnlyExp.BakeRenderCaptureInputToolProperties.GetTargetUVLayerNamesFunc
// (Final, Native, Public, Const)
// Parameters:
// const TArray<class FString>             ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const TArray<class FString> UBakeRenderCaptureInputToolProperties::GetTargetUVLayerNamesFunc() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BakeRenderCaptureInputToolProperties", "GetTargetUVLayerNamesFunc");

	Params::BakeRenderCaptureInputToolProperties_GetTargetUVLayerNamesFunc Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MeshModelingToolsEditorOnlyExp.BspConversionToolActionPropertySet.DeselectNonValid
// (Final, Native, Public)

void UBspConversionToolActionPropertySet::DeselectNonValid()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BspConversionToolActionPropertySet", "DeselectNonValid");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function MeshModelingToolsEditorOnlyExp.BspConversionToolActionPropertySet.DeselectVolumes
// (Final, Native, Public)

void UBspConversionToolActionPropertySet::DeselectVolumes()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BspConversionToolActionPropertySet", "DeselectVolumes");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function MeshModelingToolsEditorOnlyExp.BspConversionToolActionPropertySet.SelectAllValidBrushes
// (Final, Native, Public)

void UBspConversionToolActionPropertySet::SelectAllValidBrushes()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BspConversionToolActionPropertySet", "SelectAllValidBrushes");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function MeshModelingToolsEditorOnlyExp.EditMeshMaterialsToolProperties.GetMaterialNamesFunc
// (Final, Native, Public)
// Parameters:
// const TArray<class FString>             ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const TArray<class FString> UEditMeshMaterialsToolProperties::GetMaterialNamesFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EditMeshMaterialsToolProperties", "GetMaterialNamesFunc");

	Params::EditMeshMaterialsToolProperties_GetMaterialNamesFunc Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MeshModelingToolsEditorOnlyExp.EditMeshMaterialsEditActions.AssignActiveMaterial
// (Final, Native, Public)

void UEditMeshMaterialsEditActions::AssignActiveMaterial()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EditMeshMaterialsEditActions", "AssignActiveMaterial");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function MeshModelingToolsEditorOnlyExp.PolygonOnMeshToolActionPropertySet.DrawPolygon
// (Final, Native, Public)

void UPolygonOnMeshToolActionPropertySet::DrawPolygon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PolygonOnMeshToolActionPropertySet", "DrawPolygon");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function MeshModelingToolsEditorOnlyExp.SkinWeightsPaintToolProperties.GetLODsFunc
// (Final, Native, Private, Const)
// Parameters:
// TArray<class FName>                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FName> USkinWeightsPaintToolProperties::GetLODsFunc() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkinWeightsPaintToolProperties", "GetLODsFunc");

	Params::SkinWeightsPaintToolProperties_GetLODsFunc Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MeshModelingToolsEditorOnlyExp.SkinWeightsPaintToolProperties.GetSkinWeightProfilesFunc
// (Final, Native, Private, Const)
// Parameters:
// TArray<class FName>                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FName> USkinWeightsPaintToolProperties::GetSkinWeightProfilesFunc() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkinWeightsPaintToolProperties", "GetSkinWeightProfilesFunc");

	Params::SkinWeightsPaintToolProperties_GetSkinWeightProfilesFunc Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MeshModelingToolsEditorOnlyExp.SkinWeightsPaintToolProperties.GetSourceLODsFunc
// (Final, Native, Private, Const)
// Parameters:
// TArray<class FName>                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FName> USkinWeightsPaintToolProperties::GetSourceLODsFunc() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkinWeightsPaintToolProperties", "GetSourceLODsFunc");

	Params::SkinWeightsPaintToolProperties_GetSourceLODsFunc Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MeshModelingToolsEditorOnlyExp.SkinWeightsPaintToolProperties.GetSourceSkinWeightProfilesFunc
// (Final, Native, Private, Const)
// Parameters:
// TArray<class FName>                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FName> USkinWeightsPaintToolProperties::GetSourceSkinWeightProfilesFunc() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkinWeightsPaintToolProperties", "GetSourceSkinWeightProfilesFunc");

	Params::SkinWeightsPaintToolProperties_GetSourceSkinWeightProfilesFunc Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

