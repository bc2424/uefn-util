#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UIChartEditor

#include "Basic.hpp"

#include "UIChartEditor_classes.hpp"
#include "UIChartEditor_parameters.hpp"


namespace SDK
{

// Function UIChartEditor.UIContextViewerEntryList.ToggleListExpanded
// (Final, Native, Protected, BlueprintCallable)

void UUIContextViewerEntryList::ToggleListExpanded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIContextViewerEntryList", "ToggleListExpanded");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UIChartEditor.UIContextViewerWidget.SearchForStateChartManager
// (Final, Native, Protected, BlueprintCallable)

void UUIContextViewerWidget::SearchForStateChartManager()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIContextViewerWidget", "SearchForStateChartManager");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UIChartEditor.UIStateChartEditorStateContextMenu.HandleConvertToParallelRegionRequested
// (Final, Native, Protected, BlueprintCallable)

void UUIStateChartEditorStateContextMenu::HandleConvertToParallelRegionRequested()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIStateChartEditorStateContextMenu", "HandleConvertToParallelRegionRequested");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UIChartEditor.UIStateChartEditorStateContextMenu.HandleConvertToRegularChildRequested
// (Final, Native, Protected, BlueprintCallable)

void UUIStateChartEditorStateContextMenu::HandleConvertToRegularChildRequested()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIStateChartEditorStateContextMenu", "HandleConvertToRegularChildRequested");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UIChartEditor.UIStateChartEditorStateContextMenu.HandleCreateChildRequested
// (Final, Native, Protected, BlueprintCallable)

void UUIStateChartEditorStateContextMenu::HandleCreateChildRequested()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIStateChartEditorStateContextMenu", "HandleCreateChildRequested");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UIChartEditor.UIStateChartEditorStateContextMenu.HandleCreateParallelRegionRequested
// (Final, Native, Protected, BlueprintCallable)

void UUIStateChartEditorStateContextMenu::HandleCreateParallelRegionRequested()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIStateChartEditorStateContextMenu", "HandleCreateParallelRegionRequested");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UIChartEditor.UIStateChartEditorStateContextMenu.HandleCreateParentRequested
// (Final, Native, Protected, BlueprintCallable)

void UUIStateChartEditorStateContextMenu::HandleCreateParentRequested()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIStateChartEditorStateContextMenu", "HandleCreateParentRequested");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UIChartEditor.UIStateChartEditorStateContextMenu.HandleDeleteRequested
// (Final, Native, Protected, BlueprintCallable)

void UUIStateChartEditorStateContextMenu::HandleDeleteRequested()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIStateChartEditorStateContextMenu", "HandleDeleteRequested");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UIChartEditor.UIStateChartEditorStateContextMenu.HandleMoveDownRequested
// (Final, Native, Protected, BlueprintCallable)

void UUIStateChartEditorStateContextMenu::HandleMoveDownRequested()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIStateChartEditorStateContextMenu", "HandleMoveDownRequested");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UIChartEditor.UIStateChartEditorStateContextMenu.HandleMoveUpRequested
// (Final, Native, Protected, BlueprintCallable)

void UUIStateChartEditorStateContextMenu::HandleMoveUpRequested()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIStateChartEditorStateContextMenu", "HandleMoveUpRequested");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UIChartEditor.UIStateChartEditorStateFilterMenu.FocusSearchBox
// (Final, Native, Protected, BlueprintCallable)

void UUIStateChartEditorStateFilterMenu::FocusSearchBox()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIStateChartEditorStateFilterMenu", "FocusSearchBox");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UIChartEditor.UIStateChartEditorStateFilterMenu.HandleSearchTextChanged
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class FText                             InText                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UUIStateChartEditorStateFilterMenu::HandleSearchTextChanged(const class FText& InText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIStateChartEditorStateFilterMenu", "HandleSearchTextChanged");

	Params::UIStateChartEditorStateFilterMenu_HandleSearchTextChanged Parms{};

	Parms.InText = std::move(InText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UIChartEditor.UIStateChartEditorStateFilterMenu.HandleSearchTextCommitted
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class FText                             InText                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// ETextCommit                             InCommitMethod                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUIStateChartEditorStateFilterMenu::HandleSearchTextCommitted(const class FText& InText, ETextCommit InCommitMethod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIStateChartEditorStateFilterMenu", "HandleSearchTextCommitted");

	Params::UIStateChartEditorStateFilterMenu_HandleSearchTextCommitted Parms{};

	Parms.InText = std::move(InText);
	Parms.InCommitMethod = InCommitMethod;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UIChartEditor.UIStateChartEditorStateItem.ToggleExpanded
// (Final, Native, Protected, BlueprintCallable)

void UUIStateChartEditorStateItem::ToggleExpanded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIStateChartEditorStateItem", "ToggleExpanded");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UIChartEditor.UIStateChartEditorTransitionAddEditDialog.HandleCancelButtonPressed
// (Final, Native, Protected, BlueprintCallable)

void UUIStateChartEditorTransitionAddEditDialog::HandleCancelButtonPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIStateChartEditorTransitionAddEditDialog", "HandleCancelButtonPressed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UIChartEditor.UIStateChartEditorTransitionAddEditDialog.HandleDetailsPropertyChanged
// (Final, Native, Protected, BlueprintCallable)

void UUIStateChartEditorTransitionAddEditDialog::HandleDetailsPropertyChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIStateChartEditorTransitionAddEditDialog", "HandleDetailsPropertyChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UIChartEditor.UIStateChartEditorTransitionAddEditDialog.HandleDoneButtonPressed
// (Final, Native, Protected, BlueprintCallable)

void UUIStateChartEditorTransitionAddEditDialog::HandleDoneButtonPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIStateChartEditorTransitionAddEditDialog", "HandleDoneButtonPressed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UIChartEditor.UIStateChartEditorTransitionAddEditDialog.HandleFilterMenuCreated
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UUIStateChartEditorStateFilterMenu*InMenu                                                 (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsSource                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUIStateChartEditorTransitionAddEditDialog::HandleFilterMenuCreated(class UUIStateChartEditorStateFilterMenu* InMenu, bool bIsSource)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIStateChartEditorTransitionAddEditDialog", "HandleFilterMenuCreated");

	Params::UIStateChartEditorTransitionAddEditDialog_HandleFilterMenuCreated Parms{};

	Parms.InMenu = InMenu;
	Parms.bIsSource = bIsSource;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UIChartEditor.UIStateChartEditorTransitionAddEditDialog.HandleFilterMenuItemSelected
// (Final, Native, Protected)
// Parameters:
// int32                                   InStateId                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUIStateChartEditorTransitionAddEditDialog::HandleFilterMenuItemSelected(int32 InStateId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIStateChartEditorTransitionAddEditDialog", "HandleFilterMenuItemSelected");

	Params::UIStateChartEditorTransitionAddEditDialog_HandleFilterMenuItemSelected Parms{};

	Parms.InStateId = InStateId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UIChartEditor.UIStateChartEditorTransitionItem.HandleOptionsMenuCreated
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UUIStateChartEditorTransitionOptionsMenu*InMenu                                                 (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUIStateChartEditorTransitionItem::HandleOptionsMenuCreated(class UUIStateChartEditorTransitionOptionsMenu* InMenu)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIStateChartEditorTransitionItem", "HandleOptionsMenuCreated");

	Params::UIStateChartEditorTransitionItem_HandleOptionsMenuCreated Parms{};

	Parms.InMenu = InMenu;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UIChartEditor.UIStateChartEditorTransitionItem.HandleSourceClicked
// (Final, Native, Protected, BlueprintCallable)

void UUIStateChartEditorTransitionItem::HandleSourceClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIStateChartEditorTransitionItem", "HandleSourceClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UIChartEditor.UIStateChartEditorTransitionItem.HandleTargetClicked
// (Final, Native, Protected, BlueprintCallable)

void UUIStateChartEditorTransitionItem::HandleTargetClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIStateChartEditorTransitionItem", "HandleTargetClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UIChartEditor.UIStateChartEditorTransitionList.HandleAddButtonClicked
// (Final, Native, Protected, BlueprintCallable)

void UUIStateChartEditorTransitionList::HandleAddButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIStateChartEditorTransitionList", "HandleAddButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UIChartEditor.UIStateChartEditorTransitionList.ToggleListExpanded
// (Final, Native, Protected, BlueprintCallable)

void UUIStateChartEditorTransitionList::ToggleListExpanded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIStateChartEditorTransitionList", "ToggleListExpanded");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UIChartEditor.UIStateChartEditorTransitionOptionsMenu.HandleDeleteClicked
// (Final, Native, Protected, BlueprintCallable)

void UUIStateChartEditorTransitionOptionsMenu::HandleDeleteClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIStateChartEditorTransitionOptionsMenu", "HandleDeleteClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UIChartEditor.UIStateChartEditorTransitionOptionsMenu.HandleEditClicked
// (Final, Native, Protected, BlueprintCallable)

void UUIStateChartEditorTransitionOptionsMenu::HandleEditClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIStateChartEditorTransitionOptionsMenu", "HandleEditClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UIChartEditor.UIStateChartEditorWidget.HandleAssetSelectionChanged
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class FName                             InPropertyName                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUIStateChartEditorWidget::HandleAssetSelectionChanged(class FName InPropertyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIStateChartEditorWidget", "HandleAssetSelectionChanged");

	Params::UIStateChartEditorWidget_HandleAssetSelectionChanged Parms{};

	Parms.InPropertyName = InPropertyName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

