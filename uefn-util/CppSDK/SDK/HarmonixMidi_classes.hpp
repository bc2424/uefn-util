#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HarmonixMidi

#include "Basic.hpp"

#include "CoreUObject_classes.hpp"
#include "HarmonixMidi_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// Class HarmonixMidi.MidiFile
// 0x0120 (0x0150 - 0x0030)
class UMidiFile final : public UObject
{
public:
	uint8                                         Pad_30[0x8];                                       // 0x0030(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UAssetImportData*                       AssetImportData;                                   // 0x0038(0x0008)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, EditorOnly, NoDestructor, PersistentInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         StartBar;                                          // 0x0040(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, EditorOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMidiFileData                          TheMidiData;                                       // 0x0048(0x00F8)(Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_140[0x10];                                     // 0x0140(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MidiFile">();
	}
	static class UMidiFile* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMidiFile>();
	}
};

// Class HarmonixMidi.MidiNoteFunctionLibrary
// 0x0000 (0x0030 - 0x0030)
class UMidiNoteFunctionLibrary final : public UBlueprintFunctionLibrary
{
public:
	static struct FMidiNote ByteToMidiNote(uint8 InByte);
	static struct FMidiNote GetMaxMidiNote();
	static uint8 GetMaxNoteNumber();
	static uint8 GetMaxNoteVelocity();
	static int32 GetMaxNumNotes();
	static struct FMidiNote GetMinMidiNote();
	static uint8 GetMinNoteNumber();
	static uint8 GetMinNoteVelocity();
	static struct FMidiNote IntToMidiNote(int32 InInt);
	static struct FMidiNote MakeLiteralMidiNote(const struct FMidiNote& Value);
	static uint8 MidiNoteToByte(const struct FMidiNote& InMidiNote);
	static int32 MidiNoteToInt(const struct FMidiNote& InMidiNote);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MidiNoteFunctionLibrary">();
	}
	static class UMidiNoteFunctionLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMidiNoteFunctionLibrary>();
	}
};

// Class HarmonixMidi.MusicalTickFunctionLibrary
// 0x0000 (0x0030 - 0x0030)
class UMusicalTickFunctionLibrary final : public UBlueprintFunctionLibrary
{
public:
	static float GetQuarterNotesPerTick();
	static float GetTicksPerQuarterNote();
	static int32 GetTicksPerQuarterNoteInt();
	static float QuarterNoteToTick(float InQuarterNote);
	static float TickToQuarterNote(float InTick);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MusicalTickFunctionLibrary">();
	}
	static class UMusicalTickFunctionLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMusicalTickFunctionLibrary>();
	}
};

}

