#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ControlRigEditor

#include "Basic.hpp"

#include "UnrealEd_classes.hpp"
#include "ControlRig_structs.hpp"
#include "MovieSceneTools_structs.hpp"
#include "MovieScene_structs.hpp"
#include "Engine_classes.hpp"
#include "ControlRigEditor_structs.hpp"
#include "RigVMEditor_classes.hpp"
#include "CurveEditor_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "CoreUObject_classes.hpp"
#include "AnimationCore_structs.hpp"
#include "Sequencer_classes.hpp"


namespace SDK
{

// Class ControlRigEditor.AnimSequenceConverterFactory
// 0x0000 (0x00A8 - 0x00A8)
class UAnimSequenceConverterFactory final : public UAnimSequenceFactory
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AnimSequenceConverterFactory">();
	}
	static class UAnimSequenceConverterFactory* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimSequenceConverterFactory>();
	}
};

// Class ControlRigEditor.AssetDefinition_ControlRigPose
// 0x0000 (0x0048 - 0x0048)
class UAssetDefinition_ControlRigPose final : public UAssetDefinitionDefault
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AssetDefinition_ControlRigPose">();
	}
	static class UAssetDefinition_ControlRigPose* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAssetDefinition_ControlRigPose>();
	}
};

// Class ControlRigEditor.ControlRigWrapperObject
// 0x0000 (0x0058 - 0x0058)
class UControlRigWrapperObject : public URigVMDetailsViewWrapperObject
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ControlRigWrapperObject">();
	}
	static class UControlRigWrapperObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<UControlRigWrapperObject>();
	}
};

// Class ControlRigEditor.BakeToControlRigSettings
// 0x0018 (0x0048 - 0x0030)
class UBakeToControlRigSettings final : public UObject
{
public:
	bool                                          bReduceKeys;                                       // 0x0030(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Tolerance;                                         // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSmartReduceParams                     SmartReduce;                                       // 0x0038(0x000C)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bResetControls;                                    // 0x0044(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BakeToControlRigSettings">();
	}
	static class UBakeToControlRigSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBakeToControlRigSettings>();
	}
};

// Class ControlRigEditor.ControlRigBlueprintEditorLibrary
// 0x0000 (0x0030 - 0x0030)
class UControlRigBlueprintEditorLibrary final : public URigVMEditorBlueprintLibrary
{
public:
	static void CastToControlRigBlueprint(class UObject* Object, ECastToControlRigBlueprintCases* Branches, class UControlRigBlueprint** AsControlRigBlueprint);
	static TArray<struct FRigModuleDescription> GetAvailableRigModules();
	static TArray<class UStruct*> GetAvailableRigUnits();
	static TArray<class UControlRigBlueprint*> GetCurrentlyOpenRigBlueprints();
	static class URigHierarchy* GetHierarchy(class UControlRigBlueprint* InRigBlueprint);
	static class URigHierarchyController* GetHierarchyController(class UControlRigBlueprint* InRigBlueprint);
	static class USkeletalMesh* GetPreviewMesh(class UControlRigBlueprint* InRigBlueprint);
	static void RequestControlRigInit(class UControlRigBlueprint* InRigBlueprint);
	static void SetPreviewMesh(class UControlRigBlueprint* InRigBlueprint, class USkeletalMesh* PreviewMesh, bool bMarkAsDirty);
	static void SetupAllEditorMenus();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ControlRigBlueprintEditorLibrary">();
	}
	static class UControlRigBlueprintEditorLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UControlRigBlueprintEditorLibrary>();
	}
};

// Class ControlRigEditor.ControlRigBlueprintFactory
// 0x0008 (0x0090 - 0x0088)
class UControlRigBlueprintFactory final : public UFactory
{
public:
	TSubclassOf<class UControlRig>                ParentClass;                                       // 0x0088(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UControlRigBlueprint* CreateControlRigFromSkeletalMeshOrSkeleton(class UObject* InSelectedObject, const bool bModularRig);
	static class UControlRigBlueprint* CreateNewControlRigAsset(const class FString& InDesiredPackagePath, const bool bModularRig);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ControlRigBlueprintFactory">();
	}
	static class UControlRigBlueprintFactory* GetDefaultObj()
	{
		return GetDefaultObjImpl<UControlRigBlueprintFactory>();
	}
};

// Class ControlRigEditor.ControlRigShapeLibraryFactory
// 0x0000 (0x0088 - 0x0088)
class UControlRigShapeLibraryFactory final : public UFactory
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ControlRigShapeLibraryFactory">();
	}
	static class UControlRigShapeLibraryFactory* GetDefaultObj()
	{
		return GetDefaultObjImpl<UControlRigShapeLibraryFactory>();
	}
};

// Class ControlRigEditor.ControlRigSequencerEditorLibrary
// 0x0000 (0x0030 - 0x0030)
class UControlRigSequencerEditorLibrary final : public UBlueprintFunctionLibrary
{
public:
	static class UTickableConstraint* AddConstraint(class UWorld* World, ETransformConstraintType InType, class UTransformableHandle* InChild, class UTransformableHandle* InParent, const bool bMaintainOffset);
	static bool BakeConstraint(class UWorld* World, class UTickableConstraint* Constraint, const TArray<struct FFrameNumber>& Frames, EMovieSceneTimeUnit TimeUnit);
	static bool BakeConstraints(class UWorld* World, TArray<class UTickableConstraint*>* InConstraints, const struct FBakingAnimationKeySettings& InSettings);
	static bool BakeControlRigSpace(class ULevelSequence* InSequence, class UControlRig* InControlRig, const TArray<class FName>& InControlNames, const struct FRigSpacePickerBakeSettings& InSettings, EMovieSceneTimeUnit TimeUnit);
	static bool BakeToControlRig(class UWorld* World, class ULevelSequence* LevelSequence, class UClass* ControlRigClass, class UAnimSeqExportOption* ExportOptions, bool bReduceKeys, float Tolerance, const struct FMovieSceneBindingProxy& Binding, bool bResetControls);
	static bool BlendValuesOnSelected(class ULevelSequence* LevelSequence, EAnimToolBlendOperation BlendOperation, float BlendValue);
	static bool CollapseControlRigAnimLayers(class ULevelSequence* InSequence, class UMovieSceneControlRigParameterTrack* InTrack, bool bKeyReduce, float Tolerance);
	static bool CollapseControlRigAnimLayersWithSettings(class ULevelSequence* InSequence, class UMovieSceneControlRigParameterTrack* InTrack, const struct FBakingAnimationKeySettings& InSettings);
	static bool Compensate(class UTickableConstraint* InConstraint, const struct FFrameNumber& InTime, EMovieSceneTimeUnit TimeUnit);
	static bool CompensateAll(class UTickableConstraint* InConstraint);
	static bool DeleteConstraintKey(class UTickableConstraint* Constraint, class UMovieSceneSection* ConstraintSection, const struct FFrameNumber& InTime, EMovieSceneTimeUnit TimeUnit);
	static bool DeleteControlRigSpace(class ULevelSequence* InSequence, class UControlRig* InControlRig, class FName InControlName, const struct FFrameNumber& InTime, EMovieSceneTimeUnit TimeUnit);
	static bool ExportFBXFromControlRigSection(class ULevelSequence* Sequence, const class UMovieSceneControlRigParameterSection* Section, const class UMovieSceneUserExportFBXControlRigSettings* ExportFBXControlRigSettings);
	static TArray<class UMovieSceneTrack*> FindOrCreateControlRigComponentTrack(class UWorld* World, class ULevelSequence* LevelSequence, const struct FMovieSceneBindingProxy& InBinding);
	static class UMovieSceneTrack* FindOrCreateControlRigTrack(class UWorld* World, class ULevelSequence* LevelSequence, const class UClass* ControlRigClass, const struct FMovieSceneBindingProxy& InBinding, bool bIsLayeredControlRig);
	static struct FTransform GetActorWorldTransform(class ULevelSequence* LevelSequence, class AActor* Actor, const struct FFrameNumber& Frame, EMovieSceneTimeUnit TimeUnit);
	static TArray<struct FTransform> GetActorWorldTransforms(class ULevelSequence* LevelSequence, class AActor* Actor, const TArray<struct FFrameNumber>& Frames, EMovieSceneTimeUnit TimeUnit);
	static bool GetConstraintKeys(class UTickableConstraint* InConstraint, class UMovieSceneSection* ConstraintSection, TArray<bool>* OutBools, TArray<struct FFrameNumber>* OutFrames, EMovieSceneTimeUnit TimeUnit);
	static TArray<class UTickableConstraint*> GetConstraintsForHandle(class UWorld* InWorld, const class UTransformableHandle* InChild);
	static int32 GetControlRigPriorityOrder(class UMovieSceneTrack* InSection);
	static TArray<struct FControlRigSequencerBindingProxy> GetControlRigs(class ULevelSequence* LevelSequence);
	static struct FTransform GetControlRigWorldTransform(class ULevelSequence* LevelSequence, class UControlRig* ControlRig, class FName ControlName, const struct FFrameNumber& Frame, EMovieSceneTimeUnit TimeUnit);
	static TArray<struct FTransform> GetControlRigWorldTransforms(class ULevelSequence* LevelSequence, class UControlRig* ControlRig, class FName ControlName, const TArray<struct FFrameNumber>& Frames, EMovieSceneTimeUnit TimeUnit);
	static bool GetControlsMask(class UMovieSceneSection* InSection, class FName ControlName);
	static struct FRigElementKey GetDefaultParentKey();
	static EControlRigFKRigExecuteMode GetFKControlRigApplyMode(class UControlRig* InControlRig);
	static bool GetLocalControlRigBool(class ULevelSequence* LevelSequence, class UControlRig* ControlRig, class FName ControlName, const struct FFrameNumber& Frame, EMovieSceneTimeUnit TimeUnit);
	static TArray<bool> GetLocalControlRigBools(class ULevelSequence* LevelSequence, class UControlRig* ControlRig, class FName ControlName, const TArray<struct FFrameNumber>& Frames, EMovieSceneTimeUnit TimeUnit);
	static struct FEulerTransform GetLocalControlRigEulerTransform(class ULevelSequence* LevelSequence, class UControlRig* ControlRig, class FName ControlName, const struct FFrameNumber& Frame, EMovieSceneTimeUnit TimeUnit);
	static TArray<struct FEulerTransform> GetLocalControlRigEulerTransforms(class ULevelSequence* LevelSequence, class UControlRig* ControlRig, class FName ControlName, const TArray<struct FFrameNumber>& Frames, EMovieSceneTimeUnit TimeUnit);
	static float GetLocalControlRigFloat(class ULevelSequence* LevelSequence, class UControlRig* ControlRig, class FName ControlName, const struct FFrameNumber& Frame, EMovieSceneTimeUnit TimeUnit);
	static TArray<float> GetLocalControlRigFloats(class ULevelSequence* LevelSequence, class UControlRig* ControlRig, class FName ControlName, const TArray<struct FFrameNumber>& Frames, EMovieSceneTimeUnit TimeUnit);
	static int32 GetLocalControlRigInt(class ULevelSequence* LevelSequence, class UControlRig* ControlRig, class FName ControlName, const struct FFrameNumber& Frame, EMovieSceneTimeUnit TimeUnit);
	static TArray<int32> GetLocalControlRigInts(class ULevelSequence* LevelSequence, class UControlRig* ControlRig, class FName ControlName, const TArray<struct FFrameNumber>& Frames, EMovieSceneTimeUnit TimeUnit);
	static struct FVector GetLocalControlRigPosition(class ULevelSequence* LevelSequence, class UControlRig* ControlRig, class FName ControlName, const struct FFrameNumber& Frame, EMovieSceneTimeUnit TimeUnit);
	static TArray<struct FVector> GetLocalControlRigPositions(class ULevelSequence* LevelSequence, class UControlRig* ControlRig, class FName ControlName, const TArray<struct FFrameNumber>& Frames, EMovieSceneTimeUnit TimeUnit);
	static struct FRotator GetLocalControlRigRotator(class ULevelSequence* LevelSequence, class UControlRig* ControlRig, class FName ControlName, const struct FFrameNumber& Frame, EMovieSceneTimeUnit TimeUnit);
	static TArray<struct FRotator> GetLocalControlRigRotators(class ULevelSequence* LevelSequence, class UControlRig* ControlRig, class FName ControlName, const TArray<struct FFrameNumber>& Frames, EMovieSceneTimeUnit TimeUnit);
	static struct FVector GetLocalControlRigScale(class ULevelSequence* LevelSequence, class UControlRig* ControlRig, class FName ControlName, const struct FFrameNumber& Frame, EMovieSceneTimeUnit TimeUnit);
	static TArray<struct FVector> GetLocalControlRigScales(class ULevelSequence* LevelSequence, class UControlRig* ControlRig, class FName ControlName, const TArray<struct FFrameNumber>& Frames, EMovieSceneTimeUnit TimeUnit);
	static struct FTransform GetLocalControlRigTransform(class ULevelSequence* LevelSequence, class UControlRig* ControlRig, class FName ControlName, const struct FFrameNumber& Frame, EMovieSceneTimeUnit TimeUnit);
	static struct FTransformNoScale GetLocalControlRigTransformNoScale(class ULevelSequence* LevelSequence, class UControlRig* ControlRig, class FName ControlName, const struct FFrameNumber& Frame, EMovieSceneTimeUnit TimeUnit);
	static TArray<struct FTransformNoScale> GetLocalControlRigTransformNoScales(class ULevelSequence* LevelSequence, class UControlRig* ControlRig, class FName ControlName, const TArray<struct FFrameNumber>& Frames, EMovieSceneTimeUnit TimeUnit);
	static TArray<struct FTransform> GetLocalControlRigTransforms(class ULevelSequence* LevelSequence, class UControlRig* ControlRig, class FName ControlName, const TArray<struct FFrameNumber>& Frames, EMovieSceneTimeUnit TimeUnit);
	static struct FVector2D GetLocalControlRigVector2D(class ULevelSequence* LevelSequence, class UControlRig* ControlRig, class FName ControlName, const struct FFrameNumber& Frame, EMovieSceneTimeUnit TimeUnit);
	static TArray<struct FVector2D> GetLocalControlRigVector2Ds(class ULevelSequence* LevelSequence, class UControlRig* ControlRig, class FName ControlName, const TArray<struct FFrameNumber>& Frames, EMovieSceneTimeUnit TimeUnit);
	static struct FTransform GetSkeletalMeshComponentWorldTransform(class ULevelSequence* LevelSequence, class USkeletalMeshComponent* SkeletalMeshComponent, const struct FFrameNumber& Frame, EMovieSceneTimeUnit TimeUnit, class FName ReferenceName);
	static TArray<struct FTransform> GetSkeletalMeshComponentWorldTransforms(class ULevelSequence* LevelSequence, class USkeletalMeshComponent* SkeletalMeshComponent, const TArray<struct FFrameNumber>& Frames, EMovieSceneTimeUnit TimeUnit, class FName ReferenceName);
	static TArray<class UControlRig*> GetVisibleControlRigs();
	static struct FRigElementKey GetWorldSpaceReferenceKey();
	static void HideAllControls(class UMovieSceneSection* InSection);
	static bool ImportFBXToControlRigTrack(class UWorld* World, class ULevelSequence* InSequence, class UMovieSceneControlRigParameterTrack* InTrack, class UMovieSceneControlRigParameterSection* InSection, const TArray<class FString>& SelectedControlRigNames, class UMovieSceneUserImportFBXControlRigSettings* ImportFBXControlRigSettings, const class FString& ImportFilename);
	static bool IsFKControlRig(class UControlRig* InControlRig);
	static bool IsLayeredControlRig(class UControlRig* InControlRig);
	static bool LoadAnimSequenceIntoControlRigSection(class UMovieSceneSection* MovieSceneSection, class UAnimSequence* AnimSequence, class USkeletalMeshComponent* SkelMeshComp, const struct FFrameNumber& InStartFrame, EMovieSceneTimeUnit TimeUnit, bool bKeyReduce, float Tolerance, EMovieSceneKeyInterpolation Interpolation, bool bResetControls);
	static bool MoveConstraintKey(class UTickableConstraint* Constraint, class UMovieSceneSection* ConstraintSection, const struct FFrameNumber& InTime, const struct FFrameNumber& InNewTime, EMovieSceneTimeUnit TimeUnit);
	static bool MoveControlRigSpace(class ULevelSequence* InSequence, class UControlRig* InControlRig, class FName InControlName, const struct FFrameNumber& InTime, const struct FFrameNumber& InNewTime, EMovieSceneTimeUnit TimeUnit);
	static bool RenameControlRigControlChannels(class ULevelSequence* InSequence, class UControlRig* InControlRig, const TArray<class FName>& InOldControlNames, const TArray<class FName>& InNewControlNames);
	static bool SetConstraintActiveKey(class UTickableConstraint* InConstraint, bool bActive, const struct FFrameNumber& InFrame, EMovieSceneTimeUnit TimeUnit);
	static bool SetControlRigApplyMode(class UControlRig* InControlRig, EControlRigFKRigExecuteMode InApplyMode);
	static bool SetControlRigLayeredMode(class UMovieSceneControlRigParameterTrack* InTrack, bool bSetIsLayered);
	static void SetControlRigPriorityOrder(class UMovieSceneTrack* InSection, int32 PriorityOrder);
	static bool SetControlRigSpace(class ULevelSequence* InSequence, class UControlRig* InControlRig, class FName InControlName, const struct FRigElementKey& InSpaceKey, const struct FFrameNumber& InTime, EMovieSceneTimeUnit TimeUnit);
	static void SetControlRigWorldTransform(class ULevelSequence* LevelSequence, class UControlRig* ControlRig, class FName ControlName, const struct FFrameNumber& Frame, const struct FTransform& WorldTransform, EMovieSceneTimeUnit TimeUnit, bool bSetKey);
	static void SetControlRigWorldTransforms(class ULevelSequence* LevelSequence, class UControlRig* ControlRig, class FName ControlName, const TArray<struct FFrameNumber>& Frames, const TArray<struct FTransform>& WorldTransforms, EMovieSceneTimeUnit TimeUnit);
	static void SetControlsMask(class UMovieSceneSection* InSection, const TArray<class FName>& ControlNames, bool bVisible);
	static void SetLocalControlRigBool(class ULevelSequence* LevelSequence, class UControlRig* ControlRig, class FName ControlName, const struct FFrameNumber& Frame, bool Value, EMovieSceneTimeUnit TimeUnit, bool bSetKey);
	static void SetLocalControlRigBools(class ULevelSequence* LevelSequence, class UControlRig* ControlRig, class FName ControlName, const TArray<struct FFrameNumber>& Frames, const TArray<bool>& Values, EMovieSceneTimeUnit TimeUnit);
	static void SetLocalControlRigEulerTransform(class ULevelSequence* LevelSequence, class UControlRig* ControlRig, class FName ControlName, const struct FFrameNumber& Frame, const struct FEulerTransform& Value, EMovieSceneTimeUnit TimeUnit, bool bSetKey);
	static void SetLocalControlRigEulerTransforms(class ULevelSequence* LevelSequence, class UControlRig* ControlRig, class FName ControlName, const TArray<struct FFrameNumber>& Frames, const TArray<struct FEulerTransform>& Values, EMovieSceneTimeUnit TimeUnit);
	static void SetLocalControlRigFloat(class ULevelSequence* LevelSequence, class UControlRig* ControlRig, class FName ControlName, const struct FFrameNumber& Frame, float Value, EMovieSceneTimeUnit TimeUnit, bool bSetKey);
	static void SetLocalControlRigFloats(class ULevelSequence* LevelSequence, class UControlRig* ControlRig, class FName ControlName, const TArray<struct FFrameNumber>& Frames, const TArray<float>& Values, EMovieSceneTimeUnit TimeUnit);
	static void SetLocalControlRigInt(class ULevelSequence* LevelSequence, class UControlRig* ControlRig, class FName ControlName, const struct FFrameNumber& Frame, int32 Value, EMovieSceneTimeUnit TimeUnit, bool bSetKey);
	static void SetLocalControlRigInts(class ULevelSequence* LevelSequence, class UControlRig* ControlRig, class FName ControlName, const TArray<struct FFrameNumber>& Frames, const TArray<int32>& Values, EMovieSceneTimeUnit TimeUnit);
	static void SetLocalControlRigPosition(class ULevelSequence* LevelSequence, class UControlRig* ControlRig, class FName ControlName, const struct FFrameNumber& Frame, const struct FVector& Value, EMovieSceneTimeUnit TimeUnit, bool bSetKey);
	static void SetLocalControlRigPositions(class ULevelSequence* LevelSequence, class UControlRig* ControlRig, class FName ControlName, const TArray<struct FFrameNumber>& Frames, const TArray<struct FVector>& Values, EMovieSceneTimeUnit TimeUnit);
	static void SetLocalControlRigRotator(class ULevelSequence* LevelSequence, class UControlRig* ControlRig, class FName ControlName, const struct FFrameNumber& Frame, const struct FRotator& Value, EMovieSceneTimeUnit TimeUnit, bool bSetKey);
	static void SetLocalControlRigRotators(class ULevelSequence* LevelSequence, class UControlRig* ControlRig, class FName ControlName, const TArray<struct FFrameNumber>& Frames, const TArray<struct FRotator>& Values, EMovieSceneTimeUnit TimeUnit);
	static void SetLocalControlRigScale(class ULevelSequence* LevelSequence, class UControlRig* ControlRig, class FName ControlName, const struct FFrameNumber& Frame, const struct FVector& Value, EMovieSceneTimeUnit TimeUnit, bool bSetKey);
	static void SetLocalControlRigScales(class ULevelSequence* LevelSequence, class UControlRig* ControlRig, class FName ControlName, const TArray<struct FFrameNumber>& Frames, const TArray<struct FVector>& Values, EMovieSceneTimeUnit TimeUnit);
	static void SetLocalControlRigTransform(class ULevelSequence* LevelSequence, class UControlRig* ControlRig, class FName ControlName, const struct FFrameNumber& Frame, const struct FTransform& Value, EMovieSceneTimeUnit TimeUnit, bool bSetKey);
	static void SetLocalControlRigTransformNoScale(class ULevelSequence* LevelSequence, class UControlRig* ControlRig, class FName ControlName, const struct FFrameNumber& Frame, const struct FTransformNoScale& Value, EMovieSceneTimeUnit TimeUnit, bool bSetKey);
	static void SetLocalControlRigTransformNoScales(class ULevelSequence* LevelSequence, class UControlRig* ControlRig, class FName ControlName, const TArray<struct FFrameNumber>& Frames, const TArray<struct FTransformNoScale>& Values, EMovieSceneTimeUnit TimeUnit);
	static void SetLocalControlRigTransforms(class ULevelSequence* LevelSequence, class UControlRig* ControlRig, class FName ControlName, const TArray<struct FFrameNumber>& Frames, const TArray<struct FTransform>& Values, EMovieSceneTimeUnit TimeUnit);
	static void SetLocalControlRigVector2D(class ULevelSequence* LevelSequence, class UControlRig* ControlRig, class FName ControlName, const struct FFrameNumber& Frame, const struct FVector2D& Value, EMovieSceneTimeUnit TimeUnit, bool bSetKey);
	static void SetLocalControlRigVector2Ds(class ULevelSequence* LevelSequence, class UControlRig* ControlRig, class FName ControlName, const TArray<struct FFrameNumber>& Frames, const TArray<struct FVector2D>& Values, EMovieSceneTimeUnit TimeUnit);
	static void ShowAllControls(class UMovieSceneSection* InSection);
	static bool SmartReduce(struct FSmartReduceParams* ReduceParams, class UMovieSceneSection* MovieSceneSection);
	static bool SnapControlRig(class ULevelSequence* LevelSequence, const struct FFrameNumber& StartFrame, const struct FFrameNumber& EndFrame, const struct FControlRigSnapperSelection& ChildrenToSnap, const struct FControlRigSnapperSelection& ParentToSnap, const class UControlRigSnapSettings* SnapSettings, EMovieSceneTimeUnit TimeUnit);
	static bool SpaceCompensate(class UControlRig* InControlRig, const struct FFrameNumber& InTime, EMovieSceneTimeUnit TimeUnit);
	static bool TweenControlRig(class ULevelSequence* LevelSequence, class UControlRig* ControlRig, float TweenValue);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ControlRigSequencerEditorLibrary">();
	}
	static class UControlRigSequencerEditorLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UControlRigSequencerEditorLibrary>();
	}
};

// Class ControlRigEditor.ControlRigThumbnailRenderer
// 0x0058 (0x00E0 - 0x0088)
class UControlRigThumbnailRenderer final : public USkeletalMeshThumbnailRenderer
{
public:
	uint8                                         Pad_88[0x58];                                      // 0x0088(0x0058)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ControlRigThumbnailRenderer">();
	}
	static class UControlRigThumbnailRenderer* GetDefaultObj()
	{
		return GetDefaultObjImpl<UControlRigThumbnailRenderer>();
	}
};

// Class ControlRigEditor.ControlRigControlsProxy
// 0x0158 (0x0188 - 0x0030)
class UControlRigControlsProxy : public UObject
{
public:
	uint8                                         Pad_30[0x2];                                       // 0x0030(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bSelected;                                         // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_33[0x1];                                       // 0x0033(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Name_0;                                            // 0x0034(0x000C)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_40[0x148];                                     // 0x0040(0x0148)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ControlRigControlsProxy">();
	}
	static class UControlRigControlsProxy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UControlRigControlsProxy>();
	}
};

// Class ControlRigEditor.AnimDetailControlsKeyedProxy
// 0x0000 (0x0188 - 0x0188)
class UAnimDetailControlsKeyedProxy : public UControlRigControlsProxy
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AnimDetailControlsKeyedProxy">();
	}
	static class UAnimDetailControlsKeyedProxy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimDetailControlsKeyedProxy>();
	}
};

// Class ControlRigEditor.AnimDetailControlsProxyFloat
// 0x0010 (0x0198 - 0x0188)
class UAnimDetailControlsProxyFloat final : public UAnimDetailControlsKeyedProxy
{
public:
	uint8                                         Pad_188[0x8];                                      // 0x0188(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimDetailProxyFloat                  Float;                                             // 0x0190(0x0008)(Edit, BlueprintVisible, Interp, NoDestructor, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AnimDetailControlsProxyFloat">();
	}
	static class UAnimDetailControlsProxyFloat* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimDetailControlsProxyFloat>();
	}
};

// Class ControlRigEditor.AnimDetailControlsProxyBool
// 0x0008 (0x0190 - 0x0188)
class UAnimDetailControlsProxyBool final : public UAnimDetailControlsKeyedProxy
{
public:
	uint8                                         Pad_188[0x2];                                      // 0x0188(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimDetailProxyBool                   Bool;                                              // 0x018A(0x0001)(Edit, BlueprintVisible, Interp, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_18B[0x5];                                      // 0x018B(0x0005)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AnimDetailControlsProxyBool">();
	}
	static class UAnimDetailControlsProxyBool* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimDetailControlsProxyBool>();
	}
};

// Class ControlRigEditor.AnimDetailControlsProxyInteger
// 0x0010 (0x0198 - 0x0188)
class UAnimDetailControlsProxyInteger final : public UAnimDetailControlsKeyedProxy
{
public:
	uint8                                         Pad_188[0x8];                                      // 0x0188(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimDetailProxyInteger                Integer;                                           // 0x0190(0x0008)(Edit, BlueprintVisible, Interp, NoDestructor, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AnimDetailControlsProxyInteger">();
	}
	static class UAnimDetailControlsProxyInteger* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimDetailControlsProxyInteger>();
	}
};

// Class ControlRigEditor.AnimDetailControlsProxyEnum
// 0x0018 (0x01A0 - 0x0188)
class UAnimDetailControlsProxyEnum final : public UAnimDetailControlsKeyedProxy
{
public:
	uint8                                         Pad_188[0x8];                                      // 0x0188(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FControlRigEnumControlProxyValue       Enum;                                              // 0x0190(0x0010)(Edit, BlueprintVisible, Interp, NoDestructor, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AnimDetailControlsProxyEnum">();
	}
	static class UAnimDetailControlsProxyEnum* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimDetailControlsProxyEnum>();
	}
};

// Class ControlRigEditor.AnimDetailControlsProxyTransform
// 0x0060 (0x01E8 - 0x0188)
class UAnimDetailControlsProxyTransform final : public UAnimDetailControlsKeyedProxy
{
public:
	struct FAnimDetailProxyLocation               Location;                                          // 0x0188(0x0020)(Edit, BlueprintVisible, Interp, NoDestructor, NativeAccessSpecifierPublic)
	struct FAnimDetailProxyRotation               Rotation;                                          // 0x01A8(0x0020)(Edit, BlueprintVisible, Interp, NoDestructor, NativeAccessSpecifierPublic)
	struct FAnimDetailProxyScale                  Scale;                                             // 0x01C8(0x0020)(Edit, BlueprintVisible, Interp, NoDestructor, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AnimDetailControlsProxyTransform">();
	}
	static class UAnimDetailControlsProxyTransform* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimDetailControlsProxyTransform>();
	}
};

// Class ControlRigEditor.AnimDetailControlsProxyLocation
// 0x0020 (0x01A8 - 0x0188)
class UAnimDetailControlsProxyLocation final : public UAnimDetailControlsKeyedProxy
{
public:
	struct FAnimDetailProxyLocation               Location;                                          // 0x0188(0x0020)(Edit, BlueprintVisible, Interp, NoDestructor, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AnimDetailControlsProxyLocation">();
	}
	static class UAnimDetailControlsProxyLocation* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimDetailControlsProxyLocation>();
	}
};

// Class ControlRigEditor.AnimDetailControlsProxyRotation
// 0x0020 (0x01A8 - 0x0188)
class UAnimDetailControlsProxyRotation final : public UAnimDetailControlsKeyedProxy
{
public:
	struct FAnimDetailProxyRotation               Rotation;                                          // 0x0188(0x0020)(Edit, BlueprintVisible, Interp, NoDestructor, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AnimDetailControlsProxyRotation">();
	}
	static class UAnimDetailControlsProxyRotation* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimDetailControlsProxyRotation>();
	}
};

// Class ControlRigEditor.AnimDetailControlsProxyScale
// 0x0020 (0x01A8 - 0x0188)
class UAnimDetailControlsProxyScale final : public UAnimDetailControlsKeyedProxy
{
public:
	struct FAnimDetailProxyScale                  Scale;                                             // 0x0188(0x0020)(Edit, BlueprintVisible, Interp, NoDestructor, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AnimDetailControlsProxyScale">();
	}
	static class UAnimDetailControlsProxyScale* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimDetailControlsProxyScale>();
	}
};

// Class ControlRigEditor.AnimDetailControlsProxyVector2D
// 0x0018 (0x01A0 - 0x0188)
class UAnimDetailControlsProxyVector2D final : public UAnimDetailControlsKeyedProxy
{
public:
	struct FAnimDetailProxyVector2D               Vector2D;                                          // 0x0188(0x0018)(Edit, BlueprintVisible, Interp, NoDestructor, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AnimDetailControlsProxyVector2D">();
	}
	static class UAnimDetailControlsProxyVector2D* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimDetailControlsProxyVector2D>();
	}
};

// Class ControlRigEditor.ControlRigDetailPanelControlProxies
// 0x00E8 (0x0118 - 0x0030)
class UControlRigDetailPanelControlProxies final : public UObject
{
public:
	TMap<class UControlRig*, struct FNameToProxyMap> ControlRigOnlyProxies;                             // 0x0030(0x0050)(Protected, NativeAccessSpecifierProtected)
	TArray<class UControlRigControlsProxy*>       SelectedControlRigProxies;                         // 0x0080(0x0010)(ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TMap<class UObject*, struct FNameToProxyMap>  SequencerOnlyProxies;                              // 0x0090(0x0050)(Protected, NativeAccessSpecifierProtected)
	TArray<class UControlRigControlsProxy*>       SelectedSequencerProxies;                          // 0x00E0(0x0010)(ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	uint8                                         Pad_F0[0x28];                                      // 0x00F0(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ControlRigDetailPanelControlProxies">();
	}
	static class UControlRigDetailPanelControlProxies* GetDefaultObj()
	{
		return GetDefaultObjImpl<UControlRigDetailPanelControlProxies>();
	}
};

// Class ControlRigEditor.ControlRigEditModeDelegateHelper
// 0x0018 (0x0048 - 0x0030)
class UControlRigEditModeDelegateHelper final : public UObject
{
public:
	uint8                                         Pad_30[0x18];                                      // 0x0030(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnPoseInitialized();
	void PostPoseUpdate();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ControlRigEditModeDelegateHelper">();
	}
	static class UControlRigEditModeDelegateHelper* GetDefaultObj()
	{
		return GetDefaultObjImpl<UControlRigEditModeDelegateHelper>();
	}
};

// Class ControlRigEditor.ControlRigEditModeSettings
// 0x0050 (0x0080 - 0x0030)
class UControlRigEditModeSettings final : public UObject
{
public:
	bool                                          bDisplayHierarchy;                                 // 0x0030(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDisplayNulls;                                     // 0x0031(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDisplaySockets;                                   // 0x0032(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHideControlShapes;                                // 0x0033(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShowAllProxyControls;                             // 0x0034(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShowControlsAsOverlay;                            // 0x0035(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_36[0x2];                                       // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           DrivenControlColor;                                // 0x0038(0x0010)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDisplayAxesOnSelection;                           // 0x0048(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         AxisScale;                                         // 0x004C(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCoordSystemPerWidgetMode;                         // 0x0050(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOnlySelectRigControls;                            // 0x0051(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bLocalTransformsInEachLocalSpace;                  // 0x0052(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_53[0x1];                                       // 0x0053(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         GizmoScale;                                        // 0x0054(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              LastInViewportTweenWidgetLocation;                 // 0x0058(0x0010)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_68[0x18];                                      // 0x0068(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ControlRigEditModeSettings">();
	}
	static class UControlRigEditModeSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UControlRigEditModeSettings>();
	}
};

// Class ControlRigEditor.ControlRigContextMenuContext
// 0x0090 (0x00C0 - 0x0030)
class UControlRigContextMenuContext final : public UObject
{
public:
	uint8                                         Pad_30[0x90];                                      // 0x0030(0x0090)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	struct FControlRigGraphNodeContextMenuContext GetGraphNodeContextMenuContext();
	struct FControlRigRigHierarchyDragAndDropContext GetRigHierarchyDragAndDropContext();
	struct FControlRigRigHierarchyToGraphDragAndDropContext GetRigHierarchyToGraphDragAndDropContext();

	class UControlRig* GetControlRig() const;
	class UControlRigBlueprint* GetControlRigBlueprint() const;
	bool IsAltDown() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ControlRigContextMenuContext">();
	}
	static class UControlRigContextMenuContext* GetDefaultObj()
	{
		return GetDefaultObjImpl<UControlRigContextMenuContext>();
	}
};

// Class ControlRigEditor.ControlRigSkeletalMeshComponent
// 0x0140 (0x1400 - 0x12C0)
class UControlRigSkeletalMeshComponent final : public UDebugSkelMeshComponent
{
public:
	uint8                                         Pad_12C0[0x140];                                   // 0x12C0(0x0140)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ControlRigSkeletalMeshComponent">();
	}
	static class UControlRigSkeletalMeshComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UControlRigSkeletalMeshComponent>();
	}
};

// Class ControlRigEditor.ControlRigTrackFilter
// 0x0000 (0x0030 - 0x0030)
class UControlRigTrackFilter final : public USequencerTrackFilterExtension
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ControlRigTrackFilter">();
	}
	static class UControlRigTrackFilter* GetDefaultObj()
	{
		return GetDefaultObjImpl<UControlRigTrackFilter>();
	}
};

// Class ControlRigEditor.ControlRigPoseThumbnailRenderer
// 0x0010 (0x0048 - 0x0038)
class UControlRigPoseThumbnailRenderer final : public UDefaultSizedThumbnailRenderer
{
public:
	uint8                                         Pad_38[0x10];                                      // 0x0038(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ControlRigPoseThumbnailRenderer">();
	}
	static class UControlRigPoseThumbnailRenderer* GetDefaultObj()
	{
		return GetDefaultObjImpl<UControlRigPoseThumbnailRenderer>();
	}
};

// Class ControlRigEditor.ControlRigSnapSettings
// 0x0018 (0x0048 - 0x0030)
class UControlRigSnapSettings final : public UObject
{
public:
	bool                                          bKeepOffset;                                       // 0x0030(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSnapPosition;                                     // 0x0031(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSnapRotation;                                     // 0x0032(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSnapScale;                                        // 0x0033(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EBakingKeySettings                            BakingKeySettings;                                 // 0x0034(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         FrameIncrement;                                    // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bReduceKeys;                                       // 0x003C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Tolerance;                                         // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ControlRigSnapSettings">();
	}
	static class UControlRigSnapSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UControlRigSnapSettings>();
	}
};

// Class ControlRigEditor.CreateControlPoseAssetRigSettings
// 0x0010 (0x0040 - 0x0030)
class UCreateControlPoseAssetRigSettings final : public UObject
{
public:
	class FString                                 AssetName;                                         // 0x0030(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CreateControlPoseAssetRigSettings">();
	}
	static class UCreateControlPoseAssetRigSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCreateControlPoseAssetRigSettings>();
	}
};

}

