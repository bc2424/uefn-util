#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: USDTests

#include "Basic.hpp"

#include "USDTests_classes.hpp"
#include "USDTests_parameters.hpp"


namespace SDK
{

// Function USDTests.SDTestsBlueprintLibrary.ClearTransactionHistory
// (Final, Native, Static, Public, BlueprintCallable)

void USDTestsBlueprintLibrary::ClearTransactionHistory()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SDTestsBlueprintLibrary", "ClearTransactionHistory");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function USDTests.SDTestsBlueprintLibrary.DirtyStageActorBlueprint
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AUsdStageActor*                   BlueprintDerivedStageActor                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USDTestsBlueprintLibrary::DirtyStageActorBlueprint(class AUsdStageActor* BlueprintDerivedStageActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SDTestsBlueprintLibrary", "DirtyStageActorBlueprint");

	Params::SDTestsBlueprintLibrary_DirtyStageActorBlueprint Parms{};

	Parms.BlueprintDerivedStageActor = BlueprintDerivedStageActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function USDTests.SDTestsBlueprintLibrary.GetSubtreeMaterialSlotCount
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AUsdStageActor*                   StageActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           PrimPath                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 USDTestsBlueprintLibrary::GetSubtreeMaterialSlotCount(class AUsdStageActor* StageActor, const class FString& PrimPath)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SDTestsBlueprintLibrary", "GetSubtreeMaterialSlotCount");

	Params::SDTestsBlueprintLibrary_GetSubtreeMaterialSlotCount Parms{};

	Parms.StageActor = StageActor;
	Parms.PrimPath = std::move(PrimPath);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDTests.SDTestsBlueprintLibrary.GetSubtreeVertexCount
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AUsdStageActor*                   StageActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           PrimPath                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 USDTestsBlueprintLibrary::GetSubtreeVertexCount(class AUsdStageActor* StageActor, const class FString& PrimPath)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SDTestsBlueprintLibrary", "GetSubtreeVertexCount");

	Params::SDTestsBlueprintLibrary_GetSubtreeVertexCount Parms{};

	Parms.StageActor = StageActor;
	Parms.PrimPath = std::move(PrimPath);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDTests.SDTestsBlueprintLibrary.RecompileBlueprintStageActor
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AUsdStageActor*                   BlueprintDerivedStageActor                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USDTestsBlueprintLibrary::RecompileBlueprintStageActor(class AUsdStageActor* BlueprintDerivedStageActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SDTestsBlueprintLibrary", "RecompileBlueprintStageActor");

	Params::SDTestsBlueprintLibrary_RecompileBlueprintStageActor Parms{};

	Parms.BlueprintDerivedStageActor = BlueprintDerivedStageActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDTests.SDTestsBlueprintLibrary.SetUsdStageCpp
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AUsdStageActor*                   StageActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           NewStageRootLayer                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USDTestsBlueprintLibrary::SetUsdStageCpp(class AUsdStageActor* StageActor, const class FString& NewStageRootLayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SDTestsBlueprintLibrary", "SetUsdStageCpp");

	Params::SDTestsBlueprintLibrary_SetUsdStageCpp Parms{};

	Parms.StageActor = StageActor;
	Parms.NewStageRootLayer = std::move(NewStageRootLayer);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

