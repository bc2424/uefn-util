#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SpecialEventGameplayRuntime

#include "Basic.hpp"

#include "FortniteGame_structs.hpp"
#include "FortniteGame_classes.hpp"
#include "SpecialEventGameplayRuntime_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "ModularGameplay_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "CoreUObject_classes.hpp"
#include "GameplayAbilities_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CommonUILegacy_structs.hpp"
#include "CommonInput_structs.hpp"


namespace SDK
{

// Class SpecialEventGameplayRuntime.FortAthenaMutator_SpecialEventTODM
// 0x0040 (0x0510 - 0x04D0)
class AFortAthenaMutator_SpecialEventTODM final : public AFortAthenaMutator
{
public:
	TArray<struct FSpecialEventTODMPhaseData>     PhaseDataArray;                                    // 0x04D0(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class ASpecialEventScript*                    SpecialEventScript;                                // 0x04E0(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         PhaseIndexInProgress;                              // 0x04E8(0x0004)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         SubphaseIndexInProgress;                           // 0x04EC(0x0004)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_4F0[0x8];                                      // 0x04F0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IFortTimeOfDayManagerInterface> SpawnedTODM;                                       // 0x04F8(0x0010)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bDebug;                                            // 0x0508(0x0001)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_509[0x7];                                      // 0x0509(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnPhaseActivated(class ASpecialEventScript* InSpecialEventScript, class ASpecialEventPhase* InSpecialEventPhase);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortAthenaMutator_SpecialEventTODM">();
	}
	static class AFortAthenaMutator_SpecialEventTODM* GetDefaultObj()
	{
		return GetDefaultObjImpl<AFortAthenaMutator_SpecialEventTODM>();
	}
};

// Class SpecialEventGameplayRuntime.FortCheatManager_SpecialEventTODM
// 0x0000 (0x0040 - 0x0040)
class UFortCheatManager_SpecialEventTODM final : public UFortCheatManager_Coupled
{
public:
	void SpecialEventTODM_ToggleDebug();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortCheatManager_SpecialEventTODM">();
	}
	static class UFortCheatManager_SpecialEventTODM* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortCheatManager_SpecialEventTODM>();
	}
};

// Class SpecialEventGameplayRuntime.FortCheatManager_DestroyActorsAndComponents
// 0x0000 (0x0040 - 0x0040)
class UFortCheatManager_DestroyActorsAndComponents final : public UFortCheatManager_Coupled
{
public:
	void DestroyActorsAndComponentsMutator_SetActorDefinitionsEnabled(const class FString& TagString, const bool bEnabled);

	void DestroyActorsAndComponentsMutator_ListActorComponents(const class FString& InActorName) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortCheatManager_DestroyActorsAndComponents">();
	}
	static class UFortCheatManager_DestroyActorsAndComponents* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortCheatManager_DestroyActorsAndComponents>();
	}
};

// Class SpecialEventGameplayRuntime.FortAthenaMutator_DestroyActorsAndComponents
// 0x0030 (0x0500 - 0x04D0)
class AFortAthenaMutator_DestroyActorsAndComponents final : public AFortAthenaMutator
{
public:
	TArray<struct FDestroyActorsAndComponentsMutator_ActorDefinition> ActorDefinitions;                                  // 0x04D0(0x0010)(Edit, Net, ZeroConstructor, DisableEditOnInstance, RepNotify, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_4E0[0x20];                                     // 0x04E0(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnActorSpawned(class AActor* Actor);
	void OnRep_ActorDefinitions(const TArray<struct FDestroyActorsAndComponentsMutator_ActorDefinition>& OldActorDefinitions);
	void OnTrackedActorDestroyed(class AActor* DestroyedActor);
	void PermanentlyDisableActorDefinitions(const struct FGameplayTagContainer& InTags);
	void SetActorDefinitionsEnabled(const struct FGameplayTagContainer& InTags, const bool bEnabled);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortAthenaMutator_DestroyActorsAndComponents">();
	}
	static class AFortAthenaMutator_DestroyActorsAndComponents* GetDefaultObj()
	{
		return GetDefaultObjImpl<AFortAthenaMutator_DestroyActorsAndComponents>();
	}
};

// Class SpecialEventGameplayRuntime.FortCheatManager_FakeKillRelevancy
// 0x0000 (0x0040 - 0x0040)
class UFortCheatManager_FakeKillRelevancy final : public UFortCheatManager_Coupled
{
public:
	void FakeKillRelevancyDebug(const float TextScale);
	void FakeKillRelevancyReset();
	void FakeKillRelevancySetUpPhase(const int32 MaxPlayersRemaining, const class FString& ReasonGameplayTagString, const int32 NumWaves, const float RelevancyDelay);
	void FakeKillRelevancyStartNextWave();
	void FakeKillRelevancyTestAlgorithm(const int32 NumPlayers, const class FString& MaxPlayersRemainingAfterPhases, const int32 MinSquadSize, const int32 MaxSquadSize, const int32 Iterations, const int32 LogVerbosity);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortCheatManager_FakeKillRelevancy">();
	}
	static class UFortCheatManager_FakeKillRelevancy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortCheatManager_FakeKillRelevancy>();
	}
};

// Class SpecialEventGameplayRuntime.FortControllerComponent_FakeKillRelevancy
// 0x0190 (0x0270 - 0x00E0)
class UFortControllerComponent_FakeKillRelevancy final : public UFortControllerComponent
{
public:
	struct FFakeKillRelevancyPlayerDataArray      PlayerDataArray;                                   // 0x00E0(0x0128)(Net, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TMap<class AFortPlayerStateAthena*, EFakeKillRelevancyPlayerKillStep> ClientPlayerStateKillStepMap;                      // 0x0208(0x0050)(NativeAccessSpecifierPrivate)
	uint8                                         ResetCounter;                                      // 0x0258(0x0001)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_259[0x7];                                      // 0x0259(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AFortPlayerStateAthena*>         DebugSupergroupPlayerStates;                       // 0x0260(0x0010)(Net, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)

public:
	void CancelKillEffectsOnClient(const TArray<class AFortPlayerStateAthena*>& PlayerStates);
	void CancelKillEffectsOnServer();
	void OnKillEffectsPlayed(const class AFortPlayerStateAthena* PlayerState);
	void OnRep_ResetCounter();
	void PlayKillEffects(const struct FFakeKillRelevancyPlayerDataEntry& FakeKillData, const float RelevancyDelay);
	void ResetRelevancy();

	struct FVector GetDeathLocation(const class AFortPlayerStateAthena* PlayerState) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortControllerComponent_FakeKillRelevancy">();
	}
	static class UFortControllerComponent_FakeKillRelevancy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortControllerComponent_FakeKillRelevancy>();
	}
};

// Class SpecialEventGameplayRuntime.FortAthenaMutator_FakeKillRelevancy
// 0x0060 (0x0798 - 0x0738)
class AFortAthenaMutator_FakeKillRelevancy final : public AFortAthenaMutator_SpecialRelevancy
{
public:
	TSubclassOf<class UFortControllerComponent_FakeKillRelevancy> FakeKillControllerComponentClass;                  // 0x0738(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FFakeKillRelevancyPhaseData>    RelevancyPhaseDataArray;                           // 0x0740(0x0010)(Net, ZeroConstructor, NativeAccessSpecifierPrivate)
	int32                                         PhaseNum;                                          // 0x0750(0x0004)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_754[0x44];                                     // 0x0754(0x0044)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void EndWave(const int32 EndPhaseNum, const int32 WaveNum);
	void ResetRelevancy();
	void SetUpKillPhase(const int32 MaxPlayersRemaining, const struct FGameplayTag& Reason, const int32 NumWaves, const float RelevancyDelay);
	void StartNextKillWave();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortAthenaMutator_FakeKillRelevancy">();
	}
	static class AFortAthenaMutator_FakeKillRelevancy* GetDefaultObj()
	{
		return GetDefaultObjImpl<AFortAthenaMutator_FakeKillRelevancy>();
	}
};

// Class SpecialEventGameplayRuntime.FortAthenaMutator_LoadGameFeature
// 0x0010 (0x04E0 - 0x04D0)
class AFortAthenaMutator_LoadGameFeature final : public AFortAthenaMutator
{
public:
	class FString                                 GameFeatureToLoad;                                 // 0x04D0(0x0010)(Edit, ZeroConstructor, Config, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void OnPlaylistDataReady(class AFortGameStateAthena* GameState, const class UFortPlaylist* Playlist, const struct FGameplayTagContainer& PlaylistContextTags);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortAthenaMutator_LoadGameFeature">();
	}
	static class AFortAthenaMutator_LoadGameFeature* GetDefaultObj()
	{
		return GetDefaultObjImpl<AFortAthenaMutator_LoadGameFeature>();
	}
};

// Class SpecialEventGameplayRuntime.FortAthenaMutator_RemoveGameFeatures
// 0x0010 (0x04E0 - 0x04D0)
class AFortAthenaMutator_RemoveGameFeatures final : public AFortAthenaMutator
{
public:
	TArray<class FString>                         AllowedGameFeatures;                               // 0x04D0(0x0010)(Edit, ZeroConstructor, Config, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)

public:
	void OnPlaylistDataReady(class AFortGameStateAthena* GameState, const class UFortPlaylist* Playlist, const struct FGameplayTagContainer& PlaylistContextTags);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortAthenaMutator_RemoveGameFeatures">();
	}
	static class AFortAthenaMutator_RemoveGameFeatures* GetDefaultObj()
	{
		return GetDefaultObjImpl<AFortAthenaMutator_RemoveGameFeatures>();
	}
};

// Class SpecialEventGameplayRuntime.FortAthenaMutator_SpecialEventBase
// 0x0010 (0x04E0 - 0x04D0)
class AFortAthenaMutator_SpecialEventBase : public AFortAthenaMutator
{
public:
	bool                                          bDestroyInBeginPlay;                               // 0x04D0(0x0001)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_4D1[0xF];                                      // 0x04D1(0x000F)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortAthenaMutator_SpecialEventBase">();
	}
	static class AFortAthenaMutator_SpecialEventBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<AFortAthenaMutator_SpecialEventBase>();
	}
};

// Class SpecialEventGameplayRuntime.FortAthenaMutator_SE_BindEmotes
// 0x0060 (0x0540 - 0x04E0)
class AFortAthenaMutator_SE_BindEmotes final : public AFortAthenaMutator_SpecialEventBase
{
public:
	TArray<struct FFortSpecialEventEmoteData>     EmoteDataArray;                                    // 0x04E0(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_4F0[0x50];                                     // 0x04F0(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortAthenaMutator_SE_BindEmotes">();
	}
	static class AFortAthenaMutator_SE_BindEmotes* GetDefaultObj()
	{
		return GetDefaultObjImpl<AFortAthenaMutator_SE_BindEmotes>();
	}
};

// Class SpecialEventGameplayRuntime.FortAthenaMutator_SE_BlockDamageToPlayer
// 0x0000 (0x04E0 - 0x04E0)
class AFortAthenaMutator_SE_BlockDamageToPlayer final : public AFortAthenaMutator_SpecialEventBase
{
public:
	void HandlePawnSet(class APlayerState* PlayerState, class APawn* NewPawn, class APawn* OldPawn);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortAthenaMutator_SE_BlockDamageToPlayer">();
	}
	static class AFortAthenaMutator_SE_BlockDamageToPlayer* GetDefaultObj()
	{
		return GetDefaultObjImpl<AFortAthenaMutator_SE_BlockDamageToPlayer>();
	}
};

// Class SpecialEventGameplayRuntime.FortAthenaMutator_SE_BlockEndGamePhase
// 0x0000 (0x04E0 - 0x04E0)
class AFortAthenaMutator_SE_BlockEndGamePhase final : public AFortAthenaMutator_SpecialEventBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortAthenaMutator_SE_BlockEndGamePhase">();
	}
	static class AFortAthenaMutator_SE_BlockEndGamePhase* GetDefaultObj()
	{
		return GetDefaultObjImpl<AFortAthenaMutator_SE_BlockEndGamePhase>();
	}
};

// Class SpecialEventGameplayRuntime.FortAthenaMutator_SE_BlockFullScreenMap
// 0x0000 (0x04E0 - 0x04E0)
class AFortAthenaMutator_SE_BlockFullScreenMap final : public AFortAthenaMutator_SpecialEventBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortAthenaMutator_SE_BlockFullScreenMap">();
	}
	static class AFortAthenaMutator_SE_BlockFullScreenMap* GetDefaultObj()
	{
		return GetDefaultObjImpl<AFortAthenaMutator_SE_BlockFullScreenMap>();
	}
};

// Class SpecialEventGameplayRuntime.FortAthenaMutator_SE_BlockGlider
// 0x0008 (0x04E8 - 0x04E0)
class AFortAthenaMutator_SE_BlockGlider final : public AFortAthenaMutator_SpecialEventBase
{
public:
	bool                                          bStartWithGliderDisabled;                          // 0x04E0(0x0001)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bCancelRedeploy;                                   // 0x04E1(0x0001)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bDisableGlider;                                    // 0x04E2(0x0001)(Net, ZeroConstructor, Config, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_4E3[0x5];                                      // 0x04E3(0x0005)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void CloseGliders();
	void OnRep_bDisableGlider();
	void SetCancelRedploy(const bool bInCancelRedeploy, const class FString& ContextString);
	void SetDisableGlider(const bool bDisable, const class FString& ContextString);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortAthenaMutator_SE_BlockGlider">();
	}
	static class AFortAthenaMutator_SE_BlockGlider* GetDefaultObj()
	{
		return GetDefaultObjImpl<AFortAthenaMutator_SE_BlockGlider>();
	}
};

// Class SpecialEventGameplayRuntime.FortAthenaMutator_SE_BlockHUD
// 0x0020 (0x0500 - 0x04E0)
class AFortAthenaMutator_SE_BlockHUD final : public AFortAthenaMutator_SpecialEventBase
{
public:
	struct FGameplayTagContainer                  HideUITags;                                        // 0x04E0(0x0020)(Edit, Protected, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortAthenaMutator_SE_BlockHUD">();
	}
	static class AFortAthenaMutator_SE_BlockHUD* GetDefaultObj()
	{
		return GetDefaultObjImpl<AFortAthenaMutator_SE_BlockHUD>();
	}
};

// Class SpecialEventGameplayRuntime.FortAthenaMutator_SE_BlockInventory
// 0x0000 (0x04E0 - 0x04E0)
class AFortAthenaMutator_SE_BlockInventory final : public AFortAthenaMutator_SpecialEventBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortAthenaMutator_SE_BlockInventory">();
	}
	static class AFortAthenaMutator_SE_BlockInventory* GetDefaultObj()
	{
		return GetDefaultObjImpl<AFortAthenaMutator_SE_BlockInventory>();
	}
};

// Class SpecialEventGameplayRuntime.FortAthenaMutator_SE_BlockNativeActions
// 0x0020 (0x0500 - 0x04E0)
class AFortAthenaMutator_SE_BlockNativeActions final : public AFortAthenaMutator_SpecialEventBase
{
public:
	struct FGameplayTagContainer                  BlockedNativeActions;                              // 0x04E0(0x0020)(Edit, Net, Config, DisableEditOnInstance, RepNotify, Protected, NativeAccessSpecifierProtected)

public:
	void AddToBlockedNativeActions(const struct FGameplayTagContainer& Actions, const bool bCancelAbilities);
	void ClearBlockedNativeActions();
	void OnRep_BlockedNativeActions(const struct FGameplayTagContainer& OldBlockedNativeActions);
	void RemoveFromBlockedNativeActions(const struct FGameplayTagContainer& Actions);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortAthenaMutator_SE_BlockNativeActions">();
	}
	static class AFortAthenaMutator_SE_BlockNativeActions* GetDefaultObj()
	{
		return GetDefaultObjImpl<AFortAthenaMutator_SE_BlockNativeActions>();
	}
};

// Class SpecialEventGameplayRuntime.FortAthenaMutator_SE_BlockReplayRecording
// 0x0000 (0x04E0 - 0x04E0)
class AFortAthenaMutator_SE_BlockReplayRecording final : public AFortAthenaMutator_SpecialEventBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortAthenaMutator_SE_BlockReplayRecording">();
	}
	static class AFortAthenaMutator_SE_BlockReplayRecording* GetDefaultObj()
	{
		return GetDefaultObjImpl<AFortAthenaMutator_SE_BlockReplayRecording>();
	}
};

// Class SpecialEventGameplayRuntime.FortAthenaMutator_SE_BlockScoring
// 0x0000 (0x04E0 - 0x04E0)
class AFortAthenaMutator_SE_BlockScoring final : public AFortAthenaMutator_SpecialEventBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortAthenaMutator_SE_BlockScoring">();
	}
	static class AFortAthenaMutator_SE_BlockScoring* GetDefaultObj()
	{
		return GetDefaultObjImpl<AFortAthenaMutator_SE_BlockScoring>();
	}
};

// Class SpecialEventGameplayRuntime.FortAthenaMutator_SE_BlockSupplyDrop
// 0x0000 (0x04E0 - 0x04E0)
class AFortAthenaMutator_SE_BlockSupplyDrop final : public AFortAthenaMutator_SpecialEventBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortAthenaMutator_SE_BlockSupplyDrop">();
	}
	static class AFortAthenaMutator_SE_BlockSupplyDrop* GetDefaultObj()
	{
		return GetDefaultObjImpl<AFortAthenaMutator_SE_BlockSupplyDrop>();
	}
};

// Class SpecialEventGameplayRuntime.FortAthenaMutator_SE_BlockTeamIndicators
// 0x0000 (0x04E0 - 0x04E0)
class AFortAthenaMutator_SE_BlockTeamIndicators final : public AFortAthenaMutator_SpecialEventBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortAthenaMutator_SE_BlockTeamIndicators">();
	}
	static class AFortAthenaMutator_SE_BlockTeamIndicators* GetDefaultObj()
	{
		return GetDefaultObjImpl<AFortAthenaMutator_SE_BlockTeamIndicators>();
	}
};

// Class SpecialEventGameplayRuntime.FortAthenaMutator_SE_LockingOnFocalPoint
// 0x0000 (0x04E0 - 0x04E0)
class AFortAthenaMutator_SE_LockingOnFocalPoint final : public AFortAthenaMutator_SpecialEventBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortAthenaMutator_SE_LockingOnFocalPoint">();
	}
	static class AFortAthenaMutator_SE_LockingOnFocalPoint* GetDefaultObj()
	{
		return GetDefaultObjImpl<AFortAthenaMutator_SE_LockingOnFocalPoint>();
	}
};

// Class SpecialEventGameplayRuntime.FortAthenaMutator_SE_SafeZone
// 0x0050 (0x0530 - 0x04E0)
class AFortAthenaMutator_SE_SafeZone final : public AFortAthenaMutator_SpecialEventBase
{
public:
	bool                                          bSetFinalLocationOnFirstActive;                    // 0x04E0(0x0001)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_4E1[0x7];                                      // 0x04E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              FinalLocation;                                     // 0x04E8(0x0010)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         DefaultAircraftOffsetFromMidLine;                  // 0x04F8(0x0004)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         MinDefaultMidlineAngle;                            // 0x04FC(0x0004)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         MaxDefaultMidlineAngle;                            // 0x0500(0x0004)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         PauseSafeZoneIndex;                                // 0x0504(0x0004)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_508[0x28];                                     // 0x0508(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void RestoreSafeZoneIndex(int32 MinSafeZoneIndex);
	void SetSafeZoneFinalLocation(const struct FVector2D& NewFinalLocation, const float InDefaultAircraftOffsetFromMidLine, const float InMinDefaultMidlineAngle, const float InMaxDefaultMidlineAngle);
	void SetSafeZoneIndexToPause(int32 DesiredSafeZoneIndexToPause);
	bool SetSafeZonePaused(const bool bPaused);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortAthenaMutator_SE_SafeZone">();
	}
	static class AFortAthenaMutator_SE_SafeZone* GetDefaultObj()
	{
		return GetDefaultObjImpl<AFortAthenaMutator_SE_SafeZone>();
	}
};

// Class SpecialEventGameplayRuntime.FortAthenaMutator_SE_SkipAircraft
// 0x0000 (0x04E0 - 0x04E0)
class AFortAthenaMutator_SE_SkipAircraft final : public AFortAthenaMutator_SpecialEventBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortAthenaMutator_SE_SkipAircraft">();
	}
	static class AFortAthenaMutator_SE_SkipAircraft* GetDefaultObj()
	{
		return GetDefaultObjImpl<AFortAthenaMutator_SE_SkipAircraft>();
	}
};

// Class SpecialEventGameplayRuntime.FortCheatManager_SpecialEvent
// 0x0000 (0x0040 - 0x0040)
class UFortCheatManager_SpecialEvent final : public UFortCheatManager_Coupled
{
public:
	void AddCSVEvent(const class FString& CSVEventName);
	void AutobalanceTargetScore();
	void ChangeWinCondition(float NewGoalScore);
	void CloseParachutes();
	void PauseWinCondition(bool bLockScores);
	void PlacePlayersInAircraft();
	void ResetMatchTimeToPrevious();
	void ResetSpecialEventAircraft();
	void ResetWinCondition();
	void ResetWinConditionProgressToZero();
	void ResumeWinCondition();
	void SendToNightNight();
	void SetDestroyVehiclesInStorm(bool bDestroyVehiclesInStorm);
	void SetIsSimulatingDamage(bool bIsSimulating);
	void SetLockingOnFocalPoint(bool bInLockingOnFocalPoint);
	void SetMatchTime(int32 NewMatchTime);
	void SetReturnToMainMenuDelay(float MinDelayReturnToMainMenu, float MaxDelayReturnToMainMenu);
	void ShrinkSafeZone();
	void SpecialEventClearAdditionalViewpoint();
	void SpecialEventGameUserSettings_ClearDataForAllPlayers();
	void SpecialEventSetAdditionalViewpoint(float X, float Y, float Z);
	void StartEventScript(const int32 InStartingIndex, const float SequenceTimeOffset);
	void TeleportAllPlayers(int32 SafezoneIndex);
	void ToggleDisableParachutes(bool bIsDisabled);
	void UnloadTerrainMaps(class FName MapTag);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortCheatManager_SpecialEvent">();
	}
	static class UFortCheatManager_SpecialEvent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortCheatManager_SpecialEvent>();
	}
};

// Class SpecialEventGameplayRuntime.FortAthenaMutator_SpecialEvent
// 0x04A0 (0x0970 - 0x04D0)
class AFortAthenaMutator_SpecialEvent final : public AFortAthenaMutator
{
public:
	TMulticastInlineDelegate<void()>              TeleportAllPlayersFinished;                        // 0x04D0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class AFortPlayerPawnAthena* NewPawn)> OnPawnLoaded;                                      // 0x04E0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class AFortPlayerControllerAthena* NewPlayer)> OnInitController;                                  // 0x04F0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnResumeGame;                                      // 0x0500(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const struct FSpecialClientEvent& ClientEventData)> OnSpecialClientEvent;                              // 0x0510(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class APlayerState* PlayerState)> OnHandleLogout;                                    // 0x0520(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnClientInitialLoadingFinished;                    // 0x0530(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_540[0x68];                                     // 0x0540(0x0068)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bPlayersAreInvincible;                             // 0x05A8(0x0001)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_5A9[0x27];                                     // 0x05A9(0x0027)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MinimumScoreBumpForAutomadeGoal;                   // 0x05D0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_5D4[0x4];                                      // 0x05D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<float>                                 ScoreBrackets;                                     // 0x05D8(0x0010)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	bool                                          bEnforceInfiniteSafeZonePhase;                     // 0x05E8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_5E9[0x3];                                      // 0x05E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   WarmupIslandPlayerStartTag;                        // 0x05EC(0x000C)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bAllowInventoryOpen;                               // 0x05F8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_5F9[0x7];                                      // 0x05F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         bAllowFullScreenMap;                               // 0x0600(0x0038)(Edit, Protected, NativeAccessSpecifierProtected)
	bool                                          bShouldClearFrontEndMapMarkers;                    // 0x0638(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bBlockTeamIndicators;                              // 0x0639(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_63A[0x2];                                      // 0x063A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ForceDisplaySquadInfoDuringGamePhases;             // 0x063C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bAllowSquadListLocalPlayerInSplitscreen;           // 0x0640(0x0001)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_641[0x7];                                      // 0x0641(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  UIToHideDuringSpecialEvent;                        // 0x0648(0x0020)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                  UIToHideWhenInInfiniteWarmup;                      // 0x0668(0x0020)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                  ClientEventsThatUnhideHiddenWhileLoadingHUDElements; // 0x0688(0x0020)(Edit, Protected, NativeAccessSpecifierProtected)
	bool                                          bSkipPostGameScreens;                              // 0x06A8(0x0001)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bForceGarbageCollectionAfterUnloadOnServer;        // 0x06A9(0x0001)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bForceGarbageCollectionAfterUnloadOnClient;        // 0x06AA(0x0001)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bFullPurgeGC;                                      // 0x06AB(0x0001)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_6AC[0x4];                                      // 0x06AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortAthenaAircraft*                    EventAircraft;                                     // 0x06B0(0x0008)(Net, ZeroConstructor, RepNotify, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FAircraftFlightInfo                    EventAircraftInfo;                                 // 0x06B8(0x0048)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	TSubclassOf<class AFortAthenaAircraft>        EventAircraftClass;                                // 0x0700(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bDisableHUD;                                       // 0x0708(0x0001)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         GameResumed;                                       // 0x0709(0x0001)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_70A[0x6];                                      // 0x070A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                AdditionalViewpoint;                               // 0x0710(0x0018)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bParachutesDisabled;                               // 0x0728(0x0001)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_729[0x7];                                      // 0x0729(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 LastCSVEventName;                                  // 0x0730(0x0010)(Net, ZeroConstructor, RepNotify, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bCanStreamBuildingFoundationsIn;                   // 0x0740(0x0001)(Edit, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_741[0x3];                                      // 0x0741(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         AllPlayerTeleportedCount;                          // 0x0744(0x0004)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FFortDelayRTMMData                     DelayPlayersFromReturningToLobbyData;              // 0x0748(0x0010)(Net, Transient, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)
	class FName                                   NamedWeightForContainerLootRoll;                   // 0x0758(0x000C)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         WeightForContainerLootRoll;                        // 0x0764(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_768[0x30];                                     // 0x0768(0x0030)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFortSpecialEventEmoteData>     SpecialEventEmoteData;                             // 0x0798(0x0010)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                  BlockedNativeActions;                              // 0x07A8(0x0020)(Edit, Net, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	EFortItemType                                 DesiredQuickbarItemTypeAfterRemove;                // 0x07C8(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_7C9[0x7];                                      // 0x07C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UInputComponent*                        SpecialEventsInputComponent;                       // 0x07D0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bLockingOnFocalPoint;                              // 0x07D8(0x0001)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_7D9[0x7];                                      // 0x07D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFortSpecialEventOverrideParts> SpecialEventOverrideParts;                         // 0x07E0(0x0010)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	struct FFortSpecialEventGEData                GameplayEffectToApplyOnSwapToDefault;              // 0x07F0(0x0010)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	TMap<struct FUniqueNetIdRepl, int32>          OverridePartsArrayIndexMap;                        // 0x0800(0x0050)(Transient, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFortSpecialEventGEData>        GameplayEffectsToApplyOnLogin;                     // 0x0850(0x0010)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TSubclassOf<class UFortControllerComponent_SpecialEvent> ControllerComponentClassOverride;                  // 0x0860(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FSpecialEventMapData>           TerrainMapsToUnload;                               // 0x0868(0x0010)(Edit, Net, ZeroConstructor, DisableEditOnInstance, RepNotify, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_878[0x10];                                     // 0x0878(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AFortPlayerControllerAthena*>    UnhandledPlayerControllers;                        // 0x0888(0x0010)(ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TArray<class FName>                           HLODActorsToHideNames;                             // 0x0898(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	bool                                          bForceAllowCloth;                                  // 0x08A8(0x0001)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_8A9[0x1];                                      // 0x08A9(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bManageBackfill;                                   // 0x08AA(0x0001)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_8AB[0x1];                                      // 0x08AB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         PlayerCountToTriggerBackfill;                      // 0x08AC(0x0004)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bWaitForPlayerCountToTriggerBackfill;              // 0x08B0(0x0001)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_8B1[0x3];                                      // 0x08B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         UpdateBackfillStatusTime;                          // 0x08B4(0x0004)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_8B8[0x10];                                     // 0x08B8(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bServerHasBackfillActive;                          // 0x08C8(0x0001)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bCanToggleCursorModeInStasis;                      // 0x08C9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_8CA[0x6];                                      // 0x08CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         MannequinRecentlyRenderedCheckToleranceValue;      // 0x08D0(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<class ASpecialEventPlayerMannequin*>   SpecialEventMannequins;                            // 0x0908(0x0010)(ZeroConstructor, Transient, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TArray<TSubclassOf<class AActor>>             ActorSpawnDelegateClasses;                         // 0x0918(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	uint8                                         Pad_928[0x48];                                     // 0x0928(0x0048)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void AddClientCSVEvent(const class FString& CSVEventName);
	void AddCSVEvent(const class FString& CSVEventName, bool bShouldRepToClient);
	void AddToBlockedNativeActions(const struct FGameplayTagContainer& Actions, const bool bCancelAbilities);
	void AutobalanceTargetScore();
	void ChangeWinCondition(float NewGoalScore);
	void ClearAdditionalViewpoint();
	void ClearBlockedNativeActions();
	void CloseParachutes();
	void FlushUnhandledPlayerControllers();
	void ForceSafeZoneFinalLocation(const struct FVector& NewFinalLocation, float DefaultAircraftOffsetFromMidLine, float MinDefaultMidlineAngle, float MaxDefaultMidlineAngle);
	void HandleSpecialEventMannequinDestroyed(class AActor* MannequinActor);
	void JumpToSafeZonePhase(const struct FVector& PawnSpawnCenterLocation, float PawnSpawnMinDistance, float PawnSpawnMaxDistance);
	void NetMulticast_CheatClearSpecialEventGameUserSettings();
	void NotifyClientsGameResumed();
	void OnActorPreSpawnInitialization(class AActor* Actor);
	void OnActorSpawned(class AActor* Actor);
	void OnAircraftEnteredDropZone(class AFortAthenaAircraft* FortAthenaAircraft);
	void OnAircraftExitedDropZone(class AFortAthenaAircraft* FortAthenaAircraft);
	void OnAircraftFlightEnded(class AFortAthenaAircraft* FortAthenaAircraft);
	void OnGameViewportActivationChanged(bool bHasFocus);
	void OnRep_AdditionalViewpoint();
	void OnRep_Aircraft();
	void OnRep_AllPlayerTeleportedCount();
	void OnRep_bCanStreamBuildingFoundationsIn();
	void OnRep_bDisableHUD();
	void OnRep_bLockingOnFocalPoint();
	void OnRep_bPlayersAreInvincible();
	void OnRep_DelayPlayersFromReturningToLobbyData();
	void OnRep_GameResumed();
	void OnRep_LastCSVEventName();
	void OnRep_TerrainMapsToUnload();
	void OnWarmUpTeleportComplete(class AFortPlayerPawn* PlayerPawn);
	void PauseStormDamage(bool bPause);
	void PauseStormProgression(bool bPause);
	void PauseSupplyDrops(bool bPause);
	void PauseWinCondition(bool bLockScores);
	void PlacePlayersInAircraft();
	void PopSpecialEventEmoteInputComponent();
	void PushSpecialEventEmoteInputComponent();
	void RemoveFromBlockedNativeActions(const struct FGameplayTagContainer& Actions);
	void ResetMatchTimeToPrevious();
	void ResetSafeZoneOverrideAfterEvent(int32 MinResetSafeZoneIndex, float MinDelayReturnToMainMenu, float MaxDelayReturnToMainMenu);
	void ResetSpecialEventAircraft();
	void ResetWinCondition();
	void ResetWinConditionProgressToZero();
	void ResumeWinCondition();
	void SendToNightNight();
	void SetAdditionalViewpoint(const struct FVector& WorldLocation);
	void SetCanStreamBuildingFoundationsIn(bool bEnable);
	void SetDestroyVehiclesInStorm(bool bDestroyVehiclesInStorm);
	void SetIsSimulatingDamage(bool bIsSimulating);
	void SetLockingOnFocalPoint(bool bInLockingOnFocalPoint);
	void SetMatchTime(int32 NewMatchTime);
	void SetNamedWeightForContainerLootRoll(const class FName WeightName);
	void SetReturnToMainMenuDelay(float MinDelayReturnToMainMenu, float MaxDelayReturnToMainMenu);
	void SetWeightForContainerLootRoll(const float Weight);
	void ShrinkSafeZone();
	void StartSafeZoneOverrideForEvent(int32 SafeZoneIndexForEvent);
	void SwapBodyParts(const int32 ArrayIndex, class AFortPlayerController* FortPC);
	void TeleportAllPlayers(const struct FGameplayTagContainer& EventTags, int32 TeleportsPerFrame, int32 SafeZoneIndex);
	void ToggleAllPlayersInvincibility(bool bInvincible);
	void ToggleDisableParachutes(bool bDisable);
	void ToggleDisableWeapons(bool bDisableWeapons);
	void ToggleHUDs(bool bHide);
	void UnloadTerrainMaps(const struct FGameplayTag& MapTag);
	void UpdateBackfillStatus();
	void WarmUpIslandUpdated();

	bool GetHasInfiniteSafeZonePhase() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortAthenaMutator_SpecialEvent">();
	}
	static class AFortAthenaMutator_SpecialEvent* GetDefaultObj()
	{
		return GetDefaultObjImpl<AFortAthenaMutator_SpecialEvent>();
	}
};

// Class SpecialEventGameplayRuntime.FortCameraMode_SpecialEventFocalPoint
// 0x0000 (0x1E50 - 0x1E50)
class UFortCameraMode_SpecialEventFocalPoint final : public UFortCameraMode_FocalPoint
{
public:
	float                                         OverrideTransitionTime;                            // 0x1E48(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_1E4C[0x4];                                     // 0x1E4C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnBecomeActiveBP(class AActor* ViewTarget);
	void OnBecomeInactiveBP(class AActor* ViewTarget);
	void SetOverrideTransitionTime(const float InTransitionTime);
	void UpdateCameraBP(class AActor* ViewTarget, float DeltaTime, struct FTViewTarget& OutVT);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortCameraMode_SpecialEventFocalPoint">();
	}
	static class UFortCameraMode_SpecialEventFocalPoint* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortCameraMode_SpecialEventFocalPoint>();
	}
};

// Class SpecialEventGameplayRuntime.FortCharacterMovementMutatorComponent
// 0x09D8 (0x0AB0 - 0x00D8)
class UFortCharacterMovementMutatorComponent final : public UActorComponent
{
public:
	class ACharacter*                             CharacterOwner;                                    // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortMovementComp_CharacterAthena*      MovementComponent;                                 // 0x00E0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortMovementComp_CharacterAthena*      CDOMovementComponent;                              // 0x00E8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_F0[0x10];                                      // 0x00F0(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         BuffetBubblesMoveToBoxSpeed;                       // 0x0100(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         BuffetBubblesRelativeVelocityInterpSpeed;          // 0x0138(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         BuffetBubblesLocationInterpSpeed;                  // 0x0170(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         BuffetBubblesRotationInterpSpeed;                  // 0x01A8(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         BuffetBubblesMinRelativeX;                         // 0x01E0(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         BuffetBubblesMaxRelativeX;                         // 0x0218(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         BuffetBubblesMinRelativeY;                         // 0x0250(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         BuffetBubblesMaxRelativeY;                         // 0x0288(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         BuffetBubblesMinRelativeZ;                         // 0x02C0(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         BuffetBubblesMaxRelativeZ;                         // 0x02F8(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FRotator                               BuffetBubblesRotationRate;                         // 0x0330(0x0018)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         BuffetBubblesMaxAcceleration;                      // 0x0348(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         BuffetBubblesMaxRelativeSpeed;                     // 0x0380(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         BuffetBubblesRelativeDeceleration;                 // 0x03B8(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         BuffetBubblesSphereRadius;                         // 0x03F0(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class AActor*                                 BuffetBubblesFollowActor;                          // 0x0428(0x0008)(Net, ZeroConstructor, RepNotify, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                BuffetBubblesInitialFollowBoxOffsetPercent;        // 0x0430(0x0018)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_448[0xE8];                                     // 0x0448(0x00E8)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBuffetBubblesReplicatedData           BuffetBubblesReplicatedData;                       // 0x0530(0x0080)(Net, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_5B0[0x280];                                    // 0x05B0(0x0280)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         BuffetBubblesIntroSpeed;                           // 0x0830(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_868[0x8];                                      // 0x0868(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             BuffetBubblesIntroTargetTransform;                 // 0x0870(0x0060)(Net, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FScalableFloat                         BuffetFlyingMaxPitchDegrees;                       // 0x08D0(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         BuffetFlyingMaxSpeed;                              // 0x0908(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         BuffetFlyingVelocityDirectionInterpSpeed;          // 0x0940(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FRotator                               BuffetFlyingRotationRate;                          // 0x0978(0x0018)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                         BuffetFlyingMaxSpeedOverride;                      // 0x0990(0x0004)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         BuffetFlyingMaxSpeedInterpSpeed;                   // 0x0994(0x0004)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_998[0x4];                                      // 0x0998(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         BuffetFlyingVelocityDirectionInterpSpeedOverride;  // 0x099C(0x0004)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FScalableFloat                         BuffetFlyingRicochetSphereSize;                    // 0x09A0(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         BuffetFlyingRicochetRotationDuration;              // 0x09D8(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         BuffetFlyingRicochetControlRotationInterpSpeed;    // 0x0A10(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_A48[0x48];                                     // 0x0A48(0x0048)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBuffetFlyingRicochetReplicatedData    BuffetFlyingRicochetReplicatedData;                // 0x0A90(0x0020)(Net, RepNotify, NoDestructor, NativeAccessSpecifierPrivate)

public:
	void OnMovementModeChanged(class ACharacter* Character, EMovementMode PreviousMovementMode, uint8 PreviousCustomMode);
	void OnRep_BuffetBubblesFollowActor();
	void OnRep_BuffetFlyingRicochetReplicatedData();
	void OverrideBuffetFlyingMaxSpeed(const float Value, const bool bAsMultiplier, const float InterpSpeed);
	void OverrideBuffetFlyingVelocityDirectionInterpSpeed(const float Value, const bool bAsMultiplier);
	void SetBuffetBubblesFollowActor(class AActor* Actor);
	void SetBuffetBubblesInitialFollowBoxOffsetPercent(const struct FVector& BoxOffsetPercent);
	void SetBuffetBubblesIntroTargetTransform(const struct FTransform& Transform);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortCharacterMovementMutatorComponent">();
	}
	static class UFortCharacterMovementMutatorComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortCharacterMovementMutatorComponent>();
	}
};

// Class SpecialEventGameplayRuntime.FortCharacterMovementMutator
// 0x0008 (0x04D8 - 0x04D0)
class AFortCharacterMovementMutator final : public AFortAthenaMutator
{
public:
	TSubclassOf<class UFortCharacterMovementMutatorComponent> MovementMutatorComponentClass;                     // 0x04D0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void OnFortPawnChanged(class AFortPawn* NewPawn);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortCharacterMovementMutator">();
	}
	static class AFortCharacterMovementMutator* GetDefaultObj()
	{
		return GetDefaultObjImpl<AFortCharacterMovementMutator>();
	}
};

// Class SpecialEventGameplayRuntime.FortControllerComponent_DelayReturnToMainMenu
// 0x0008 (0x00E8 - 0x00E0)
class UFortControllerComponent_DelayReturnToMainMenu final : public UFortControllerComponent
{
public:
	float                                         MinDelay;                                          // 0x00E0(0x0004)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         MaxDelay;                                          // 0x00E4(0x0004)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortControllerComponent_DelayReturnToMainMenu">();
	}
	static class UFortControllerComponent_DelayReturnToMainMenu* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortControllerComponent_DelayReturnToMainMenu>();
	}
};

// Class SpecialEventGameplayRuntime.FortControllerComponent_GameplayCinematic
// 0x0058 (0x0138 - 0x00E0)
class UFortControllerComponent_GameplayCinematic final : public UFortControllerComponent
{
public:
	uint8                                         Pad_E0[0x30];                                      // 0x00E0(0x0030)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class AFortPlayerControllerAthena* PlayerControllerAthena)> BP_OnStartGameplayOutro;                           // 0x0110(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class AFortPlayerControllerAthena* PlayerControllerAthena)> BP_OnGameplayIntroFinished;                        // 0x0120(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                          bIsReadyForGameplay;                               // 0x0130(0x0001)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_131[0x7];                                      // 0x0131(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void HideHUDElementsForLoadingScreen(const bool bHideElements);
	void OnRep_bIsReadyForGameplay();
	void ServerOnGameplayIntroFinished();
	void SetReadyForGameplay(bool bIsReady);
	void ShowCinematicWidget(class FName WidgetName);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortControllerComponent_GameplayCinematic">();
	}
	static class UFortControllerComponent_GameplayCinematic* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortControllerComponent_GameplayCinematic>();
	}
};

// Class SpecialEventGameplayRuntime.FortControllerComponent_SpecialEvent
// 0x0010 (0x00F0 - 0x00E0)
class UFortControllerComponent_SpecialEvent final : public UFortControllerComponent
{
public:
	bool                                          bForceBuildModeInputComponentToNotConsumeInputs;   // 0x00E0(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_E1[0x3];                                       // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TWeakObjectPtr<class AFortAthenaMutator_SpecialEvent> SpecialEventMutator;                               // 0x00E4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void SendSpecialClientEvent(const struct FGameplayTag& EventTag, const int32 Count);
	void ServerHandleSpecialClientEvent(const struct FGameplayTag& EventTag, const int32 Count);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortControllerComponent_SpecialEvent">();
	}
	static class UFortControllerComponent_SpecialEvent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortControllerComponent_SpecialEvent>();
	}
};

// Class SpecialEventGameplayRuntime.FortCustomTickComponent
// 0x0110 (0x01E8 - 0x00D8)
class UFortCustomTickComponent final : public UActorComponent
{
public:
	EFortCustomTickComponentCondition             Condition;                                         // 0x00D8(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_D9[0x3];                                       // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           AuthorityQualitySettingsTag;                       // 0x00DC(0x000C)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                           DefaultClientQualitySettingsTag;                   // 0x00E8(0x000C)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_F4[0x4];                                       // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<ECommonPlatformType, struct FGameplayTag> ClientPlatformQualitySettingsTagMap;               // 0x00F8(0x0050)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TMap<struct FGameplayTag, struct FCustomTickComonentQualitySettings> QualitySettingsMap;                                // 0x0148(0x0050)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	float                                         WasRecentlyRenderedTolerance;                      // 0x0198(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_19C[0x4];                                      // 0x019C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class UFortCustomTickComponent* CustomTickComonent, float DeltaTime)> OnCustomTick;                                      // 0x01A0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_1B0[0x38];                                     // 0x01B0(0x0038)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortCustomTickComponent">();
	}
	static class UFortCustomTickComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortCustomTickComponent>();
	}
};

// Class SpecialEventGameplayRuntime.FortSpecialRelevancyActorSpawner
// 0x0008 (0x0468 - 0x0460)
class AFortSpecialRelevancyActorSpawner final : public AFortActorSpawner
{
public:
	uint8                                         Pad_460[0x8];                                      // 0x0460(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BP_OnActorSpawnedPerRelevancyGroup(const TArray<class AActor*>& InSpawnedActors);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortSpecialRelevancyActorSpawner">();
	}
	static class AFortSpecialRelevancyActorSpawner* GetDefaultObj()
	{
		return GetDefaultObjImpl<AFortSpecialRelevancyActorSpawner>();
	}
};

// Class SpecialEventGameplayRuntime.SpecialEventAudioAnalysisBaseComponent
// 0x0020 (0x00F8 - 0x00D8)
class USpecialEventAudioAnalysisBaseComponent : public UActorComponent
{
public:
	float                                         CurrentTime;                                       // 0x00D8(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ULoudnessNRT*                           LoudnessNRT;                                       // 0x00E0(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOnsetNRT*                              OnsetNRT;                                          // 0x00E8(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UConstantQNRT*                          ConstantQNRT;                                      // 0x00F0(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void UpdateConstantQ(float Time);
	void UpdateLoudness(float Time);
	void UpdateOnset(float Time);
	void UpdateTime(const float NewTime);

	class UConstantQNRT* GetConstantQNRT() const;
	float GetCurrentNormalizedLoudness() const;
	class ULoudnessNRT* GetLoudnessNRT() const;
	class UOnsetNRT* GetOnsetNRT() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SpecialEventAudioAnalysisBaseComponent">();
	}
	static class USpecialEventAudioAnalysisBaseComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<USpecialEventAudioAnalysisBaseComponent>();
	}
};

// Class SpecialEventGameplayRuntime.SpecialEventAudioHapticsComponent
// 0x0028 (0x0120 - 0x00F8)
class USpecialEventAudioHapticsComponent final : public USpecialEventAudioAnalysisBaseComponent
{
public:
	TArray<struct FSpecialEventAudioHapticsAction> HapticsActions;                                    // 0x00F8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          bStartHapticsOnBeginPlay;                          // 0x0108(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_109[0x3];                                      // 0x0109(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         IntensityMultiplier;                               // 0x010C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_110[0x10];                                     // 0x0110(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void StartHaptics();
	void StopHaptics();

	bool AreHapticsActive() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SpecialEventAudioHapticsComponent">();
	}
	static class USpecialEventAudioHapticsComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<USpecialEventAudioHapticsComponent>();
	}
};

// Class SpecialEventGameplayRuntime.SpecialEventCinematicCameraMode
// 0x0000 (0x0078 - 0x0078)
class USpecialEventCinematicCameraMode final : public UFortCinematicCamera
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SpecialEventCinematicCameraMode">();
	}
	static class USpecialEventCinematicCameraMode* GetDefaultObj()
	{
		return GetDefaultObjImpl<USpecialEventCinematicCameraMode>();
	}
};

// Class SpecialEventGameplayRuntime.SpecialEventCursorInstigatorInterface
// 0x0000 (0x0030 - 0x0030)
class ISpecialEventCursorInstigatorInterface final : public IInterface
{
public:
	bool SpecialEventCursorTrace(struct FHitResult* OutHitResult, class USpecialEventCursorPawnComponent* CursorPawnComponent, const struct FGameplayTag& CursorModeTag, const class UCameraComponent* CameraComponent, const struct FVector& CursorWorldDirection);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SpecialEventCursorInstigatorInterface">();
	}
	static class ISpecialEventCursorInstigatorInterface* GetDefaultObj()
	{
		return GetDefaultObjImpl<ISpecialEventCursorInstigatorInterface>();
	}
};

// Class SpecialEventGameplayRuntime.SpecialEventCursorPawnComponent
// 0x0380 (0x0458 - 0x00D8)
class USpecialEventCursorPawnComponent final : public UPawnComponent
{
public:
	uint8                                         Pad_D8[0x8];                                       // 0x00D8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class USpecialEventCursorPawnComponent* CursorPawnComponent, struct FGameplayTag& CursorModeTag, bool bShouldBeVisible)> OnDesiredVisibilityChanged;                        // 0x00E0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                          bAllowOnNonOwningClients;                          // 0x00F0(0x0001)(Edit, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  OwningPawn;                                        // 0x00F8(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AFortPlayerController*                  OwningController;                                  // 0x0100(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_108[0x10];                                     // 0x0108(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class USpecialEventCursorPawnComponent* CursorPawnComponent, struct FGameplayTag& NewCursorModeTag, struct FGameplayTag& OldCursorModeTag)> OnCursorModeChanged;                               // 0x0118(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FGameplayTag                           DefaultCursorModeTag;                              // 0x0128(0x000C)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bDefaultCursorModeAutoActivate;                    // 0x0134(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_135[0x3];                                      // 0x0135(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<struct FGameplayTag, struct FSpecialEventCursorMode> CursorModes;                                       // 0x0138(0x0050)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<struct FSpecialEventCursorStackEntry>  CursorStack;                                       // 0x0188(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)
	struct FSpecialEventCursorStackEntry          ReplicatedCursorStackEntry;                        // 0x0198(0x0014)(Net, RepNotify, NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1AC[0x4];                                      // 0x01AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class USpecialEventInputHelperComponent> InputHelperClass;                                  // 0x01B0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bUseGamepadLookInput;                              // 0x01B8(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bUseGamepadMoveInput;                              // 0x01B9(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bUseGyroInput;                                     // 0x01BA(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bObeyInvertedPitchUserSetting;                     // 0x01BB(0x0001)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_1BC[0x4];                                      // 0x01BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonInputSubsystem*                  CommonInputSubsystem;                              // 0x01C0(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USpecialEventInputHelperComponent*      InputHelperComponent;                              // 0x01C8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1D0[0x40];                                     // 0x01D0(0x0040)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class USpecialEventCursorPawnComponent* CursorPawnComponent, struct FVector2D& NormalizedLocation, struct FVector2D& ViewportLocation)> OnViewportLocationChanged;                         // 0x0210(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScalableFloat                         NonOwningInterpSpeed;                              // 0x0220(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         MinDeltaToSendWorldLocationToServer;               // 0x0258(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_290[0x8];                                      // 0x0290(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                ReplicatedWorldLocation;                           // 0x0298(0x0018)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2B0[0x60];                                     // 0x02B0(0x0060)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UUserWidget*>                    Widgets;                                           // 0x0310(0x0010)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, UObjectWrapper, NativeAccessSpecifierPrivate)
	uint8                                         Pad_320[0x111];                                    // 0x0320(0x0111)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bAdditiveRotationAllowedByDefault;                 // 0x0431(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_432[0x1];                                      // 0x0432(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bZoomAllowedByDefault;                             // 0x0433(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                   ZoomActionName;                                    // 0x0434(0x000C)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_440[0x8];                                      // 0x0440(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UCameraComponent*                       AdditiveOffsetCameraComponent;                     // 0x0448(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_450[0x8];                                      // 0x0450(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class USpecialEventCursorPawnComponent* GetSpecialEventCursorPawnComponent(const class APawn* Pawn, const struct FGameplayTag& CursorModeTag, const bool bMustBeActive);

	bool GetCurrentHitResult(struct FHitResult* OutHitResult);
	void GyroInputUpdate(const struct FVector& InInputVector);
	void InputPressed(const class FName& ActionName, const bool bPressed);
	void LookInputUpdate(const struct FVector& InInputVector);
	void MoveInputUpdate(const struct FVector& InInputVector);
	void OnHUDPostRender(class AHUD* HUD, class UCanvas* Canvas);
	void OnInputMethodChanged(ECommonInputType InputType);
	void OnLocallyControlledCursorVisibilityChanged(class USpecialEventCursorPawnComponent* CursorPawnComponent, const struct FGameplayTag& CursorModeTag, const bool bShouldBeVisible);
	void OnRep_bAllowOnNonOwningClients();
	void OnRep_ReplicatedCursorStackEntry(const struct FSpecialEventCursorStackEntry& OldCursorStackEntry);
	void OnRep_ReplicatedWorldLocation();
	void PopAllCursorsForObject(class UObject* InstigatingObject, const bool bDeactivateIfStackEmpty);
	void PopCursor(const struct FGameplayTag& CursorModeTag, class UObject* InstigatingObject, const bool bDeactivateIfStackEmpty);
	void PushCursor(const struct FGameplayTag& CursorModeTag, class UObject* InstigatingObject, const bool bActivate);
	void ServerOnWorldLocationChanged(const struct FVector& WorldLocation);
	void SetAdditiveRotationAllowed(const bool bInAdditiveRotationAllowed);
	void SetAllowOnNonOwningClients(const bool bAllow);
	void SetZoomAllowed(const bool bInZoomAllowed);

	bool CanBeVisible() const;
	bool ConvertNormalizedToViewportLocation(struct FVector2D* OutViewportLocation, const struct FVector2D& NormalizedLocation) const;
	bool ConvertNormalizedToWorldLocationAndDirection(struct FVector* OutWorldLocation, struct FVector* OutWorldDirection, const struct FVector2D& NormalizedLocation) const;
	bool ConvertViewportToNormalizedLocation(struct FVector2D* OutNormalizedLocation, const struct FVector2D& ViewportLocation) const;
	bool ConvertViewportToWorldLocationAndDirection(struct FVector* OutWorldLocation, struct FVector* OutWorldDirection, const struct FVector2D& ViewportLocation) const;
	bool ConvertWorldToNormalizedLocation(struct FVector2D* OutNormalizedLocation, const struct FVector& WorldLocation) const;
	bool ConvertWorldToViewportLocation(struct FVector2D* OutViewportLocation, const struct FVector& WorldLocation) const;
	class UCameraComponent* GetCameraComponent() const;
	struct FVector2D GetCenteredWidgetLocation(class UUserWidget* Widget, const struct FVector2D& ViewportLocation) const;
	const struct FGameplayTag GetCurrentCursorModeTag() const;
	class UUserWidget* GetCurrentWidget() const;
	struct FGameplayTagContainer GetCursorModeTagsForWidget(const class UUserWidget* Widget) const;
	ECommonInputType GetInputType() const;
	class APlayerController* GetLocalController() const;
	struct FVector2D GetNormalizedLocation() const;
	bool GetViewportCenter(struct FVector2D* OutViewportCenter) const;
	bool GetViewportLocation(struct FVector2D* OutViewportLocation) const;
	bool GetViewportSize(struct FVector2D* OutViewportSize) const;
	bool GetWorldLocationAndDirection(struct FVector* OutWorldLocation, struct FVector* OutWorldDirection) const;
	bool IsAdditiveRotationAllowed() const;
	bool IsLocallyControlled() const;
	bool IsZoomAllowed() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SpecialEventCursorPawnComponent">();
	}
	static class USpecialEventCursorPawnComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<USpecialEventCursorPawnComponent>();
	}
};

// Class SpecialEventGameplayRuntime.SpecialEventCursorWeaponComponent
// 0x00A0 (0x0178 - 0x00D8)
class USpecialEventCursorWeaponComponent final : public UFortWeaponComponent
{
public:
	uint8                                         Pad_D8[0x8];                                       // 0x00D8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class USpecialEventCursorPawnComponent* CursorPawnComponent, class AFortWeapon* Weapon)> OnCursorPawnComponentSet;                          // 0x00E0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TSubclassOf<class USpecialEventCursorPawnComponent> CursorPawnComponentClass;                          // 0x00F0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                           CursorModeTag;                                     // 0x00F8(0x000C)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bAlignFXToCursor;                                  // 0x0104(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_105[0x3];                                      // 0x0105(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortWeapon*                            OwningWeapon;                                      // 0x0108(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AFortPlayerPawn*                        Pawn;                                              // 0x0110(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USpecialEventCursorPawnComponent*       CursorPawnComponent;                               // 0x0118(0x0008)(ExportObject, Net, ZeroConstructor, Transient, InstancedReference, RepNotify, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_120[0x58];                                     // 0x0120(0x0058)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class USpecialEventCursorWeaponComponent* GetCurrentSpecialEventCursorWeaponComponent(const class AFortPlayerPawn* Pawn_0);
	static class USpecialEventCursorPawnComponent* GetSpecialEventCursorPawnComponentForCurrentWeapon(const class AFortPlayerPawn* Pawn_0);
	static class USpecialEventCursorPawnComponent* GetSpecialEventCursorPawnComponentForWeapon(const class AFortWeapon* Weapon);

	void OnBeamFired(class AFortWeapon* Weapon, bool bUsePersistentBeam, class UFXSystemComponent* PSC, const struct FVector& BeamOrigin, const struct FVector& HitLocation);
	void OnEquip(class AFortWeapon* Weapon);
	void OnGetAimRotOverride(const class AFortWeapon* Weapon, const EFortAbilityTargetingSource TargetingSource, struct FRotator* OutOverride, bool* bOutExecutionResult);
	void OnPlayImpactFX(class AFortWeapon* Weapon, const struct FHitResult& HitResult, class UFXSystemComponent* FXSystemComponent);
	void OnRep_CursorPawnComponent();
	void OnUnEquip(class AFortWeapon* Weapon);

	bool GetCurrentHitResult(struct FHitResult* OutHitResult) const;
	class USpecialEventCursorPawnComponent* GetCursorPawnComponent() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SpecialEventCursorWeaponComponent">();
	}
	static class USpecialEventCursorWeaponComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<USpecialEventCursorWeaponComponent>();
	}
};

// Class SpecialEventGameplayRuntime.SpecialEventGameplayGlobals
// 0x0000 (0x0030 - 0x0030)
class USpecialEventGameplayGlobals final : public UObject
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SpecialEventGameplayGlobals">();
	}
	static class USpecialEventGameplayGlobals* GetDefaultObj()
	{
		return GetDefaultObjImpl<USpecialEventGameplayGlobals>();
	}
};

// Class SpecialEventGameplayRuntime.SpecialEventGameplayLibrary
// 0x0000 (0x0030 - 0x0030)
class USpecialEventGameplayLibrary final : public UBlueprintFunctionLibrary
{
public:
	static void AddSpecialEventKillFeedEntry(const class UObject* WorldContextObject, const class AFortPlayerStateAthena* VictimPlayerState, const class AFortPlayerStateAthena* KillerPlayerState, const class FText& NonPlayerVictimName, const class FText& NonPlayerKillerName, const struct FGameplayTag& DeathCauseTag, const EDeathCauseReason DeathCauseReason, const float Distance);
	static void AddSpecialEventRecentElimination(const struct FVector& Location, const class AFortPlayerStateAthena* PlayerState);
	static bool AttachPawnToComponent(class AFortPawn* Pawn, class USceneComponent* Component, const class FName SocketName, const EAttachmentRule LocationRule, const EAttachmentRule RotationRule, const EAttachmentRule ScaleRule, const bool bWeldSimulatedBodies);
	static void CreateSpecialEventPlayerEliminationWorldMarker(const class AFortPlayerControllerAthena* LocalController, const class AFortPlayerStateAthena* VictimPlayerState, const struct FVector& DeathLocation);
	static bool DetachPawn(class AFortPawn* Pawn, const EDetachmentRule LocationRule, const EDetachmentRule RotationRule, const EDetachmentRule ScaleRule);
	static bool DetachPawnFromComponent(class AFortPawn* Pawn, const class USceneComponent* Component, const EDetachmentRule LocationRule, const EDetachmentRule RotationRule, const EDetachmentRule ScaleRule);
	static class UFortControllerComponent_GameplayCinematic* FindGameplayCinematicComponent(class AController* Controller);
	static class UFortControllerComponent_SpecialEvent* FindSpecialEventComponent(class AController* Controller);
	static void ForceDestroyComponents(const TArray<class UActorComponent*>& Components, const bool bPromoteChildren, const class FString& LogContext);
	static void ForceUpdateGrass(class UObject* WorldContextObject, const struct FVector& Location);
	static class FString GetActorNetModeString(const class AActor* Actor);
	static class FString GetActorRoleString(const class AActor* Actor);
	static bool GetHasInfiniteSafeZonePhase(class UObject* WorldContextObject);
	static void GetMutators(const class UObject* WorldContextObject, TArray<class AFortGameplayMutator*>* OutMutators, const bool bFromGameState, const bool bFromGameMode);
	static class AFortAthenaMutator_SpecialEvent* GetSpecialEventMutator(class UObject* WorldContextObject);
	static class FString GetSpecialEventPlayerDisplayName(const class AFortPlayerControllerAthena* LocalController, const class AFortPlayerStateAthena* PlayerState);
	static void HideSkydivingShadowProxy(const class UObject* WorldContextObject);
	static void SetLODOnLandscapProxies(class UObject* WorldContextObject, bool bForced, int32 InLODValue);
	static void SetNextLoadingScreen(class UObject* WorldContextObject, const class UAthenaLoadingScreenItemDefinition* LoadingScreenDefinition, const bool bCanShowLoadingBar);
	static class AFortGameplayMutator* SpawnMutator(const class UObject* WorldContextObject, TSubclassOf<class AFortGameplayMutator> MutatorClass);
	static void StreamOutAllBuildingFoundations(const class UObject* WorldContextObject);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SpecialEventGameplayLibrary">();
	}
	static class USpecialEventGameplayLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<USpecialEventGameplayLibrary>();
	}
};

// Class SpecialEventGameplayRuntime.FortAsyncAction_GameplayCinematicComponentReady
// 0x0018 (0x0050 - 0x0038)
class UFortAsyncAction_GameplayCinematicComponentReady final : public UBlueprintAsyncActionBase
{
public:
	TMulticastInlineDelegate<void(class UFortControllerComponent_GameplayCinematic* FoundComponent)> OnReady;                                           // 0x0038(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_48[0x8];                                       // 0x0048(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UFortAsyncAction_GameplayCinematicComponentReady* FindGameplayCinematicComponentAsync(class AController* Conroller);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortAsyncAction_GameplayCinematicComponentReady">();
	}
	static class UFortAsyncAction_GameplayCinematicComponentReady* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortAsyncAction_GameplayCinematicComponentReady>();
	}
};

// Class SpecialEventGameplayRuntime.SpecialEventGameUserSettingsControllerComponent
// 0x0048 (0x0120 - 0x00D8)
class USpecialEventGameUserSettingsControllerComponent final : public UActorComponent
{
public:
	TMulticastInlineDelegate<void(class USpecialEventGameUserSettingsControllerComponent* GameUserSettingsComponent)> OnLoaded;                                          // 0x00D8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class FString                                 Version;                                           // 0x00E8(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         MinTimeBetweenSaves;                               // 0x00F8(0x0004)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_FC[0x24];                                      // 0x00FC(0x0024)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class USpecialEventGameUserSettingsControllerComponent* GetSpecialEventGameUserSettingsControllerComponent(const class UObject* WorldContextObject);

	void ParseLoadedData(const class FString& Data);
	void SetData(const class FString& Data, const bool bAllowSave, const bool bSaveNow);
	void SetSavingBlocked(const bool bBlocked);
	void SpecialEventGameUserSettings_ClearData();
	void SpecialEventGameUserSettings_SetData(const class FString& Data);
	void SpecialEventGameUserSettings_ToggleDebug();

	void GetData(ESpecialEventGameUserSettingsResult* OutResult, class FString* OutData) const;
	void SpecialEventGameUserSettings_LogData() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SpecialEventGameUserSettingsControllerComponent">();
	}
	static class USpecialEventGameUserSettingsControllerComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<USpecialEventGameUserSettingsControllerComponent>();
	}
};

// Class SpecialEventGameplayRuntime.FortAsyncAction_SpecialEventGameUserSettingsReady
// 0x0018 (0x0050 - 0x0038)
class UFortAsyncAction_SpecialEventGameUserSettingsReady final : public UBlueprintAsyncActionBase
{
public:
	TMulticastInlineDelegate<void(class USpecialEventGameUserSettingsControllerComponent* GameUserSettingsControllerComponent)> OnReady;                                           // 0x0038(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_48[0x8];                                       // 0x0048(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UFortAsyncAction_SpecialEventGameUserSettingsReady* SpecialEventGameUserSettingsReadyAsync(const class UObject* WorldContextObject);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortAsyncAction_SpecialEventGameUserSettingsReady">();
	}
	static class UFortAsyncAction_SpecialEventGameUserSettingsReady* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortAsyncAction_SpecialEventGameUserSettingsReady>();
	}
};

// Class SpecialEventGameplayRuntime.SpecialEventPhase
// 0x00B8 (0x04D8 - 0x0420)
class ASpecialEventPhase final : public AActor
{
public:
	uint8                                         Pad_420[0x18];                                     // 0x0420(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           PhaseTag;                                          // 0x0438(0x000C)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         LevelSequenceTime;                                 // 0x0444(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bApplyGameplayEffects;                             // 0x0448(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_449[0x7];                                      // 0x0449(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSubclassOf<class UGameplayEffect>>    GameplayEffectsToApply;                            // 0x0450(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TArray<struct FSpecialEventPhaseComponentNetModeInfo> ControllerComponentsToApplyInfoList;               // 0x0460(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<struct FSpecialEventPhaseComponentNetModeInfo> PawnComponentsToApplyInfoList;                     // 0x0470(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TSubclassOf<class UCameraModifier>            CameraModifierToApply;                             // 0x0480(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bRemoveModifierOnPhaseDeactivation;                // 0x0488(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bRemoveGameplayEffects;                            // 0x0489(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_48A[0x6];                                      // 0x048A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSubclassOf<class UGameplayEffect>>    GameplayEffectsToRemove;                           // 0x0490(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TArray<struct FSpecialEventPhaseComponentNetModeInfo> ControllerComponentsToRemoveInfoList;              // 0x04A0(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<struct FSpecialEventPhaseComponentNetModeInfo> PawnComponentsToRemoveInfoList;                    // 0x04B0(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class UCameraModifier*                        AppliedCameraModifier;                             // 0x04C0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class ASpecialEventScript>     SpecialEventScript;                                // 0x04C8(0x0008)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	ESpecialEventPhaseState                       PhaseState;                                        // 0x04D0(0x0001)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_4D1[0x7];                                      // 0x04D1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void DebugActivatePhase();
	void OnPhaseActivation_Client();
	void OnPhaseActivation_Server();
	void OnPhaseDeactivation_Client();
	void OnPhaseDeactivation_Server();
	void OnPhaseFinished();
	void OnRep_PhaseState();
	void PrePhaseActivation_Server();
	void SetHUDElementVisibility(const struct FGameplayTagContainer& HUDElementTags, bool bHideElements);

	class AReplicatedLevelSequenceActor* GetLevelSequenceActor() const;
	struct FGameplayTag GetPhaseTag() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SpecialEventPhase">();
	}
	static class ASpecialEventPhase* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASpecialEventPhase>();
	}
};

// Class SpecialEventGameplayRuntime.SpecialEventPlayerMannequin
// 0x00C0 (0x0930 - 0x0870)
class ASpecialEventPlayerMannequin final : public AFortPlayerMannequin
{
public:
	uint8                                         bDisableCollisionOnBeginPlay : 1;                  // 0x0870(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         bDisableComponentsTickOnServer : 1;                // 0x0870(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         bRegisterWithSpecialEventMutatorOnClient : 1;      // 0x0870(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         bDestroyUnusedSkeletalMeshComponentsOnClientFirstInitialization : 1; // 0x0870(0x0001)(BitIndex: 0x03, PropSize: 0x0001 (Edit, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         Pad_871[0x3];                                      // 0x0871(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         PlayerIndex;                                       // 0x0874(0x0004)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FScalableFloat                         bUpdateLoadoutByPlayerIndexAtStartup;              // 0x0878(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         bHideUntilPlayerIndexLoadoutApplied;               // 0x08B0(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFortAthenaLoadout>             DefaultLoadouts;                                   // 0x08E8(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFortAthenaLoadout>             OverrideLoadouts;                                  // 0x08F8(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_908[0x28];                                     // 0x0908(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void DestroyUnusedSkeletalMeshComponents();
	void HandleCurrentPawnChanged();
	void HandleOnMutatorAdded(class AFortGameplayMutator* NewMutator);
	void RegisterWithSpecialEventMutator();
	void SetPlayerIndex(const int32 NewPlayerIndex, const bool bUpdate);
	void UpdateLoadoutByPlayerIndex();

	class FString GetLogString() const;
	int32 GetRelevancyGroupIndex() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SpecialEventPlayerMannequin">();
	}
	static class ASpecialEventPlayerMannequin* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASpecialEventPlayerMannequin>();
	}
};

// Class SpecialEventGameplayRuntime.SpecialEventRewindComponent
// 0x0028 (0x0100 - 0x00D8)
class USpecialEventRewindComponent : public UActorComponent
{
public:
	float                                         MaxRecordingDuration;                              // 0x00D8(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         LocalRecordingFPS;                                 // 0x00DC(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         ReplicatedRecordingFPS;                            // 0x00E0(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bAutoStartRecording;                               // 0x00E4(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_E5[0x3];                                       // 0x00E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RewindLerpTime;                                    // 0x00E8(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         DefaultRewindDuration;                             // 0x00EC(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         DefaultRewindPlaybackSpeed;                        // 0x00F0(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FSpecialEventRewindComponentStateData  StateData;                                         // 0x00F4(0x0008)(Net, RepNotify, NoDestructor, NativeAccessSpecifierPrivate)
	float                                         ReplicatedRewindDuration;                          // 0x00FC(0x0004)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void OnRep_StateData(const struct FSpecialEventRewindComponentStateData& OldStateData);
	bool TryStartRewinding(const float Duration, const float PlaybackSpeed);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SpecialEventRewindComponent">();
	}
	static class USpecialEventRewindComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<USpecialEventRewindComponent>();
	}
};

// Class SpecialEventGameplayRuntime.SpecialEventRewindComponent_PlayerPawn
// 0x02D0 (0x03D0 - 0x0100)
class USpecialEventRewindComponent_PlayerPawn final : public USpecialEventRewindComponent
{
public:
	bool                                          bStartServerRecordingOnLastGroundFrame;            // 0x0100(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_101[0x27];                                     // 0x0101(0x0027)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSpecialEventRewindComponentRecording_PlayerPawn ReplicatedRecording;                               // 0x0128(0x0020)(Net, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                         Pad_148[0x120];                                    // 0x0148(0x0120)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSpecialEventRewindComponentRecordingFastArray_PlayerPawn ReplicatedRecordingFastArray;                      // 0x0268(0x0120)(Net, NativeAccessSpecifierPrivate)
	uint8                                         Pad_388[0x48];                                     // 0x0388(0x0048)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnServerLanded(const struct FHitResult& Hit);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SpecialEventRewindComponent_PlayerPawn">();
	}
	static class USpecialEventRewindComponent_PlayerPawn* GetDefaultObj()
	{
		return GetDefaultObjImpl<USpecialEventRewindComponent_PlayerPawn>();
	}
};

// Class SpecialEventGameplayRuntime.SpecialEventScript
// 0x0350 (0x0778 - 0x0428)
class ASpecialEventScript final : public AInfo
{
public:
	TMulticastInlineDelegate<void(class ASpecialEventScript* SpecialEventScript, class ASpecialEventPhase* SpecialEventPhase)> OnSpecialEventPhaseActivated;                      // 0x0428(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class ASpecialEventScript* SpecialEventScript, class ASpecialEventPhase* SpecialEventPhase)> OnSpecialEventPhaseDeactivated;                    // 0x0438(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<struct FPhaseInfo>                     PhaseInfoArray;                                    // 0x0448(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         DropDeadWindowSizeInSeconds;                       // 0x0458(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         DelayAfterConentLoad;                              // 0x0490(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	bool                                          bWaitForSEMutator;                                 // 0x04C8(0x0001)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_4C9[0x7];                                      // 0x04C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         bWaitForWarmupToEnd;                               // 0x04D0(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         DelayAfterWarmup;                                  // 0x0508(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         ForceReturnToMainMenuTime;                         // 0x0540(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         ForceReturnToMainMenuTimeRandomness;               // 0x0578(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         MinDelayReturnToMainMenu;                          // 0x05B0(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         MaxDelayReturnToMainMenu;                          // 0x05E8(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         bPreloadAllLevelsOnServer;                         // 0x0620(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         bAllowGarbageCollectionAfterUnload;                // 0x0658(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         bFullPurgeGC;                                      // 0x0690(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         bEnableEndOfEventTimer;                            // 0x06C8(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	int32                                         ReplicatedActivePhaseIndex;                        // 0x0700(0x0004)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_704[0x5C];                                     // 0x0704(0x005C)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshNetworkComponent*                  MeshNetworkComponent;                              // 0x0760(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_768[0x10];                                     // 0x0768(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class ASpecialEventScript* Get(const class UObject* WorldContextObject, const bool bErrorIfNull);

	void ActivatePhase(const int32 IndexToActivate, const float SequenceTimeOffset);
	void AttemptFinishPhase(const struct FGameplayTag& PhaseTag);
	void AttemptStartNextPhase(const struct FGameplayTag& CurrentPhaseTag);
	void BP_OnScriptFinished();
	void BP_OnScriptReady();
	void OnRep_ReplicatedActivePhaseIndex();
	void StartEventAtIndex(const int32 InStartingIndex, const float SequenceTimeOffset);

	int32 GetActivePhaseIndex() const;
	int32 GetStartingIndex() const;
	void SetLocalPlayersSignificantForSpecialEventSequence(const bool bIsSignificant) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SpecialEventScript">();
	}
	static class ASpecialEventScript* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASpecialEventScript>();
	}
};

// Class SpecialEventGameplayRuntime.SpecialEventScriptMeshActor
// 0x0030 (0x0458 - 0x0428)
class ASpecialEventScriptMeshActor final : public AInfo
{
public:
	struct FDateTime                              RootStartTime;                                     // 0x0428(0x0008)(Net, ZeroConstructor, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                 CalendarEventName;                                 // 0x0430(0x0010)(Edit, ZeroConstructor, Config, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         CalenderEventOffsetInSeconds;                      // 0x0440(0x0004)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         EncryptionKeyDeliveryTimeOffset;                   // 0x0444(0x0004)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_448[0x8];                                      // 0x0448(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshNetworkComponent*                  MeshNetworkComponent;                              // 0x0450(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void MeshRootClearCalendarTimer();
	void MeshRootLogCalendarTimer();
	void MeshRootResetEvent();
	void MeshRootStartCalendarTimer();
	void MeshRootStartCalendarTimerOnly();
	void MeshRootStartEvent();
	void OnRep_RootStartTime();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SpecialEventScriptMeshActor">();
	}
	static class ASpecialEventScriptMeshActor* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASpecialEventScriptMeshActor>();
	}
};

// Class SpecialEventGameplayRuntime.SpecialEventStatComponent
// 0x0148 (0x0220 - 0x00D8)
class USpecialEventStatComponent final : public UActorComponent
{
public:
	TMulticastInlineDelegate<void(struct FSpecialEventStatArrayEntry& Stat)> OnValueChangedDelegate;                            // 0x00D8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<struct FSpecialEventStatDefinition>    StatDefinitions;                                   // 0x00E8(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FSpecialEventStatArray                 StatFastArray;                                     // 0x00F8(0x0128)(Net, ContainsInstancedReference, NativeAccessSpecifierPrivate)

public:
	static void AdjustSpecialEventStat(class AActor* Actor, const struct FGameplayTag& LookupTag, const float Adjustment);
	static const struct FSpecialEventStatArrayEntry GetSpecialEventStat(bool* bOutValid, const class AActor* Actor, const struct FGameplayTag& LookupTag);

	bool AdjustStat(const struct FGameplayTag& LookupTag, const float Adjustment, const bool bLogError);
	const struct FSpecialEventStatArrayEntry GetStat(bool* bOutValid, const struct FGameplayTag& LookupTag);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SpecialEventStatComponent">();
	}
	static class USpecialEventStatComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<USpecialEventStatComponent>();
	}
};

// Class SpecialEventGameplayRuntime.DamageRecordEntry
// 0x0138 (0x0168 - 0x0030)
class UDamageRecordEntry final : public UObject
{
public:
	uint8                                         Pad_30[0x8];                                       // 0x0030(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DamageTotal;                                       // 0x0038(0x0004)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         EndReplicationTime;                                // 0x003C(0x0004)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                  DamageTags;                                        // 0x0040(0x0020)(Net, NativeAccessSpecifierPublic)
	struct FGameplayEffectContextHandle           EffectContext;                                     // 0x0060(0x0018)(Net, NativeAccessSpecifierPublic)
	struct FGameplayCueParameters                 GameplayCueParams;                                 // 0x0078(0x00E0)(ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                         Pad_158[0x10];                                     // 0x0158(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnRep_DamageTotal();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DamageRecordEntry">();
	}
	static class UDamageRecordEntry* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDamageRecordEntry>();
	}
};

// Class SpecialEventGameplayRuntime.SpecialRelevancyHealthComponent
// 0x0078 (0x0150 - 0x00D8)
class USpecialRelevancyHealthComponent final : public USpecialRelevancyComponentBase
{
public:
	struct FScalableFloat                         RelevancyDeathTimeLength;                          // 0x00D8(0x0038)(Edit, Protected, NativeAccessSpecifierProtected)
	bool                                          bSetLifespanOnLastRelevancyDeath;                  // 0x0110(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_111[0x3];                                      // 0x0111(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         OwnerMaxHealthCached;                              // 0x0114(0x0004)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UDamageRecordEntry*>             ReplicatedDamageRecords;                           // 0x0118(0x0010)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TMulticastInlineDelegate<void(struct FGameplayTagContainer& DamageTags)> OnSpecialRelevancyDeath;                           // 0x0128(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	TMulticastInlineDelegate<void(class AFortPlayerState* InstigatingPlayerState, struct FGameplayEffectContextHandle& EffectContext, struct FGameplayCueParameters& GameplayCueParams, int32 RelevancyGroupIndex, float DealtDamage, struct FGameplayTagContainer& DeathTags, bool bKilled)> OnSpecialRelevancyDamage;                          // 0x0138(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	class AFortAthenaMutator_SpecialRelevancy*    CachedMutator;                                     // 0x0148(0x0008)(ZeroConstructor, Transient, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void OnDamaged(const class AFortPlayerState* DamagingPlayerState, const int32 RelevancyGroupIndex, const float DealtDamage, const float ActualDealtDamage, const float TotalDamage, const float DealtDamagePercent, const float ActualDealtDamagePercent, const float TotalDamagePercent, const float MaxHealth, const bool bKilled);
	void OnKilled(const class AFortPlayerState* KillingPlayerState, const int32 RelevancyGroupIndex);

	float ClientGetHealth() const;
	float ClientGetHealthPercent() const;
	float GetHealth(const class AActor* RelevancyActor) const;
	float GetHealthFromRelevancyIndex(int32 Index_0) const;
	float GetHealthPercent(const class AActor* RelevancyActor) const;
	float GetHealthPercentFromRelevancyIndex(int32 Index_0) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SpecialRelevancyHealthComponent">();
	}
	static class USpecialRelevancyHealthComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<USpecialRelevancyHealthComponent>();
	}
};

}

