#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: VehicleCosmeticsAudioRuntime

#include "Basic.hpp"

#include "VehicleCosmeticsAudioRuntime_classes.hpp"
#include "VehicleCosmeticsAudioRuntime_parameters.hpp"


namespace SDK
{

// Function VehicleCosmeticsAudioRuntime.VehicleCosmeticsAudioController.BP_OnCosmeticsDataUpdated
// (Event, Public, BlueprintEvent)
// Parameters:
// class UVehicleAudioCosmeticData*        CosmeticData                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AVehicleCosmeticsAudioController::BP_OnCosmeticsDataUpdated(const class UVehicleAudioCosmeticData* CosmeticData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VehicleCosmeticsAudioController", "BP_OnCosmeticsDataUpdated");

	Params::VehicleCosmeticsAudioController_BP_OnCosmeticsDataUpdated Parms{};

	Parms.CosmeticData = CosmeticData;

	UObject::ProcessEvent(Func, &Parms);
}


// Function VehicleCosmeticsAudioRuntime.VehicleCosmeticsAudioController.BP_OnCosmeticsFailed
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FVehicleCosmeticsFailureInfo     ReasonInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)

void AVehicleCosmeticsAudioController::BP_OnCosmeticsFailed(const struct FVehicleCosmeticsFailureInfo& ReasonInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VehicleCosmeticsAudioController", "BP_OnCosmeticsFailed");

	Params::VehicleCosmeticsAudioController_BP_OnCosmeticsFailed Parms{};

	Parms.ReasonInfo = std::move(ReasonInfo);

	UObject::ProcessEvent(Func, &Parms);
}


// Function VehicleCosmeticsAudioRuntime.VehicleCosmeticsAudioController.BP_OnEngineAudioDataEjected
// (Event, Public, BlueprintEvent)

void AVehicleCosmeticsAudioController::BP_OnEngineAudioDataEjected()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VehicleCosmeticsAudioController", "BP_OnEngineAudioDataEjected");

	UObject::ProcessEvent(Func, nullptr);
}


// Function VehicleCosmeticsAudioRuntime.VehicleCosmeticsAudioController.BP_OnEngineAudioDataLoaded
// (Event, Public, BlueprintEvent)
// Parameters:
// class USoundBase*                       Sound                                                  (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AVehicleCosmeticsAudioController::BP_OnEngineAudioDataLoaded(const class USoundBase* Sound)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VehicleCosmeticsAudioController", "BP_OnEngineAudioDataLoaded");

	Params::VehicleCosmeticsAudioController_BP_OnEngineAudioDataLoaded Parms{};

	Parms.Sound = Sound;

	UObject::ProcessEvent(Func, &Parms);
}


// Function VehicleCosmeticsAudioRuntime.VehicleCosmeticsAudioController.HandleEngineAudioCosmeticsFailed
// (Final, Native, Public)
// Parameters:
// struct FVehicleCosmeticsFailureInfo     ReasonInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)

void AVehicleCosmeticsAudioController::HandleEngineAudioCosmeticsFailed(const struct FVehicleCosmeticsFailureInfo& ReasonInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VehicleCosmeticsAudioController", "HandleEngineAudioCosmeticsFailed");

	Params::VehicleCosmeticsAudioController_HandleEngineAudioCosmeticsFailed Parms{};

	Parms.ReasonInfo = std::move(ReasonInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function VehicleCosmeticsAudioRuntime.VehicleCosmeticsAudioController.HandleEngineAudioItemUpdated
// (Final, Native, Public)
// Parameters:
// TSoftObjectPtr<class UVehicleCosmeticsItemDefinition_EngineAudio>EngineAudioItem                                        (Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AVehicleCosmeticsAudioController::HandleEngineAudioItemUpdated(TSoftObjectPtr<class UVehicleCosmeticsItemDefinition_EngineAudio> EngineAudioItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VehicleCosmeticsAudioController", "HandleEngineAudioItemUpdated");

	Params::VehicleCosmeticsAudioController_HandleEngineAudioItemUpdated Parms{};

	Parms.EngineAudioItem = EngineAudioItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function VehicleCosmeticsAudioRuntime.VehicleCosmeticsAudioController.UpdateAudioData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UVehicleAudioCosmeticData*        CosmeticData                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AVehicleCosmeticsAudioController::UpdateAudioData(const class UVehicleAudioCosmeticData* CosmeticData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VehicleCosmeticsAudioController", "UpdateAudioData");

	Params::VehicleCosmeticsAudioController_UpdateAudioData Parms{};

	Parms.CosmeticData = CosmeticData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

