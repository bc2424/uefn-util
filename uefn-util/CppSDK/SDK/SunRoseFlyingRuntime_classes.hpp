#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SunRoseFlyingRuntime

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "FlyingCodeRuntime_classes.hpp"
#include "FortniteGame_structs.hpp"
#include "FortniteGame_classes.hpp"
#include "GameplayAbilities_structs.hpp"
#include "SunRoseFlyingRuntime_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "PhysicsCore_structs.hpp"


namespace SDK
{

// Class SunRoseFlyingRuntime.AFortGameplayCueNotifyLoop_SunroseFlying
// 0x0098 (0x0C30 - 0x0B98)
class AAFortGameplayCueNotifyLoop_SunroseFlying final : public AFortGameplayCueNotify_Loop
{
public:
	class FName                                   IsAscendingParamName;                              // 0x0B98(0x000C)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                   IsFlappingParamName;                               // 0x0BA4(0x000C)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                   FlappingAlphaParamName;                            // 0x0BB0(0x000C)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                   IsRollingParamName;                                // 0x0BBC(0x000C)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                   IsBoostingParamName;                               // 0x0BC8(0x000C)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                   IsDivingParamName;                                 // 0x0BD4(0x000C)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                   PitchParamName;                                    // 0x0BE0(0x000C)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                   RollParamName;                                     // 0x0BEC(0x000C)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                   SpeedParamName;                                    // 0x0BF8(0x000C)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                   IsSkimmingParamName;                               // 0x0C04(0x000C)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                   AltitudeInterpParamName;                           // 0x0C10(0x000C)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FFloatRange                            HeightRange;                                       // 0x0C1C(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_C2C[0x4];                                      // 0x0C2C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void SetFlappingParameters(class UFXSystemComponent* FlyingTrailFX, const TArray<class UAudioComponent*>& AudioComponents, const class AFortPlayerPawn* PlayerPawn, const float FlappingAlpha, const float RollCombined, const float RollingAlpha, const float PitchAlpha, const bool bIsBoosting, const bool bIsAscending, const bool bAllowWingFlap, const bool bIsSkimming, const float Speed, const bool bIsDiving, const float CurrentHeight);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AFortGameplayCueNotifyLoop_SunroseFlying">();
	}
	static class AAFortGameplayCueNotifyLoop_SunroseFlying* GetDefaultObj()
	{
		return GetDefaultObjImpl<AAFortGameplayCueNotifyLoop_SunroseFlying>();
	}
};

// Class SunRoseFlyingRuntime.FortGameplayCueNotifyLoop_WingsSkimming
// 0x0028 (0x0BC0 - 0x0B98)
class AFortGameplayCueNotifyLoop_WingsSkimming final : public AFortGameplayCueNotify_Loop
{
public:
	TWeakObjectPtr<class USkeletalMeshComponent>  WingsSkeletalMesh;                                 // 0x0B98(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UFXSystemComponent>      SkimFX;                                            // 0x0BA0(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UAudioComponent>         SkimAudioComponent;                                // 0x0BA8(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class USoundBase>              SkimLoopSound;                                     // 0x0BB0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_BB8[0x8];                                      // 0x0BB8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void ShowWingFX(const struct FVector& SkimLocationLeft, const struct FVector& SkimNormalLeft, float SkimDistanceLeft, const struct FVector& SkimLocationRight, const struct FVector& SkimNormalRight, float SkimDistanceRight);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortGameplayCueNotifyLoop_WingsSkimming">();
	}
	static class AFortGameplayCueNotifyLoop_WingsSkimming* GetDefaultObj()
	{
		return GetDefaultObjImpl<AFortGameplayCueNotifyLoop_WingsSkimming>();
	}
};

// Class SunRoseFlyingRuntime.FortCameraModifier_SunroseWingsFlying
// 0x0350 (0x03F0 - 0x00A0)
class alignas(0x10) UFortCameraModifier_SunroseWingsFlying final : public UFortCameraModifier_Custom
{
public:
	TSubclassOf<class UActorComponent>            NativeFlyingPawnClass;                             // 0x00A0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_A8[0x10];                                      // 0x00A8(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         NativeFlyingSpeedBase;                             // 0x00B8(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_F0[0x8];                                       // 0x00F0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         NativeFlyingSpeedAddedAtMaxDistanceFromCeilingHeight; // 0x00F8(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_130[0x8];                                      // 0x0130(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         NativeFlyingDownZSpeedAddedWhileFalling;           // 0x0138(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_170[0x8];                                      // 0x0170(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         NativeFlyingHeightDecayMin;                        // 0x0178(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_1B0[0x8];                                      // 0x01B0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         NativePreCrashWindupDuration;                      // 0x01B8(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_1F0[0x8];                                      // 0x01F0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         NativeFlyingInputWeightHorizontal;                 // 0x01F8(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_230[0x8];                                      // 0x0230(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         NativeFlyingInputWeightLookDirection;              // 0x0238(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_270[0x4];                                      // 0x0270(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         NativeDeltaFOVForwardOffsetExponent;               // 0x0274(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         NativeFOVModeSwapInterpRate;                       // 0x0278(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         NativeMaxFOVOffset;                                // 0x027C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         NativeRotationRateForMaxRightOffset;               // 0x0280(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         NativeRightOffsetMaxCombinedStrafeTurn;            // 0x0284(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         NativeRightOffsetStrafe;                           // 0x0288(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         NativeRightOffsetTurn;                             // 0x028C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         NativeRightOffsetDodge;                            // 0x0290(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         NativeForwardOffsetDistanceCrashingFinal;          // 0x0294(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         NativeForwardOffsetDistanceForceCrashingPhase1;    // 0x0298(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         NativeForwardOffsetDistanceCrashingPhase1;         // 0x029C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         NativeForwardOffsetDistanceCrashingPhase2;         // 0x02A0(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         NativeForwardOffsetCrashingTimeAfterWindupToEnterFinalPhase; // 0x02A4(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         NativeForwardOffsetInterpSpeedCrashingPhase1;      // 0x02A8(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         NativeForwardOffsetInterpSpeedCrashingPhase2;      // 0x02AC(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         NativeForwardOffsetInterpSpeedCrashingFinal;       // 0x02B0(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                           NativeTagForceCrash;                               // 0x02B4(0x000C)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         NativeFOVInterpSpeed;                              // 0x02C0(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         NativeMinFOVOffsetFast;                            // 0x02C4(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         NativeMinFOVOffsetSlow;                            // 0x02C8(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         NativeMaxFOVOffsetSlow;                            // 0x02CC(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         NativeLateBoostStartTime;                          // 0x02D0(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         NativeTimeSinceLastBoostLateMin;                   // 0x02D4(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         NativeTimeSinceLastBoostLateMax;                   // 0x02D8(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         NativeFOVOffsetLateMin;                            // 0x02DC(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         NativeFOVOffsetLateMax;                            // 0x02E0(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         NativeTimeSinceEarlyBoostLateMin;                  // 0x02E4(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         NativeTimeSinceLastBoostEarlyMax;                  // 0x02E8(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         NativeFOVOffsetEarlyMin;                           // 0x02EC(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         NativeFOVOffsetEarlyMax;                           // 0x02F0(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         NativeFOVOffsetModeMin;                            // 0x02F4(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         NativeCrashingFOVInterpSpeed;                      // 0x02F8(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         NativeFOVOffsetWindup;                             // 0x02FC(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         NativePositiveFlyingMoveActionXFOVInterpSpeed;     // 0x0300(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         NativeNegativeFlyingMoveActionXFOVInterpSpeed;     // 0x0304(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         NativeFlyingMoveActionPositiveMin;                 // 0x0308(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         NativeFlyingMoveActionPositiveMax;                 // 0x030C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         NativeFlyingMoveActionPositiveFOVMin;              // 0x0310(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         NativeFlyingMoveActionPositiveFOVMax;              // 0x0314(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         NativeFlyingMoveActionNegativeMin;                 // 0x0318(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         NativeFlyingMoveActionNegativeMax;                 // 0x031C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         NativeFlyingMoveActionNegativeFOVMin;              // 0x0320(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         NativeFlyingMoveActionNegativeFOVMax;              // 0x0324(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         NativeDefaultFOVInterpSpeed;                       // 0x0328(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         NativePositiveFOVMax;                              // 0x032C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         NativeLocationOffsetForPositiveFOVMax;             // 0x0330(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         NativeNegativeFOVMax;                              // 0x0334(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         NativeLocationOffsetForNegativeFOVMax;             // 0x0338(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         NativeClampedDeltaFOVInterpSpeed;                  // 0x033C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         NativeShortTimeSinceLastBoostStart;                // 0x0340(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         NativeLongTimeSinceLastBoostStart;                 // 0x0344(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         NativeLongOrShortBoostTimeInterpSpeed;             // 0x0348(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         NativeMediumBoostTimeInterpSpeed;                  // 0x034C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         NativeForwardLocationOffsetTargetMax;              // 0x0350(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         NativeForwardLocationOffsetFromDownZVelocityInterpSpeed; // 0x0354(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         NativeDodgeStartDuration;                          // 0x0358(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         NativeStrafeFOVOffsetMin;                          // 0x035C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         NativeStrafeFOVOffsetMax;                          // 0x0360(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         NativeStrafeFOVMultiplierMin;                      // 0x0364(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         NativeStrafeFOVMultiplierMax;                      // 0x0368(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         NativeViewLocationOffsetRightInterpSpeedCrashing;  // 0x036C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         NativeDodgeStartDurationForInterpSpeed;            // 0x0370(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         NativeViewLocationOffsetRightInterpSpeedStartingDodge; // 0x0374(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         NativeViewLocationOffsetRightInterpSpeedMostlyStrafing; // 0x0378(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         NativeViewLocationOffsetRightInterpSpeedMostlyTurning; // 0x037C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bUseNativeCalculation;                             // 0x0380(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_381[0x6F];                                     // 0x0381(0x006F)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	bool UseNativeCalculation() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortCameraModifier_SunroseWingsFlying">();
	}
	static class UFortCameraModifier_SunroseWingsFlying* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortCameraModifier_SunroseWingsFlying>();
	}
};

// Class SunRoseFlyingRuntime.FortContextualTutorialDefinition_WingedFlying
// 0x0038 (0x01F0 - 0x01B8)
class UFortContextualTutorialDefinition_WingedFlying final : public UUFortContextualTutorialDefinition_GameplayEvent
{
public:
	struct FScalableFloat                         MinTimeBeforeCompletion;                           // 0x01B8(0x0038)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortContextualTutorialDefinition_WingedFlying">();
	}
	static class UFortContextualTutorialDefinition_WingedFlying* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortContextualTutorialDefinition_WingedFlying>();
	}
};

// Class SunRoseFlyingRuntime.FortContextualTutorial_WingedFlying
// 0x0010 (0x0180 - 0x0170)
class UFortContextualTutorial_WingedFlying final : public UFortContextualTutorial_GameplayEvent
{
public:
	uint8                                         Pad_170[0x10];                                     // 0x0170(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortContextualTutorial_WingedFlying">();
	}
	static class UFortContextualTutorial_WingedFlying* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortContextualTutorial_WingedFlying>();
	}
};

// Class SunRoseFlyingRuntime.FortMovementMode_WingedFlyingRuntimeData
// 0x0058 (0x00D8 - 0x0080)
class UFortMovementMode_WingedFlyingRuntimeData final : public UFortMovementMode_FlyingRuntimeData
{
public:
	uint8                                         Pad_80[0x2];                                       // 0x0080(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	EWingedFlyingStatus                           FlyingStatus;                                      // 0x0082(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_83[0x1];                                       // 0x0083(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CurrentHeightAboveWorld;                           // 0x0084(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         InterpolatedHeightAboveWorld;                      // 0x0088(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SpeedMultiplierFromForwardInput;                   // 0x008C(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         InterpolatedYInput;                                // 0x0090(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              InterpolatedCrashInput;                            // 0x0098(0x0010)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A8[0x1];                                       // 0x00A8(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bIsStartingFlying;                                 // 0x00A9(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_AA[0x2];                                       // 0x00AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         FlyingEnergy;                                      // 0x00AC(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_B0[0x28];                                      // 0x00B0(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortMovementMode_WingedFlyingRuntimeData">();
	}
	static class UFortMovementMode_WingedFlyingRuntimeData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortMovementMode_WingedFlyingRuntimeData>();
	}
};

// Class SunRoseFlyingRuntime.FortMovementMode_ExtLogicFlyingWinged
// 0x17B8 (0x1908 - 0x0150)
class UFortMovementMode_ExtLogicFlyingWinged final : public UFortMovementMode_ExtLogicFlying
{
public:
	uint8                                         Pad_150[0x10];                                     // 0x0150(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagQuery                      TagQueryToFly;                                     // 0x0160(0x0048)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	bool                                          bUseNativeUpdateForMovement;                       // 0x01A8(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_1A9[0x7];                                      // 0x01A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFlyingStatusConfig>            FlyingStatusConfigs;                               // 0x01B0(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TSubclassOf<class UGameplayEffect>            FlyingThroughCeilingGE;                            // 0x01C0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                           FlyingThroughCeilingTag;                           // 0x01C8(0x000C)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                           EnergyDrainCueTag;                                 // 0x01D4(0x000C)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                           CrashEnabledCueTag;                                // 0x01E0(0x000C)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                           HitBonkCueTag;                                     // 0x01EC(0x000C)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                           EventTagToTriggerWhenMiniBoosting;                 // 0x01F8(0x000C)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                           EventTagToTriggerCrashImpact;                      // 0x0204(0x000C)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                  TagsToPreventLowFrictionLanding;                   // 0x0210(0x0020)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TSubclassOf<class UGameplayEffect>            LowFrictionLandingGE;                              // 0x0230(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                           TagToSetByCallerDuration;                          // 0x0238(0x000C)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_244[0x4];                                      // 0x0244(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         BaseFlyingCost;                                    // 0x0248(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	int32                                         FlyingStatusToStopBaseCost;                        // 0x0280(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_284[0x4];                                      // 0x0284(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         ExtraLeapCrashCost;                                // 0x0288(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         HeightIncreasePer1Cost;                            // 0x02C0(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         DodgeSpeedMin;                                     // 0x02F8(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         DodgeSpeedMax;                                     // 0x0330(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         DodgeSpeedDecayInitialDelay;                       // 0x0368(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         DodgeSpeedRampExponent;                            // 0x03A0(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         DodgeSpeedDecayExponent;                           // 0x03D8(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         DodgeDuration;                                     // 0x0410(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         StartedFlyingTransitionDuration;                   // 0x0448(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         StartedFlyingSpeedBoundForInterpMin;               // 0x0480(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         StartedFlyingSpeedBoundForInterpMax;               // 0x04B8(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         StartedFlyingVelocityInterpSpeedAtMinSpeed;        // 0x04F0(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         StartedFlyingVelocityInterpSpeedAtMaxSpeed;        // 0x0528(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         FlyingLookPitchClampMin;                           // 0x0560(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         FlyingLookPitchClampMax;                           // 0x0598(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         DefaultLookPitchAngleOffset;                       // 0x05D0(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         CrashingLookPitchClampMin;                         // 0x0608(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         CrashingLookPitchClampMax;                         // 0x0640(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         CrashingInputWeightLookDirection;                  // 0x0678(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         FlyingInputWeightLockDirection;                    // 0x06B0(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         FlyingInputWeightHorizontal;                       // 0x06E8(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         PitchInterpSpeedWhileCrashing;                     // 0x0720(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         PitchInterpSpeedAtBaseSpeed;                       // 0x0758(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         PitchInterpSpeedAtMaxLateralSpeed;                 // 0x0790(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         PitchInterpSpeedAtMaxTotalSpeed;                   // 0x07C8(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         YawInterpSpeedWhileCrashing;                       // 0x0800(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         YawInterpSpeedAtMinBrakeSpeed;                     // 0x0838(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         YawInterpSpeedAtBaseSpeed;                         // 0x0870(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         YawInterpSpeedAtMaxLateralSpeed;                   // 0x08A8(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         InputInterpSpeedHorizontal;                        // 0x08E0(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         CrashingMovementInterpSpeed;                       // 0x0918(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         AscendingLookPitchClampMin;                        // 0x0950(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         CeilingHeightIncreaseSpeedWhileAscendingMin;       // 0x0988(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         CeilingHeightIncreaseSpeedWhileAscendingMax;       // 0x09C0(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         MaxCeilingHeightAddLimitFromAscend;                // 0x09F8(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         AscendingSpeedZUpAddedMin;                         // 0x0A30(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         AscendingSpeedZUpAddedMax;                         // 0x0A68(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         MaxCeilingHeightAddLimitFromBoost;                 // 0x0AA0(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         CeilingHeightIncreaseSpeedWhileBoostingMin;        // 0x0AD8(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         CeilingHeightIncreaseSpeedWhileBoostingMax;        // 0x0B10(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         PercentMaxLookPitchForMaxBoostCeilingHeightIncrease; // 0x0B48(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         PreCrashWindUpDuration;                            // 0x0B80(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         CrashingSpeedBase;                                 // 0x0BB8(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         CrashingSpeedAddedAtMaxDistanceFromCeilingHeight;  // 0x0BF0(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         DistanceFromCeilingHeightForMaxCrashingSpeedAdded; // 0x0C28(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         CrashingLookPitchClampFinalMax;                    // 0x0C60(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         CrashingLookPitchClampDelayBeforeLerpToFinalMax;   // 0x0C98(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         CrashingLookPitchClampDurationToLerpToFinalMax;    // 0x0CD0(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         PreCrashingSpeedBase;                              // 0x0D08(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         PreCrashingInterpToSpeedMod;                       // 0x0D40(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         DistanceFromCeilingHeightForCrashMode;             // 0x0D78(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         MinAngleToPreventCrash;                            // 0x0DB0(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         CrashImpactIgnoreWaterDuration;                    // 0x0DE8(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         MaxAngleForLowFrictionLanding;                     // 0x0E20(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         LowFrictionDurationMin;                            // 0x0E58(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         LowFrictionDurationMax;                            // 0x0E90(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         LowFrictionDurationScalar;                         // 0x0EC8(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         SpeedForMinLowFrictionMult;                        // 0x0F00(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         SpeedForMaxLowFrictionMult;                        // 0x0F38(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         LowFrictionMultFromSpeedMin;                       // 0x0F70(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         LowFrictionMultFromSpeedMax;                       // 0x0FA8(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         ImpactAngleForMaxLowFrictionDuration;              // 0x0FE0(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         ImpactAngleForMinLowFrictionDuration;              // 0x1018(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         LowFrictionMultFromImpactAngleMax;                 // 0x1050(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         LowFrictionMultFromImpactAngleMin;                 // 0x1088(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         FlyingSpeedBase;                                   // 0x10C0(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         FlyingSpeedAddedAtMaxDistanceFromCeilingHeight;    // 0x10F8(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         FlyingDownZSpeedAddedWhileFalling;                 // 0x1130(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         DistanceFromCeilingHeightForMaxFlyingSpeedAdded;   // 0x1168(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         AirBrakingDefaultMultiMin;                         // 0x11A0(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         AirBrakingDownSpeedMultiMin;                       // 0x11D8(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         ForwardInputThresholdToTriggerMiniBoost;           // 0x1210(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         PercentMaxCeilingHeightToAddFromDefaultForwardFlyingInput; // 0x1248(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         CeilingHeightIncreaseSpeedWhileHoldingForwardMin;  // 0x1280(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         CeilingHeightIncreaseSpeedWhileHoldingForwardMax;  // 0x12B8(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         CeilingHeightDecreaseSpeedWhileFlyingAsPctDistanceFromMaxHeight; // 0x12F0(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         CeilingHeightMinDecreaseSpeedWhileFlying;          // 0x1328(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         CeilingHeightMinDecreaseSpeedWhileBoosting;        // 0x1360(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         CeilingHeightDecreaseSpeedWhileBoostingAsPctDistanceFromMaxHeight; // 0x1398(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         CeilingHeightMinDecreaseSpeedWhileAscending;       // 0x13D0(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         CeilingHeightDecreaseSpeedWhileAscendingAsPctDistanceFromMaxHeight; // 0x1408(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         HeightAboveWorldInterpSpeedIncreasing;             // 0x1440(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         HeightAboveWorldInterpSpeedDecreasing;             // 0x1478(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         HeightForMinAddedCeilingDecay;                     // 0x14B0(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         HeightForMaxAddedCeilingDecay;                     // 0x14E8(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         MaxAddedCeilingDecayFromHeight;                    // 0x1520(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         EnergyThresholdForAddedCeilingDecay;               // 0x1558(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         MaxAddedCeilingDecayFromEnergy;                    // 0x1590(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         GlobalCeilingHeightMax;                            // 0x15C8(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         GlobalCeilingHeightDiminishingReturnsExponent;     // 0x1600(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         GlobalCeilingHeightDiminishingReturnsRange;        // 0x1638(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         SkimmingMinRequiredAngleToSurface;                 // 0x1670(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         SkimmingMinRequiredVelocityAlongSurface;           // 0x16A8(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         SkimmingMinRequiredHeightAboveWorld;               // 0x16E0(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         MaxAngleForGroundHit;                              // 0x1718(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         VelocityClampOnBonk;                               // 0x1750(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_1788[0x180];                                   // 0x1788(0x0180)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BlueprintUpdateForMovement(class UFortMovementMode_WingedFlyingRuntimeData* MoveStatus, const float DeltaTime, const struct FVector& InVelocity, const struct FVector& InAcceleration, struct FVector* OutNewVelocity, struct FVector* OutNewAcceleration);
	void HandleFlyingStatusActivationFailed(EWingedFlyingStatus FailedStatus, const struct FGameplayTag& FailureTag);
	void HandleFlyingStatusChanged(const class UFortMovementMode_WingedFlyingRuntimeData* MoveStatus, EWingedFlyingStatus NewStatus, const bool bIsActive, const struct FGameplayTag& FailureTag);

	void CanContinueFlyingStatus(const class UFortMovementMode_WingedFlyingRuntimeData* MoveStatus, EWingedFlyingStatus StatusToContinue, const float ElapsedDuration, bool* bOutCanContinue, struct FGameplayTag* OutFailureTag) const;
	bool CanEndFlyingStatus(const class UFortMovementMode_WingedFlyingRuntimeData* MoveStatus, EWingedFlyingStatus StatusToEnd, float ElapsedDuration) const;
	void CanStartFlyingStatus(const class UFortMovementMode_WingedFlyingRuntimeData* MoveStatus, EWingedFlyingStatus StatusToStart, bool* bOutCanStart, struct FGameplayTag* OutFailureTag) const;
	bool IsClientReplaying() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortMovementMode_ExtLogicFlyingWinged">();
	}
	static class UFortMovementMode_ExtLogicFlyingWinged* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortMovementMode_ExtLogicFlyingWinged>();
	}
};

// Class SunRoseFlyingRuntime.FortPawnComponent_WingedFlying
// 0x01A8 (0x0288 - 0x00E0)
class UFortPawnComponent_WingedFlying final : public UFortPawnComponent
{
public:
	EWingedFlyingStatus                           FlyingStatus;                                      // 0x00E0(0x0001)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E1[0x3];                                       // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ForwardSpeed;                                      // 0x00E4(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AddedDownZVelocity;                                // 0x00E8(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         NativeCurrentHeightAboveWorld;                     // 0x00EC(0x0004)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CurrentFlyingEnergy;                               // 0x00F0(0x0004)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIntendsToBoost;                                   // 0x00F4(0x0001)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIntendsToAscend;                                  // 0x00F5(0x0001)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIntendsToCrash;                                   // 0x00F6(0x0001)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIntendsToRollLeft;                                // 0x00F7(0x0001)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIntendsToRollRight;                               // 0x00F8(0x0001)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UFortMovementMode_ExtLogicFlyingWinged> FlyingMovementModeExtension;                       // 0x0100(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                  TagsToEnableSkimmingCheck;                         // 0x0108(0x0020)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	ECollisionChannel                             SkimCheckTraceChannel;                             // 0x0128(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_129[0x3];                                      // 0x0129(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   SkimCheckLeftStartSocket;                          // 0x012C(0x000C)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                   SkimCheckLeftEndSocket;                            // 0x0138(0x000C)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                   SkimCheckRightStartSocket;                         // 0x0144(0x000C)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                   SkimCheckRightEndSocket;                           // 0x0150(0x000C)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                           TagToEnableHeightCheck;                            // 0x015C(0x000C)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FScalableFloat                         HeightCheckInterval;                               // 0x0168(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         HeightCheckTraceLength;                            // 0x01A0(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_1D8[0xB0];                                     // 0x01D8(0x00B0)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void EndFlying();
	void HandleAddedDownZVelocityUpdated(const float NewAddedDownZVelocity);
	void HandleFlyingMoveStatusUpdated(const class UFortMovementMode_WingedFlyingRuntimeData* MoveStatus);
	void HandleForwardSpeedUpdated(const float NewForwardSpeed);
	void HandleLeftSkimCheckComplete(const struct FHitResult& HitResult);
	void HandleOwnerASCInitialized(class UFortAbilitySystemComponent* AbilitySystemComponent, class AFortPlayerPawn* AffectedPawn);
	void HandleRightSkimCheckComplete(const struct FHitResult& HitResult);
	void StartCustomFlying(const TSubclassOf<class UFortMovementMode_ExtLogicFlying> FlyingMMEToStart, const struct FFortMovementMode_WingedFlyingCreationData& CreationData);
	void StartFlying(const struct FFortMovementMode_WingedFlyingCreationData& CreationData);
	void UpdateCurrentFlyingEnergy(const float NewFlyingEnergy, const bool bForceUpdateFX);

	struct FVector2D GetLocalFlyingMoveActionValue() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortPawnComponent_WingedFlying">();
	}
	static class UFortPawnComponent_WingedFlying* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortPawnComponent_WingedFlying>();
	}
};

// Class SunRoseFlyingRuntime.FortWeaponWings
// 0x0188 (0x1A48 - 0x18C0)
class AFortWeaponWings final : public AFortWeapon
{
public:
	uint8                                         Pad_18C0[0x30];                                    // 0x18C0(0x0030)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               WingsMaterialInstance;                             // 0x18F0(0x0008)(ZeroConstructor, Transient, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                           IsFlyingGameplayTag;                               // 0x18F8(0x000C)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                   IsFallingAudioParamName;                           // 0x1904(0x000C)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                   FeatherDissolveName;                               // 0x1910(0x000C)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                   ReplenishAnimationName;                            // 0x191C(0x000C)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USoundBase*                             OutOfEnergy2DSound;                                // 0x1928(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                  OwnedGameplayTags;                                 // 0x1930(0x0020)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class UFortAbilitySystemComponent*            AbilitySystemComponent;                            // 0x1950(0x0008)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortHealthSet*                         HealthSet;                                         // 0x1958(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EPhysicalSurface                              PrimarySurfaceType;                                // 0x1960(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EFortBaseWeaponDamage                         WeaponResponseType;                                // 0x1961(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_1962[0x6];                                     // 0x1962(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UGameplayEffect>            DamageGameplayEffectClass;                         // 0x1968(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                           SetByCallerDamageTag;                              // 0x1970(0x000C)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_197C[0x4];                                     // 0x197C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  TagsToPreventReload;                               // 0x1980(0x0020)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         ServerMeshRelativeRotationRoll;                    // 0x19A0(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         ServerMeshRelativeLocationY;                       // 0x19D8(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         ServerMeshRelativeLocationZ;                       // 0x1A10(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)

public:
	void BP_ModifyIncomingDamage(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FHitResult& DamageHit, const class AController* EventInstigator, const class AActor* DamageCauser, float* OutNewDamage);
	void HandleDBNOStateChanged(class AFortPawn* FortPawn, bool bInIsDBNO);
	void HandleSecondaryFirePressed(class AFortWeapon* Weapon);
	void HandleWeaponAttachmentChanged(class AFortWeapon* NewWeapon, class AFortWeapon* PrevWeapon);
	void NativeUpdateEnergyFX(const bool bForceUpdate);
	void TryResetADSInput(class AFortWeapon* Weapon);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortWeaponWings">();
	}
	static class AFortWeaponWings* GetDefaultObj()
	{
		return GetDefaultObjImpl<AFortWeaponWings>();
	}
};

// Class SunRoseFlyingRuntime.FortWingedFlyingBlueprintLibrary
// 0x0000 (0x0030 - 0x0030)
class UFortWingedFlyingBlueprintLibrary final : public UBlueprintFunctionLibrary
{
public:
	static void ClearInputActionDisplayContext(class AFortPawn* PlayerPawn, const class UFortInputMappingContext* InputMappingContext);
	static void FlyingStatusAddFlags(EWingedFlyingStatus Status, int32 FlagsToAdd, EWingedFlyingStatus* NewStatus);
	static bool FlyingStatusHasAllFlags(EWingedFlyingStatus Status, int32 Flags_0);
	static bool FlyingStatusHasAnyFlags(EWingedFlyingStatus Status, int32 Flags_0);
	static void FlyingStatusRemoveFlags(EWingedFlyingStatus Status, int32 FlagsToRemove, EWingedFlyingStatus* NewStatus);
	static float GetDodgeElapsedTime(const class UFortMovementMode_WingedFlyingRuntimeData* MoveStatus);
	static float GetFlyingDuration(const class UFortMovementMode_WingedFlyingRuntimeData* MoveStatus);
	static float GetFlyingStatusElapsedTime(const EWingedFlyingStatus FlyingStatus, const class UFortMovementMode_WingedFlyingRuntimeData* MoveStatus);
	static void SetInputActionDisplayContext(class AFortPawn* PlayerPawn, const class UFortInputMappingContext* InputMappingContext);
	static void TraceForWorldAndWater(const class AActor* PlayerPawn, const struct FVector& TraceStart, const struct FVector& TraceEnd, bool* bIsBlockingHit, struct FHitResult* ClosestHit);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortWingedFlyingBlueprintLibrary">();
	}
	static class UFortWingedFlyingBlueprintLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortWingedFlyingBlueprintLibrary>();
	}
};

// Class SunRoseFlyingRuntime.SunRoseFlying_PlayerAnimInstance
// 0x00A0 (0x1540 - 0x14A0)
class USunRoseFlying_PlayerAnimInstance final : public UFortPlayerAnimInstanceProxy
{
public:
	struct FGameplayTag                           AscenderTag;                                       // 0x1498(0x000C)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           GrindRailsTag;                                     // 0x14A4(0x000C)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           WingedFlightTag;                                   // 0x14B0(0x000C)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           WingsForceCrashTag;                                // 0x14BC(0x000C)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           WingsLeapingTag;                                   // 0x14C8(0x000C)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CurrentHeightAboveWorld;                           // 0x14D4(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Fuel;                                              // 0x14D8(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         GlidePitch;                                        // 0x14DC(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         GlidePitchAlpha;                                   // 0x14E0(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         GlidePitchInterp;                                  // 0x14E4(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         GlidePitchTarget;                                  // 0x14E8(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         GlideRoll;                                         // 0x14EC(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         GlideRollCombined;                                 // 0x14F0(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         GlideRollCombinedTarget;                           // 0x14F4(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         GlideRollInterp;                                   // 0x14F8(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         GroundBlendTime;                                   // 0x14FC(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Pelvis;                                            // 0x1500(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PitchAlpha;                                        // 0x1504(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RollAlpha;                                         // 0x1508(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SlowDownOrLandAlpha;                               // 0x150C(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SlowDownOrLandTarget;                              // 0x1510(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SlowSpeedAlpha;                                    // 0x1514(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         YawAlpha;                                          // 0x1518(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         YawBlend;                                          // 0x151C(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         RandomInteger;                                     // 0x1520(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bIsAllowWingFlap : 1;                              // 0x1524(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bIsAscending : 1;                                  // 0x1524(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bIsBoostStartEnd : 1;                              // 0x1524(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bIsDodgeLeft : 1;                                  // 0x1524(0x0001)(BitIndex: 0x03, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bIsDodgeRight : 1;                                 // 0x1524(0x0001)(BitIndex: 0x04, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bIsExtBoostEarly : 1;                              // 0x1524(0x0001)(BitIndex: 0x05, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bIsFlyingStart : 1;                                // 0x1524(0x0001)(BitIndex: 0x06, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bIsForceDive : 1;                                  // 0x1524(0x0001)(BitIndex: 0x07, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bIsLeapInterruptible : 1;                          // 0x1525(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bIsHighWithNoFuel : 1;                             // 0x1525(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bIsOnAscender : 1;                                 // 0x1525(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bIsOnGrindRail : 1;                                // 0x1525(0x0001)(BitIndex: 0x03, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bIsPlayDiveHitToIdle : 1;                          // 0x1525(0x0001)(BitIndex: 0x04, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bIsPlayLandAdditive : 1;                           // 0x1525(0x0001)(BitIndex: 0x05, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bIsWingLeaping : 1;                                // 0x1525(0x0001)(BitIndex: 0x06, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bIsWingReplenish : 1;                              // 0x1525(0x0001)(BitIndex: 0x07, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bIsWingsBoosting : 1;                              // 0x1526(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bIsWingsCrashing : 1;                              // 0x1526(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bIsWingsFlying : 1;                                // 0x1526(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bIsDiveStart : 1;                                  // 0x1526(0x0001)(BitIndex: 0x03, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bToBoosting : 1;                                   // 0x1526(0x0001)(BitIndex: 0x04, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_1527[0x19];                                    // 0x1527(0x0019)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SunRoseFlying_PlayerAnimInstance">();
	}
	static class USunRoseFlying_PlayerAnimInstance* GetDefaultObj()
	{
		return GetDefaultObjImpl<USunRoseFlying_PlayerAnimInstance>();
	}
};

// Class SunRoseFlyingRuntime.SunRoseFlying_WingsAnimInstance
// 0x0060 (0x07F0 - 0x0790)
class USunRoseFlying_WingsAnimInstance final : public UFortItemLayerAnimInstance
{
public:
	struct FRotator                               PlayerPawnRotationRate;                            // 0x0790(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                         PlayerCurrentHeightAboveWorld;                     // 0x07A8(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PlayerFuel;                                        // 0x07AC(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PlayerGlidePitch;                                  // 0x07B0(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PlayerGlidePitchAlpha;                             // 0x07B4(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PlayerGlideRoll;                                   // 0x07B8(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PlayerGroundBlendTime;                             // 0x07BC(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PlayerGlideRollCombined;                           // 0x07C0(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PlayerRollAlpha;                                   // 0x07C4(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PlayerSlowDownOrLandAlpha;                         // 0x07C8(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PlayerSpeed2D;                                     // 0x07CC(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         WingFlapAlpha;                                     // 0x07D0(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         WingSlowDownOrLandAlpha;                           // 0x07D4(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         WingSlowDownOrLandAlphaTarget;                     // 0x07D8(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         PlayerRandomInteger;                               // 0x07DC(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bIsConduitToMoving : 1;                            // 0x07E0(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bIsCrouchIdleToCrouchMoving : 1;                   // 0x07E0(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bIsCrouchMovingToCrouchIdle : 1;                   // 0x07E0(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bIsFallLoopToJumpLand : 1;                         // 0x07E0(0x0001)(BitIndex: 0x03, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bIsFlyingStart : 1;                                // 0x07E0(0x0001)(BitIndex: 0x04, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bIsNotCrouchIdle : 1;                              // 0x07E0(0x0001)(BitIndex: 0x05, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bIsNotCrouchMoving : 1;                            // 0x07E0(0x0001)(BitIndex: 0x06, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bIsNotMoving : 1;                                  // 0x07E0(0x0001)(BitIndex: 0x07, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bIsNotOnZipline : 1;                               // 0x07E1(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bIsOnZipline : 1;                                  // 0x07E1(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bIsOutOfGas : 1;                                   // 0x07E1(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bIsProceduralDeactivated : 1;                      // 0x07E1(0x0001)(BitIndex: 0x03, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bIsRandomFlap : 1;                                 // 0x07E1(0x0001)(BitIndex: 0x04, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bIsTacticalJumpLoopEnd : 1;                        // 0x07E1(0x0001)(BitIndex: 0x05, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bIsToBoostEnd : 1;                                 // 0x07E1(0x0001)(BitIndex: 0x06, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bIsToBoostStart : 1;                               // 0x07E1(0x0001)(BitIndex: 0x07, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bIsToSliding : 1;                                  // 0x07E2(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bLOD2Fix : 1;                                      // 0x07E2(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bPlayerIsAccelerating2D : 1;                       // 0x07E2(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bPlayerIsAllowWingFlap : 1;                        // 0x07E2(0x0001)(BitIndex: 0x03, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bPlayerIsAscending : 1;                            // 0x07E2(0x0001)(BitIndex: 0x04, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bPlayerIsBoostStartEnd : 1;                        // 0x07E2(0x0001)(BitIndex: 0x05, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bPlayerIsCrouching : 1;                            // 0x07E2(0x0001)(BitIndex: 0x06, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bPlayerIsCrouchMoving : 1;                         // 0x07E2(0x0001)(BitIndex: 0x07, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bPlayerIsDodgeLeft : 1;                            // 0x07E3(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bPlayerIsDodgeRight : 1;                           // 0x07E3(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bPlayerIsFalling : 1;                              // 0x07E3(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bPlayerIsJumping : 1;                              // 0x07E3(0x0001)(BitIndex: 0x03, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bPlayerIsForceDive : 1;                            // 0x07E3(0x0001)(BitIndex: 0x04, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bPlayerIsOnAscender : 1;                           // 0x07E3(0x0001)(BitIndex: 0x05, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bPlayerIsOnGrindRail : 1;                          // 0x07E3(0x0001)(BitIndex: 0x06, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bPlayerIsLeapInterruptible : 1;                    // 0x07E3(0x0001)(BitIndex: 0x07, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bPlayerIsPlayDiveHitToIdle : 1;                    // 0x07E4(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bPlayerIsPlayLandAdditive : 1;                     // 0x07E4(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bPlayerIsSliding : 1;                              // 0x07E4(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bPlayerIsSurfaceSwimming : 1;                      // 0x07E4(0x0001)(BitIndex: 0x03, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bPlayerIsTacticalJump : 1;                         // 0x07E4(0x0001)(BitIndex: 0x04, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bPlayerIsTacticalSprint : 1;                       // 0x07E4(0x0001)(BitIndex: 0x05, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bPlayerIsWingReplenish : 1;                        // 0x07E4(0x0001)(BitIndex: 0x06, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bPlayerIsWingLeaping : 1;                          // 0x07E4(0x0001)(BitIndex: 0x07, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bPlayerIsWingsBoosting : 1;                        // 0x07E5(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bPlayerIsWingsCrashing : 1;                        // 0x07E5(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bPlayerIsWingsFlying : 1;                          // 0x07E5(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bPlayerIsZiplining : 1;                            // 0x07E5(0x0001)(BitIndex: 0x03, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bTacticalJumpLoopToTacticalLand : 1;               // 0x07E5(0x0001)(BitIndex: 0x04, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bToJumpStart : 1;                                  // 0x07E5(0x0001)(BitIndex: 0x05, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_7E6[0xA];                                      // 0x07E6(0x000A)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SunRoseFlying_WingsAnimInstance">();
	}
	static class USunRoseFlying_WingsAnimInstance* GetDefaultObj()
	{
		return GetDefaultObjImpl<USunRoseFlying_WingsAnimInstance>();
	}
};

// Class SunRoseFlyingRuntime.FortGameplayAbility_SunroseWingsCrashBase
// 0x0080 (0x0C48 - 0x0BC8)
class UFortGameplayAbility_SunroseWingsCrashBase final : public UFortGameplayAbility
{
public:
	float                                         TelegraphUpdateIntervalSeconds;                    // 0x0BC8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_BCC[0x4];                                      // 0x0BCC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      TelegraphCollisionObjectTypes;                     // 0x0BD0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                         TelegraphInterpSpeed;                              // 0x0BE0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_BE4[0x2C];                                     // 0x0BE4(0x002C)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CrashWindupDuration;                               // 0x0C10(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CrashLookPitchMin;                                 // 0x0C14(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CrashLookPitchMax;                                 // 0x0C18(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TelegraphTraceStartDist;                           // 0x0C1C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TelegraphTraceEndDist;                             // 0x0C20(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C24[0x4];                                      // 0x0C24(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class AActor>                     TelegraphActorClass;                               // 0x0C28(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 TelegraphActor;                                    // 0x0C30(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFXSystemAsset*                         TelegraphFXSystemAsset;                            // 0x0C38(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFXSystemComponent*                     TelegraphNS;                                       // 0x0C40(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void BeginTelegraph();
	void EndTelegraph();
	void UpdateTelegraph();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortGameplayAbility_SunroseWingsCrashBase">();
	}
	static class UFortGameplayAbility_SunroseWingsCrashBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortGameplayAbility_SunroseWingsCrashBase>();
	}
};

}

