#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BlueprintEditorLibrary

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// Class BlueprintEditorLibrary.BlueprintEditorLibrary
// 0x0000 (0x0030 - 0x0030)
class UBlueprintEditorLibrary final : public UBlueprintFunctionLibrary
{
public:
	static class UEdGraph* AddFunctionGraph(class UBlueprint* Blueprint, const class FString& FuncName);
	static void CompileBlueprint(class UBlueprint* Blueprint);
	static class UBlueprint* CreateBlueprintAssetWithParent(const class FString& AssetPath, class UClass* ParentClass);
	static class UEdGraph* FindEventGraph(class UBlueprint* Blueprint);
	static class UEdGraph* FindGraph(class UBlueprint* Blueprint, class FName GraphName);
	static class UClass* GeneratedClass(class UBlueprint* BlueprintObj);
	static class UBlueprint* GetBlueprintAsset(class UObject* Object);
	static void RefreshAllOpenBlueprintEditors();
	static void RefreshOpenEditorsForBlueprint(const class UBlueprint* BP);
	static void RemoveFunctionGraph(class UBlueprint* Blueprint, class FName FuncName);
	static void RemoveGraph(class UBlueprint* Blueprint, class UEdGraph* Graph);
	static void RemoveUnusedNodes(class UBlueprint* Blueprint);
	static int32 RemoveUnusedVariables(class UBlueprint* Blueprint);
	static void RenameGraph(class UEdGraph* Graph, const class FString& NewNameStr);
	static void ReparentBlueprint(class UBlueprint* Blueprint, class UClass* NewParentClass);
	static void ReplaceVariableReferences(class UBlueprint* Blueprint, const class FName OldVarName, const class FName NewVarName);
	static void SetBlueprintVariableExposeOnSpawn(class UBlueprint* Blueprint, const class FName& VariableName, bool bExposeOnSpawn);
	static void SetBlueprintVariableExposeToCinematics(class UBlueprint* Blueprint, const class FName& VariableName, bool bExposeToCinematics);
	static void SetBlueprintVariableInstanceEditable(class UBlueprint* Blueprint, const class FName& VariableName, bool bInstanceEditable);
	static void UpgradeOperatorNodes(class UBlueprint* Blueprint);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BlueprintEditorLibrary">();
	}
	static class UBlueprintEditorLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBlueprintEditorLibrary>();
	}
};

}

