#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ControlRigEditor

#include "Basic.hpp"

#include "ControlRigEditor_classes.hpp"
#include "ControlRigEditor_parameters.hpp"


namespace SDK
{

// Function ControlRigEditor.ControlRigBlueprintEditorLibrary.CastToControlRigBlueprint
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          Object                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECastToControlRigBlueprintCases         Branches                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UControlRigBlueprint*             AsControlRigBlueprint                                  (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UControlRigBlueprintEditorLibrary::CastToControlRigBlueprint(class UObject* Object, ECastToControlRigBlueprintCases* Branches, class UControlRigBlueprint** AsControlRigBlueprint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ControlRigBlueprintEditorLibrary", "CastToControlRigBlueprint");

	Params::ControlRigBlueprintEditorLibrary_CastToControlRigBlueprint Parms{};

	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Branches != nullptr)
		*Branches = Parms.Branches;

	if (AsControlRigBlueprint != nullptr)
		*AsControlRigBlueprint = Parms.AsControlRigBlueprint;
}


// Function ControlRigEditor.ControlRigBlueprintEditorLibrary.GetAvailableRigModules
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<struct FRigModuleDescription>    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FRigModuleDescription> UControlRigBlueprintEditorLibrary::GetAvailableRigModules()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ControlRigBlueprintEditorLibrary", "GetAvailableRigModules");

	Params::ControlRigBlueprintEditorLibrary_GetAvailableRigModules Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ControlRigEditor.ControlRigBlueprintEditorLibrary.GetAvailableRigUnits
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<class UStruct*>                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UStruct*> UControlRigBlueprintEditorLibrary::GetAvailableRigUnits()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ControlRigBlueprintEditorLibrary", "GetAvailableRigUnits");

	Params::ControlRigBlueprintEditorLibrary_GetAvailableRigUnits Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ControlRigEditor.ControlRigBlueprintEditorLibrary.GetCurrentlyOpenRigBlueprints
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<class UControlRigBlueprint*>     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UControlRigBlueprint*> UControlRigBlueprintEditorLibrary::GetCurrentlyOpenRigBlueprints()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ControlRigBlueprintEditorLibrary", "GetCurrentlyOpenRigBlueprints");

	Params::ControlRigBlueprintEditorLibrary_GetCurrentlyOpenRigBlueprints Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ControlRigEditor.ControlRigBlueprintEditorLibrary.GetHierarchy
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UControlRigBlueprint*             InRigBlueprint                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class URigHierarchy*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class URigHierarchy* UControlRigBlueprintEditorLibrary::GetHierarchy(class UControlRigBlueprint* InRigBlueprint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ControlRigBlueprintEditorLibrary", "GetHierarchy");

	Params::ControlRigBlueprintEditorLibrary_GetHierarchy Parms{};

	Parms.InRigBlueprint = InRigBlueprint;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ControlRigEditor.ControlRigBlueprintEditorLibrary.GetHierarchyController
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UControlRigBlueprint*             InRigBlueprint                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class URigHierarchyController*          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class URigHierarchyController* UControlRigBlueprintEditorLibrary::GetHierarchyController(class UControlRigBlueprint* InRigBlueprint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ControlRigBlueprintEditorLibrary", "GetHierarchyController");

	Params::ControlRigBlueprintEditorLibrary_GetHierarchyController Parms{};

	Parms.InRigBlueprint = InRigBlueprint;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ControlRigEditor.ControlRigBlueprintEditorLibrary.GetPreviewMesh
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UControlRigBlueprint*             InRigBlueprint                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USkeletalMesh*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USkeletalMesh* UControlRigBlueprintEditorLibrary::GetPreviewMesh(class UControlRigBlueprint* InRigBlueprint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ControlRigBlueprintEditorLibrary", "GetPreviewMesh");

	Params::ControlRigBlueprintEditorLibrary_GetPreviewMesh Parms{};

	Parms.InRigBlueprint = InRigBlueprint;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ControlRigEditor.ControlRigBlueprintEditorLibrary.RequestControlRigInit
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UControlRigBlueprint*             InRigBlueprint                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UControlRigBlueprintEditorLibrary::RequestControlRigInit(class UControlRigBlueprint* InRigBlueprint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ControlRigBlueprintEditorLibrary", "RequestControlRigInit");

	Params::ControlRigBlueprintEditorLibrary_RequestControlRigInit Parms{};

	Parms.InRigBlueprint = InRigBlueprint;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ControlRigEditor.ControlRigBlueprintEditorLibrary.SetPreviewMesh
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UControlRigBlueprint*             InRigBlueprint                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USkeletalMesh*                    PreviewMesh                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bMarkAsDirty                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UControlRigBlueprintEditorLibrary::SetPreviewMesh(class UControlRigBlueprint* InRigBlueprint, class USkeletalMesh* PreviewMesh, bool bMarkAsDirty)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ControlRigBlueprintEditorLibrary", "SetPreviewMesh");

	Params::ControlRigBlueprintEditorLibrary_SetPreviewMesh Parms{};

	Parms.InRigBlueprint = InRigBlueprint;
	Parms.PreviewMesh = PreviewMesh;
	Parms.bMarkAsDirty = bMarkAsDirty;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ControlRigEditor.ControlRigBlueprintEditorLibrary.SetupAllEditorMenus
// (Final, Native, Static, Public, BlueprintCallable)

void UControlRigBlueprintEditorLibrary::SetupAllEditorMenus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ControlRigBlueprintEditorLibrary", "SetupAllEditorMenus");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ControlRigEditor.ControlRigBlueprintFactory.CreateControlRigFromSkeletalMeshOrSkeleton
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          InSelectedObject                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bModularRig                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UControlRigBlueprint*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UControlRigBlueprint* UControlRigBlueprintFactory::CreateControlRigFromSkeletalMeshOrSkeleton(class UObject* InSelectedObject, const bool bModularRig)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ControlRigBlueprintFactory", "CreateControlRigFromSkeletalMeshOrSkeleton");

	Params::ControlRigBlueprintFactory_CreateControlRigFromSkeletalMeshOrSkeleton Parms{};

	Parms.InSelectedObject = InSelectedObject;
	Parms.bModularRig = bModularRig;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ControlRigEditor.ControlRigBlueprintFactory.CreateNewControlRigAsset
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           InDesiredPackagePath                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bModularRig                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UControlRigBlueprint*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UControlRigBlueprint* UControlRigBlueprintFactory::CreateNewControlRigAsset(const class FString& InDesiredPackagePath, const bool bModularRig)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ControlRigBlueprintFactory", "CreateNewControlRigAsset");

	Params::ControlRigBlueprintFactory_CreateNewControlRigAsset Parms{};

	Parms.InDesiredPackagePath = std::move(InDesiredPackagePath);
	Parms.bModularRig = bModularRig;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ControlRigEditor.ControlRigSequencerEditorLibrary.AddConstraint
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UWorld*                           World                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETransformConstraintType                InType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTransformableHandle*             InChild                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTransformableHandle*             InParent                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bMaintainOffset                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTickableConstraint*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTickableConstraint* UControlRigSequencerEditorLibrary::AddConstraint(class UWorld* World, ETransformConstraintType InType, class UTransformableHandle* InChild, class UTransformableHandle* InParent, const bool bMaintainOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ControlRigSequencerEditorLibrary", "AddConstraint");

	Params::ControlRigSequencerEditorLibrary_AddConstraint Parms{};

	Parms.World = World;
	Parms.InType = InType;
	Parms.InChild = InChild;
	Parms.InParent = InParent;
	Parms.bMaintainOffset = bMaintainOffset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ControlRigEditor.ControlRigSequencerEditorLibrary.BakeConstraint
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UWorld*                           World                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTickableConstraint*              Constraint                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FFrameNumber>             Frames                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// EMovieSceneTimeUnit                     TimeUnit                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UControlRigSequencerEditorLibrary::BakeConstraint(class UWorld* World, class UTickableConstraint* Constraint, const TArray<struct FFrameNumber>& Frames, EMovieSceneTimeUnit TimeUnit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ControlRigSequencerEditorLibrary", "BakeConstraint");

	Params::ControlRigSequencerEditorLibrary_BakeConstraint Parms{};

	Parms.World = World;
	Parms.Constraint = Constraint;
	Parms.Frames = std::move(Frames);
	Parms.TimeUnit = TimeUnit;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ControlRigEditor.ControlRigSequencerEditorLibrary.BakeConstraints
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UWorld*                           World                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UTickableConstraint*>      InConstraints                                          (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// struct FBakingAnimationKeySettings      InSettings                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UControlRigSequencerEditorLibrary::BakeConstraints(class UWorld* World, TArray<class UTickableConstraint*>* InConstraints, const struct FBakingAnimationKeySettings& InSettings)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ControlRigSequencerEditorLibrary", "BakeConstraints");

	Params::ControlRigSequencerEditorLibrary_BakeConstraints Parms{};

	Parms.World = World;
	Parms.InSettings = std::move(InSettings);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (InConstraints != nullptr)
		*InConstraints = std::move(Parms.InConstraints);

	return Parms.ReturnValue;
}


// Function ControlRigEditor.ControlRigSequencerEditorLibrary.BakeControlRigSpace
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class ULevelSequence*                   InSequence                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UControlRig*                      InControlRig                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FName>                     InControlNames                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FRigSpacePickerBakeSettings      InSettings                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)
// EMovieSceneTimeUnit                     TimeUnit                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UControlRigSequencerEditorLibrary::BakeControlRigSpace(class ULevelSequence* InSequence, class UControlRig* InControlRig, const TArray<class FName>& InControlNames, const struct FRigSpacePickerBakeSettings& InSettings, EMovieSceneTimeUnit TimeUnit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ControlRigSequencerEditorLibrary", "BakeControlRigSpace");

	Params::ControlRigSequencerEditorLibrary_BakeControlRigSpace Parms{};

	Parms.InSequence = InSequence;
	Parms.InControlRig = InControlRig;
	Parms.InControlNames = std::move(InControlNames);
	Parms.InSettings = std::move(InSettings);
	Parms.TimeUnit = TimeUnit;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ControlRigEditor.ControlRigSequencerEditorLibrary.BakeToControlRig
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UWorld*                           World                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ULevelSequence*                   LevelSequence                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UClass*                           ControlRigClass                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAnimSeqExportOption*             ExportOptions                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bReduceKeys                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Tolerance                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMovieSceneBindingProxy          Binding                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bResetControls                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UControlRigSequencerEditorLibrary::BakeToControlRig(class UWorld* World, class ULevelSequence* LevelSequence, class UClass* ControlRigClass, class UAnimSeqExportOption* ExportOptions, bool bReduceKeys, float Tolerance, const struct FMovieSceneBindingProxy& Binding, bool bResetControls)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ControlRigSequencerEditorLibrary", "BakeToControlRig");

	Params::ControlRigSequencerEditorLibrary_BakeToControlRig Parms{};

	Parms.World = World;
	Parms.LevelSequence = LevelSequence;
	Parms.ControlRigClass = ControlRigClass;
	Parms.ExportOptions = ExportOptions;
	Parms.bReduceKeys = bReduceKeys;
	Parms.Tolerance = Tolerance;
	Parms.Binding = std::move(Binding);
	Parms.bResetControls = bResetControls;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ControlRigEditor.ControlRigSequencerEditorLibrary.BlendValuesOnSelected
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class ULevelSequence*                   LevelSequence                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAnimToolBlendOperation                 BlendOperation                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   BlendValue                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UControlRigSequencerEditorLibrary::BlendValuesOnSelected(class ULevelSequence* LevelSequence, EAnimToolBlendOperation BlendOperation, float BlendValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ControlRigSequencerEditorLibrary", "BlendValuesOnSelected");

	Params::ControlRigSequencerEditorLibrary_BlendValuesOnSelected Parms{};

	Parms.LevelSequence = LevelSequence;
	Parms.BlendOperation = BlendOperation;
	Parms.BlendValue = BlendValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ControlRigEditor.ControlRigSequencerEditorLibrary.CollapseControlRigAnimLayers
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class ULevelSequence*                   InSequence                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMovieSceneControlRigParameterTrack*InTrack                                                (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bKeyReduce                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Tolerance                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UControlRigSequencerEditorLibrary::CollapseControlRigAnimLayers(class ULevelSequence* InSequence, class UMovieSceneControlRigParameterTrack* InTrack, bool bKeyReduce, float Tolerance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ControlRigSequencerEditorLibrary", "CollapseControlRigAnimLayers");

	Params::ControlRigSequencerEditorLibrary_CollapseControlRigAnimLayers Parms{};

	Parms.InSequence = InSequence;
	Parms.InTrack = InTrack;
	Parms.bKeyReduce = bKeyReduce;
	Parms.Tolerance = Tolerance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ControlRigEditor.ControlRigSequencerEditorLibrary.CollapseControlRigAnimLayersWithSettings
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class ULevelSequence*                   InSequence                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMovieSceneControlRigParameterTrack*InTrack                                                (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FBakingAnimationKeySettings      InSettings                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UControlRigSequencerEditorLibrary::CollapseControlRigAnimLayersWithSettings(class ULevelSequence* InSequence, class UMovieSceneControlRigParameterTrack* InTrack, const struct FBakingAnimationKeySettings& InSettings)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ControlRigSequencerEditorLibrary", "CollapseControlRigAnimLayersWithSettings");

	Params::ControlRigSequencerEditorLibrary_CollapseControlRigAnimLayersWithSettings Parms{};

	Parms.InSequence = InSequence;
	Parms.InTrack = InTrack;
	Parms.InSettings = std::move(InSettings);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ControlRigEditor.ControlRigSequencerEditorLibrary.Compensate
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UTickableConstraint*              InConstraint                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFrameNumber                     InTime                                                 (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EMovieSceneTimeUnit                     TimeUnit                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UControlRigSequencerEditorLibrary::Compensate(class UTickableConstraint* InConstraint, const struct FFrameNumber& InTime, EMovieSceneTimeUnit TimeUnit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ControlRigSequencerEditorLibrary", "Compensate");

	Params::ControlRigSequencerEditorLibrary_Compensate Parms{};

	Parms.InConstraint = InConstraint;
	Parms.InTime = std::move(InTime);
	Parms.TimeUnit = TimeUnit;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ControlRigEditor.ControlRigSequencerEditorLibrary.CompensateAll
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UTickableConstraint*              InConstraint                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UControlRigSequencerEditorLibrary::CompensateAll(class UTickableConstraint* InConstraint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ControlRigSequencerEditorLibrary", "CompensateAll");

	Params::ControlRigSequencerEditorLibrary_CompensateAll Parms{};

	Parms.InConstraint = InConstraint;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ControlRigEditor.ControlRigSequencerEditorLibrary.DeleteConstraintKey
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UTickableConstraint*              Constraint                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMovieSceneSection*               ConstraintSection                                      (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFrameNumber                     InTime                                                 (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EMovieSceneTimeUnit                     TimeUnit                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UControlRigSequencerEditorLibrary::DeleteConstraintKey(class UTickableConstraint* Constraint, class UMovieSceneSection* ConstraintSection, const struct FFrameNumber& InTime, EMovieSceneTimeUnit TimeUnit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ControlRigSequencerEditorLibrary", "DeleteConstraintKey");

	Params::ControlRigSequencerEditorLibrary_DeleteConstraintKey Parms{};

	Parms.Constraint = Constraint;
	Parms.ConstraintSection = ConstraintSection;
	Parms.InTime = std::move(InTime);
	Parms.TimeUnit = TimeUnit;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ControlRigEditor.ControlRigSequencerEditorLibrary.DeleteControlRigSpace
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class ULevelSequence*                   InSequence                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UControlRig*                      InControlRig                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InControlName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFrameNumber                     InTime                                                 (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EMovieSceneTimeUnit                     TimeUnit                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UControlRigSequencerEditorLibrary::DeleteControlRigSpace(class ULevelSequence* InSequence, class UControlRig* InControlRig, class FName InControlName, const struct FFrameNumber& InTime, EMovieSceneTimeUnit TimeUnit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ControlRigSequencerEditorLibrary", "DeleteControlRigSpace");

	Params::ControlRigSequencerEditorLibrary_DeleteControlRigSpace Parms{};

	Parms.InSequence = InSequence;
	Parms.InControlRig = InControlRig;
	Parms.InControlName = InControlName;
	Parms.InTime = std::move(InTime);
	Parms.TimeUnit = TimeUnit;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ControlRigEditor.ControlRigSequencerEditorLibrary.ExportFBXFromControlRigSection
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class ULevelSequence*                   Sequence                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMovieSceneControlRigParameterSection*Section                                                (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMovieSceneUserExportFBXControlRigSettings*ExportFBXControlRigSettings                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UControlRigSequencerEditorLibrary::ExportFBXFromControlRigSection(class ULevelSequence* Sequence, const class UMovieSceneControlRigParameterSection* Section, const class UMovieSceneUserExportFBXControlRigSettings* ExportFBXControlRigSettings)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ControlRigSequencerEditorLibrary", "ExportFBXFromControlRigSection");

	Params::ControlRigSequencerEditorLibrary_ExportFBXFromControlRigSection Parms{};

	Parms.Sequence = Sequence;
	Parms.Section = Section;
	Parms.ExportFBXControlRigSettings = ExportFBXControlRigSettings;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ControlRigEditor.ControlRigSequencerEditorLibrary.FindOrCreateControlRigComponentTrack
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UWorld*                           World                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ULevelSequence*                   LevelSequence                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMovieSceneBindingProxy          InBinding                                              (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UMovieSceneTrack*>         ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

TArray<class UMovieSceneTrack*> UControlRigSequencerEditorLibrary::FindOrCreateControlRigComponentTrack(class UWorld* World, class ULevelSequence* LevelSequence, const struct FMovieSceneBindingProxy& InBinding)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ControlRigSequencerEditorLibrary", "FindOrCreateControlRigComponentTrack");

	Params::ControlRigSequencerEditorLibrary_FindOrCreateControlRigComponentTrack Parms{};

	Parms.World = World;
	Parms.LevelSequence = LevelSequence;
	Parms.InBinding = std::move(InBinding);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ControlRigEditor.ControlRigSequencerEditorLibrary.FindOrCreateControlRigTrack
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UWorld*                           World                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ULevelSequence*                   LevelSequence                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UClass*                           ControlRigClass                                        (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMovieSceneBindingProxy          InBinding                                              (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsLayeredControlRig                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMovieSceneTrack*                 ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMovieSceneTrack* UControlRigSequencerEditorLibrary::FindOrCreateControlRigTrack(class UWorld* World, class ULevelSequence* LevelSequence, const class UClass* ControlRigClass, const struct FMovieSceneBindingProxy& InBinding, bool bIsLayeredControlRig)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ControlRigSequencerEditorLibrary", "FindOrCreateControlRigTrack");

	Params::ControlRigSequencerEditorLibrary_FindOrCreateControlRigTrack Parms{};

	Parms.World = World;
	Parms.LevelSequence = LevelSequence;
	Parms.ControlRigClass = ControlRigClass;
	Parms.InBinding = std::move(InBinding);
	Parms.bIsLayeredControlRig = bIsLayeredControlRig;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ControlRigEditor.ControlRigSequencerEditorLibrary.GetActorWorldTransform
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class ULevelSequence*                   LevelSequence                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFrameNumber                     Frame                                                  (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EMovieSceneTimeUnit                     TimeUnit                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTransform                       ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FTransform UControlRigSequencerEditorLibrary::GetActorWorldTransform(class ULevelSequence* LevelSequence, class AActor* Actor, const struct FFrameNumber& Frame, EMovieSceneTimeUnit TimeUnit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ControlRigSequencerEditorLibrary", "GetActorWorldTransform");

	Params::ControlRigSequencerEditorLibrary_GetActorWorldTransform Parms{};

	Parms.LevelSequence = LevelSequence;
	Parms.Actor = Actor;
	Parms.Frame = std::move(Frame);
	Parms.TimeUnit = TimeUnit;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ControlRigEditor.ControlRigSequencerEditorLibrary.GetActorWorldTransforms
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class ULevelSequence*                   LevelSequence                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FFrameNumber>             Frames                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// EMovieSceneTimeUnit                     TimeUnit                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FTransform>               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FTransform> UControlRigSequencerEditorLibrary::GetActorWorldTransforms(class ULevelSequence* LevelSequence, class AActor* Actor, const TArray<struct FFrameNumber>& Frames, EMovieSceneTimeUnit TimeUnit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ControlRigSequencerEditorLibrary", "GetActorWorldTransforms");

	Params::ControlRigSequencerEditorLibrary_GetActorWorldTransforms Parms{};

	Parms.LevelSequence = LevelSequence;
	Parms.Actor = Actor;
	Parms.Frames = std::move(Frames);
	Parms.TimeUnit = TimeUnit;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ControlRigEditor.ControlRigSequencerEditorLibrary.GetConstraintKeys
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UTickableConstraint*              InConstraint                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMovieSceneSection*               ConstraintSection                                      (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<bool>                            OutBools                                               (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<struct FFrameNumber>             OutFrames                                              (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// EMovieSceneTimeUnit                     TimeUnit                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UControlRigSequencerEditorLibrary::GetConstraintKeys(class UTickableConstraint* InConstraint, class UMovieSceneSection* ConstraintSection, TArray<bool>* OutBools, TArray<struct FFrameNumber>* OutFrames, EMovieSceneTimeUnit TimeUnit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ControlRigSequencerEditorLibrary", "GetConstraintKeys");

	Params::ControlRigSequencerEditorLibrary_GetConstraintKeys Parms{};

	Parms.InConstraint = InConstraint;
	Parms.ConstraintSection = ConstraintSection;
	Parms.TimeUnit = TimeUnit;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutBools != nullptr)
		*OutBools = std::move(Parms.OutBools);

	if (OutFrames != nullptr)
		*OutFrames = std::move(Parms.OutFrames);

	return Parms.ReturnValue;
}


// Function ControlRigEditor.ControlRigSequencerEditorLibrary.GetConstraintsForHandle
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UWorld*                           InWorld                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTransformableHandle*             InChild                                                (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UTickableConstraint*>      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UTickableConstraint*> UControlRigSequencerEditorLibrary::GetConstraintsForHandle(class UWorld* InWorld, const class UTransformableHandle* InChild)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ControlRigSequencerEditorLibrary", "GetConstraintsForHandle");

	Params::ControlRigSequencerEditorLibrary_GetConstraintsForHandle Parms{};

	Parms.InWorld = InWorld;
	Parms.InChild = InChild;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ControlRigEditor.ControlRigSequencerEditorLibrary.GetControlRigPriorityOrder
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UMovieSceneTrack*                 InSection                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UControlRigSequencerEditorLibrary::GetControlRigPriorityOrder(class UMovieSceneTrack* InSection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ControlRigSequencerEditorLibrary", "GetControlRigPriorityOrder");

	Params::ControlRigSequencerEditorLibrary_GetControlRigPriorityOrder Parms{};

	Parms.InSection = InSection;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ControlRigEditor.ControlRigSequencerEditorLibrary.GetControlRigs
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class ULevelSequence*                   LevelSequence                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FControlRigSequencerBindingProxy>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

TArray<struct FControlRigSequencerBindingProxy> UControlRigSequencerEditorLibrary::GetControlRigs(class ULevelSequence* LevelSequence)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ControlRigSequencerEditorLibrary", "GetControlRigs");

	Params::ControlRigSequencerEditorLibrary_GetControlRigs Parms{};

	Parms.LevelSequence = LevelSequence;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ControlRigEditor.ControlRigSequencerEditorLibrary.GetControlRigWorldTransform
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class ULevelSequence*                   LevelSequence                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UControlRig*                      ControlRig                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ControlName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFrameNumber                     Frame                                                  (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EMovieSceneTimeUnit                     TimeUnit                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTransform                       ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FTransform UControlRigSequencerEditorLibrary::GetControlRigWorldTransform(class ULevelSequence* LevelSequence, class UControlRig* ControlRig, class FName ControlName, const struct FFrameNumber& Frame, EMovieSceneTimeUnit TimeUnit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ControlRigSequencerEditorLibrary", "GetControlRigWorldTransform");

	Params::ControlRigSequencerEditorLibrary_GetControlRigWorldTransform Parms{};

	Parms.LevelSequence = LevelSequence;
	Parms.ControlRig = ControlRig;
	Parms.ControlName = ControlName;
	Parms.Frame = std::move(Frame);
	Parms.TimeUnit = TimeUnit;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ControlRigEditor.ControlRigSequencerEditorLibrary.GetControlRigWorldTransforms
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class ULevelSequence*                   LevelSequence                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UControlRig*                      ControlRig                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ControlName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FFrameNumber>             Frames                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// EMovieSceneTimeUnit                     TimeUnit                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FTransform>               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FTransform> UControlRigSequencerEditorLibrary::GetControlRigWorldTransforms(class ULevelSequence* LevelSequence, class UControlRig* ControlRig, class FName ControlName, const TArray<struct FFrameNumber>& Frames, EMovieSceneTimeUnit TimeUnit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ControlRigSequencerEditorLibrary", "GetControlRigWorldTransforms");

	Params::ControlRigSequencerEditorLibrary_GetControlRigWorldTransforms Parms{};

	Parms.LevelSequence = LevelSequence;
	Parms.ControlRig = ControlRig;
	Parms.ControlName = ControlName;
	Parms.Frames = std::move(Frames);
	Parms.TimeUnit = TimeUnit;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ControlRigEditor.ControlRigSequencerEditorLibrary.GetControlsMask
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UMovieSceneSection*               InSection                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ControlName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UControlRigSequencerEditorLibrary::GetControlsMask(class UMovieSceneSection* InSection, class FName ControlName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ControlRigSequencerEditorLibrary", "GetControlsMask");

	Params::ControlRigSequencerEditorLibrary_GetControlsMask Parms{};

	Parms.InSection = InSection;
	Parms.ControlName = ControlName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ControlRigEditor.ControlRigSequencerEditorLibrary.GetDefaultParentKey
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FRigElementKey                   ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FRigElementKey UControlRigSequencerEditorLibrary::GetDefaultParentKey()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ControlRigSequencerEditorLibrary", "GetDefaultParentKey");

	Params::ControlRigSequencerEditorLibrary_GetDefaultParentKey Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ControlRigEditor.ControlRigSequencerEditorLibrary.GetFKControlRigApplyMode
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UControlRig*                      InControlRig                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EControlRigFKRigExecuteMode             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EControlRigFKRigExecuteMode UControlRigSequencerEditorLibrary::GetFKControlRigApplyMode(class UControlRig* InControlRig)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ControlRigSequencerEditorLibrary", "GetFKControlRigApplyMode");

	Params::ControlRigSequencerEditorLibrary_GetFKControlRigApplyMode Parms{};

	Parms.InControlRig = InControlRig;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ControlRigEditor.ControlRigSequencerEditorLibrary.GetLocalControlRigBool
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class ULevelSequence*                   LevelSequence                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UControlRig*                      ControlRig                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ControlName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFrameNumber                     Frame                                                  (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EMovieSceneTimeUnit                     TimeUnit                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UControlRigSequencerEditorLibrary::GetLocalControlRigBool(class ULevelSequence* LevelSequence, class UControlRig* ControlRig, class FName ControlName, const struct FFrameNumber& Frame, EMovieSceneTimeUnit TimeUnit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ControlRigSequencerEditorLibrary", "GetLocalControlRigBool");

	Params::ControlRigSequencerEditorLibrary_GetLocalControlRigBool Parms{};

	Parms.LevelSequence = LevelSequence;
	Parms.ControlRig = ControlRig;
	Parms.ControlName = ControlName;
	Parms.Frame = std::move(Frame);
	Parms.TimeUnit = TimeUnit;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ControlRigEditor.ControlRigSequencerEditorLibrary.GetLocalControlRigBools
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class ULevelSequence*                   LevelSequence                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UControlRig*                      ControlRig                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ControlName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FFrameNumber>             Frames                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// EMovieSceneTimeUnit                     TimeUnit                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<bool>                            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<bool> UControlRigSequencerEditorLibrary::GetLocalControlRigBools(class ULevelSequence* LevelSequence, class UControlRig* ControlRig, class FName ControlName, const TArray<struct FFrameNumber>& Frames, EMovieSceneTimeUnit TimeUnit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ControlRigSequencerEditorLibrary", "GetLocalControlRigBools");

	Params::ControlRigSequencerEditorLibrary_GetLocalControlRigBools Parms{};

	Parms.LevelSequence = LevelSequence;
	Parms.ControlRig = ControlRig;
	Parms.ControlName = ControlName;
	Parms.Frames = std::move(Frames);
	Parms.TimeUnit = TimeUnit;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ControlRigEditor.ControlRigSequencerEditorLibrary.GetLocalControlRigEulerTransform
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class ULevelSequence*                   LevelSequence                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UControlRig*                      ControlRig                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ControlName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFrameNumber                     Frame                                                  (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EMovieSceneTimeUnit                     TimeUnit                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FEulerTransform                  ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FEulerTransform UControlRigSequencerEditorLibrary::GetLocalControlRigEulerTransform(class ULevelSequence* LevelSequence, class UControlRig* ControlRig, class FName ControlName, const struct FFrameNumber& Frame, EMovieSceneTimeUnit TimeUnit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ControlRigSequencerEditorLibrary", "GetLocalControlRigEulerTransform");

	Params::ControlRigSequencerEditorLibrary_GetLocalControlRigEulerTransform Parms{};

	Parms.LevelSequence = LevelSequence;
	Parms.ControlRig = ControlRig;
	Parms.ControlName = ControlName;
	Parms.Frame = std::move(Frame);
	Parms.TimeUnit = TimeUnit;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ControlRigEditor.ControlRigSequencerEditorLibrary.GetLocalControlRigEulerTransforms
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class ULevelSequence*                   LevelSequence                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UControlRig*                      ControlRig                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ControlName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FFrameNumber>             Frames                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// EMovieSceneTimeUnit                     TimeUnit                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FEulerTransform>          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FEulerTransform> UControlRigSequencerEditorLibrary::GetLocalControlRigEulerTransforms(class ULevelSequence* LevelSequence, class UControlRig* ControlRig, class FName ControlName, const TArray<struct FFrameNumber>& Frames, EMovieSceneTimeUnit TimeUnit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ControlRigSequencerEditorLibrary", "GetLocalControlRigEulerTransforms");

	Params::ControlRigSequencerEditorLibrary_GetLocalControlRigEulerTransforms Parms{};

	Parms.LevelSequence = LevelSequence;
	Parms.ControlRig = ControlRig;
	Parms.ControlName = ControlName;
	Parms.Frames = std::move(Frames);
	Parms.TimeUnit = TimeUnit;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ControlRigEditor.ControlRigSequencerEditorLibrary.GetLocalControlRigFloat
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class ULevelSequence*                   LevelSequence                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UControlRig*                      ControlRig                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ControlName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFrameNumber                     Frame                                                  (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EMovieSceneTimeUnit                     TimeUnit                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UControlRigSequencerEditorLibrary::GetLocalControlRigFloat(class ULevelSequence* LevelSequence, class UControlRig* ControlRig, class FName ControlName, const struct FFrameNumber& Frame, EMovieSceneTimeUnit TimeUnit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ControlRigSequencerEditorLibrary", "GetLocalControlRigFloat");

	Params::ControlRigSequencerEditorLibrary_GetLocalControlRigFloat Parms{};

	Parms.LevelSequence = LevelSequence;
	Parms.ControlRig = ControlRig;
	Parms.ControlName = ControlName;
	Parms.Frame = std::move(Frame);
	Parms.TimeUnit = TimeUnit;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ControlRigEditor.ControlRigSequencerEditorLibrary.GetLocalControlRigFloats
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class ULevelSequence*                   LevelSequence                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UControlRig*                      ControlRig                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ControlName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FFrameNumber>             Frames                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// EMovieSceneTimeUnit                     TimeUnit                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<float>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<float> UControlRigSequencerEditorLibrary::GetLocalControlRigFloats(class ULevelSequence* LevelSequence, class UControlRig* ControlRig, class FName ControlName, const TArray<struct FFrameNumber>& Frames, EMovieSceneTimeUnit TimeUnit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ControlRigSequencerEditorLibrary", "GetLocalControlRigFloats");

	Params::ControlRigSequencerEditorLibrary_GetLocalControlRigFloats Parms{};

	Parms.LevelSequence = LevelSequence;
	Parms.ControlRig = ControlRig;
	Parms.ControlName = ControlName;
	Parms.Frames = std::move(Frames);
	Parms.TimeUnit = TimeUnit;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ControlRigEditor.ControlRigSequencerEditorLibrary.GetLocalControlRigInt
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class ULevelSequence*                   LevelSequence                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UControlRig*                      ControlRig                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ControlName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFrameNumber                     Frame                                                  (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EMovieSceneTimeUnit                     TimeUnit                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UControlRigSequencerEditorLibrary::GetLocalControlRigInt(class ULevelSequence* LevelSequence, class UControlRig* ControlRig, class FName ControlName, const struct FFrameNumber& Frame, EMovieSceneTimeUnit TimeUnit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ControlRigSequencerEditorLibrary", "GetLocalControlRigInt");

	Params::ControlRigSequencerEditorLibrary_GetLocalControlRigInt Parms{};

	Parms.LevelSequence = LevelSequence;
	Parms.ControlRig = ControlRig;
	Parms.ControlName = ControlName;
	Parms.Frame = std::move(Frame);
	Parms.TimeUnit = TimeUnit;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ControlRigEditor.ControlRigSequencerEditorLibrary.GetLocalControlRigInts
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class ULevelSequence*                   LevelSequence                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UControlRig*                      ControlRig                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ControlName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FFrameNumber>             Frames                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// EMovieSceneTimeUnit                     TimeUnit                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UControlRigSequencerEditorLibrary::GetLocalControlRigInts(class ULevelSequence* LevelSequence, class UControlRig* ControlRig, class FName ControlName, const TArray<struct FFrameNumber>& Frames, EMovieSceneTimeUnit TimeUnit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ControlRigSequencerEditorLibrary", "GetLocalControlRigInts");

	Params::ControlRigSequencerEditorLibrary_GetLocalControlRigInts Parms{};

	Parms.LevelSequence = LevelSequence;
	Parms.ControlRig = ControlRig;
	Parms.ControlName = ControlName;
	Parms.Frames = std::move(Frames);
	Parms.TimeUnit = TimeUnit;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ControlRigEditor.ControlRigSequencerEditorLibrary.GetLocalControlRigPosition
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class ULevelSequence*                   LevelSequence                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UControlRig*                      ControlRig                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ControlName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFrameNumber                     Frame                                                  (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EMovieSceneTimeUnit                     TimeUnit                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UControlRigSequencerEditorLibrary::GetLocalControlRigPosition(class ULevelSequence* LevelSequence, class UControlRig* ControlRig, class FName ControlName, const struct FFrameNumber& Frame, EMovieSceneTimeUnit TimeUnit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ControlRigSequencerEditorLibrary", "GetLocalControlRigPosition");

	Params::ControlRigSequencerEditorLibrary_GetLocalControlRigPosition Parms{};

	Parms.LevelSequence = LevelSequence;
	Parms.ControlRig = ControlRig;
	Parms.ControlName = ControlName;
	Parms.Frame = std::move(Frame);
	Parms.TimeUnit = TimeUnit;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ControlRigEditor.ControlRigSequencerEditorLibrary.GetLocalControlRigPositions
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class ULevelSequence*                   LevelSequence                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UControlRig*                      ControlRig                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ControlName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FFrameNumber>             Frames                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// EMovieSceneTimeUnit                     TimeUnit                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FVector>                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FVector> UControlRigSequencerEditorLibrary::GetLocalControlRigPositions(class ULevelSequence* LevelSequence, class UControlRig* ControlRig, class FName ControlName, const TArray<struct FFrameNumber>& Frames, EMovieSceneTimeUnit TimeUnit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ControlRigSequencerEditorLibrary", "GetLocalControlRigPositions");

	Params::ControlRigSequencerEditorLibrary_GetLocalControlRigPositions Parms{};

	Parms.LevelSequence = LevelSequence;
	Parms.ControlRig = ControlRig;
	Parms.ControlName = ControlName;
	Parms.Frames = std::move(Frames);
	Parms.TimeUnit = TimeUnit;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ControlRigEditor.ControlRigSequencerEditorLibrary.GetLocalControlRigRotator
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class ULevelSequence*                   LevelSequence                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UControlRig*                      ControlRig                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ControlName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFrameNumber                     Frame                                                  (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EMovieSceneTimeUnit                     TimeUnit                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FRotator UControlRigSequencerEditorLibrary::GetLocalControlRigRotator(class ULevelSequence* LevelSequence, class UControlRig* ControlRig, class FName ControlName, const struct FFrameNumber& Frame, EMovieSceneTimeUnit TimeUnit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ControlRigSequencerEditorLibrary", "GetLocalControlRigRotator");

	Params::ControlRigSequencerEditorLibrary_GetLocalControlRigRotator Parms{};

	Parms.LevelSequence = LevelSequence;
	Parms.ControlRig = ControlRig;
	Parms.ControlName = ControlName;
	Parms.Frame = std::move(Frame);
	Parms.TimeUnit = TimeUnit;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ControlRigEditor.ControlRigSequencerEditorLibrary.GetLocalControlRigRotators
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class ULevelSequence*                   LevelSequence                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UControlRig*                      ControlRig                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ControlName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FFrameNumber>             Frames                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// EMovieSceneTimeUnit                     TimeUnit                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FRotator>                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FRotator> UControlRigSequencerEditorLibrary::GetLocalControlRigRotators(class ULevelSequence* LevelSequence, class UControlRig* ControlRig, class FName ControlName, const TArray<struct FFrameNumber>& Frames, EMovieSceneTimeUnit TimeUnit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ControlRigSequencerEditorLibrary", "GetLocalControlRigRotators");

	Params::ControlRigSequencerEditorLibrary_GetLocalControlRigRotators Parms{};

	Parms.LevelSequence = LevelSequence;
	Parms.ControlRig = ControlRig;
	Parms.ControlName = ControlName;
	Parms.Frames = std::move(Frames);
	Parms.TimeUnit = TimeUnit;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ControlRigEditor.ControlRigSequencerEditorLibrary.GetLocalControlRigScale
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class ULevelSequence*                   LevelSequence                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UControlRig*                      ControlRig                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ControlName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFrameNumber                     Frame                                                  (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EMovieSceneTimeUnit                     TimeUnit                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UControlRigSequencerEditorLibrary::GetLocalControlRigScale(class ULevelSequence* LevelSequence, class UControlRig* ControlRig, class FName ControlName, const struct FFrameNumber& Frame, EMovieSceneTimeUnit TimeUnit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ControlRigSequencerEditorLibrary", "GetLocalControlRigScale");

	Params::ControlRigSequencerEditorLibrary_GetLocalControlRigScale Parms{};

	Parms.LevelSequence = LevelSequence;
	Parms.ControlRig = ControlRig;
	Parms.ControlName = ControlName;
	Parms.Frame = std::move(Frame);
	Parms.TimeUnit = TimeUnit;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ControlRigEditor.ControlRigSequencerEditorLibrary.GetLocalControlRigScales
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class ULevelSequence*                   LevelSequence                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UControlRig*                      ControlRig                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ControlName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FFrameNumber>             Frames                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// EMovieSceneTimeUnit                     TimeUnit                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FVector>                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FVector> UControlRigSequencerEditorLibrary::GetLocalControlRigScales(class ULevelSequence* LevelSequence, class UControlRig* ControlRig, class FName ControlName, const TArray<struct FFrameNumber>& Frames, EMovieSceneTimeUnit TimeUnit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ControlRigSequencerEditorLibrary", "GetLocalControlRigScales");

	Params::ControlRigSequencerEditorLibrary_GetLocalControlRigScales Parms{};

	Parms.LevelSequence = LevelSequence;
	Parms.ControlRig = ControlRig;
	Parms.ControlName = ControlName;
	Parms.Frames = std::move(Frames);
	Parms.TimeUnit = TimeUnit;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ControlRigEditor.ControlRigSequencerEditorLibrary.GetLocalControlRigTransform
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class ULevelSequence*                   LevelSequence                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UControlRig*                      ControlRig                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ControlName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFrameNumber                     Frame                                                  (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EMovieSceneTimeUnit                     TimeUnit                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTransform                       ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FTransform UControlRigSequencerEditorLibrary::GetLocalControlRigTransform(class ULevelSequence* LevelSequence, class UControlRig* ControlRig, class FName ControlName, const struct FFrameNumber& Frame, EMovieSceneTimeUnit TimeUnit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ControlRigSequencerEditorLibrary", "GetLocalControlRigTransform");

	Params::ControlRigSequencerEditorLibrary_GetLocalControlRigTransform Parms{};

	Parms.LevelSequence = LevelSequence;
	Parms.ControlRig = ControlRig;
	Parms.ControlName = ControlName;
	Parms.Frame = std::move(Frame);
	Parms.TimeUnit = TimeUnit;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ControlRigEditor.ControlRigSequencerEditorLibrary.GetLocalControlRigTransformNoScale
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class ULevelSequence*                   LevelSequence                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UControlRig*                      ControlRig                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ControlName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFrameNumber                     Frame                                                  (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EMovieSceneTimeUnit                     TimeUnit                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTransformNoScale                ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FTransformNoScale UControlRigSequencerEditorLibrary::GetLocalControlRigTransformNoScale(class ULevelSequence* LevelSequence, class UControlRig* ControlRig, class FName ControlName, const struct FFrameNumber& Frame, EMovieSceneTimeUnit TimeUnit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ControlRigSequencerEditorLibrary", "GetLocalControlRigTransformNoScale");

	Params::ControlRigSequencerEditorLibrary_GetLocalControlRigTransformNoScale Parms{};

	Parms.LevelSequence = LevelSequence;
	Parms.ControlRig = ControlRig;
	Parms.ControlName = ControlName;
	Parms.Frame = std::move(Frame);
	Parms.TimeUnit = TimeUnit;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ControlRigEditor.ControlRigSequencerEditorLibrary.GetLocalControlRigTransformNoScales
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class ULevelSequence*                   LevelSequence                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UControlRig*                      ControlRig                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ControlName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FFrameNumber>             Frames                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// EMovieSceneTimeUnit                     TimeUnit                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FTransformNoScale>        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FTransformNoScale> UControlRigSequencerEditorLibrary::GetLocalControlRigTransformNoScales(class ULevelSequence* LevelSequence, class UControlRig* ControlRig, class FName ControlName, const TArray<struct FFrameNumber>& Frames, EMovieSceneTimeUnit TimeUnit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ControlRigSequencerEditorLibrary", "GetLocalControlRigTransformNoScales");

	Params::ControlRigSequencerEditorLibrary_GetLocalControlRigTransformNoScales Parms{};

	Parms.LevelSequence = LevelSequence;
	Parms.ControlRig = ControlRig;
	Parms.ControlName = ControlName;
	Parms.Frames = std::move(Frames);
	Parms.TimeUnit = TimeUnit;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ControlRigEditor.ControlRigSequencerEditorLibrary.GetLocalControlRigTransforms
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class ULevelSequence*                   LevelSequence                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UControlRig*                      ControlRig                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ControlName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FFrameNumber>             Frames                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// EMovieSceneTimeUnit                     TimeUnit                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FTransform>               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FTransform> UControlRigSequencerEditorLibrary::GetLocalControlRigTransforms(class ULevelSequence* LevelSequence, class UControlRig* ControlRig, class FName ControlName, const TArray<struct FFrameNumber>& Frames, EMovieSceneTimeUnit TimeUnit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ControlRigSequencerEditorLibrary", "GetLocalControlRigTransforms");

	Params::ControlRigSequencerEditorLibrary_GetLocalControlRigTransforms Parms{};

	Parms.LevelSequence = LevelSequence;
	Parms.ControlRig = ControlRig;
	Parms.ControlName = ControlName;
	Parms.Frames = std::move(Frames);
	Parms.TimeUnit = TimeUnit;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ControlRigEditor.ControlRigSequencerEditorLibrary.GetLocalControlRigVector2D
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class ULevelSequence*                   LevelSequence                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UControlRig*                      ControlRig                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ControlName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFrameNumber                     Frame                                                  (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EMovieSceneTimeUnit                     TimeUnit                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UControlRigSequencerEditorLibrary::GetLocalControlRigVector2D(class ULevelSequence* LevelSequence, class UControlRig* ControlRig, class FName ControlName, const struct FFrameNumber& Frame, EMovieSceneTimeUnit TimeUnit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ControlRigSequencerEditorLibrary", "GetLocalControlRigVector2D");

	Params::ControlRigSequencerEditorLibrary_GetLocalControlRigVector2D Parms{};

	Parms.LevelSequence = LevelSequence;
	Parms.ControlRig = ControlRig;
	Parms.ControlName = ControlName;
	Parms.Frame = std::move(Frame);
	Parms.TimeUnit = TimeUnit;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ControlRigEditor.ControlRigSequencerEditorLibrary.GetLocalControlRigVector2Ds
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class ULevelSequence*                   LevelSequence                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UControlRig*                      ControlRig                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ControlName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FFrameNumber>             Frames                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// EMovieSceneTimeUnit                     TimeUnit                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FVector2D>                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FVector2D> UControlRigSequencerEditorLibrary::GetLocalControlRigVector2Ds(class ULevelSequence* LevelSequence, class UControlRig* ControlRig, class FName ControlName, const TArray<struct FFrameNumber>& Frames, EMovieSceneTimeUnit TimeUnit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ControlRigSequencerEditorLibrary", "GetLocalControlRigVector2Ds");

	Params::ControlRigSequencerEditorLibrary_GetLocalControlRigVector2Ds Parms{};

	Parms.LevelSequence = LevelSequence;
	Parms.ControlRig = ControlRig;
	Parms.ControlName = ControlName;
	Parms.Frames = std::move(Frames);
	Parms.TimeUnit = TimeUnit;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ControlRigEditor.ControlRigSequencerEditorLibrary.GetSkeletalMeshComponentWorldTransform
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class ULevelSequence*                   LevelSequence                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USkeletalMeshComponent*           SkeletalMeshComponent                                  (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFrameNumber                     Frame                                                  (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EMovieSceneTimeUnit                     TimeUnit                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReferenceName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTransform                       ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FTransform UControlRigSequencerEditorLibrary::GetSkeletalMeshComponentWorldTransform(class ULevelSequence* LevelSequence, class USkeletalMeshComponent* SkeletalMeshComponent, const struct FFrameNumber& Frame, EMovieSceneTimeUnit TimeUnit, class FName ReferenceName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ControlRigSequencerEditorLibrary", "GetSkeletalMeshComponentWorldTransform");

	Params::ControlRigSequencerEditorLibrary_GetSkeletalMeshComponentWorldTransform Parms{};

	Parms.LevelSequence = LevelSequence;
	Parms.SkeletalMeshComponent = SkeletalMeshComponent;
	Parms.Frame = std::move(Frame);
	Parms.TimeUnit = TimeUnit;
	Parms.ReferenceName = ReferenceName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ControlRigEditor.ControlRigSequencerEditorLibrary.GetSkeletalMeshComponentWorldTransforms
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class ULevelSequence*                   LevelSequence                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USkeletalMeshComponent*           SkeletalMeshComponent                                  (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FFrameNumber>             Frames                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// EMovieSceneTimeUnit                     TimeUnit                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReferenceName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FTransform>               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FTransform> UControlRigSequencerEditorLibrary::GetSkeletalMeshComponentWorldTransforms(class ULevelSequence* LevelSequence, class USkeletalMeshComponent* SkeletalMeshComponent, const TArray<struct FFrameNumber>& Frames, EMovieSceneTimeUnit TimeUnit, class FName ReferenceName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ControlRigSequencerEditorLibrary", "GetSkeletalMeshComponentWorldTransforms");

	Params::ControlRigSequencerEditorLibrary_GetSkeletalMeshComponentWorldTransforms Parms{};

	Parms.LevelSequence = LevelSequence;
	Parms.SkeletalMeshComponent = SkeletalMeshComponent;
	Parms.Frames = std::move(Frames);
	Parms.TimeUnit = TimeUnit;
	Parms.ReferenceName = ReferenceName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ControlRigEditor.ControlRigSequencerEditorLibrary.GetVisibleControlRigs
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TArray<class UControlRig*>              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UControlRig*> UControlRigSequencerEditorLibrary::GetVisibleControlRigs()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ControlRigSequencerEditorLibrary", "GetVisibleControlRigs");

	Params::ControlRigSequencerEditorLibrary_GetVisibleControlRigs Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ControlRigEditor.ControlRigSequencerEditorLibrary.GetWorldSpaceReferenceKey
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FRigElementKey                   ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FRigElementKey UControlRigSequencerEditorLibrary::GetWorldSpaceReferenceKey()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ControlRigSequencerEditorLibrary", "GetWorldSpaceReferenceKey");

	Params::ControlRigSequencerEditorLibrary_GetWorldSpaceReferenceKey Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ControlRigEditor.ControlRigSequencerEditorLibrary.HideAllControls
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UMovieSceneSection*               InSection                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UControlRigSequencerEditorLibrary::HideAllControls(class UMovieSceneSection* InSection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ControlRigSequencerEditorLibrary", "HideAllControls");

	Params::ControlRigSequencerEditorLibrary_HideAllControls Parms{};

	Parms.InSection = InSection;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ControlRigEditor.ControlRigSequencerEditorLibrary.ImportFBXToControlRigTrack
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UWorld*                           World                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ULevelSequence*                   InSequence                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMovieSceneControlRigParameterTrack*InTrack                                                (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMovieSceneControlRigParameterSection*InSection                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>                   SelectedControlRigNames                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// class UMovieSceneUserImportFBXControlRigSettings*ImportFBXControlRigSettings                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ImportFilename                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UControlRigSequencerEditorLibrary::ImportFBXToControlRigTrack(class UWorld* World, class ULevelSequence* InSequence, class UMovieSceneControlRigParameterTrack* InTrack, class UMovieSceneControlRigParameterSection* InSection, const TArray<class FString>& SelectedControlRigNames, class UMovieSceneUserImportFBXControlRigSettings* ImportFBXControlRigSettings, const class FString& ImportFilename)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ControlRigSequencerEditorLibrary", "ImportFBXToControlRigTrack");

	Params::ControlRigSequencerEditorLibrary_ImportFBXToControlRigTrack Parms{};

	Parms.World = World;
	Parms.InSequence = InSequence;
	Parms.InTrack = InTrack;
	Parms.InSection = InSection;
	Parms.SelectedControlRigNames = std::move(SelectedControlRigNames);
	Parms.ImportFBXControlRigSettings = ImportFBXControlRigSettings;
	Parms.ImportFilename = std::move(ImportFilename);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ControlRigEditor.ControlRigSequencerEditorLibrary.IsFKControlRig
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UControlRig*                      InControlRig                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UControlRigSequencerEditorLibrary::IsFKControlRig(class UControlRig* InControlRig)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ControlRigSequencerEditorLibrary", "IsFKControlRig");

	Params::ControlRigSequencerEditorLibrary_IsFKControlRig Parms{};

	Parms.InControlRig = InControlRig;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ControlRigEditor.ControlRigSequencerEditorLibrary.IsLayeredControlRig
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UControlRig*                      InControlRig                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UControlRigSequencerEditorLibrary::IsLayeredControlRig(class UControlRig* InControlRig)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ControlRigSequencerEditorLibrary", "IsLayeredControlRig");

	Params::ControlRigSequencerEditorLibrary_IsLayeredControlRig Parms{};

	Parms.InControlRig = InControlRig;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ControlRigEditor.ControlRigSequencerEditorLibrary.LoadAnimSequenceIntoControlRigSection
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UMovieSceneSection*               MovieSceneSection                                      (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAnimSequence*                    AnimSequence                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USkeletalMeshComponent*           SkelMeshComp                                           (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFrameNumber                     InStartFrame                                           (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EMovieSceneTimeUnit                     TimeUnit                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bKeyReduce                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Tolerance                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EMovieSceneKeyInterpolation             Interpolation                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bResetControls                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UControlRigSequencerEditorLibrary::LoadAnimSequenceIntoControlRigSection(class UMovieSceneSection* MovieSceneSection, class UAnimSequence* AnimSequence, class USkeletalMeshComponent* SkelMeshComp, const struct FFrameNumber& InStartFrame, EMovieSceneTimeUnit TimeUnit, bool bKeyReduce, float Tolerance, EMovieSceneKeyInterpolation Interpolation, bool bResetControls)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ControlRigSequencerEditorLibrary", "LoadAnimSequenceIntoControlRigSection");

	Params::ControlRigSequencerEditorLibrary_LoadAnimSequenceIntoControlRigSection Parms{};

	Parms.MovieSceneSection = MovieSceneSection;
	Parms.AnimSequence = AnimSequence;
	Parms.SkelMeshComp = SkelMeshComp;
	Parms.InStartFrame = std::move(InStartFrame);
	Parms.TimeUnit = TimeUnit;
	Parms.bKeyReduce = bKeyReduce;
	Parms.Tolerance = Tolerance;
	Parms.Interpolation = Interpolation;
	Parms.bResetControls = bResetControls;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ControlRigEditor.ControlRigSequencerEditorLibrary.MoveConstraintKey
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UTickableConstraint*              Constraint                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMovieSceneSection*               ConstraintSection                                      (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFrameNumber                     InTime                                                 (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFrameNumber                     InNewTime                                              (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EMovieSceneTimeUnit                     TimeUnit                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UControlRigSequencerEditorLibrary::MoveConstraintKey(class UTickableConstraint* Constraint, class UMovieSceneSection* ConstraintSection, const struct FFrameNumber& InTime, const struct FFrameNumber& InNewTime, EMovieSceneTimeUnit TimeUnit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ControlRigSequencerEditorLibrary", "MoveConstraintKey");

	Params::ControlRigSequencerEditorLibrary_MoveConstraintKey Parms{};

	Parms.Constraint = Constraint;
	Parms.ConstraintSection = ConstraintSection;
	Parms.InTime = std::move(InTime);
	Parms.InNewTime = std::move(InNewTime);
	Parms.TimeUnit = TimeUnit;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ControlRigEditor.ControlRigSequencerEditorLibrary.MoveControlRigSpace
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class ULevelSequence*                   InSequence                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UControlRig*                      InControlRig                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InControlName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFrameNumber                     InTime                                                 (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFrameNumber                     InNewTime                                              (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EMovieSceneTimeUnit                     TimeUnit                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UControlRigSequencerEditorLibrary::MoveControlRigSpace(class ULevelSequence* InSequence, class UControlRig* InControlRig, class FName InControlName, const struct FFrameNumber& InTime, const struct FFrameNumber& InNewTime, EMovieSceneTimeUnit TimeUnit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ControlRigSequencerEditorLibrary", "MoveControlRigSpace");

	Params::ControlRigSequencerEditorLibrary_MoveControlRigSpace Parms{};

	Parms.InSequence = InSequence;
	Parms.InControlRig = InControlRig;
	Parms.InControlName = InControlName;
	Parms.InTime = std::move(InTime);
	Parms.InNewTime = std::move(InNewTime);
	Parms.TimeUnit = TimeUnit;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ControlRigEditor.ControlRigSequencerEditorLibrary.RenameControlRigControlChannels
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class ULevelSequence*                   InSequence                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UControlRig*                      InControlRig                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FName>                     InOldControlNames                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<class FName>                     InNewControlNames                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UControlRigSequencerEditorLibrary::RenameControlRigControlChannels(class ULevelSequence* InSequence, class UControlRig* InControlRig, const TArray<class FName>& InOldControlNames, const TArray<class FName>& InNewControlNames)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ControlRigSequencerEditorLibrary", "RenameControlRigControlChannels");

	Params::ControlRigSequencerEditorLibrary_RenameControlRigControlChannels Parms{};

	Parms.InSequence = InSequence;
	Parms.InControlRig = InControlRig;
	Parms.InOldControlNames = std::move(InOldControlNames);
	Parms.InNewControlNames = std::move(InNewControlNames);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ControlRigEditor.ControlRigSequencerEditorLibrary.SetConstraintActiveKey
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UTickableConstraint*              InConstraint                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bActive                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFrameNumber                     InFrame                                                (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EMovieSceneTimeUnit                     TimeUnit                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UControlRigSequencerEditorLibrary::SetConstraintActiveKey(class UTickableConstraint* InConstraint, bool bActive, const struct FFrameNumber& InFrame, EMovieSceneTimeUnit TimeUnit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ControlRigSequencerEditorLibrary", "SetConstraintActiveKey");

	Params::ControlRigSequencerEditorLibrary_SetConstraintActiveKey Parms{};

	Parms.InConstraint = InConstraint;
	Parms.bActive = bActive;
	Parms.InFrame = std::move(InFrame);
	Parms.TimeUnit = TimeUnit;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ControlRigEditor.ControlRigSequencerEditorLibrary.SetControlRigApplyMode
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UControlRig*                      InControlRig                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EControlRigFKRigExecuteMode             InApplyMode                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UControlRigSequencerEditorLibrary::SetControlRigApplyMode(class UControlRig* InControlRig, EControlRigFKRigExecuteMode InApplyMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ControlRigSequencerEditorLibrary", "SetControlRigApplyMode");

	Params::ControlRigSequencerEditorLibrary_SetControlRigApplyMode Parms{};

	Parms.InControlRig = InControlRig;
	Parms.InApplyMode = InApplyMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ControlRigEditor.ControlRigSequencerEditorLibrary.SetControlRigLayeredMode
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UMovieSceneControlRigParameterTrack*InTrack                                                (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSetIsLayered                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UControlRigSequencerEditorLibrary::SetControlRigLayeredMode(class UMovieSceneControlRigParameterTrack* InTrack, bool bSetIsLayered)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ControlRigSequencerEditorLibrary", "SetControlRigLayeredMode");

	Params::ControlRigSequencerEditorLibrary_SetControlRigLayeredMode Parms{};

	Parms.InTrack = InTrack;
	Parms.bSetIsLayered = bSetIsLayered;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ControlRigEditor.ControlRigSequencerEditorLibrary.SetControlRigPriorityOrder
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UMovieSceneTrack*                 InSection                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   PriorityOrder                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UControlRigSequencerEditorLibrary::SetControlRigPriorityOrder(class UMovieSceneTrack* InSection, int32 PriorityOrder)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ControlRigSequencerEditorLibrary", "SetControlRigPriorityOrder");

	Params::ControlRigSequencerEditorLibrary_SetControlRigPriorityOrder Parms{};

	Parms.InSection = InSection;
	Parms.PriorityOrder = PriorityOrder;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ControlRigEditor.ControlRigSequencerEditorLibrary.SetControlRigSpace
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class ULevelSequence*                   InSequence                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UControlRig*                      InControlRig                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InControlName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRigElementKey                   InSpaceKey                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFrameNumber                     InTime                                                 (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EMovieSceneTimeUnit                     TimeUnit                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UControlRigSequencerEditorLibrary::SetControlRigSpace(class ULevelSequence* InSequence, class UControlRig* InControlRig, class FName InControlName, const struct FRigElementKey& InSpaceKey, const struct FFrameNumber& InTime, EMovieSceneTimeUnit TimeUnit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ControlRigSequencerEditorLibrary", "SetControlRigSpace");

	Params::ControlRigSequencerEditorLibrary_SetControlRigSpace Parms{};

	Parms.InSequence = InSequence;
	Parms.InControlRig = InControlRig;
	Parms.InControlName = InControlName;
	Parms.InSpaceKey = std::move(InSpaceKey);
	Parms.InTime = std::move(InTime);
	Parms.TimeUnit = TimeUnit;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ControlRigEditor.ControlRigSequencerEditorLibrary.SetControlRigWorldTransform
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class ULevelSequence*                   LevelSequence                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UControlRig*                      ControlRig                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ControlName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFrameNumber                     Frame                                                  (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTransform                       WorldTransform                                         (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EMovieSceneTimeUnit                     TimeUnit                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSetKey                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UControlRigSequencerEditorLibrary::SetControlRigWorldTransform(class ULevelSequence* LevelSequence, class UControlRig* ControlRig, class FName ControlName, const struct FFrameNumber& Frame, const struct FTransform& WorldTransform, EMovieSceneTimeUnit TimeUnit, bool bSetKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ControlRigSequencerEditorLibrary", "SetControlRigWorldTransform");

	Params::ControlRigSequencerEditorLibrary_SetControlRigWorldTransform Parms{};

	Parms.LevelSequence = LevelSequence;
	Parms.ControlRig = ControlRig;
	Parms.ControlName = ControlName;
	Parms.Frame = std::move(Frame);
	Parms.WorldTransform = std::move(WorldTransform);
	Parms.TimeUnit = TimeUnit;
	Parms.bSetKey = bSetKey;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ControlRigEditor.ControlRigSequencerEditorLibrary.SetControlRigWorldTransforms
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class ULevelSequence*                   LevelSequence                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UControlRig*                      ControlRig                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ControlName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FFrameNumber>             Frames                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<struct FTransform>               WorldTransforms                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// EMovieSceneTimeUnit                     TimeUnit                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UControlRigSequencerEditorLibrary::SetControlRigWorldTransforms(class ULevelSequence* LevelSequence, class UControlRig* ControlRig, class FName ControlName, const TArray<struct FFrameNumber>& Frames, const TArray<struct FTransform>& WorldTransforms, EMovieSceneTimeUnit TimeUnit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ControlRigSequencerEditorLibrary", "SetControlRigWorldTransforms");

	Params::ControlRigSequencerEditorLibrary_SetControlRigWorldTransforms Parms{};

	Parms.LevelSequence = LevelSequence;
	Parms.ControlRig = ControlRig;
	Parms.ControlName = ControlName;
	Parms.Frames = std::move(Frames);
	Parms.WorldTransforms = std::move(WorldTransforms);
	Parms.TimeUnit = TimeUnit;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ControlRigEditor.ControlRigSequencerEditorLibrary.SetControlsMask
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UMovieSceneSection*               InSection                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FName>                     ControlNames                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    bVisible                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UControlRigSequencerEditorLibrary::SetControlsMask(class UMovieSceneSection* InSection, const TArray<class FName>& ControlNames, bool bVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ControlRigSequencerEditorLibrary", "SetControlsMask");

	Params::ControlRigSequencerEditorLibrary_SetControlsMask Parms{};

	Parms.InSection = InSection;
	Parms.ControlNames = std::move(ControlNames);
	Parms.bVisible = bVisible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ControlRigEditor.ControlRigSequencerEditorLibrary.SetLocalControlRigBool
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class ULevelSequence*                   LevelSequence                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UControlRig*                      ControlRig                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ControlName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFrameNumber                     Frame                                                  (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EMovieSceneTimeUnit                     TimeUnit                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSetKey                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UControlRigSequencerEditorLibrary::SetLocalControlRigBool(class ULevelSequence* LevelSequence, class UControlRig* ControlRig, class FName ControlName, const struct FFrameNumber& Frame, bool Value, EMovieSceneTimeUnit TimeUnit, bool bSetKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ControlRigSequencerEditorLibrary", "SetLocalControlRigBool");

	Params::ControlRigSequencerEditorLibrary_SetLocalControlRigBool Parms{};

	Parms.LevelSequence = LevelSequence;
	Parms.ControlRig = ControlRig;
	Parms.ControlName = ControlName;
	Parms.Frame = std::move(Frame);
	Parms.Value = Value;
	Parms.TimeUnit = TimeUnit;
	Parms.bSetKey = bSetKey;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ControlRigEditor.ControlRigSequencerEditorLibrary.SetLocalControlRigBools
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class ULevelSequence*                   LevelSequence                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UControlRig*                      ControlRig                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ControlName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FFrameNumber>             Frames                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<bool>                            Values                                                 (ConstParm, Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// EMovieSceneTimeUnit                     TimeUnit                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UControlRigSequencerEditorLibrary::SetLocalControlRigBools(class ULevelSequence* LevelSequence, class UControlRig* ControlRig, class FName ControlName, const TArray<struct FFrameNumber>& Frames, const TArray<bool>& Values, EMovieSceneTimeUnit TimeUnit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ControlRigSequencerEditorLibrary", "SetLocalControlRigBools");

	Params::ControlRigSequencerEditorLibrary_SetLocalControlRigBools Parms{};

	Parms.LevelSequence = LevelSequence;
	Parms.ControlRig = ControlRig;
	Parms.ControlName = ControlName;
	Parms.Frames = std::move(Frames);
	Parms.Values = std::move(Values);
	Parms.TimeUnit = TimeUnit;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ControlRigEditor.ControlRigSequencerEditorLibrary.SetLocalControlRigEulerTransform
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class ULevelSequence*                   LevelSequence                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UControlRig*                      ControlRig                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ControlName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFrameNumber                     Frame                                                  (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FEulerTransform                  Value                                                  (Parm, NoDestructor, NativeAccessSpecifierPublic)
// EMovieSceneTimeUnit                     TimeUnit                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSetKey                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UControlRigSequencerEditorLibrary::SetLocalControlRigEulerTransform(class ULevelSequence* LevelSequence, class UControlRig* ControlRig, class FName ControlName, const struct FFrameNumber& Frame, const struct FEulerTransform& Value, EMovieSceneTimeUnit TimeUnit, bool bSetKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ControlRigSequencerEditorLibrary", "SetLocalControlRigEulerTransform");

	Params::ControlRigSequencerEditorLibrary_SetLocalControlRigEulerTransform Parms{};

	Parms.LevelSequence = LevelSequence;
	Parms.ControlRig = ControlRig;
	Parms.ControlName = ControlName;
	Parms.Frame = std::move(Frame);
	Parms.Value = std::move(Value);
	Parms.TimeUnit = TimeUnit;
	Parms.bSetKey = bSetKey;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ControlRigEditor.ControlRigSequencerEditorLibrary.SetLocalControlRigEulerTransforms
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class ULevelSequence*                   LevelSequence                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UControlRig*                      ControlRig                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ControlName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FFrameNumber>             Frames                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<struct FEulerTransform>          Values                                                 (ConstParm, Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// EMovieSceneTimeUnit                     TimeUnit                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UControlRigSequencerEditorLibrary::SetLocalControlRigEulerTransforms(class ULevelSequence* LevelSequence, class UControlRig* ControlRig, class FName ControlName, const TArray<struct FFrameNumber>& Frames, const TArray<struct FEulerTransform>& Values, EMovieSceneTimeUnit TimeUnit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ControlRigSequencerEditorLibrary", "SetLocalControlRigEulerTransforms");

	Params::ControlRigSequencerEditorLibrary_SetLocalControlRigEulerTransforms Parms{};

	Parms.LevelSequence = LevelSequence;
	Parms.ControlRig = ControlRig;
	Parms.ControlName = ControlName;
	Parms.Frames = std::move(Frames);
	Parms.Values = std::move(Values);
	Parms.TimeUnit = TimeUnit;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ControlRigEditor.ControlRigSequencerEditorLibrary.SetLocalControlRigFloat
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class ULevelSequence*                   LevelSequence                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UControlRig*                      ControlRig                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ControlName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFrameNumber                     Frame                                                  (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EMovieSceneTimeUnit                     TimeUnit                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSetKey                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UControlRigSequencerEditorLibrary::SetLocalControlRigFloat(class ULevelSequence* LevelSequence, class UControlRig* ControlRig, class FName ControlName, const struct FFrameNumber& Frame, float Value, EMovieSceneTimeUnit TimeUnit, bool bSetKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ControlRigSequencerEditorLibrary", "SetLocalControlRigFloat");

	Params::ControlRigSequencerEditorLibrary_SetLocalControlRigFloat Parms{};

	Parms.LevelSequence = LevelSequence;
	Parms.ControlRig = ControlRig;
	Parms.ControlName = ControlName;
	Parms.Frame = std::move(Frame);
	Parms.Value = Value;
	Parms.TimeUnit = TimeUnit;
	Parms.bSetKey = bSetKey;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ControlRigEditor.ControlRigSequencerEditorLibrary.SetLocalControlRigFloats
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class ULevelSequence*                   LevelSequence                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UControlRig*                      ControlRig                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ControlName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FFrameNumber>             Frames                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<float>                           Values                                                 (ConstParm, Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// EMovieSceneTimeUnit                     TimeUnit                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UControlRigSequencerEditorLibrary::SetLocalControlRigFloats(class ULevelSequence* LevelSequence, class UControlRig* ControlRig, class FName ControlName, const TArray<struct FFrameNumber>& Frames, const TArray<float>& Values, EMovieSceneTimeUnit TimeUnit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ControlRigSequencerEditorLibrary", "SetLocalControlRigFloats");

	Params::ControlRigSequencerEditorLibrary_SetLocalControlRigFloats Parms{};

	Parms.LevelSequence = LevelSequence;
	Parms.ControlRig = ControlRig;
	Parms.ControlName = ControlName;
	Parms.Frames = std::move(Frames);
	Parms.Values = std::move(Values);
	Parms.TimeUnit = TimeUnit;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ControlRigEditor.ControlRigSequencerEditorLibrary.SetLocalControlRigInt
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class ULevelSequence*                   LevelSequence                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UControlRig*                      ControlRig                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ControlName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFrameNumber                     Frame                                                  (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EMovieSceneTimeUnit                     TimeUnit                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSetKey                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UControlRigSequencerEditorLibrary::SetLocalControlRigInt(class ULevelSequence* LevelSequence, class UControlRig* ControlRig, class FName ControlName, const struct FFrameNumber& Frame, int32 Value, EMovieSceneTimeUnit TimeUnit, bool bSetKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ControlRigSequencerEditorLibrary", "SetLocalControlRigInt");

	Params::ControlRigSequencerEditorLibrary_SetLocalControlRigInt Parms{};

	Parms.LevelSequence = LevelSequence;
	Parms.ControlRig = ControlRig;
	Parms.ControlName = ControlName;
	Parms.Frame = std::move(Frame);
	Parms.Value = Value;
	Parms.TimeUnit = TimeUnit;
	Parms.bSetKey = bSetKey;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ControlRigEditor.ControlRigSequencerEditorLibrary.SetLocalControlRigInts
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class ULevelSequence*                   LevelSequence                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UControlRig*                      ControlRig                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ControlName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FFrameNumber>             Frames                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<int32>                           Values                                                 (ConstParm, Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// EMovieSceneTimeUnit                     TimeUnit                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UControlRigSequencerEditorLibrary::SetLocalControlRigInts(class ULevelSequence* LevelSequence, class UControlRig* ControlRig, class FName ControlName, const TArray<struct FFrameNumber>& Frames, const TArray<int32>& Values, EMovieSceneTimeUnit TimeUnit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ControlRigSequencerEditorLibrary", "SetLocalControlRigInts");

	Params::ControlRigSequencerEditorLibrary_SetLocalControlRigInts Parms{};

	Parms.LevelSequence = LevelSequence;
	Parms.ControlRig = ControlRig;
	Parms.ControlName = ControlName;
	Parms.Frames = std::move(Frames);
	Parms.Values = std::move(Values);
	Parms.TimeUnit = TimeUnit;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ControlRigEditor.ControlRigSequencerEditorLibrary.SetLocalControlRigPosition
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class ULevelSequence*                   LevelSequence                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UControlRig*                      ControlRig                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ControlName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFrameNumber                     Frame                                                  (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EMovieSceneTimeUnit                     TimeUnit                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSetKey                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UControlRigSequencerEditorLibrary::SetLocalControlRigPosition(class ULevelSequence* LevelSequence, class UControlRig* ControlRig, class FName ControlName, const struct FFrameNumber& Frame, const struct FVector& Value, EMovieSceneTimeUnit TimeUnit, bool bSetKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ControlRigSequencerEditorLibrary", "SetLocalControlRigPosition");

	Params::ControlRigSequencerEditorLibrary_SetLocalControlRigPosition Parms{};

	Parms.LevelSequence = LevelSequence;
	Parms.ControlRig = ControlRig;
	Parms.ControlName = ControlName;
	Parms.Frame = std::move(Frame);
	Parms.Value = std::move(Value);
	Parms.TimeUnit = TimeUnit;
	Parms.bSetKey = bSetKey;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ControlRigEditor.ControlRigSequencerEditorLibrary.SetLocalControlRigPositions
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class ULevelSequence*                   LevelSequence                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UControlRig*                      ControlRig                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ControlName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FFrameNumber>             Frames                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<struct FVector>                  Values                                                 (ConstParm, Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// EMovieSceneTimeUnit                     TimeUnit                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UControlRigSequencerEditorLibrary::SetLocalControlRigPositions(class ULevelSequence* LevelSequence, class UControlRig* ControlRig, class FName ControlName, const TArray<struct FFrameNumber>& Frames, const TArray<struct FVector>& Values, EMovieSceneTimeUnit TimeUnit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ControlRigSequencerEditorLibrary", "SetLocalControlRigPositions");

	Params::ControlRigSequencerEditorLibrary_SetLocalControlRigPositions Parms{};

	Parms.LevelSequence = LevelSequence;
	Parms.ControlRig = ControlRig;
	Parms.ControlName = ControlName;
	Parms.Frames = std::move(Frames);
	Parms.Values = std::move(Values);
	Parms.TimeUnit = TimeUnit;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ControlRigEditor.ControlRigSequencerEditorLibrary.SetLocalControlRigRotator
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class ULevelSequence*                   LevelSequence                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UControlRig*                      ControlRig                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ControlName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFrameNumber                     Frame                                                  (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// EMovieSceneTimeUnit                     TimeUnit                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSetKey                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UControlRigSequencerEditorLibrary::SetLocalControlRigRotator(class ULevelSequence* LevelSequence, class UControlRig* ControlRig, class FName ControlName, const struct FFrameNumber& Frame, const struct FRotator& Value, EMovieSceneTimeUnit TimeUnit, bool bSetKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ControlRigSequencerEditorLibrary", "SetLocalControlRigRotator");

	Params::ControlRigSequencerEditorLibrary_SetLocalControlRigRotator Parms{};

	Parms.LevelSequence = LevelSequence;
	Parms.ControlRig = ControlRig;
	Parms.ControlName = ControlName;
	Parms.Frame = std::move(Frame);
	Parms.Value = std::move(Value);
	Parms.TimeUnit = TimeUnit;
	Parms.bSetKey = bSetKey;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ControlRigEditor.ControlRigSequencerEditorLibrary.SetLocalControlRigRotators
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class ULevelSequence*                   LevelSequence                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UControlRig*                      ControlRig                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ControlName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FFrameNumber>             Frames                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<struct FRotator>                 Values                                                 (ConstParm, Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// EMovieSceneTimeUnit                     TimeUnit                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UControlRigSequencerEditorLibrary::SetLocalControlRigRotators(class ULevelSequence* LevelSequence, class UControlRig* ControlRig, class FName ControlName, const TArray<struct FFrameNumber>& Frames, const TArray<struct FRotator>& Values, EMovieSceneTimeUnit TimeUnit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ControlRigSequencerEditorLibrary", "SetLocalControlRigRotators");

	Params::ControlRigSequencerEditorLibrary_SetLocalControlRigRotators Parms{};

	Parms.LevelSequence = LevelSequence;
	Parms.ControlRig = ControlRig;
	Parms.ControlName = ControlName;
	Parms.Frames = std::move(Frames);
	Parms.Values = std::move(Values);
	Parms.TimeUnit = TimeUnit;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ControlRigEditor.ControlRigSequencerEditorLibrary.SetLocalControlRigScale
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class ULevelSequence*                   LevelSequence                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UControlRig*                      ControlRig                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ControlName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFrameNumber                     Frame                                                  (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EMovieSceneTimeUnit                     TimeUnit                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSetKey                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UControlRigSequencerEditorLibrary::SetLocalControlRigScale(class ULevelSequence* LevelSequence, class UControlRig* ControlRig, class FName ControlName, const struct FFrameNumber& Frame, const struct FVector& Value, EMovieSceneTimeUnit TimeUnit, bool bSetKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ControlRigSequencerEditorLibrary", "SetLocalControlRigScale");

	Params::ControlRigSequencerEditorLibrary_SetLocalControlRigScale Parms{};

	Parms.LevelSequence = LevelSequence;
	Parms.ControlRig = ControlRig;
	Parms.ControlName = ControlName;
	Parms.Frame = std::move(Frame);
	Parms.Value = std::move(Value);
	Parms.TimeUnit = TimeUnit;
	Parms.bSetKey = bSetKey;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ControlRigEditor.ControlRigSequencerEditorLibrary.SetLocalControlRigScales
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class ULevelSequence*                   LevelSequence                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UControlRig*                      ControlRig                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ControlName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FFrameNumber>             Frames                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<struct FVector>                  Values                                                 (ConstParm, Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// EMovieSceneTimeUnit                     TimeUnit                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UControlRigSequencerEditorLibrary::SetLocalControlRigScales(class ULevelSequence* LevelSequence, class UControlRig* ControlRig, class FName ControlName, const TArray<struct FFrameNumber>& Frames, const TArray<struct FVector>& Values, EMovieSceneTimeUnit TimeUnit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ControlRigSequencerEditorLibrary", "SetLocalControlRigScales");

	Params::ControlRigSequencerEditorLibrary_SetLocalControlRigScales Parms{};

	Parms.LevelSequence = LevelSequence;
	Parms.ControlRig = ControlRig;
	Parms.ControlName = ControlName;
	Parms.Frames = std::move(Frames);
	Parms.Values = std::move(Values);
	Parms.TimeUnit = TimeUnit;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ControlRigEditor.ControlRigSequencerEditorLibrary.SetLocalControlRigTransform
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class ULevelSequence*                   LevelSequence                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UControlRig*                      ControlRig                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ControlName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFrameNumber                     Frame                                                  (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTransform                       Value                                                  (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EMovieSceneTimeUnit                     TimeUnit                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSetKey                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UControlRigSequencerEditorLibrary::SetLocalControlRigTransform(class ULevelSequence* LevelSequence, class UControlRig* ControlRig, class FName ControlName, const struct FFrameNumber& Frame, const struct FTransform& Value, EMovieSceneTimeUnit TimeUnit, bool bSetKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ControlRigSequencerEditorLibrary", "SetLocalControlRigTransform");

	Params::ControlRigSequencerEditorLibrary_SetLocalControlRigTransform Parms{};

	Parms.LevelSequence = LevelSequence;
	Parms.ControlRig = ControlRig;
	Parms.ControlName = ControlName;
	Parms.Frame = std::move(Frame);
	Parms.Value = std::move(Value);
	Parms.TimeUnit = TimeUnit;
	Parms.bSetKey = bSetKey;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ControlRigEditor.ControlRigSequencerEditorLibrary.SetLocalControlRigTransformNoScale
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class ULevelSequence*                   LevelSequence                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UControlRig*                      ControlRig                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ControlName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFrameNumber                     Frame                                                  (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTransformNoScale                Value                                                  (Parm, NoDestructor, NativeAccessSpecifierPublic)
// EMovieSceneTimeUnit                     TimeUnit                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSetKey                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UControlRigSequencerEditorLibrary::SetLocalControlRigTransformNoScale(class ULevelSequence* LevelSequence, class UControlRig* ControlRig, class FName ControlName, const struct FFrameNumber& Frame, const struct FTransformNoScale& Value, EMovieSceneTimeUnit TimeUnit, bool bSetKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ControlRigSequencerEditorLibrary", "SetLocalControlRigTransformNoScale");

	Params::ControlRigSequencerEditorLibrary_SetLocalControlRigTransformNoScale Parms{};

	Parms.LevelSequence = LevelSequence;
	Parms.ControlRig = ControlRig;
	Parms.ControlName = ControlName;
	Parms.Frame = std::move(Frame);
	Parms.Value = std::move(Value);
	Parms.TimeUnit = TimeUnit;
	Parms.bSetKey = bSetKey;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ControlRigEditor.ControlRigSequencerEditorLibrary.SetLocalControlRigTransformNoScales
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class ULevelSequence*                   LevelSequence                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UControlRig*                      ControlRig                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ControlName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FFrameNumber>             Frames                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<struct FTransformNoScale>        Values                                                 (ConstParm, Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// EMovieSceneTimeUnit                     TimeUnit                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UControlRigSequencerEditorLibrary::SetLocalControlRigTransformNoScales(class ULevelSequence* LevelSequence, class UControlRig* ControlRig, class FName ControlName, const TArray<struct FFrameNumber>& Frames, const TArray<struct FTransformNoScale>& Values, EMovieSceneTimeUnit TimeUnit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ControlRigSequencerEditorLibrary", "SetLocalControlRigTransformNoScales");

	Params::ControlRigSequencerEditorLibrary_SetLocalControlRigTransformNoScales Parms{};

	Parms.LevelSequence = LevelSequence;
	Parms.ControlRig = ControlRig;
	Parms.ControlName = ControlName;
	Parms.Frames = std::move(Frames);
	Parms.Values = std::move(Values);
	Parms.TimeUnit = TimeUnit;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ControlRigEditor.ControlRigSequencerEditorLibrary.SetLocalControlRigTransforms
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class ULevelSequence*                   LevelSequence                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UControlRig*                      ControlRig                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ControlName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FFrameNumber>             Frames                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<struct FTransform>               Values                                                 (ConstParm, Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// EMovieSceneTimeUnit                     TimeUnit                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UControlRigSequencerEditorLibrary::SetLocalControlRigTransforms(class ULevelSequence* LevelSequence, class UControlRig* ControlRig, class FName ControlName, const TArray<struct FFrameNumber>& Frames, const TArray<struct FTransform>& Values, EMovieSceneTimeUnit TimeUnit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ControlRigSequencerEditorLibrary", "SetLocalControlRigTransforms");

	Params::ControlRigSequencerEditorLibrary_SetLocalControlRigTransforms Parms{};

	Parms.LevelSequence = LevelSequence;
	Parms.ControlRig = ControlRig;
	Parms.ControlName = ControlName;
	Parms.Frames = std::move(Frames);
	Parms.Values = std::move(Values);
	Parms.TimeUnit = TimeUnit;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ControlRigEditor.ControlRigSequencerEditorLibrary.SetLocalControlRigVector2D
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class ULevelSequence*                   LevelSequence                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UControlRig*                      ControlRig                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ControlName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFrameNumber                     Frame                                                  (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EMovieSceneTimeUnit                     TimeUnit                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSetKey                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UControlRigSequencerEditorLibrary::SetLocalControlRigVector2D(class ULevelSequence* LevelSequence, class UControlRig* ControlRig, class FName ControlName, const struct FFrameNumber& Frame, const struct FVector2D& Value, EMovieSceneTimeUnit TimeUnit, bool bSetKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ControlRigSequencerEditorLibrary", "SetLocalControlRigVector2D");

	Params::ControlRigSequencerEditorLibrary_SetLocalControlRigVector2D Parms{};

	Parms.LevelSequence = LevelSequence;
	Parms.ControlRig = ControlRig;
	Parms.ControlName = ControlName;
	Parms.Frame = std::move(Frame);
	Parms.Value = std::move(Value);
	Parms.TimeUnit = TimeUnit;
	Parms.bSetKey = bSetKey;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ControlRigEditor.ControlRigSequencerEditorLibrary.SetLocalControlRigVector2Ds
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class ULevelSequence*                   LevelSequence                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UControlRig*                      ControlRig                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ControlName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FFrameNumber>             Frames                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<struct FVector2D>                Values                                                 (ConstParm, Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// EMovieSceneTimeUnit                     TimeUnit                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UControlRigSequencerEditorLibrary::SetLocalControlRigVector2Ds(class ULevelSequence* LevelSequence, class UControlRig* ControlRig, class FName ControlName, const TArray<struct FFrameNumber>& Frames, const TArray<struct FVector2D>& Values, EMovieSceneTimeUnit TimeUnit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ControlRigSequencerEditorLibrary", "SetLocalControlRigVector2Ds");

	Params::ControlRigSequencerEditorLibrary_SetLocalControlRigVector2Ds Parms{};

	Parms.LevelSequence = LevelSequence;
	Parms.ControlRig = ControlRig;
	Parms.ControlName = ControlName;
	Parms.Frames = std::move(Frames);
	Parms.Values = std::move(Values);
	Parms.TimeUnit = TimeUnit;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ControlRigEditor.ControlRigSequencerEditorLibrary.ShowAllControls
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UMovieSceneSection*               InSection                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UControlRigSequencerEditorLibrary::ShowAllControls(class UMovieSceneSection* InSection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ControlRigSequencerEditorLibrary", "ShowAllControls");

	Params::ControlRigSequencerEditorLibrary_ShowAllControls Parms{};

	Parms.InSection = InSection;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ControlRigEditor.ControlRigSequencerEditorLibrary.SmartReduce
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FSmartReduceParams               ReduceParams                                           (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
// class UMovieSceneSection*               MovieSceneSection                                      (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UControlRigSequencerEditorLibrary::SmartReduce(struct FSmartReduceParams* ReduceParams, class UMovieSceneSection* MovieSceneSection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ControlRigSequencerEditorLibrary", "SmartReduce");

	Params::ControlRigSequencerEditorLibrary_SmartReduce Parms{};

	Parms.MovieSceneSection = MovieSceneSection;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ReduceParams != nullptr)
		*ReduceParams = std::move(Parms.ReduceParams);

	return Parms.ReturnValue;
}


// Function ControlRigEditor.ControlRigSequencerEditorLibrary.SnapControlRig
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class ULevelSequence*                   LevelSequence                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFrameNumber                     StartFrame                                             (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFrameNumber                     EndFrame                                               (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FControlRigSnapperSelection      ChildrenToSnap                                         (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// struct FControlRigSnapperSelection      ParentToSnap                                           (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// class UControlRigSnapSettings*          SnapSettings                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EMovieSceneTimeUnit                     TimeUnit                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UControlRigSequencerEditorLibrary::SnapControlRig(class ULevelSequence* LevelSequence, const struct FFrameNumber& StartFrame, const struct FFrameNumber& EndFrame, const struct FControlRigSnapperSelection& ChildrenToSnap, const struct FControlRigSnapperSelection& ParentToSnap, const class UControlRigSnapSettings* SnapSettings, EMovieSceneTimeUnit TimeUnit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ControlRigSequencerEditorLibrary", "SnapControlRig");

	Params::ControlRigSequencerEditorLibrary_SnapControlRig Parms{};

	Parms.LevelSequence = LevelSequence;
	Parms.StartFrame = std::move(StartFrame);
	Parms.EndFrame = std::move(EndFrame);
	Parms.ChildrenToSnap = std::move(ChildrenToSnap);
	Parms.ParentToSnap = std::move(ParentToSnap);
	Parms.SnapSettings = SnapSettings;
	Parms.TimeUnit = TimeUnit;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ControlRigEditor.ControlRigSequencerEditorLibrary.SpaceCompensate
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UControlRig*                      InControlRig                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFrameNumber                     InTime                                                 (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EMovieSceneTimeUnit                     TimeUnit                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UControlRigSequencerEditorLibrary::SpaceCompensate(class UControlRig* InControlRig, const struct FFrameNumber& InTime, EMovieSceneTimeUnit TimeUnit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ControlRigSequencerEditorLibrary", "SpaceCompensate");

	Params::ControlRigSequencerEditorLibrary_SpaceCompensate Parms{};

	Parms.InControlRig = InControlRig;
	Parms.InTime = std::move(InTime);
	Parms.TimeUnit = TimeUnit;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ControlRigEditor.ControlRigSequencerEditorLibrary.TweenControlRig
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class ULevelSequence*                   LevelSequence                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UControlRig*                      ControlRig                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TweenValue                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UControlRigSequencerEditorLibrary::TweenControlRig(class ULevelSequence* LevelSequence, class UControlRig* ControlRig, float TweenValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ControlRigSequencerEditorLibrary", "TweenControlRig");

	Params::ControlRigSequencerEditorLibrary_TweenControlRig Parms{};

	Parms.LevelSequence = LevelSequence;
	Parms.ControlRig = ControlRig;
	Parms.TweenValue = TweenValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ControlRigEditor.ControlRigEditModeDelegateHelper.OnPoseInitialized
// (Final, Native, Public)

void UControlRigEditModeDelegateHelper::OnPoseInitialized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ControlRigEditModeDelegateHelper", "OnPoseInitialized");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ControlRigEditor.ControlRigEditModeDelegateHelper.PostPoseUpdate
// (Final, Native, Public)

void UControlRigEditModeDelegateHelper::PostPoseUpdate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ControlRigEditModeDelegateHelper", "PostPoseUpdate");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ControlRigEditor.ControlRigContextMenuContext.GetGraphNodeContextMenuContext
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FControlRigGraphNodeContextMenuContextReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FControlRigGraphNodeContextMenuContext UControlRigContextMenuContext::GetGraphNodeContextMenuContext()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ControlRigContextMenuContext", "GetGraphNodeContextMenuContext");

	Params::ControlRigContextMenuContext_GetGraphNodeContextMenuContext Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ControlRigEditor.ControlRigContextMenuContext.GetRigHierarchyDragAndDropContext
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FControlRigRigHierarchyDragAndDropContextReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FControlRigRigHierarchyDragAndDropContext UControlRigContextMenuContext::GetRigHierarchyDragAndDropContext()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ControlRigContextMenuContext", "GetRigHierarchyDragAndDropContext");

	Params::ControlRigContextMenuContext_GetRigHierarchyDragAndDropContext Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ControlRigEditor.ControlRigContextMenuContext.GetRigHierarchyToGraphDragAndDropContext
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FControlRigRigHierarchyToGraphDragAndDropContextReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FControlRigRigHierarchyToGraphDragAndDropContext UControlRigContextMenuContext::GetRigHierarchyToGraphDragAndDropContext()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ControlRigContextMenuContext", "GetRigHierarchyToGraphDragAndDropContext");

	Params::ControlRigContextMenuContext_GetRigHierarchyToGraphDragAndDropContext Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ControlRigEditor.ControlRigContextMenuContext.GetControlRig
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UControlRig*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UControlRig* UControlRigContextMenuContext::GetControlRig() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ControlRigContextMenuContext", "GetControlRig");

	Params::ControlRigContextMenuContext_GetControlRig Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ControlRigEditor.ControlRigContextMenuContext.GetControlRigBlueprint
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UControlRigBlueprint*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UControlRigBlueprint* UControlRigContextMenuContext::GetControlRigBlueprint() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ControlRigContextMenuContext", "GetControlRigBlueprint");

	Params::ControlRigContextMenuContext_GetControlRigBlueprint Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ControlRigEditor.ControlRigContextMenuContext.IsAltDown
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UControlRigContextMenuContext::IsAltDown() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ControlRigContextMenuContext", "IsAltDown");

	Params::ControlRigContextMenuContext_IsAltDown Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

