#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ACLPlugin

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "CoreUObject_classes.hpp"
#include "ACLPlugin_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// Class ACLPlugin.AnimationCompressionLibraryDatabase
// 0x01F0 (0x0220 - 0x0030)
class UAnimationCompressionLibraryDatabase final : public UObject
{
public:
	TArray<uint8>                                 CookedCompressedBytes;                             // 0x0030(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<uint64>                                CookedAnimSequenceMappings;                        // 0x0040(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                         Pad_50[0xF8];                                      // 0x0050(0x00F8)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         HighestImportanceProportion;                       // 0x0148(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, EditorOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         MediumImportanceProportion;                        // 0x014C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, EditorOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         LowestImportanceProportion;                        // 0x0150(0x0004)(Edit, ZeroConstructor, IsPlainOldData, EditorOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_154[0x4];                                      // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPerPlatformBool                       StripLowestImportanceTier;                         // 0x0158(0x0058)(Edit, EditorOnly, NativeAccessSpecifierPrivate)
	uint32                                        MaxStreamRequestSizeKB;                            // 0x01B0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EACLVisualFidelity                            DefaultVisualFidelity;                             // 0x01B4(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EACLVisualFidelity                            PreviewVisualFidelity;                             // 0x01B5(0x0001)(Edit, ZeroConstructor, Transient, IsPlainOldData, EditorOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1B6[0x3A];                                     // 0x01B6(0x003A)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UAnimSequence*>                  AnimSequences;                                     // 0x01F0(0x0010)(Edit, ZeroConstructor, EditConst, EditorOnly, UObjectWrapper, NativeAccessSpecifierPrivate)
	int32                                         NumAnimSequences;                                  // 0x0200(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, EditorOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         AnimSequencesOldSizeKB;                            // 0x0204(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, EditorOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         AnimSequencesNewSizeKB;                            // 0x0208(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, EditorOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         DatabaseSizeKB;                                    // 0x020C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, EditorOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         DatabaseMetadataSizeKB;                            // 0x0210(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, EditorOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         MediumImportanceSizeKB;                            // 0x0214(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, EditorOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         LowImportanceSizeSizeKB;                           // 0x0218(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, EditorOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_21C[0x4];                                      // 0x021C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static EACLVisualFidelity GetVisualFidelity(class UAnimationCompressionLibraryDatabase* DatabaseAsset);
	static void SetVisualFidelity(class UObject* WorldContextObject, const struct FLatentActionInfo& LatentInfo, class UAnimationCompressionLibraryDatabase* DatabaseAsset, EACLVisualFidelityChangeResult* Result, EACLVisualFidelity VisualFidelity);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AnimationCompressionLibraryDatabase">();
	}
	static class UAnimationCompressionLibraryDatabase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimationCompressionLibraryDatabase>();
	}
};

// Class ACLPlugin.AnimBoneCompressionCodec_ACLBase
// 0x0010 (0x0050 - 0x0040)
class UAnimBoneCompressionCodec_ACLBase : public UAnimBoneCompressionCodec
{
public:
	EACLCompressionLevel                          CompressionLevel;                                  // 0x0040(0x0001)(Edit, ZeroConstructor, IsPlainOldData, EditorOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EACLPhantomTrackMode                          PhantomTrackMode;                                  // 0x0041(0x0001)(Edit, ZeroConstructor, IsPlainOldData, EditorOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_42[0x2];                                       // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DefaultVirtualVertexDistance;                      // 0x0044(0x0004)(Edit, ZeroConstructor, IsPlainOldData, EditorOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SafeVirtualVertexDistance;                         // 0x0048(0x0004)(Edit, ZeroConstructor, IsPlainOldData, EditorOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ErrorThreshold;                                    // 0x004C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, EditorOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AnimBoneCompressionCodec_ACLBase">();
	}
	static class UAnimBoneCompressionCodec_ACLBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimBoneCompressionCodec_ACLBase>();
	}
};

// Class ACLPlugin.AnimBoneCompressionCodec_ACL
// 0x00C0 (0x0110 - 0x0050)
class UAnimBoneCompressionCodec_ACL final : public UAnimBoneCompressionCodec_ACLBase
{
public:
	TArray<class USkeletalMesh*>                  OptimizationTargets;                               // 0x0050(0x0010)(Edit, ZeroConstructor, EditorOnly, UObjectWrapper, NativeAccessSpecifierPublic)
	struct FPerPlatformFloat                      KeyframeStrippingProportion;                       // 0x0060(0x0058)(Edit, EditorOnly, NativeAccessSpecifierPublic)
	struct FPerPlatformFloat                      KeyframeStrippingThreshold;                        // 0x00B8(0x0058)(Edit, EditorOnly, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AnimBoneCompressionCodec_ACL">();
	}
	static class UAnimBoneCompressionCodec_ACL* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimBoneCompressionCodec_ACL>();
	}
};

// Class ACLPlugin.AnimBoneCompressionCodec_ACLCustom
// 0x00C8 (0x0118 - 0x0050)
class UAnimBoneCompressionCodec_ACLCustom final : public UAnimBoneCompressionCodec_ACLBase
{
public:
	EACLRotationFormat                            RotationFormat;                                    // 0x0050(0x0001)(Edit, ZeroConstructor, IsPlainOldData, EditorOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EACLVectorFormat                              TranslationFormat;                                 // 0x0051(0x0001)(Edit, ZeroConstructor, IsPlainOldData, EditorOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EACLVectorFormat                              ScaleFormat;                                       // 0x0052(0x0001)(Edit, ZeroConstructor, IsPlainOldData, EditorOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_53[0x5];                                       // 0x0053(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USkeletalMesh*>                  OptimizationTargets;                               // 0x0058(0x0010)(Edit, ZeroConstructor, EditorOnly, UObjectWrapper, NativeAccessSpecifierPublic)
	struct FPerPlatformFloat                      KeyframeStrippingProportion;                       // 0x0068(0x0058)(Edit, EditorOnly, NativeAccessSpecifierPublic)
	struct FPerPlatformFloat                      KeyframeStrippingThreshold;                        // 0x00C0(0x0058)(Edit, EditorOnly, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AnimBoneCompressionCodec_ACLCustom">();
	}
	static class UAnimBoneCompressionCodec_ACLCustom* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimBoneCompressionCodec_ACLCustom>();
	}
};

// Class ACLPlugin.AnimBoneCompressionCodec_ACLDatabase
// 0x0018 (0x0068 - 0x0050)
class UAnimBoneCompressionCodec_ACLDatabase final : public UAnimBoneCompressionCodec_ACLBase
{
public:
	class UAnimationCompressionLibraryDatabase*   DatabaseAsset;                                     // 0x0050(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class USkeletalMesh*>                  OptimizationTargets;                               // 0x0058(0x0010)(Edit, ZeroConstructor, EditorOnly, UObjectWrapper, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AnimBoneCompressionCodec_ACLDatabase">();
	}
	static class UAnimBoneCompressionCodec_ACLDatabase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimBoneCompressionCodec_ACLDatabase>();
	}
};

// Class ACLPlugin.AnimBoneCompressionCodec_ACLSafe
// 0x0000 (0x0050 - 0x0050)
class UAnimBoneCompressionCodec_ACLSafe final : public UAnimBoneCompressionCodec_ACLBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AnimBoneCompressionCodec_ACLSafe">();
	}
	static class UAnimBoneCompressionCodec_ACLSafe* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimBoneCompressionCodec_ACLSafe>();
	}
};

// Class ACLPlugin.AnimCurveCompressionCodec_ACL
// 0x0010 (0x0040 - 0x0030)
class UAnimCurveCompressionCodec_ACL final : public UAnimCurveCompressionCodec
{
public:
	float                                         CurvePrecision;                                    // 0x0030(0x0004)(Edit, ZeroConstructor, IsPlainOldData, EditorOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MorphTargetPositionPrecision;                      // 0x0034(0x0004)(Edit, ZeroConstructor, IsPlainOldData, EditorOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMesh*                          MorphTargetSource;                                 // 0x0038(0x0008)(Edit, ZeroConstructor, EditorOnly, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AnimCurveCompressionCodec_ACL">();
	}
	static class UAnimCurveCompressionCodec_ACL* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimCurveCompressionCodec_ACL>();
	}
};

}

