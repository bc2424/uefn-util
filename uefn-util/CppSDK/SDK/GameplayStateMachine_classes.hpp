#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GameplayStateMachine

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "CoreUObject_classes.hpp"
#include "GameplayStateMachine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// Class GameplayStateMachine.GameplayState
// 0x0060 (0x0090 - 0x0030)
class UGameplayState : public UObject
{
public:
	uint8                                         Pad_30[0x8];                                       // 0x0030(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           StateId;                                           // 0x0038(0x000C)(Edit, BlueprintVisible, BlueprintReadOnly, Net, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  StateRuntimeTags;                                  // 0x0048(0x0020)(Transient, Protected, NativeAccessSpecifierProtected)
	bool                                          bEvaluateTransition;                               // 0x0068(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bReplicates;                                       // 0x0069(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bStateBegun;                                       // 0x006A(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bStateEnded;                                       // 0x006B(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         InitializationServerTime;                          // 0x006C(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         BeginStateDelay;                                   // 0x0070(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameplayStateMachine*                  CachedGameplayStateMachine;                        // 0x0078(0x0008)(ZeroConstructor, Transient, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGameplayStateMachineManager*           CachedStateMachineManager;                         // 0x0080(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGameplayState*                         Hack_StateToDelayProcess;                          // 0x0088(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void AddStateRuntimeTag(const struct FGameplayTag& AddedTag);
	void BeginStateEvent(const struct FGameplayTag& PrevStateId);
	void BeginStateEventClient(const struct FGameplayTag& PrevStateId);
	void BeginStateEventServer(const struct FGameplayTag& PrevStateId);
	void EndStateEvent(const struct FGameplayTag& NextStateId);
	void EndStateEventClient(const struct FGameplayTag& NextStateId);
	void EndStateEventServer(const struct FGameplayTag& NextStateId);
	bool HasStateRuntimeTag(const struct FGameplayTag& QueryTag);
	void InitializeStateEvent(const struct FGameplayTag& PrevStateId);
	void InitializeStateEventClient(const struct FGameplayTag& PrevStateId);
	void InitializeStateEventServer(const struct FGameplayTag& PrevStateId);
	void MarkStateToEvaluateTransitions();
	void RemoveStateRuntimeTag(const struct FGameplayTag& RemovedTag);
	void UpdateStateEvent(const float DeltaTime);
	void UpdateStateEventClient(const float DeltaTime);
	void UpdateStateEventServer(const float DeltaTime);

	class UGameplayStateMachine* GetGameplayStateMachine() const;
	class AActor* GetOwningActor() const;
	struct FGameplayTag GetStateId() const;
	const struct FGameplayTagContainer GetStateRuntimeTags() const;
	bool HasAuthority() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GameplayState">();
	}
	static class UGameplayState* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGameplayState>();
	}
};

// Class GameplayStateMachine.GameplayStateMachine
// 0x0068 (0x00F8 - 0x0090)
class UGameplayStateMachine : public UGameplayState
{
public:
	uint8                                         Pad_90[0x18];                                      // 0x0090(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           StateMachineId;                                    // 0x00A8(0x000C)(Edit, BlueprintVisible, BlueprintReadOnly, Net, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FActiveGameplayStateData               ActiveGameplayStateData;                           // 0x00B8(0x0020)(Net, Transient, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FGameplayStateSettings>         GameplayStateSettings;                             // 0x00D8(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTag                           InitialGameplayStateId;                            // 0x00E8(0x000C)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_F4[0x4];                                       // 0x00F4(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void EvaluateStateTransition();
	void OnRep_ActiveGameplayStateData();
	void SetState(const struct FGameplayTag& InStateId, float InBeginStateDelay);

	struct FGameplayTag GetActiveStateId() const;
	class UGameplayState* GetActiveStateObject() const;
	struct FGameplayTag GetStateMachineId() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GameplayStateMachine">();
	}
	static class UGameplayStateMachine* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGameplayStateMachine>();
	}
};

// Class GameplayStateMachine.GameplayStateMachineManager
// 0x0128 (0x0200 - 0x00D8)
class UGameplayStateMachineManager final : public UActorComponent
{
public:
	struct FGameplayStateMachineArray             StateMachineList;                                  // 0x00D8(0x0128)(Net, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GameplayStateMachineManager">();
	}
	static class UGameplayStateMachineManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGameplayStateMachineManager>();
	}
};

}

