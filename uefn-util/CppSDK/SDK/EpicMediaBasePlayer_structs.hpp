#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: EpicMediaBasePlayer

#include "Basic.hpp"

#include "MediaUtils_structs.hpp"


namespace SDK
{

// Enum EpicMediaBasePlayer.EBaseMediaTerminalErrorReason
// NumValues: 0x0008
enum class EBaseMediaTerminalErrorReason : uint8
{
	Unknown                                  = 0,
	None                                     = 1,
	ClosedError                              = 2,
	OpenTimeout                              = 3,
	OpenFailed                               = 4,
	Source                                   = 5,
	UCP                                      = 6,
	EBaseMediaTerminalErrorReason_MAX        = 7,
};

// Enum EpicMediaBasePlayer.EEpicMediaPriorityType
// NumValues: 0x0004
enum class EEpicMediaPriorityType : uint8
{
	Primary                                  = 0,
	Secondary                                = 1,
	Music                                    = 2,
	EEpicMediaPriorityType_MAX               = 3,
};

// Enum EpicMediaBasePlayer.EBaseMediaDelayAction
// NumValues: 0x0004
enum class EBaseMediaDelayAction : uint8
{
	Open                                     = 0,
	Stop                                     = 1,
	Start                                    = 2,
	EBaseMediaDelayAction_MAX                = 3,
};

// Enum EpicMediaBasePlayer.EBaseMediaPlayerState
// NumValues: 0x0009
enum class EBaseMediaPlayerState : uint8
{
	None                                     = 0,
	Released                                 = 1,
	Stopped                                  = 2,
	Started                                  = 3,
	Opened                                   = 4,
	Playing                                  = 5,
	Ended                                    = 6,
	Error                                    = 7,
	EBaseMediaPlayerState_MAX                = 8,
};

// ScriptStruct EpicMediaBasePlayer.EpicMediaPriorityInfo
// 0x0003 (0x0003 - 0x0000)
struct FEpicMediaPriorityInfo final
{
public:
	bool                                          bCanBeInterrupted;                                 // 0x0000(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCanInterruptOtherAndHold;                         // 0x0001(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EEpicMediaPriorityType                        Type;                                              // 0x0002(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct EpicMediaBasePlayer.EpicMediaPriorityPendingInfo
// 0x00B0 (0x00B0 - 0x0000)
struct FEpicMediaPriorityPendingInfo final
{
public:
	uint8                                         Pad_0[0x10];                                       // 0x0000(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class UMediaTexture*                          MediaTexture;                                      // 0x0010(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_18[0x10];                                      // 0x0018(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMediaPlayerOptions                    MediaOptions;                                      // 0x0028(0x0080)(NativeAccessSpecifierPublic)
	struct FEpicMediaPriorityInfo                 PriorityInfo;                                      // 0x00A8(0x0003)(NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_AB[0x5];                                       // 0x00AB(0x0005)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

}

