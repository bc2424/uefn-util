#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LandscapeEditor

#include "Basic.hpp"

#include "Landscape_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// Enum LandscapeEditor.ELandscapeToolFlattenMode
// NumValues: 0x0007
enum class ELandscapeToolFlattenMode : uint8
{
	Invalid                                  = 18446744073709551615,
	Both                                     = 0,
	Raise                                    = 1,
	Lower                                    = 2,
	Interval                                 = 3,
	Terrace                                  = 4,
	ELandscapeToolFlattenMode_MAX            = 5,
};

// Enum LandscapeEditor.ELandscapeToolErosionMode
// NumValues: 0x0005
enum class ELandscapeToolErosionMode : uint8
{
	Invalid                                  = 18446744073709551615,
	Both                                     = 0,
	Raise                                    = 1,
	Lower                                    = 2,
	ELandscapeToolErosionMode_MAX            = 3,
};

// Enum LandscapeEditor.ELandscapeToolHydroErosionMode
// NumValues: 0x0004
enum class ELandscapeToolHydroErosionMode : uint8
{
	Invalid                                  = 18446744073709551615,
	Both                                     = 0,
	Positive                                 = 1,
	ELandscapeToolHydroErosionMode_MAX       = 2,
};

// Enum LandscapeEditor.ELandscapeToolNoiseMode
// NumValues: 0x0005
enum class ELandscapeToolNoiseMode : uint8
{
	Invalid                                  = 18446744073709551615,
	Both                                     = 0,
	Add                                      = 1,
	Sub                                      = 2,
	ELandscapeToolNoiseMode_MAX              = 3,
};

// Enum LandscapeEditor.ELandscapeToolPasteMode
// NumValues: 0x0005
enum class ELandscapeToolPasteMode : uint8
{
	Invalid                                  = 18446744073709551615,
	Both                                     = 0,
	Raise                                    = 1,
	Lower                                    = 2,
	ELandscapeToolPasteMode_MAX              = 3,
};

// Enum LandscapeEditor.ELandscapeConvertMode
// NumValues: 0x0005
enum class ELandscapeConvertMode : uint8
{
	Invalid                                  = 18446744073709551615,
	Expand                                   = 0,
	Clip                                     = 1,
	Resample                                 = 2,
	ELandscapeConvertMode_MAX                = 3,
};

// Enum LandscapeEditor.ELandscapeTextureColorChannel
// NumValues: 0x0005
enum class ELandscapeTextureColorChannel : uint32
{
	Red                                      = 0,
	Green                                    = 1,
	Blue                                     = 2,
	Alpha                                    = 3,
	ELandscapeTextureColorChannel_MAX        = 4,
};

// Enum LandscapeEditor.ELandscapeMirrorOperation
// NumValues: 0x0009
enum class ELandscapeMirrorOperation : uint8
{
	MinusXToPlusX                            = 0,
	PlusXToMinusX                            = 1,
	MinusYToPlusY                            = 2,
	PlusYToMinusY                            = 3,
	RotateMinusXToPlusX                      = 4,
	RotatePlusXToMinusX                      = 5,
	RotateMinusYToPlusY                      = 6,
	RotatePlusYToMinusY                      = 7,
	ELandscapeMirrorOperation_MAX            = 8,
};

// Enum LandscapeEditor.ELandscapeImportHeightmapError
// NumValues: 0x0007
enum class ELandscapeImportHeightmapError : uint8
{
	None                                     = 0,
	FileNotFound                             = 1,
	InvalidSize                              = 2,
	CorruptFile                              = 3,
	ColorPng                                 = 4,
	LowBitDepth                              = 5,
	ELandscapeImportHeightmapError_MAX       = 6,
};

// Enum LandscapeEditor.ELandscapeImportLayerError
// NumValues: 0x0007
enum class ELandscapeImportLayerError : uint8
{
	None                                     = 0,
	MissingLayerInfo                         = 1,
	FileNotFound                             = 2,
	FileSizeMismatch                         = 3,
	CorruptFile                              = 4,
	ColorPng                                 = 5,
	ELandscapeImportLayerError_MAX           = 6,
};

// Enum LandscapeEditor.ELandscapeImportExportMode
// NumValues: 0x0003
enum class ELandscapeImportExportMode : uint32
{
	LoadedOnly                               = 0,
	All                                      = 1,
	ELandscapeImportExportMode_MAX           = 2,
};

// Enum LandscapeEditor.ELandscapeImportResult
// NumValues: 0x0004
enum class ELandscapeImportResult : uint8
{
	Success                                  = 0,
	Warning                                  = 1,
	Error                                    = 2,
	ELandscapeImportResult_MAX               = 3,
};

// Enum LandscapeEditor.ELandscapeImportTransformType
// NumValues: 0x0006
enum class ELandscapeImportTransformType : uint8
{
	None                                     = 0,
	ExpandOffset                             = 1,
	ExpandCentered                           = 2,
	Resample                                 = 3,
	Subregion                                = 4,
	ELandscapeImportTransformType_MAX        = 5,
};

// ScriptStruct LandscapeEditor.GizmoImportLayer
// 0x0028 (0x0028 - 0x0000)
struct FGizmoImportLayer final
{
public:
	class FString                                 LayerFilename;                                     // 0x0000(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 LayerName;                                         // 0x0010(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bNoImport;                                         // 0x0020(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct LandscapeEditor.LandscapeImportLayer
// 0x0080 (0x00B8 - 0x0038)
struct FLandscapeImportLayer final : public FLandscapeImportLayerInfo
{
public:
	class ULandscapeMaterialInstanceConstant*     ThumbnailMIC;                                      // 0x0038(0x0008)(Edit, ZeroConstructor, EditConst, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ELandscapeImportResult                        ImportResult;                                      // 0x0040(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   ErrorMessage;                                      // 0x0048(0x0010)(Edit, EditConst, NativeAccessSpecifierPublic)
	class FString                                 ExportFilePath;                                    // 0x0058(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSelected;                                         // 0x0068(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_69[0x4F];                                      // 0x0069(0x004F)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct LandscapeEditor.LandscapePatternBrushWorldSpaceSettings
// 0x0020 (0x0020 - 0x0000)
struct FLandscapePatternBrushWorldSpaceSettings final
{
public:
	struct FVector2D                              Origin;                                            // 0x0000(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Rotation;                                          // 0x0010(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCenterTextureOnOrigin;                            // 0x0014(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RepeatSize;                                        // 0x0018(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct LandscapeEditor.LandscapeFileResolution
// 0x0008 (0x0008 - 0x0000)
struct FLandscapeFileResolution final
{
public:
	uint32                                        Width;                                             // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        Height;                                            // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct LandscapeEditor.LandscapeImportFileDescriptor
// 0x0018 (0x0018 - 0x0000)
struct FLandscapeImportFileDescriptor final
{
public:
	struct FIntPoint                              Coord;                                             // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 FilePath;                                          // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct LandscapeEditor.LandscapeImportResolution
// 0x0008 (0x0008 - 0x0000)
struct FLandscapeImportResolution final
{
public:
	uint32                                        Width;                                             // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        Height;                                            // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct LandscapeEditor.LandscapeImportDescriptor
// 0x0048 (0x0048 - 0x0000)
struct FLandscapeImportDescriptor final
{
public:
	TArray<struct FLandscapeImportResolution>     ImportResolutions;                                 // 0x0000(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FLandscapeFileResolution>       FileResolutions;                                   // 0x0010(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FLandscapeImportFileDescriptor> FileDescriptors;                                   // 0x0020(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	struct FVector                                Scale;                                             // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

}

