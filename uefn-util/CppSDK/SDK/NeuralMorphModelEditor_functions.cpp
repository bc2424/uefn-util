#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: NeuralMorphModelEditor

#include "Basic.hpp"

#include "NeuralMorphModelEditor_classes.hpp"
#include "NeuralMorphModelEditor_parameters.hpp"


namespace SDK
{

// Function NeuralMorphModelEditor.NeuralMorphTrainingModel.GenerateBoneGroupIndices
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UNeuralMorphTrainingModel::GenerateBoneGroupIndices() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NeuralMorphTrainingModel", "GenerateBoneGroupIndices");

	Params::NeuralMorphTrainingModel_GenerateBoneGroupIndices Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function NeuralMorphModelEditor.NeuralMorphTrainingModel.GenerateCurveGroupIndices
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UNeuralMorphTrainingModel::GenerateCurveGroupIndices() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NeuralMorphTrainingModel", "GenerateCurveGroupIndices");

	Params::NeuralMorphTrainingModel_GenerateCurveGroupIndices Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function NeuralMorphModelEditor.NeuralMorphTrainingModel.GetMorphTargetMasks
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<float>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<float> UNeuralMorphTrainingModel::GetMorphTargetMasks() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NeuralMorphTrainingModel", "GetMorphTargetMasks");

	Params::NeuralMorphTrainingModel_GetMorphTargetMasks Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function NeuralMorphModelEditor.NeuralMorphTrainingModel.GetNumBoneGroups
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UNeuralMorphTrainingModel::GetNumBoneGroups() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NeuralMorphTrainingModel", "GetNumBoneGroups");

	Params::NeuralMorphTrainingModel_GetNumBoneGroups Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function NeuralMorphModelEditor.NeuralMorphTrainingModel.GetNumCurveGroups
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UNeuralMorphTrainingModel::GetNumCurveGroups() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NeuralMorphTrainingModel", "GetNumCurveGroups");

	Params::NeuralMorphTrainingModel_GetNumCurveGroups Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function NeuralMorphModelEditor.NeuralMorphTrainingModel.Train
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UNeuralMorphTrainingModel::Train() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NeuralMorphTrainingModel", "Train");

	Params::NeuralMorphTrainingModel_Train Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

