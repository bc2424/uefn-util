#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PointLight

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// Class PointLight.PointLightNativeComponent
// 0x00C8 (0x01A0 - 0x00D8)
class alignas(0x10) UPointLightNativeComponent final : public UActorComponent
{
public:
	uint8                                         Pad_D8[0x88];                                      // 0x00D8(0x0088)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     ShortCircuitTimelineComponent;                     // 0x0160(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_168[0x18];                                     // 0x0168(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           FlickerColor;                                      // 0x0180(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ShortCircuitMinDelay;                              // 0x0190(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ShortCircuitMaxDelay;                              // 0x0194(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_198[0x8];                                      // 0x0198(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void StartRhythmUpdate(struct FTimerHandle* TimerHandle, float Rate);
	void StartShortCircuitUpdate(class UTimelineComponent* ShortCircuitTimeline);
	void StopShortCircuitUpdate();
	void UpdateDeviceSettings(const struct FPointLightRhythmParameters& RhythmParameters);
	void UpdateShortCircuit();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PointLightNativeComponent">();
	}
	static class UPointLightNativeComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPointLightNativeComponent>();
	}
};

}

