#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LodeSwanGameplay

#include "Basic.hpp"

#include "LodeSwanGameplay_classes.hpp"
#include "LodeSwanGameplay_parameters.hpp"


namespace SDK
{

// Function LodeSwanGameplay.LodeSwan_FootDive_Telegraph.OnTelegraphIsOnWater
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsOnWater                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ALodeSwan_FootDive_Telegraph::OnTelegraphIsOnWater(bool bIsOnWater)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LodeSwan_FootDive_Telegraph", "OnTelegraphIsOnWater");

	Params::LodeSwan_FootDive_Telegraph_OnTelegraphIsOnWater Parms{};

	Parms.bIsOnWater = bIsOnWater;

	UObject::ProcessEvent(Func, &Parms);
}


// Function LodeSwanGameplay.PawnComponent_LodeSwan.SetFootDiveAngle
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InFootDiveAngle                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPawnComponent_LodeSwan::SetFootDiveAngle(float InFootDiveAngle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PawnComponent_LodeSwan", "SetFootDiveAngle");

	Params::PawnComponent_LodeSwan_SetFootDiveAngle Parms{};

	Parms.InFootDiveAngle = InFootDiveAngle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LodeSwanGameplay.PawnComponent_LodeSwan.SetLaserHitLocation
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          InLaserHitLocation                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPawnComponent_LodeSwan::SetLaserHitLocation(const struct FVector& InLaserHitLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PawnComponent_LodeSwan", "SetLaserHitLocation");

	Params::PawnComponent_LodeSwan_SetLaserHitLocation Parms{};

	Parms.InLaserHitLocation = std::move(InLaserHitLocation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LodeSwanGameplay.PawnComponent_LodeSwan.GetFootDiveAngle
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UPawnComponent_LodeSwan::GetFootDiveAngle() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PawnComponent_LodeSwan", "GetFootDiveAngle");

	Params::PawnComponent_LodeSwan_GetFootDiveAngle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LodeSwanGameplay.PawnComponent_LodeSwan.GetLaserHitLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UPawnComponent_LodeSwan::GetLaserHitLocation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PawnComponent_LodeSwan", "GetLaserHitLocation");

	Params::PawnComponent_LodeSwan_GetLaserHitLocation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

