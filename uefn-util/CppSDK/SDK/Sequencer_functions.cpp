#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Sequencer

#include "Basic.hpp"

#include "Sequencer_classes.hpp"
#include "Sequencer_parameters.hpp"


namespace SDK
{

// Function Sequencer.SequencerModuleOutlinerScriptingObject.GetNextKey
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct FSequencerViewModelScriptingStruct>InNodes                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FFrameNumber                     FrameNumber                                            (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EMovieSceneTimeUnit                     TimeUnit                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFrameNumber                     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FFrameNumber USequencerModuleOutlinerScriptingObject::GetNextKey(const TArray<struct FSequencerViewModelScriptingStruct>& InNodes, const struct FFrameNumber& FrameNumber, EMovieSceneTimeUnit TimeUnit) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SequencerModuleOutlinerScriptingObject", "GetNextKey");

	Params::SequencerModuleOutlinerScriptingObject_GetNextKey Parms{};

	Parms.InNodes = std::move(InNodes);
	Parms.FrameNumber = std::move(FrameNumber);
	Parms.TimeUnit = TimeUnit;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Sequencer.SequencerModuleOutlinerScriptingObject.GetPreviousKey
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct FSequencerViewModelScriptingStruct>InNodes                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FFrameNumber                     FrameNumber                                            (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EMovieSceneTimeUnit                     TimeUnit                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFrameNumber                     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FFrameNumber USequencerModuleOutlinerScriptingObject::GetPreviousKey(const TArray<struct FSequencerViewModelScriptingStruct>& InNodes, const struct FFrameNumber& FrameNumber, EMovieSceneTimeUnit TimeUnit) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SequencerModuleOutlinerScriptingObject", "GetPreviousKey");

	Params::SequencerModuleOutlinerScriptingObject_GetPreviousKey Parms{};

	Parms.InNodes = std::move(InNodes);
	Parms.FrameNumber = std::move(FrameNumber);
	Parms.TimeUnit = TimeUnit;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Sequencer.SequencerModuleScriptingLayer.GetOutliner
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class USequencerModuleOutlinerScriptingObject*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USequencerModuleOutlinerScriptingObject* USequencerModuleScriptingLayer::GetOutliner()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SequencerModuleScriptingLayer", "GetOutliner");

	Params::SequencerModuleScriptingLayer_GetOutliner Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

