#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LodeSwanVictoryPlacementOverlay

#include "Basic.hpp"

#include "LodeSwanVictoryPlacementOverlay_classes.hpp"
#include "LodeSwanVictoryPlacementOverlay_parameters.hpp"


namespace SDK
{

// Function LodeSwanVictoryPlacementOverlay.LodeSwanVictoryPlacementOverlay_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void ULodeSwanVictoryPlacementOverlay_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LodeSwanVictoryPlacementOverlay_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LodeSwanVictoryPlacementOverlay.LodeSwanVictoryPlacementOverlay_C.EventXPLayout
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Placement                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ULodeSwanVictoryPlacementOverlay_C::EventXPLayout(class FName Placement)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LodeSwanVictoryPlacementOverlay_C", "EventXPLayout");

	Params::LodeSwanVictoryPlacementOverlay_C_EventXPLayout Parms{};

	Parms.Placement = Placement;

	UObject::ProcessEvent(Func, &Parms);
}


// Function LodeSwanVictoryPlacementOverlay.LodeSwanVictoryPlacementOverlay_C.ExecuteUbergraph_LodeSwanVictoryPlacementOverlay
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ULodeSwanVictoryPlacementOverlay_C::ExecuteUbergraph_LodeSwanVictoryPlacementOverlay(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LodeSwanVictoryPlacementOverlay_C", "ExecuteUbergraph_LodeSwanVictoryPlacementOverlay");

	Params::LodeSwanVictoryPlacementOverlay_C_ExecuteUbergraph_LodeSwanVictoryPlacementOverlay Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function LodeSwanVictoryPlacementOverlay.LodeSwanVictoryPlacementOverlay_C.HandleExtensionWidgetCreated
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UUserWidget*                      Widget                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// EUIExtensionSlot                        SlotType                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ULodeSwanVictoryPlacementOverlay_C::HandleExtensionWidgetCreated(class UUserWidget* Widget, EUIExtensionSlot SlotType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LodeSwanVictoryPlacementOverlay_C", "HandleExtensionWidgetCreated");

	Params::LodeSwanVictoryPlacementOverlay_C_HandleExtensionWidgetCreated Parms{};

	Parms.Widget = Widget;
	Parms.SlotType = SlotType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function LodeSwanVictoryPlacementOverlay.LodeSwanVictoryPlacementOverlay_C.New Item Anim End
// (BlueprintCallable, BlueprintEvent)

void ULodeSwanVictoryPlacementOverlay_C::New_Item_Anim_End()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LodeSwanVictoryPlacementOverlay_C", "New Item Anim End");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LodeSwanVictoryPlacementOverlay.LodeSwanVictoryPlacementOverlay_C.New Item Anim Start
// (BlueprintCallable, BlueprintEvent)

void ULodeSwanVictoryPlacementOverlay_C::New_Item_Anim_Start()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LodeSwanVictoryPlacementOverlay_C", "New Item Anim Start");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LodeSwanVictoryPlacementOverlay.LodeSwanVictoryPlacementOverlay_C.PlayVictoryExtensionAnimation
// (BlueprintCallable, BlueprintEvent)

void ULodeSwanVictoryPlacementOverlay_C::PlayVictoryExtensionAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LodeSwanVictoryPlacementOverlay_C", "PlayVictoryExtensionAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LodeSwanVictoryPlacementOverlay.LodeSwanVictoryPlacementOverlay_C.ShowLosingPlacement
// (Event, Protected, BlueprintEvent)

void ULodeSwanVictoryPlacementOverlay_C::ShowLosingPlacement()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LodeSwanVictoryPlacementOverlay_C", "ShowLosingPlacement");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LodeSwanVictoryPlacementOverlay.LodeSwanVictoryPlacementOverlay_C.ShowTiePlacement
// (Event, Protected, BlueprintEvent)

void ULodeSwanVictoryPlacementOverlay_C::ShowTiePlacement()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LodeSwanVictoryPlacementOverlay_C", "ShowTiePlacement");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LodeSwanVictoryPlacementOverlay.LodeSwanVictoryPlacementOverlay_C.ShowWinningPlacement
// (Event, Protected, BlueprintEvent)

void ULodeSwanVictoryPlacementOverlay_C::ShowWinningPlacement()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LodeSwanVictoryPlacementOverlay_C", "ShowWinningPlacement");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LodeSwanVictoryPlacementOverlay.LodeSwanVictoryPlacementOverlay_C.XP Layout Anim Finished
// (BlueprintCallable, BlueprintEvent)

void ULodeSwanVictoryPlacementOverlay_C::XP_Layout_Anim_Finished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LodeSwanVictoryPlacementOverlay_C", "XP Layout Anim Finished");

	UObject::ProcessEvent(Func, nullptr);
}

}

