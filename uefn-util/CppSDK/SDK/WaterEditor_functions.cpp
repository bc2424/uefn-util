#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WaterEditor

#include "Basic.hpp"

#include "WaterEditor_classes.hpp"
#include "WaterEditor_parameters.hpp"


namespace SDK
{

// Function WaterEditor.CausticsGeneratorActor.EditorTick
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACausticsGeneratorActor::EditorTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CausticsGeneratorActor", "EditorTick");

	Params::CausticsGeneratorActor_EditorTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function WaterEditor.CausticsGeneratorActor.SetEditorTickEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bEnabled                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACausticsGeneratorActor::SetEditorTickEnabled(bool bEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CausticsGeneratorActor", "SetEditorTickEnabled");

	Params::CausticsGeneratorActor_SetEditorTickEnabled Parms{};

	Parms.bEnabled = bEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function WaterEditor.CausticsGeneratorActor.SpawnCausticParticleGrid
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UHierarchicalInstancedStaticMeshComponent*HISMC                                                  (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   GridSize                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   GridTiles                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACausticsGeneratorActor::SpawnCausticParticleGrid(class UHierarchicalInstancedStaticMeshComponent* HISMC, float GridSize, int32 GridTiles)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CausticsGeneratorActor", "SpawnCausticParticleGrid");

	Params::CausticsGeneratorActor_SpawnCausticParticleGrid Parms{};

	Parms.HISMC = HISMC;
	Parms.GridSize = GridSize;
	Parms.GridTiles = GridTiles;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function WaterEditor.CausticsGeneratorActor.SpawnWaterPreviewGrid
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UHierarchicalInstancedStaticMeshComponent*HISMC                                                  (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   GridSize                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   GridTiles                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACausticsGeneratorActor::SpawnWaterPreviewGrid(class UHierarchicalInstancedStaticMeshComponent* HISMC, float GridSize, int32 GridTiles)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CausticsGeneratorActor", "SpawnWaterPreviewGrid");

	Params::CausticsGeneratorActor_SpawnWaterPreviewGrid Parms{};

	Parms.HISMC = HISMC;
	Parms.GridSize = GridSize;
	Parms.GridTiles = GridTiles;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function WaterEditor.JumpFloodComponent2D.AssignRenderTargets
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTextureRenderTarget2D*           InRTA                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTextureRenderTarget2D*           InRTB                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UJumpFloodComponent2D::AssignRenderTargets(class UTextureRenderTarget2D* InRTA, class UTextureRenderTarget2D* InRTB)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JumpFloodComponent2D", "AssignRenderTargets");

	Params::JumpFloodComponent2D_AssignRenderTargets Parms{};

	Parms.InRTA = InRTA;
	Parms.InRTB = InRTB;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function WaterEditor.JumpFloodComponent2D.CreateMIDs
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UJumpFloodComponent2D::CreateMIDs()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JumpFloodComponent2D", "CreateMIDs");

	Params::JumpFloodComponent2D_CreateMIDs Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function WaterEditor.JumpFloodComponent2D.FindEdges
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UTextureRenderTarget2D*           SeedRT                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   CaptureZ                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     Curl                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    UseDepth                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ZxLocationT                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTextureRenderTarget2D*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTextureRenderTarget2D* UJumpFloodComponent2D::FindEdges(class UTextureRenderTarget2D* SeedRT, float CaptureZ, const struct FLinearColor& Curl, bool UseDepth, float ZxLocationT)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JumpFloodComponent2D", "FindEdges");

	Params::JumpFloodComponent2D_FindEdges Parms{};

	Parms.SeedRT = SeedRT;
	Parms.CaptureZ = CaptureZ;
	Parms.Curl = std::move(Curl);
	Parms.UseDepth = UseDepth;
	Parms.ZxLocationT = ZxLocationT;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function WaterEditor.JumpFloodComponent2D.FindEdges_Debug
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UTextureRenderTarget2D*           SeedRT                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   CaptureZ                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     Curl                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTextureRenderTarget2D*           DestRT                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ZOffset                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UJumpFloodComponent2D::FindEdges_Debug(class UTextureRenderTarget2D* SeedRT, float CaptureZ, const struct FLinearColor& Curl, class UTextureRenderTarget2D* DestRT, float ZOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JumpFloodComponent2D", "FindEdges_Debug");

	Params::JumpFloodComponent2D_FindEdges_Debug Parms{};

	Parms.SeedRT = SeedRT;
	Parms.CaptureZ = CaptureZ;
	Parms.Curl = std::move(Curl);
	Parms.DestRT = DestRT;
	Parms.ZOffset = ZOffset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function WaterEditor.JumpFloodComponent2D.JumpFlood
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UTextureRenderTarget2D*           SeedRT                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   SceneCaptureZ                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     Curl                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    UseDepth                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ZxLocationT                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UJumpFloodComponent2D::JumpFlood(class UTextureRenderTarget2D* SeedRT, float SceneCaptureZ, const struct FLinearColor& Curl, bool UseDepth, float ZxLocationT)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JumpFloodComponent2D", "JumpFlood");

	Params::JumpFloodComponent2D_JumpFlood Parms{};

	Parms.SeedRT = SeedRT;
	Parms.SceneCaptureZ = SceneCaptureZ;
	Parms.Curl = std::move(Curl);
	Parms.UseDepth = UseDepth;
	Parms.ZxLocationT = ZxLocationT;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function WaterEditor.JumpFloodComponent2D.SingleBlurStep
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTextureRenderTarget2D*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTextureRenderTarget2D* UJumpFloodComponent2D::SingleBlurStep()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JumpFloodComponent2D", "SingleBlurStep");

	Params::JumpFloodComponent2D_SingleBlurStep Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function WaterEditor.JumpFloodComponent2D.SingleJumpStep
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTextureRenderTarget2D*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTextureRenderTarget2D* UJumpFloodComponent2D::SingleJumpStep()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JumpFloodComponent2D", "SingleJumpStep");

	Params::JumpFloodComponent2D_SingleJumpStep Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function WaterEditor.WaterLandscapeBrush.BlueprintGetRenderTargets
// (Native, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class UTextureRenderTarget2D*           InHeightRenderTarget                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTextureRenderTarget2D*           OutVelocityRenderTarget                                (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWaterLandscapeBrush::BlueprintGetRenderTargets(class UTextureRenderTarget2D* InHeightRenderTarget, class UTextureRenderTarget2D** OutVelocityRenderTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WaterLandscapeBrush", "BlueprintGetRenderTargets");

	Params::WaterLandscapeBrush_BlueprintGetRenderTargets Parms{};

	Parms.InHeightRenderTarget = InHeightRenderTarget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutVelocityRenderTarget != nullptr)
		*OutVelocityRenderTarget = Parms.OutVelocityRenderTarget;
}


// Function WaterEditor.WaterLandscapeBrush.BlueprintOnRenderTargetTexturesUpdated
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class UTexture2D*                       VelocityTexture                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWaterLandscapeBrush::BlueprintOnRenderTargetTexturesUpdated(class UTexture2D* VelocityTexture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WaterLandscapeBrush", "BlueprintOnRenderTargetTexturesUpdated");

	Params::WaterLandscapeBrush_BlueprintOnRenderTargetTexturesUpdated Parms{};

	Parms.VelocityTexture = VelocityTexture;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function WaterEditor.WaterLandscapeBrush.BlueprintWaterBodiesChanged
// (Native, Event, Public, BlueprintEvent)

void AWaterLandscapeBrush::BlueprintWaterBodiesChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WaterLandscapeBrush", "BlueprintWaterBodiesChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function WaterEditor.WaterLandscapeBrush.BlueprintWaterBodyChanged
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWaterLandscapeBrush::BlueprintWaterBodyChanged(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WaterLandscapeBrush", "BlueprintWaterBodyChanged");

	Params::WaterLandscapeBrush_BlueprintWaterBodyChanged Parms{};

	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function WaterEditor.WaterLandscapeBrush.ClearActorCache
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWaterLandscapeBrush::ClearActorCache(class AActor* InActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WaterLandscapeBrush", "ClearActorCache");

	Params::WaterLandscapeBrush_ClearActorCache Parms{};

	Parms.InActor = InActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function WaterEditor.WaterLandscapeBrush.ClearWaterBodyCache
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AWaterBody*                       WaterBody                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWaterLandscapeBrush::ClearWaterBodyCache(class AWaterBody* WaterBody)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WaterLandscapeBrush", "ClearWaterBodyCache");

	Params::WaterLandscapeBrush_ClearWaterBodyCache Parms{};

	Parms.WaterBody = WaterBody;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function WaterEditor.WaterLandscapeBrush.ForceWaterTextureUpdate
// (Final, Native, Public, BlueprintCallable)

void AWaterLandscapeBrush::ForceWaterTextureUpdate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WaterLandscapeBrush", "ForceWaterTextureUpdate");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function WaterEditor.WaterLandscapeBrush.SetActorCache
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          InCache                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWaterLandscapeBrush::SetActorCache(class AActor* InActor, class UObject* InCache)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WaterLandscapeBrush", "SetActorCache");

	Params::WaterLandscapeBrush_SetActorCache Parms{};

	Parms.InActor = InActor;
	Parms.InCache = InCache;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function WaterEditor.WaterLandscapeBrush.SetWaterBodyCache
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AWaterBody*                       WaterBody                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          InCache                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWaterLandscapeBrush::SetWaterBodyCache(class AWaterBody* WaterBody, class UObject* InCache)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WaterLandscapeBrush", "SetWaterBodyCache");

	Params::WaterLandscapeBrush_SetWaterBodyCache Parms{};

	Parms.WaterBody = WaterBody;
	Parms.InCache = InCache;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function WaterEditor.WaterLandscapeBrush.GetActorCache
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UObject>              CacheClass                                             (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UObject* AWaterLandscapeBrush::GetActorCache(class AActor* InActor, TSubclassOf<class UObject> CacheClass) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WaterLandscapeBrush", "GetActorCache");

	Params::WaterLandscapeBrush_GetActorCache Parms{};

	Parms.InActor = InActor;
	Parms.CacheClass = CacheClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function WaterEditor.WaterLandscapeBrush.GetActorsAffectingLandscape
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<TScriptInterface<class IWaterBrushActorInterface>>OutWaterBrushActors                                    (Parm, OutParm, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)

void AWaterLandscapeBrush::GetActorsAffectingLandscape(TArray<TScriptInterface<class IWaterBrushActorInterface>>* OutWaterBrushActors) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WaterLandscapeBrush", "GetActorsAffectingLandscape");

	Params::WaterLandscapeBrush_GetActorsAffectingLandscape Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutWaterBrushActors != nullptr)
		*OutWaterBrushActors = std::move(Parms.OutWaterBrushActors);
}


// Function WaterEditor.WaterLandscapeBrush.GetWaterBodies
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class AWaterBody>           WaterBodyClass                                         (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AWaterBody*>               OutWaterBodies                                         (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void AWaterLandscapeBrush::GetWaterBodies(TSubclassOf<class AWaterBody> WaterBodyClass, TArray<class AWaterBody*>* OutWaterBodies) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WaterLandscapeBrush", "GetWaterBodies");

	Params::WaterLandscapeBrush_GetWaterBodies Parms{};

	Parms.WaterBodyClass = WaterBodyClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutWaterBodies != nullptr)
		*OutWaterBodies = std::move(Parms.OutWaterBodies);
}


// Function WaterEditor.WaterLandscapeBrush.GetWaterBodyCache
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AWaterBody*                       WaterBody                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UObject>              CacheClass                                             (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UObject* AWaterLandscapeBrush::GetWaterBodyCache(class AWaterBody* WaterBody, TSubclassOf<class UObject> CacheClass) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WaterLandscapeBrush", "GetWaterBodyCache");

	Params::WaterLandscapeBrush_GetWaterBodyCache Parms{};

	Parms.WaterBody = WaterBody;
	Parms.CacheClass = CacheClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function WaterEditor.WaterLandscapeBrush.GetWaterBodyIslands
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class AWaterBodyIsland>     WaterBodyIslandClass                                   (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AWaterBodyIsland*>         OutWaterBodyIslands                                    (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void AWaterLandscapeBrush::GetWaterBodyIslands(TSubclassOf<class AWaterBodyIsland> WaterBodyIslandClass, TArray<class AWaterBodyIsland*>* OutWaterBodyIslands) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WaterLandscapeBrush", "GetWaterBodyIslands");

	Params::WaterLandscapeBrush_GetWaterBodyIslands Parms{};

	Parms.WaterBodyIslandClass = WaterBodyIslandClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutWaterBodyIslands != nullptr)
		*OutWaterBodyIslands = std::move(Parms.OutWaterBodyIslands);
}


// Function WaterEditor.WaterBrushManager.FindEdges
// (Native, Public, BlueprintCallable)

void AWaterBrushManager::FindEdges()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WaterBrushManager", "FindEdges");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function WaterEditor.WaterBrushManager.ForceUpdate
// (Native, Public, BlueprintCallable)

void AWaterBrushManager::ForceUpdate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WaterBrushManager", "ForceUpdate");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function WaterEditor.WaterBrushManager.GetWaterCacheKey
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class AActor*                           WaterBrush                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWaterBodyBrushCacheContainer*    ContainerObject                                        (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FWaterBodyBrushCache             Value                                                  (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)

void AWaterBrushManager::GetWaterCacheKey(class AActor* WaterBrush, class UWaterBodyBrushCacheContainer** ContainerObject, struct FWaterBodyBrushCache* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WaterBrushManager", "GetWaterCacheKey");

	Params::WaterBrushManager_GetWaterCacheKey Parms{};

	Parms.WaterBrush = WaterBrush;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ContainerObject != nullptr)
		*ContainerObject = Parms.ContainerObject;

	if (Value != nullptr)
		*Value = std::move(Parms.Value);
}


// Function WaterEditor.WaterBrushManager.SetupDefaultMaterials
// (Final, Native, Public, BlueprintCallable)

void AWaterBrushManager::SetupDefaultMaterials()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WaterBrushManager", "SetupDefaultMaterials");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function WaterEditor.WaterBrushManager.SingleBlurStep
// (Native, Public, BlueprintCallable)

void AWaterBrushManager::SingleBlurStep()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WaterBrushManager", "SingleBlurStep");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function WaterEditor.WaterBrushManager.SingleJumpStep
// (Native, Public, BlueprintCallable)

void AWaterBrushManager::SingleJumpStep()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WaterBrushManager", "SingleJumpStep");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function WaterEditor.WaterBrushManager.SortWaterBodiesForBrushRender
// (Native, Event, Public, HasOutParams, BlueprintEvent, Const)
// Parameters:
// TArray<class AWaterBody*>               InOutWaterBodies                                       (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void AWaterBrushManager::SortWaterBodiesForBrushRender(TArray<class AWaterBody*>* InOutWaterBodies) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WaterBrushManager", "SortWaterBodiesForBrushRender");

	Params::WaterBrushManager_SortWaterBodiesForBrushRender Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (InOutWaterBodies != nullptr)
		*InOutWaterBodies = std::move(Parms.InOutWaterBodies);
}

}

