#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: VariantManager

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "CoreUObject_classes.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// Class VariantManager.PropertyTemplateObject
// 0x00C8 (0x00F8 - 0x0030)
class UPropertyTemplateObject final : public UObject
{
public:
	uint8                                         CapturedByteProperty;                              // 0x0030(0x0001)(Edit, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x1];                                       // 0x0031(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	uint16                                        CapturedUInt16Property;                            // 0x0032(0x0002)(Edit, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        CapturedUInt32Property;                            // 0x0034(0x0004)(Edit, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint64                                        CapturedUInt64Property;                            // 0x0038(0x0008)(Edit, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int8                                          CapturedInt8Property;                              // 0x0040(0x0001)(Edit, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_41[0x1];                                       // 0x0041(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int16                                         CapturedInt16Property;                             // 0x0042(0x0002)(Edit, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         CapturedIntProperty;                               // 0x0044(0x0004)(Edit, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         CapturedInt64Property;                             // 0x0048(0x0008)(Edit, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CapturedFloatProperty;                             // 0x0050(0x0004)(Edit, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CapturedDoubleProperty;                            // 0x0058(0x0008)(Edit, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCapturedBoolProperty;                             // 0x0060(0x0001)(Edit, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CapturedObjectProperty;                            // 0x0068(0x0008)(Edit, ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UObject>                 CapturedSoftObjectProperty;                        // 0x0070(0x0030)(Edit, Transient, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TScriptInterface<class IInterface>            CapturedInterfaceProperty;                         // 0x00A0(0x0010)(Edit, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   CapturedNameProperty;                              // 0x00B0(0x000C)(Edit, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CapturedStrProperty;                               // 0x00C0(0x0010)(Edit, ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   CapturedTextProperty;                              // 0x00D0(0x0010)(Edit, Transient, NativeAccessSpecifierPublic)
	struct FVector                                CapturedVectorProperty;                            // 0x00E0(0x0018)(Edit, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PropertyTemplateObject">();
	}
	static class UPropertyTemplateObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPropertyTemplateObject>();
	}
};

// Class VariantManager.VariantManagerBlueprintLibrary
// 0x0000 (0x0030 - 0x0030)
class UVariantManagerBlueprintLibrary final : public UBlueprintFunctionLibrary
{
public:
	static void AddActorBinding(class UVariant* Variant, class AActor* Actor);
	static int32 AddDependency(class UVariant* Variant, struct FVariantDependency& Dependency);
	static void AddVariant(class UVariantSet* VariantSet, class UVariant* Variant);
	static void AddVariantSet(class ULevelVariantSets* LevelVariantSets, class UVariantSet* VariantSet);
	static void Apply(class UPropertyValue* PropVal);
	static class UPropertyValue* CaptureProperty(class UVariant* Variant, class AActor* Actor, const class FString& PropertyPath);
	static class ALevelVariantSetsActor* CreateLevelVariantSetsActor(class ULevelVariantSets* LevelVariantSetsAsset);
	static class ULevelVariantSets* CreateLevelVariantSetsAsset(const class FString& AssetName, const class FString& AssetPath);
	static void DeleteDependency(class UVariant* Variant, int32 Index_0);
	static TArray<class FString> GetCapturableProperties(class UObject* ActorOrClass);
	static TArray<class UPropertyValue*> GetCapturedProperties(class UVariant* Variant, class AActor* Actor);
	static class FString GetPropertyTypeString(class UPropertyValue* PropVal);
	static bool GetValueBool(class UPropertyValue* Property);
	static struct FColor GetValueColor(class UPropertyValue* Property);
	static float GetValueFloat(class UPropertyValue* Property);
	static int32 GetValueInt(class UPropertyValue* Property);
	static struct FIntPoint GetValueIntPoint(class UPropertyValue* Property);
	static struct FLinearColor GetValueLinearColor(class UPropertyValue* Property);
	static class UObject* GetValueObject(class UPropertyValue* Property);
	static struct FQuat GetValueQuat(class UPropertyValue* Property);
	static struct FRotator GetValueRotator(class UPropertyValue* Property);
	static class FString GetValueString(class UPropertyValue* Property);
	static struct FVector GetValueVector(class UPropertyValue* Property);
	static struct FVector2D GetValueVector2D(class UPropertyValue* Property);
	static struct FVector4 GetValueVector4(class UPropertyValue* Property);
	static void Record(class UPropertyValue* PropVal);
	static void RemoveActorBinding(class UVariant* Variant, class AActor* Actor);
	static void RemoveActorBindingByName(class UVariant* Variant, const class FString& ActorName);
	static void RemoveCapturedProperty(class UVariant* Variant, class AActor* Actor, class UPropertyValue* Property);
	static void RemoveCapturedPropertyByName(class UVariant* Variant, class AActor* Actor, const class FString& PropertyPath);
	static void RemoveVariant(class UVariantSet* VariantSet, class UVariant* Variant);
	static void RemoveVariantByName(class UVariantSet* VariantSet, const class FString& VariantName);
	static void RemoveVariantSet(class ULevelVariantSets* LevelVariantSets, class UVariantSet* VariantSet);
	static void RemoveVariantSetByName(class ULevelVariantSets* LevelVariantSets, const class FString& VariantSetName);
	static void SetDependency(class UVariant* Variant, int32 Index_0, struct FVariantDependency& Dependency);
	static void SetValueBool(class UPropertyValue* Property, bool InValue);
	static void SetValueColor(class UPropertyValue* Property, const struct FColor& InValue);
	static void SetValueFloat(class UPropertyValue* Property, float InValue);
	static void SetValueInt(class UPropertyValue* Property, int32 InValue);
	static void SetValueIntPoint(class UPropertyValue* Property, const struct FIntPoint& InValue);
	static void SetValueLinearColor(class UPropertyValue* Property, const struct FLinearColor& InValue);
	static void SetValueObject(class UPropertyValue* Property, class UObject* InValue);
	static void SetValueQuat(class UPropertyValue* Property, const struct FQuat& InValue);
	static void SetValueRotator(class UPropertyValue* Property, const struct FRotator& InValue);
	static void SetValueString(class UPropertyValue* Property, const class FString& InValue);
	static void SetValueVector(class UPropertyValue* Property, const struct FVector& InValue);
	static void SetValueVector2D(class UPropertyValue* Property, const struct FVector2D& InValue);
	static void SetValueVector4(class UPropertyValue* Property, const struct FVector4& InValue);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"VariantManagerBlueprintLibrary">();
	}
	static class UVariantManagerBlueprintLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVariantManagerBlueprintLibrary>();
	}
};

}

