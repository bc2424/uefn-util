#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: NearestNeighborModel

#include "Basic.hpp"

#include "NearestNeighborModel_classes.hpp"
#include "NearestNeighborModel_parameters.hpp"


namespace SDK
{

// Function NearestNeighborModel.NearestNeighborOptimizedNetwork.Empty
// (Native, Public, BlueprintCallable)

void UNearestNeighborOptimizedNetwork::Empty()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NearestNeighborOptimizedNetwork", "Empty");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function NearestNeighborModel.NearestNeighborOptimizedNetworkLoader.LoadOptimizedNetwork
// (Event, Public, BlueprintEvent)
// Parameters:
// class FString                           OnnxPath                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UNearestNeighborOptimizedNetworkLoader::LoadOptimizedNetwork(const class FString& OnnxPath)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NearestNeighborOptimizedNetworkLoader", "LoadOptimizedNetwork");

	Params::NearestNeighborOptimizedNetworkLoader_LoadOptimizedNetwork Parms{};

	Parms.OnnxPath = std::move(OnnxPath);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function NearestNeighborModel.NearestNeighborOptimizedNetworkLoader.GetOptimizedNetwork
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UNearestNeighborOptimizedNetwork* ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UNearestNeighborOptimizedNetwork* UNearestNeighborOptimizedNetworkLoader::GetOptimizedNetwork() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NearestNeighborOptimizedNetworkLoader", "GetOptimizedNetwork");

	Params::NearestNeighborOptimizedNetworkLoader_GetOptimizedNetwork Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function NearestNeighborModel.NearestNeighborModelSection.SetBasisData
// (Final, Native, Private, HasOutParams, BlueprintCallable, EditorOnly)
// Parameters:
// TArray<float>                           InVertexMean                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<float>                           InBasis                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UNearestNeighborModelSection::SetBasisData(const TArray<float>& InVertexMean, const TArray<float>& InBasis)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NearestNeighborModelSection", "SetBasisData");

	Params::NearestNeighborModelSection_SetBasisData Parms{};

	Parms.InVertexMean = std::move(InVertexMean);
	Parms.InBasis = std::move(InBasis);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NearestNeighborModel.NearestNeighborModelSection.SetNeighborData
// (Final, Native, Private, HasOutParams, BlueprintCallable, EditorOnly)
// Parameters:
// TArray<float>                           InNeighborCoeffs                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<float>                           InNeighborOffsets                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UNearestNeighborModelSection::SetNeighborData(const TArray<float>& InNeighborCoeffs, const TArray<float>& InNeighborOffsets)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NearestNeighborModelSection", "SetNeighborData");

	Params::NearestNeighborModelSection_SetNeighborData Parms{};

	Parms.InNeighborCoeffs = std::move(InNeighborCoeffs);
	Parms.InNeighborOffsets = std::move(InNeighborOffsets);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NearestNeighborModel.NearestNeighborModelSection.DoesUsePCA
// (Final, Native, Public, BlueprintCallable, BlueprintPure, EditorOnly, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UNearestNeighborModelSection::DoesUsePCA() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NearestNeighborModelSection", "DoesUsePCA");

	Params::NearestNeighborModelSection_DoesUsePCA Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function NearestNeighborModel.NearestNeighborModelSection.GetAssetNeighborCoeffs
// (Final, Native, Public, BlueprintCallable, BlueprintPure, EditorOnly, Const)
// Parameters:
// const TArray<float>                     ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const TArray<float> UNearestNeighborModelSection::GetAssetNeighborCoeffs() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NearestNeighborModelSection", "GetAssetNeighborCoeffs");

	Params::NearestNeighborModelSection_GetAssetNeighborCoeffs Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function NearestNeighborModel.NearestNeighborModelSection.GetAssetNumNeighbors
// (Final, Native, Public, BlueprintCallable, BlueprintPure, EditorOnly, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UNearestNeighborModelSection::GetAssetNumNeighbors() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NearestNeighborModelSection", "GetAssetNumNeighbors");

	Params::NearestNeighborModelSection_GetAssetNumNeighbors Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function NearestNeighborModel.NearestNeighborModelSection.GetBasis
// (Final, Native, Public, BlueprintCallable, BlueprintPure, EditorOnly, Const)
// Parameters:
// const TArray<float>                     ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const TArray<float> UNearestNeighborModelSection::GetBasis() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NearestNeighborModelSection", "GetBasis");

	Params::NearestNeighborModelSection_GetBasis Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function NearestNeighborModel.NearestNeighborModelSection.GetNumBasis
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UNearestNeighborModelSection::GetNumBasis() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NearestNeighborModelSection", "GetNumBasis");

	Params::NearestNeighborModelSection_GetNumBasis Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function NearestNeighborModel.NearestNeighborModelSection.GetVertexAttributeNames
// (Final, Native, Private, EditorOnly, Const)
// Parameters:
// TArray<class FName>                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FName> UNearestNeighborModelSection::GetVertexAttributeNames() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NearestNeighborModelSection", "GetVertexAttributeNames");

	Params::NearestNeighborModelSection_GetVertexAttributeNames Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function NearestNeighborModel.NearestNeighborModelSection.GetVertexMap
// (Final, Native, Public, BlueprintCallable, BlueprintPure, EditorOnly, Const)
// Parameters:
// const TArray<int32>                     ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const TArray<int32> UNearestNeighborModelSection::GetVertexMap() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NearestNeighborModelSection", "GetVertexMap");

	Params::NearestNeighborModelSection_GetVertexMap Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function NearestNeighborModel.NearestNeighborModelSection.GetVertexMean
// (Final, Native, Public, BlueprintCallable, BlueprintPure, EditorOnly, Const)
// Parameters:
// const TArray<float>                     ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const TArray<float> UNearestNeighborModelSection::GetVertexMean() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NearestNeighborModelSection", "GetVertexMean");

	Params::NearestNeighborModelSection_GetVertexMean Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function NearestNeighborModel.NearestNeighborModelSection.GetVertexWeights
// (Final, Native, Public, BlueprintCallable, BlueprintPure, EditorOnly, Const)
// Parameters:
// const TArray<float>                     ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const TArray<float> UNearestNeighborModelSection::GetVertexWeights() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NearestNeighborModelSection", "GetVertexWeights");

	Params::NearestNeighborModelSection_GetVertexWeights Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function NearestNeighborModel.NearestNeighborModel.DoesUsePCA
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UNearestNeighborModel::DoesUsePCA() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NearestNeighborModel", "DoesUsePCA");

	Params::NearestNeighborModel_DoesUsePCA Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function NearestNeighborModel.NearestNeighborModel.GetBatchSize
// (Final, Native, Public, BlueprintCallable, BlueprintPure, EditorOnly, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UNearestNeighborModel::GetBatchSize() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NearestNeighborModel", "GetBatchSize");

	Params::NearestNeighborModel_GetBatchSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function NearestNeighborModel.NearestNeighborModel.GetCachedDeltasPaths
// (Final, Native, Public, BlueprintCallable, BlueprintPure, EditorOnly, Const)
// Parameters:
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> UNearestNeighborModel::GetCachedDeltasPaths() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NearestNeighborModel", "GetCachedDeltasPaths");

	Params::NearestNeighborModel_GetCachedDeltasPaths Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function NearestNeighborModel.NearestNeighborModel.GetCachedNetworkPaths
// (Final, Native, Public, BlueprintCallable, BlueprintPure, EditorOnly, Const)
// Parameters:
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> UNearestNeighborModel::GetCachedNetworkPaths() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NearestNeighborModel", "GetCachedNetworkPaths");

	Params::NearestNeighborModel_GetCachedNetworkPaths Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function NearestNeighborModel.NearestNeighborModel.GetCachedPCAPaths
// (Final, Native, Public, BlueprintCallable, BlueprintPure, EditorOnly, Const)
// Parameters:
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> UNearestNeighborModel::GetCachedPCAPaths() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NearestNeighborModel", "GetCachedPCAPaths");

	Params::NearestNeighborModel_GetCachedPCAPaths Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function NearestNeighborModel.NearestNeighborModel.GetEarlyStopEpochs
// (Final, Native, Public, BlueprintCallable, BlueprintPure, EditorOnly, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UNearestNeighborModel::GetEarlyStopEpochs() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NearestNeighborModel", "GetEarlyStopEpochs");

	Params::NearestNeighborModel_GetEarlyStopEpochs Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function NearestNeighborModel.NearestNeighborModel.GetHiddenLayerDims
// (Final, Native, Public, BlueprintCallable, BlueprintPure, EditorOnly, Const)
// Parameters:
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UNearestNeighborModel::GetHiddenLayerDims() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NearestNeighborModel", "GetHiddenLayerDims");

	Params::NearestNeighborModel_GetHiddenLayerDims Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function NearestNeighborModel.NearestNeighborModel.GetInputDim
// (Final, Native, Public, BlueprintCallable, BlueprintPure, EditorOnly, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UNearestNeighborModel::GetInputDim() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NearestNeighborModel", "GetInputDim");

	Params::NearestNeighborModel_GetInputDim Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function NearestNeighborModel.NearestNeighborModel.GetLearningRate
// (Final, Native, Public, BlueprintCallable, BlueprintPure, EditorOnly, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UNearestNeighborModel::GetLearningRate() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NearestNeighborModel", "GetLearningRate");

	Params::NearestNeighborModel_GetLearningRate Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function NearestNeighborModel.NearestNeighborModel.GetModelDir
// (Final, Native, Public, BlueprintCallable, BlueprintPure, EditorOnly, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UNearestNeighborModel::GetModelDir() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NearestNeighborModel", "GetModelDir");

	Params::NearestNeighborModel_GetModelDir Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function NearestNeighborModel.NearestNeighborModel.GetNumEpochs
// (Final, Native, Public, EditorOnly, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UNearestNeighborModel::GetNumEpochs() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NearestNeighborModel", "GetNumEpochs");

	Params::NearestNeighborModel_GetNumEpochs Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function NearestNeighborModel.NearestNeighborModel.GetNumIterations
// (Final, Native, Public, BlueprintCallable, BlueprintPure, EditorOnly, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UNearestNeighborModel::GetNumIterations() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NearestNeighborModel", "GetNumIterations");

	Params::NearestNeighborModel_GetNumIterations Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function NearestNeighborModel.NearestNeighborModel.GetNumSections
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UNearestNeighborModel::GetNumSections() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NearestNeighborModel", "GetNumSections");

	Params::NearestNeighborModel_GetNumSections Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function NearestNeighborModel.NearestNeighborModel.GetOutputDim
// (Final, Native, Public, BlueprintCallable, BlueprintPure, EditorOnly, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UNearestNeighborModel::GetOutputDim() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NearestNeighborModel", "GetOutputDim");

	Params::NearestNeighborModel_GetOutputDim Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function NearestNeighborModel.NearestNeighborModel.GetPCACoeffStarts
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const TArray<int32>                     ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const TArray<int32> UNearestNeighborModel::GetPCACoeffStarts() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NearestNeighborModel", "GetPCACoeffStarts");

	Params::NearestNeighborModel_GetPCACoeffStarts Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function NearestNeighborModel.NearestNeighborModel.GetRegularizationFactor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, EditorOnly, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UNearestNeighborModel::GetRegularizationFactor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NearestNeighborModel", "GetRegularizationFactor");

	Params::NearestNeighborModel_GetRegularizationFactor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function NearestNeighborModel.NearestNeighborModel.GetSectionPtr
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UNearestNeighborModelSection*ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UNearestNeighborModelSection* UNearestNeighborModel::GetSectionPtr(int32 Index_0) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NearestNeighborModel", "GetSectionPtr");

	Params::NearestNeighborModel_GetSectionPtr Parms{};

	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function NearestNeighborModel.NearestNeighborModel.GetSmoothLossBeta
// (Final, Native, Public, BlueprintCallable, BlueprintPure, EditorOnly, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UNearestNeighborModel::GetSmoothLossBeta() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NearestNeighborModel", "GetSmoothLossBeta");

	Params::NearestNeighborModel_GetSmoothLossBeta Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function NearestNeighborModel.NearestNeighborModel.GetTotalNumBasis
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UNearestNeighborModel::GetTotalNumBasis() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NearestNeighborModel", "GetTotalNumBasis");

	Params::NearestNeighborModel_GetTotalNumBasis Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function NearestNeighborModel.NearestNeighborModel.IsReadyForInference
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UNearestNeighborModel::IsReadyForInference() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NearestNeighborModel", "IsReadyForInference");

	Params::NearestNeighborModel_IsReadyForInference Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function NearestNeighborModel.NearestNeighborModel.IsReadyForTraining
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UNearestNeighborModel::IsReadyForTraining() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NearestNeighborModel", "IsReadyForTraining");

	Params::NearestNeighborModel_IsReadyForTraining Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function NearestNeighborModel.NearestNeighborModelInstance.Eval
// (Final, Native, Private, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<float>                           InputData                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<float>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<float> UNearestNeighborModelInstance::Eval(const TArray<float>& InputData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NearestNeighborModelInstance", "Eval");

	Params::NearestNeighborModelInstance_Eval Parms{};

	Parms.InputData = std::move(InputData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function NearestNeighborModel.NearestNeighborModelInstance.Reset
// (Final, Native, Public, BlueprintCallable)

void UNearestNeighborModelInstance::Reset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NearestNeighborModelInstance", "Reset");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}

}

