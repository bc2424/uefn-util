#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Emporium

#include "Basic.hpp"

#include "UnrealEd_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "CoreUObject_classes.hpp"
#include "Emporium_structs.hpp"


namespace SDK
{

// Class Emporium.EmporiumActorFactory
// 0x0018 (0x00A8 - 0x0090)
class UEmporiumActorFactory final : public UActorFactory
{
public:
	class FString                                 VersePath;                                         // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bIsRunningDeferredSpawn;                           // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EmporiumActorFactory">();
	}
	static class UEmporiumActorFactory* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEmporiumActorFactory>();
	}
};

// Class Emporium.EmporiumJavascriptApi
// 0x0000 (0x0030 - 0x0030)
class UEmporiumJavascriptApi final : public UObject
{
public:
	void AddSourceToProject(const class FString& Url, const class FString& AssetMetadataJson);
	void AddVersePathToProject(const class FString& VersePath, const class FString& AssetMetadataJson);
	void AnalyticsOpen3dViewer(const class FString& AssetNamespace, const class FString& AssetId, const class FString& OfferId);
	void AnalyticsPdpPageView(const class FString& AssetNamespace, const class FString& AssetId, const class FString& OfferId, const class FString& PointOfOrigin);
	void AnalyticsSearchQueried(const class FString& SearchText, const class FString& Categories, const class FString& Tags, const class FString& Filters, const class FString& SortValue, const class FString& SearchResults);
	void CopyToClipboard(const class FString& Content);
	void DragStart(const class FString& VersePath, const class FString& AssetMetadataJson);
	int32 GetApiVersion();
	class FString GetAuthToken();
	TArray<class FString> GetProjectVersePaths();
	void LocalDownload(const class FString& Url, const class FString& AssetMetadataJson);
	void LogDisplay(const class FString& Message);
	void LogError(const class FString& Message);
	void LogVerbose(const class FString& Message);
	void LogWarning(const class FString& Message);
	void OpenPluginSettings();
	bool OpenURLInBrowser(const class FString& Url);
	void SendAnalyticsEvent(const class FString& EventName, const class FString& AssetMetadataJson);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EmporiumJavascriptApi">();
	}
	static class UEmporiumJavascriptApi* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEmporiumJavascriptApi>();
	}
};

// Class Emporium.EmporiumSettings
// 0x0058 (0x0088 - 0x0030)
class UEmporiumSettings final : public UObject
{
public:
	EEmporiumEnvironment                          Environment;                                       // 0x0030(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CustomUrl;                                         // 0x0038(0x0010)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 CustomAuthToken;                                   // 0x0048(0x0010)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseCustomAuthToken;                               // 0x0058(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bLoadNewUI;                                        // 0x0059(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5A[0x6];                                       // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDirectoryPath                         DownloadDirectory;                                 // 0x0060(0x0010)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDirectoryPath                         MostRecentDownloadDirectory;                       // 0x0070(0x0010)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCreateCollision;                                  // 0x0080(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCreateLods;                                       // 0x0081(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bNormalizeScale;                                   // 0x0082(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bNormalizePivot;                                   // 0x0083(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EmporiumSettings">();
	}
	static class UEmporiumSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEmporiumSettings>();
	}
};

}

