#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MetaHumanPerformance

#include "Basic.hpp"

#include "MetaHumanPerformance_classes.hpp"
#include "MetaHumanPerformance_parameters.hpp"


namespace SDK
{

// Function MetaHumanPerformance.ContourDataComparisonHelper.ComparePerformanceContourData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UMetaHumanPerformance*            InOriginal                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMetaHumanPerformance*            InNew                                                  (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UContourDataComparisonHelper::ComparePerformanceContourData(const class UMetaHumanPerformance* InOriginal, const class UMetaHumanPerformance* InNew)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ContourDataComparisonHelper", "ComparePerformanceContourData");

	Params::ContourDataComparisonHelper_ComparePerformanceContourData Parms{};

	Parms.InOriginal = InOriginal;
	Parms.InNew = InNew;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MetaHumanPerformance.MetaHumanPerformance.CancelPipeline
// (Final, Native, Public, BlueprintCallable)

void UMetaHumanPerformance::CancelPipeline()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MetaHumanPerformance", "CancelPipeline");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function MetaHumanPerformance.MetaHumanPerformance.ExportAnimation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EPerformanceExportRange                 InExportRange                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMetaHumanPerformance::ExportAnimation(EPerformanceExportRange InExportRange)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MetaHumanPerformance", "ExportAnimation");

	Params::MetaHumanPerformance_ExportAnimation Parms{};

	Parms.InExportRange = InExportRange;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function MetaHumanPerformance.MetaHumanPerformance.SetBlockingProcessing
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInBlockingProcessing                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMetaHumanPerformance::SetBlockingProcessing(bool bInBlockingProcessing)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MetaHumanPerformance", "SetBlockingProcessing");

	Params::MetaHumanPerformance_SetBlockingProcessing Parms{};

	Parms.bInBlockingProcessing = bInBlockingProcessing;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function MetaHumanPerformance.MetaHumanPerformance.StartPipeline
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInIsScriptedProcessing                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EStartPipelineErrorType                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EStartPipelineErrorType UMetaHumanPerformance::StartPipeline(bool bInIsScriptedProcessing)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MetaHumanPerformance", "StartPipeline");

	Params::MetaHumanPerformance_StartPipeline Parms{};

	Parms.bInIsScriptedProcessing = bInIsScriptedProcessing;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MetaHumanPerformance.MetaHumanPerformance.CanExportAnimation
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMetaHumanPerformance::CanExportAnimation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MetaHumanPerformance", "CanExportAnimation");

	Params::MetaHumanPerformance_CanExportAnimation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MetaHumanPerformance.MetaHumanPerformance.CanProcess
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMetaHumanPerformance::CanProcess() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MetaHumanPerformance", "CanProcess");

	Params::MetaHumanPerformance_CanProcess Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MetaHumanPerformance.MetaHumanPerformance.ContainsAnimationData
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMetaHumanPerformance::ContainsAnimationData() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MetaHumanPerformance", "ContainsAnimationData");

	Params::MetaHumanPerformance_ContainsAnimationData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MetaHumanPerformance.MetaHumanPerformance.DiagnosticsIndicatesProcessingIssue
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             OutDiagnosticsWarningMessage                           (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMetaHumanPerformance::DiagnosticsIndicatesProcessingIssue(class FText* OutDiagnosticsWarningMessage) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MetaHumanPerformance", "DiagnosticsIndicatesProcessingIssue");

	Params::MetaHumanPerformance_DiagnosticsIndicatesProcessingIssue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutDiagnosticsWarningMessage != nullptr)
		*OutDiagnosticsWarningMessage = std::move(Parms.OutDiagnosticsWarningMessage);

	return Parms.ReturnValue;
}


// Function MetaHumanPerformance.MetaHumanPerformance.GetAnimationData
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   InStartFrameNumber                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InEndFrameNumber                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FFrameAnimationData>      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FFrameAnimationData> UMetaHumanPerformance::GetAnimationData(int32 InStartFrameNumber, int32 InEndFrameNumber) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MetaHumanPerformance", "GetAnimationData");

	Params::MetaHumanPerformance_GetAnimationData Parms{};

	Parms.InStartFrameNumber = InStartFrameNumber;
	Parms.InEndFrameNumber = InEndFrameNumber;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MetaHumanPerformance.MetaHumanPerformance.GetNumberOfProcessedFrames
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMetaHumanPerformance::GetNumberOfProcessedFrames() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MetaHumanPerformance", "GetNumberOfProcessedFrames");

	Params::MetaHumanPerformance_GetNumberOfProcessedFrames Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MetaHumanPerformance.MetaHumanPerformance.IsProcessing
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMetaHumanPerformance::IsProcessing() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MetaHumanPerformance", "IsProcessing");

	Params::MetaHumanPerformance_IsProcessing Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MetaHumanPerformance.MetaHumanPerformanceExportAnimationSettings.GetTargetSkeleton
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USkeleton*                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USkeleton* UMetaHumanPerformanceExportAnimationSettings::GetTargetSkeleton() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MetaHumanPerformanceExportAnimationSettings", "GetTargetSkeleton");

	Params::MetaHumanPerformanceExportAnimationSettings_GetTargetSkeleton Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MetaHumanPerformance.MetaHumanPerformanceExportAnimationSettings.IsTargetSkeletonCompatible
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSet<class FString>                     InCurves                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<class FString>                   OutMissingCurvesInSkeleton                             (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMetaHumanPerformanceExportAnimationSettings::IsTargetSkeletonCompatible(const TSet<class FString>& InCurves, TArray<class FString>* OutMissingCurvesInSkeleton) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MetaHumanPerformanceExportAnimationSettings", "IsTargetSkeletonCompatible");

	Params::MetaHumanPerformanceExportAnimationSettings_IsTargetSkeletonCompatible Parms{};

	Parms.InCurves = std::move(InCurves);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutMissingCurvesInSkeleton != nullptr)
		*OutMissingCurvesInSkeleton = std::move(Parms.OutMissingCurvesInSkeleton);

	return Parms.ReturnValue;
}


// Function MetaHumanPerformance.MetaHumanPerformanceExportUtils.ExportAnimationSequence
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UMetaHumanPerformance*            InPerformance                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMetaHumanPerformanceExportAnimationSettings*InExportSettings                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAnimSequence*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAnimSequence* UMetaHumanPerformanceExportUtils::ExportAnimationSequence(class UMetaHumanPerformance* InPerformance, class UMetaHumanPerformanceExportAnimationSettings* InExportSettings)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MetaHumanPerformanceExportUtils", "ExportAnimationSequence");

	Params::MetaHumanPerformanceExportUtils_ExportAnimationSequence Parms{};

	Parms.InPerformance = InPerformance;
	Parms.InExportSettings = InExportSettings;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MetaHumanPerformance.MetaHumanPerformanceExportUtils.ExportLevelSequence
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UMetaHumanPerformance*            InPerformance                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMetaHumanPerformanceExportLevelSequenceSettings*InExportSettings                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ULevelSequence*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ULevelSequence* UMetaHumanPerformanceExportUtils::ExportLevelSequence(class UMetaHumanPerformance* InPerformance, class UMetaHumanPerformanceExportLevelSequenceSettings* InExportSettings)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MetaHumanPerformanceExportUtils", "ExportLevelSequence");

	Params::MetaHumanPerformanceExportUtils_ExportLevelSequence Parms{};

	Parms.InPerformance = InPerformance;
	Parms.InExportSettings = InExportSettings;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MetaHumanPerformance.MetaHumanPerformanceExportUtils.GetExportAnimationSequenceSettings
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UMetaHumanPerformance*            InPerformance                                          (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMetaHumanPerformanceExportAnimationSettings*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMetaHumanPerformanceExportAnimationSettings* UMetaHumanPerformanceExportUtils::GetExportAnimationSequenceSettings(const class UMetaHumanPerformance* InPerformance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MetaHumanPerformanceExportUtils", "GetExportAnimationSequenceSettings");

	Params::MetaHumanPerformanceExportUtils_GetExportAnimationSequenceSettings Parms{};

	Parms.InPerformance = InPerformance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MetaHumanPerformance.MetaHumanPerformanceExportUtils.GetExportLevelSequenceSettings
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UMetaHumanPerformance*            InPerformance                                          (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMetaHumanPerformanceExportLevelSequenceSettings*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMetaHumanPerformanceExportLevelSequenceSettings* UMetaHumanPerformanceExportUtils::GetExportLevelSequenceSettings(const class UMetaHumanPerformance* InPerformance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MetaHumanPerformanceExportUtils", "GetExportLevelSequenceSettings");

	Params::MetaHumanPerformanceExportUtils_GetExportLevelSequenceSettings Parms{};

	Parms.InPerformance = InPerformance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MetaHumanPerformance.MetaHumanPerformanceViewportSettings.ToggleControlRigVisibility
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EABImageViewMode                        InView                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMetaHumanPerformanceViewportSettings::ToggleControlRigVisibility(EABImageViewMode InView)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MetaHumanPerformanceViewportSettings", "ToggleControlRigVisibility");

	Params::MetaHumanPerformanceViewportSettings_ToggleControlRigVisibility Parms{};

	Parms.InView = InView;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function MetaHumanPerformance.MetaHumanPerformanceViewportSettings.IsControlRigVisible
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EABImageViewMode                        InView                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMetaHumanPerformanceViewportSettings::IsControlRigVisible(EABImageViewMode InView) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MetaHumanPerformanceViewportSettings", "IsControlRigVisible");

	Params::MetaHumanPerformanceViewportSettings_IsControlRigVisible Parms{};

	Parms.InView = InView;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

