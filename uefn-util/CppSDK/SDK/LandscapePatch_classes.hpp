#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LandscapePatch

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "CoreUObject_classes.hpp"
#include "Landscape_classes.hpp"
#include "LandscapePatch_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// Class LandscapePatch.LandscapePatchEditLayer
// 0x0168 (0x01A0 - 0x0038)
class alignas(0x10) ULandscapePatchEditLayer final : public ULandscapeEditLayerProcedural
{
public:
	uint8                                         Pad_38[0x88];                                      // 0x0038(0x0088)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftObjectPtr<class ULandscapePatchComponent>> RegisteredPatches;                                 // 0x00C0(0x0010)(ExportObject, ZeroConstructor, Transient, EditorOnly, ContainsInstancedReference, UObjectWrapper, NativeAccessSpecifierPrivate)
	TMap<TSoftObjectPtr<class ULandscapePatchComponent>, int32> PatchToIndex;                                      // 0x00D0(0x0050)(Transient, EditorOnly, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                         Pad_120[0x70];                                     // 0x0120(0x0070)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuid                                  EditLayerGuid;                                     // 0x0190(0x0010)(ZeroConstructor, IsPlainOldData, EditorOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"LandscapePatchEditLayer">();
	}
	static class ULandscapePatchEditLayer* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULandscapePatchEditLayer>();
	}
};

// Class LandscapePatch.LandscapePatchComponent
// 0x00F0 (0x0360 - 0x0270)
#pragma pack(push, 0x1)
class alignas(0x10) ULandscapePatchComponent : public USceneComponent
{
public:
	struct FGuid                                  EditLayerGuid;                                     // 0x0270(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	ELandscapePatchPriorityInitialization         PriorityInitialization;                            // 0x0280(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_281[0x7];                                      // 0x0281(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Priority;                                          // 0x0288(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class ALandscape>              Landscape;                                         // 0x0290(0x0030)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class ALandscapePatchManager>  PatchManager;                                      // 0x02C0(0x0030)(Edit, AdvancedDisplay, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bIsEnabled;                                        // 0x02F0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2F1[0x1];                                      // 0x02F1(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bPropertiesCopiedIndicator;                        // 0x02F2(0x0001)(ZeroConstructor, IsPlainOldData, EditorOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2F3[0x5];                                      // 0x02F3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class ALandscapePatchManager>  PreviousPatchManager;                              // 0x02F8(0x0030)(EditorOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                 DetailPanelLayerName;                              // 0x0328(0x0010)(Edit, ZeroConstructor, Transient, EditorOnly, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                 DetailPanelLayerGuid;                              // 0x0338(0x0010)(Edit, ZeroConstructor, Transient, EditConst, EditorOnly, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_348[0x10];                                     // 0x0348(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	const TArray<class FString> GetLayerOptions();
	void RequestLandscapeUpdate(bool bInUserTriggeredUpdate);
	void SetIsEnabled(bool bEnabledIn);
	void SetLandscape(class ALandscape* NewLandscape);
	void SetPatchManager(class ALandscapePatchManager* NewPatchManager);
	void SetPriority(double PriorityIn);

	struct FTransform GetLandscapeHeightmapCoordsToWorld() const;
	class ALandscapePatchManager* GetPatchManager() const;
	double GetPriority() const;
	bool IsEnabled() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"LandscapePatchComponent">();
	}
	static class ULandscapePatchComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULandscapePatchComponent>();
	}
};
#pragma pack(pop)

// Class LandscapePatch.LandscapeCircleHeightPatch
// 0x0010 (0x0370 - 0x0360)
class ULandscapeCircleHeightPatch final : public ULandscapePatchComponent
{
public:
	float                                         Radius;                                            // 0x0358(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         Falloff;                                           // 0x035C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bEditVisibility;                                   // 0x0360(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bExclusiveRadius;                                  // 0x0361(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_362[0xE];                                      // 0x0362(0x000E)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"LandscapeCircleHeightPatch">();
	}
	static class ULandscapeCircleHeightPatch* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULandscapeCircleHeightPatch>();
	}
};

// Class LandscapePatch.LandscapePatchManager
// 0x00D0 (0x0520 - 0x0450)
class ALandscapePatchManager final : public ALandscapeBlueprintBrushBase
{
public:
	TArray<TSoftObjectPtr<class ULandscapePatchComponent>> PatchComponents;                                   // 0x0450(0x0010)(ExportObject, ZeroConstructor, ContainsInstancedReference, UObjectWrapper, NativeAccessSpecifierPrivate)
	struct FTransform                             HeightmapCoordsToWorld;                            // 0x0460(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ALandscape*                             DetailPanelLandscape;                              // 0x04C0(0x0008)(Edit, ZeroConstructor, Transient, EditorOnly, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_4C8[0x8];                                      // 0x04C8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<TSoftObjectPtr<class ULandscapePatchComponent>, int32> PatchToIndex;                                      // 0x04D0(0x0050)(Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)

public:
	void AddPatch(class ULandscapePatchComponent* Patch);
	void MigrateToPrioritySystemAndDelete();
	void MovePatchToIndex(class ULandscapePatchComponent* Patch, int32 Index_0);
	bool RemovePatch(class ULandscapePatchComponent* Patch);
	void SetTargetLandscape(class ALandscape* InOwningLandscape);

	bool ContainsPatch(class ULandscapePatchComponent* Patch) const;
	int32 GetIndexOfPatch(const class ULandscapePatchComponent* Patch) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"LandscapePatchManager">();
	}
	static class ALandscapePatchManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<ALandscapePatchManager>();
	}
};

// Class LandscapePatch.LandscapeTextureBackedRenderTargetBase
// 0x0028 (0x0058 - 0x0030)
class ULandscapeTextureBackedRenderTargetBase : public UObject
{
public:
	class UTextureRenderTarget2D*                 PostLoadRT;                                        // 0x0030(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                             InternalTexture;                                   // 0x0038(0x0008)(Edit, ZeroConstructor, EditConst, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextureRenderTarget2D*                 RenderTarget;                                      // 0x0040(0x0008)(Edit, ZeroConstructor, Transient, EditConst, DuplicateTransient, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         SizeX;                                             // 0x0048(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         SizeY;                                             // 0x004C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bUseInternalTextureOnly;                           // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"LandscapeTextureBackedRenderTargetBase">();
	}
	static class ULandscapeTextureBackedRenderTargetBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULandscapeTextureBackedRenderTargetBase>();
	}
};

// Class LandscapePatch.LandscapeWeightTextureBackedRenderTarget
// 0x0008 (0x0060 - 0x0058)
class ULandscapeWeightTextureBackedRenderTarget final : public ULandscapeTextureBackedRenderTargetBase
{
public:
	bool                                          bUseAlphaChannel;                                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"LandscapeWeightTextureBackedRenderTarget">();
	}
	static class ULandscapeWeightTextureBackedRenderTarget* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULandscapeWeightTextureBackedRenderTarget>();
	}
};

// Class LandscapePatch.LandscapeHeightTextureBackedRenderTarget
// 0x0010 (0x0068 - 0x0058)
class ULandscapeHeightTextureBackedRenderTarget final : public ULandscapeTextureBackedRenderTargetBase
{
public:
	struct FLandscapeHeightPatchConvertToNativeParams ConversionParams;                                  // 0x0058(0x000C)(NoDestructor, NativeAccessSpecifierPublic)
	ETextureRenderTargetFormat                    RenderTargetFormat;                                // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"LandscapeHeightTextureBackedRenderTarget">();
	}
	static class ULandscapeHeightTextureBackedRenderTarget* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULandscapeHeightTextureBackedRenderTarget>();
	}
};

// Class LandscapePatch.LandscapeWeightPatchTextureInfo
// 0x0028 (0x0058 - 0x0030)
class ULandscapeWeightPatchTextureInfo final : public UObject
{
public:
	class FName                                   WeightmapLayerName;                                // 0x0030(0x000C)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bEditVisibilityLayer;                              // 0x003C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               TextureAsset;                                      // 0x0040(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ULandscapeWeightTextureBackedRenderTarget* InternalData;                                      // 0x0048(0x0008)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, AdvancedDisplay, Protected, PersistentInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	ELandscapeTexturePatchSourceMode              SourceMode;                                        // 0x0050(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	ELandscapeTexturePatchSourceMode              DetailPanelSourceMode;                             // 0x0051(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bUseAlphaChannel;                                  // 0x0052(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bOverrideBlendMode;                                // 0x0053(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	ELandscapeTexturePatchBlendMode               OverrideBlendMode;                                 // 0x0054(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"LandscapeWeightPatchTextureInfo">();
	}
	static class ULandscapeWeightPatchTextureInfo* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULandscapeWeightPatchTextureInfo>();
	}
};

// Class LandscapePatch.LandscapeTexturePatch
// 0x0080 (0x03E0 - 0x0360)
class ULandscapeTexturePatch final : public ULandscapePatchComponent
{
public:
	int32                                         ResolutionX;                                       // 0x0358(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         ResolutionY;                                       // 0x035C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                              UnscaledPatchCoverage;                             // 0x0360(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	ELandscapeTexturePatchBlendMode               BlendMode;                                         // 0x0370(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	ELandscapeTexturePatchFalloffMode             FalloffMode;                                       // 0x0371(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_372[0x2];                                      // 0x0372(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Falloff;                                           // 0x0374(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	ELandscapeTexturePatchSourceMode              HeightSourceMode;                                  // 0x0378(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	ELandscapeTexturePatchSourceMode              DetailPanelHeightSourceMode;                       // 0x0379(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_37A[0x6];                                      // 0x037A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ULandscapeHeightTextureBackedRenderTarget* HeightInternalData;                                // 0x0380(0x0008)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, PersistentInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTexture*                               HeightTextureAsset;                                // 0x0388(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bUseTextureAlphaForHeight;                         // 0x0390(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	ELandscapeTextureHeightPatchEncoding          HeightEncoding;                                    // 0x0391(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_392[0x6];                                      // 0x0392(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLandscapeTexturePatchEncodingSettings HeightEncodingSettings;                            // 0x0398(0x0010)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	ELandscapeTextureHeightPatchZeroHeightMeaning ZeroHeightMeaning;                                 // 0x03A8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bApplyComponentZScale;                             // 0x03A9(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3AA[0x6];                                      // 0x03AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ULandscapeWeightPatchTextureInfo*> WeightPatches;                                     // 0x03B0(0x0010)(Edit, ExportObject, ZeroConstructor, NoClear, ContainsInstancedReference, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	uint8                                         Pad_3C0[0x1];                                      // 0x03C0(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bBaseResolutionOffLandscape;                       // 0x03C1(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3C2[0x2];                                      // 0x03C2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ResolutionMultiplier;                              // 0x03C4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         InitTextureSizeX;                                  // 0x03C8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         InitTextureSizeY;                                  // 0x03CC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	ETextureRenderTargetFormat                    HeightRenderTargetFormat;                          // 0x03D0(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_3D1[0xF];                                      // 0x03D1(0x000F)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void AddWeightPatch(const class FName& InWeightmapLayerName, ELandscapeTexturePatchSourceMode SourceMode, bool bUseAlphaChannel);
	void ClearWeightPatchBlendModeOverride(const class FName& InWeightmapLayerName);
	void DisableAllWeightPatches();
	TArray<class FName> GetAllWeightPatchLayerNames();
	class UTextureRenderTarget2D* GetHeightRenderTarget(bool bMarkDirty);
	class UTextureRenderTarget2D* GetWeightPatchRenderTarget(const class FName& InWeightmapLayerName, bool bMarkDirty);
	ELandscapeTexturePatchSourceMode GetWeightPatchSourceMode(const class FName& InWeightmapLayerName);
	void RemoveAllWeightPatches();
	void RemoveWeightPatch(const class FName& InWeightmapLayerName);
	void RequestReinitializeHeight();
	void RequestReinitializeWeights();
	void ResetHeightEncodingMode(ELandscapeTextureHeightPatchEncoding EncodingMode);
	void SetBlendMode(ELandscapeTexturePatchBlendMode BlendModeIn);
	void SetEditVisibilityLayer(const class FName& InWeightmapLayerName, const bool bEditVisibilityLayer);
	void SetFalloff(float FalloffIn);
	void SetFalloffMode(ELandscapeTexturePatchFalloffMode FalloffModeIn);
	void SetHeightEncodingMode(ELandscapeTextureHeightPatchEncoding EncodingMode);
	void SetHeightEncodingSettings(const struct FLandscapeTexturePatchEncodingSettings& Settings);
	void SetHeightRenderTargetFormat(ETextureRenderTargetFormat Format);
	void SetHeightSourceMode(ELandscapeTexturePatchSourceMode NewMode);
	void SetHeightTextureAsset(class UTexture* TextureIn);
	void SetResolution(const struct FVector2D& ResolutionIn);
	void SetUnscaledCoverage(const struct FVector2D& Coverage);
	void SetUseAlphaChannelForHeight(bool bUse);
	void SetUseAlphaChannelForWeightPatch(const class FName& InWeightmapLayerName, bool bUseAlphaChannel);
	void SetWeightPatchBlendModeOverride(const class FName& InWeightmapLayerName, ELandscapeTexturePatchBlendMode BlendMode_0);
	void SetWeightPatchSourceMode(const class FName& InWeightmapLayerName, ELandscapeTexturePatchSourceMode NewMode);
	void SetWeightPatchTextureAsset(const class FName& InWeightmapLayerName, class UTexture* TextureIn);
	void SetZeroHeightMeaning(ELandscapeTextureHeightPatchZeroHeightMeaning ZeroHeightMeaningIn);
	void SnapToLandscape();

	struct FVector2D GetFullUnscaledWorldSize() const;
	ELandscapeTexturePatchSourceMode GetHeightSourceMode() const;
	bool GetInitResolutionFromLandscape(float ResolutionMultiplier_0, struct FVector2D* ResolutionOut) const;
	struct FTransform GetPatchToWorldTransform() const;
	struct FVector2D GetResolution() const;
	struct FVector2D GetUnscaledCoverage() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"LandscapeTexturePatch">();
	}
	static class ULandscapeTexturePatch* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULandscapeTexturePatch>();
	}
};

}

