#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LagerDebuggerRuntime

#include "Basic.hpp"

#include "LagerDebuggerRuntime_classes.hpp"
#include "LagerDebuggerRuntime_parameters.hpp"


namespace SDK
{

// Function LagerDebuggerRuntime.LagerDebuggerDensityGridMenu.Server_ChangeDensityGridToDisplay
// (Final, Net, NetReliable, Native, Event, Private, NetServer)
// Parameters:
// struct FGameplayTag                     NewSelectedDensityGrid                                 (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ALagerDebuggerDensityGridMenu::Server_ChangeDensityGridToDisplay(const struct FGameplayTag& NewSelectedDensityGrid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LagerDebuggerDensityGridMenu", "Server_ChangeDensityGridToDisplay");

	Params::LagerDebuggerDensityGridMenu_Server_ChangeDensityGridToDisplay Parms{};

	Parms.NewSelectedDensityGrid = std::move(NewSelectedDensityGrid);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LagerDebuggerRuntime.LagerDebuggerDensityGridMenu.Server_ChangeVerticalCutIndex
// (Final, Net, NetReliable, Native, Event, Private, NetServer)
// Parameters:
// float                                   NewVerticalCutIndex                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ALagerDebuggerDensityGridMenu::Server_ChangeVerticalCutIndex(float NewVerticalCutIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LagerDebuggerDensityGridMenu", "Server_ChangeVerticalCutIndex");

	Params::LagerDebuggerDensityGridMenu_Server_ChangeVerticalCutIndex Parms{};

	Parms.NewVerticalCutIndex = NewVerticalCutIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LagerDebuggerRuntime.LagerDebuggerDensityGridMenu.Server_ChangeViewExtent
// (Final, Net, NetReliable, Native, Event, Private, NetServer)
// Parameters:
// float                                   NewViewExtent                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ALagerDebuggerDensityGridMenu::Server_ChangeViewExtent(float NewViewExtent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LagerDebuggerDensityGridMenu", "Server_ChangeViewExtent");

	Params::LagerDebuggerDensityGridMenu_Server_ChangeViewExtent Parms{};

	Parms.NewViewExtent = NewViewExtent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LagerDebuggerRuntime.LagerDebuggerEncounterInstanceMenu.Server_LWMDebugEvent
// (Final, Net, NetReliable, Native, Event, Private, NetServer)
// Parameters:
// struct FLagerEventID                    EventID                                                (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)

void ALagerDebuggerEncounterInstanceMenu::Server_LWMDebugEvent(const struct FLagerEventID& EventID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LagerDebuggerEncounterInstanceMenu", "Server_LWMDebugEvent");

	Params::LagerDebuggerEncounterInstanceMenu_Server_LWMDebugEvent Parms{};

	Parms.EventID = std::move(EventID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LagerDebuggerRuntime.LagerDebuggerEncounterInstanceMenu.Server_LWMRequestEventLogging
// (Final, Net, NetReliable, Native, Event, Private, NetServer)
// Parameters:
// struct FLagerEventID                    EventID                                                (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
// EFortAthenaLivingWorldEventToDebugStopBehaviorBehavior                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ALagerDebuggerEncounterInstanceMenu::Server_LWMRequestEventLogging(const struct FLagerEventID& EventID, EFortAthenaLivingWorldEventToDebugStopBehavior Behavior)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LagerDebuggerEncounterInstanceMenu", "Server_LWMRequestEventLogging");

	Params::LagerDebuggerEncounterInstanceMenu_Server_LWMRequestEventLogging Parms{};

	Parms.EventID = std::move(EventID);
	Parms.Behavior = Behavior;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LagerDebuggerRuntime.LagerDebuggerEncounterInstanceMenu.Server_OnEventSelectionChanged
// (Final, Net, NetReliable, Native, Event, Private, NetServer)
// Parameters:
// struct FLagerEventID                    NewSelectedEventID                                     (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)

void ALagerDebuggerEncounterInstanceMenu::Server_OnEventSelectionChanged(const struct FLagerEventID& NewSelectedEventID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LagerDebuggerEncounterInstanceMenu", "Server_OnEventSelectionChanged");

	Params::LagerDebuggerEncounterInstanceMenu_Server_OnEventSelectionChanged Parms{};

	Parms.NewSelectedEventID = std::move(NewSelectedEventID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LagerDebuggerRuntime.LagerDebuggerEncounterInstanceMenu.Server_OnSelectionChanged
// (Final, Net, NetReliable, Native, Event, Private, NetServer)
// Parameters:
// class FString                           NewEncounterSelection                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ALagerDebuggerEncounterInstanceMenu::Server_OnSelectionChanged(const class FString& NewEncounterSelection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LagerDebuggerEncounterInstanceMenu", "Server_OnSelectionChanged");

	Params::LagerDebuggerEncounterInstanceMenu_Server_OnSelectionChanged Parms{};

	Parms.NewEncounterSelection = std::move(NewEncounterSelection);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LagerDebuggerRuntime.LagerDebuggerEventLoggingMenu.Server_ChangeAllowGathering
// (Final, Net, NetReliable, Native, Event, Private, NetServer)
// Parameters:
// bool                                    bNewValue                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ALagerDebuggerEventLoggingMenu::Server_ChangeAllowGathering(bool bNewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LagerDebuggerEventLoggingMenu", "Server_ChangeAllowGathering");

	Params::LagerDebuggerEventLoggingMenu_Server_ChangeAllowGathering Parms{};

	Parms.bNewValue = bNewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LagerDebuggerRuntime.LagerDebuggerEventLoggingMenu.Server_Clear
// (Final, Net, NetReliable, Native, Event, Private, NetServer)

void ALagerDebuggerEventLoggingMenu::Server_Clear()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LagerDebuggerEventLoggingMenu", "Server_Clear");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function LagerDebuggerRuntime.LagerDebuggerEventMenu.Server_LWMDebugEvent
// (Final, Net, NetReliable, Native, Event, Private, NetServer)
// Parameters:
// struct FLagerEventID                    EventID                                                (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)

void ALagerDebuggerEventMenu::Server_LWMDebugEvent(const struct FLagerEventID& EventID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LagerDebuggerEventMenu", "Server_LWMDebugEvent");

	Params::LagerDebuggerEventMenu_Server_LWMDebugEvent Parms{};

	Parms.EventID = std::move(EventID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LagerDebuggerRuntime.LagerDebuggerEventMenu.Server_LWMForceSpawnActor
// (Final, Net, NetReliable, Native, Event, Private, NetServer, HasDefaults)
// Parameters:
// struct FLagerEventID                    EventID                                                (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   RuntimeSpawnDataIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTransform                       Transform                                              (ConstParm, Parm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ALagerDebuggerEventMenu::Server_LWMForceSpawnActor(const struct FLagerEventID& EventID, int32 RuntimeSpawnDataIndex, const struct FTransform& Transform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LagerDebuggerEventMenu", "Server_LWMForceSpawnActor");

	Params::LagerDebuggerEventMenu_Server_LWMForceSpawnActor Parms{};

	Parms.EventID = std::move(EventID);
	Parms.RuntimeSpawnDataIndex = RuntimeSpawnDataIndex;
	Parms.Transform = std::move(Transform);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LagerDebuggerRuntime.LagerDebuggerEventMenu.Server_LWMForceSpawnEvent
// (Final, Net, NetReliable, Native, Event, Private, NetServer, HasDefaults)
// Parameters:
// struct FLagerEventID                    EventID                                                (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   RuntimeSpawnDataIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTransform                       Transform                                              (ConstParm, Parm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ALagerDebuggerEventMenu::Server_LWMForceSpawnEvent(const struct FLagerEventID& EventID, int32 RuntimeSpawnDataIndex, const struct FTransform& Transform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LagerDebuggerEventMenu", "Server_LWMForceSpawnEvent");

	Params::LagerDebuggerEventMenu_Server_LWMForceSpawnEvent Parms{};

	Parms.EventID = std::move(EventID);
	Parms.RuntimeSpawnDataIndex = RuntimeSpawnDataIndex;
	Parms.Transform = std::move(Transform);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LagerDebuggerRuntime.LagerDebuggerEventMenu.Server_LWMRequestEventLogging
// (Final, Net, NetReliable, Native, Event, Private, NetServer)
// Parameters:
// struct FLagerEventID                    EventID                                                (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
// EFortAthenaLivingWorldEventToDebugStopBehaviorStopBehavior                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ALagerDebuggerEventMenu::Server_LWMRequestEventLogging(const struct FLagerEventID& EventID, EFortAthenaLivingWorldEventToDebugStopBehavior StopBehavior)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LagerDebuggerEventMenu", "Server_LWMRequestEventLogging");

	Params::LagerDebuggerEventMenu_Server_LWMRequestEventLogging Parms{};

	Parms.EventID = std::move(EventID);
	Parms.StopBehavior = StopBehavior;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LagerDebuggerRuntime.LagerDebuggerEventMenu.Server_LWMTriggerSpawnEvent
// (Final, Net, NetReliable, Native, Event, Private, NetServer)
// Parameters:
// struct FLagerEventID                    EventID                                                (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   RuntimeSpawnDataIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ALagerDebuggerEventMenu::Server_LWMTriggerSpawnEvent(const struct FLagerEventID& EventID, int32 RuntimeSpawnDataIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LagerDebuggerEventMenu", "Server_LWMTriggerSpawnEvent");

	Params::LagerDebuggerEventMenu_Server_LWMTriggerSpawnEvent Parms{};

	Parms.EventID = std::move(EventID);
	Parms.RuntimeSpawnDataIndex = RuntimeSpawnDataIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LagerDebuggerRuntime.LagerDebuggerEventMenu.Server_OnSelectionChanged
// (Final, Net, NetReliable, Native, Event, Private, NetServer)
// Parameters:
// struct FLagerEventID                    NewSelectedEventID                                     (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)

void ALagerDebuggerEventMenu::Server_OnSelectionChanged(const struct FLagerEventID& NewSelectedEventID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LagerDebuggerEventMenu", "Server_OnSelectionChanged");

	Params::LagerDebuggerEventMenu_Server_OnSelectionChanged Parms{};

	Parms.NewSelectedEventID = std::move(NewSelectedEventID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LagerDebuggerRuntime.LagerDebuggerMenu.Server_LWMFlush
// (Final, Net, NetReliable, Native, Event, Private, NetServer)

void ALagerDebuggerMenu::Server_LWMFlush()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LagerDebuggerMenu", "Server_LWMFlush");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function LagerDebuggerRuntime.LagerDebuggerMenu.Server_LWMSetEventGenerationEnabled
// (Final, Net, NetReliable, Native, Event, Private, NetServer)
// Parameters:
// bool                                    bEnabled                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ALagerDebuggerMenu::Server_LWMSetEventGenerationEnabled(const bool bEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LagerDebuggerMenu", "Server_LWMSetEventGenerationEnabled");

	Params::LagerDebuggerMenu_Server_LWMSetEventGenerationEnabled Parms{};

	Parms.bEnabled = bEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LagerDebuggerRuntime.LagerDebuggerPointProviderMenu.ServerTeleportToPointProvider
// (Final, Net, NetReliable, Native, Event, Private, NetServer)
// Parameters:
// class FString                           PointProviderName                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ALagerDebuggerPointProviderMenu::ServerTeleportToPointProvider(const class FString& PointProviderName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LagerDebuggerPointProviderMenu", "ServerTeleportToPointProvider");

	Params::LagerDebuggerPointProviderMenu_ServerTeleportToPointProvider Parms{};

	Parms.PointProviderName = std::move(PointProviderName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LagerDebuggerRuntime.LagerDebuggerPointProviderMenu.ServerUpdateGatherDistance
// (Final, Net, NetReliable, Native, Event, Private, NetServer)
// Parameters:
// float                                   NewGatherDistance                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ALagerDebuggerPointProviderMenu::ServerUpdateGatherDistance(const float NewGatherDistance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LagerDebuggerPointProviderMenu", "ServerUpdateGatherDistance");

	Params::LagerDebuggerPointProviderMenu_ServerUpdateGatherDistance Parms{};

	Parms.NewGatherDistance = NewGatherDistance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LagerDebuggerRuntime.LagerDebuggerSpawnerDataMenu.Server_LWMForceSpawnActor
// (Final, Net, NetReliable, Native, Event, Private, NetServer, HasDefaults)
// Parameters:
// int32                                   SpawnerDataIndex                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTransform                       Transform                                              (ConstParm, Parm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ALagerDebuggerSpawnerDataMenu::Server_LWMForceSpawnActor(int32 SpawnerDataIndex, const struct FTransform& Transform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LagerDebuggerSpawnerDataMenu", "Server_LWMForceSpawnActor");

	Params::LagerDebuggerSpawnerDataMenu_Server_LWMForceSpawnActor Parms{};

	Parms.SpawnerDataIndex = SpawnerDataIndex;
	Parms.Transform = std::move(Transform);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LagerDebuggerRuntime.LagerDebuggerSpawnerDataMenu.ServerRefresh
// (Final, Net, NetReliable, Native, Event, Private, NetServer)

void ALagerDebuggerSpawnerDataMenu::ServerRefresh()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LagerDebuggerSpawnerDataMenu", "ServerRefresh");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function LagerDebuggerRuntime.LagerDebuggerCheatManager.LagerDebuggerActorMenuEnable
// (Final, Exec, Native, Protected, Const)
// Parameters:
// bool                                    bEnable                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULagerDebuggerCheatManager::LagerDebuggerActorMenuEnable(bool bEnable) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LagerDebuggerCheatManager", "LagerDebuggerActorMenuEnable");

	Params::LagerDebuggerCheatManager_LagerDebuggerActorMenuEnable Parms{};

	Parms.bEnable = bEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LagerDebuggerRuntime.LagerDebuggerCheatManager.LagerDebuggerDensityGridMenuEnable
// (Final, Exec, Native, Protected, Const)
// Parameters:
// bool                                    bEnable                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULagerDebuggerCheatManager::LagerDebuggerDensityGridMenuEnable(bool bEnable) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LagerDebuggerCheatManager", "LagerDebuggerDensityGridMenuEnable");

	Params::LagerDebuggerCheatManager_LagerDebuggerDensityGridMenuEnable Parms{};

	Parms.bEnable = bEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LagerDebuggerRuntime.LagerDebuggerCheatManager.LagerDebuggerEncounterInstanceMenuEnable
// (Final, Exec, Native, Protected, Const)
// Parameters:
// bool                                    bEnable                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULagerDebuggerCheatManager::LagerDebuggerEncounterInstanceMenuEnable(bool bEnable) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LagerDebuggerCheatManager", "LagerDebuggerEncounterInstanceMenuEnable");

	Params::LagerDebuggerCheatManager_LagerDebuggerEncounterInstanceMenuEnable Parms{};

	Parms.bEnable = bEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LagerDebuggerRuntime.LagerDebuggerCheatManager.LagerDebuggerEventInstanceMenuEnable
// (Final, Exec, Native, Protected, Const)
// Parameters:
// bool                                    bEnable                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULagerDebuggerCheatManager::LagerDebuggerEventInstanceMenuEnable(bool bEnable) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LagerDebuggerCheatManager", "LagerDebuggerEventInstanceMenuEnable");

	Params::LagerDebuggerCheatManager_LagerDebuggerEventInstanceMenuEnable Parms{};

	Parms.bEnable = bEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LagerDebuggerRuntime.LagerDebuggerCheatManager.LagerDebuggerEventLoggingMenuEnable
// (Final, Exec, Native, Protected, Const)
// Parameters:
// bool                                    bEnable                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULagerDebuggerCheatManager::LagerDebuggerEventLoggingMenuEnable(bool bEnable) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LagerDebuggerCheatManager", "LagerDebuggerEventLoggingMenuEnable");

	Params::LagerDebuggerCheatManager_LagerDebuggerEventLoggingMenuEnable Parms{};

	Parms.bEnable = bEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LagerDebuggerRuntime.LagerDebuggerCheatManager.LagerDebuggerEventMenuEnable
// (Final, Exec, Native, Protected, Const)
// Parameters:
// bool                                    bEnable                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULagerDebuggerCheatManager::LagerDebuggerEventMenuEnable(bool bEnable) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LagerDebuggerCheatManager", "LagerDebuggerEventMenuEnable");

	Params::LagerDebuggerCheatManager_LagerDebuggerEventMenuEnable Parms{};

	Parms.bEnable = bEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LagerDebuggerRuntime.LagerDebuggerCheatManager.LagerDebuggerMenuEnable
// (Final, Exec, Native, Protected, Const)
// Parameters:
// bool                                    bEnable                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULagerDebuggerCheatManager::LagerDebuggerMenuEnable(bool bEnable) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LagerDebuggerCheatManager", "LagerDebuggerMenuEnable");

	Params::LagerDebuggerCheatManager_LagerDebuggerMenuEnable Parms{};

	Parms.bEnable = bEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LagerDebuggerRuntime.LagerDebuggerCheatManager.LagerDebuggerPointProviderMenuEnable
// (Final, Exec, Native, Protected, Const)
// Parameters:
// bool                                    bEnable                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULagerDebuggerCheatManager::LagerDebuggerPointProviderMenuEnable(bool bEnable) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LagerDebuggerCheatManager", "LagerDebuggerPointProviderMenuEnable");

	Params::LagerDebuggerCheatManager_LagerDebuggerPointProviderMenuEnable Parms{};

	Parms.bEnable = bEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LagerDebuggerRuntime.LagerDebuggerCheatManager.LagerDebuggerSpawnerDataMenuEnable
// (Final, Exec, Native, Protected, Const)
// Parameters:
// bool                                    bEnable                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULagerDebuggerCheatManager::LagerDebuggerSpawnerDataMenuEnable(bool bEnable) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LagerDebuggerCheatManager", "LagerDebuggerSpawnerDataMenuEnable");

	Params::LagerDebuggerCheatManager_LagerDebuggerSpawnerDataMenuEnable Parms{};

	Parms.bEnable = bEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

