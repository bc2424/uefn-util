#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BlueprintMaterialTextureNodes

#include "Basic.hpp"

#include "BlueprintMaterialTextureNodes_classes.hpp"
#include "BlueprintMaterialTextureNodes_parameters.hpp"


namespace SDK
{

// Function BlueprintMaterialTextureNodes.BlueprintMaterialTextureNodesBPLibrary.CreateMIC_EditorOnly
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UMaterialInterface*               Material                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Name_0                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMaterialInstanceConstant*        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMaterialInstanceConstant* UBlueprintMaterialTextureNodesBPLibrary::CreateMIC_EditorOnly(class UMaterialInterface* Material, const class FString& Name_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BlueprintMaterialTextureNodesBPLibrary", "CreateMIC_EditorOnly");

	Params::BlueprintMaterialTextureNodesBPLibrary_CreateMIC_EditorOnly Parms{};

	Parms.Material = Material;
	Parms.Name_0 = std::move(Name_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintMaterialTextureNodes.BlueprintMaterialTextureNodesBPLibrary.RenderTarget_SampleRectangle_EditorOnly
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class UTextureRenderTarget2D*           InRenderTarget                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     InRect                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FLinearColor>             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FLinearColor> UBlueprintMaterialTextureNodesBPLibrary::RenderTarget_SampleRectangle_EditorOnly(class UTextureRenderTarget2D* InRenderTarget, const struct FLinearColor& InRect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BlueprintMaterialTextureNodesBPLibrary", "RenderTarget_SampleRectangle_EditorOnly");

	Params::BlueprintMaterialTextureNodesBPLibrary_RenderTarget_SampleRectangle_EditorOnly Parms{};

	Parms.InRenderTarget = InRenderTarget;
	Parms.InRect = std::move(InRect);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintMaterialTextureNodes.BlueprintMaterialTextureNodesBPLibrary.RenderTarget_SampleUV_EditorOnly
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class UTextureRenderTarget2D*           InRenderTarget                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        UV                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FLinearColor UBlueprintMaterialTextureNodesBPLibrary::RenderTarget_SampleUV_EditorOnly(class UTextureRenderTarget2D* InRenderTarget, const struct FVector2D& UV)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BlueprintMaterialTextureNodesBPLibrary", "RenderTarget_SampleUV_EditorOnly");

	Params::BlueprintMaterialTextureNodesBPLibrary_RenderTarget_SampleUV_EditorOnly Parms{};

	Parms.InRenderTarget = InRenderTarget;
	Parms.UV = std::move(UV);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintMaterialTextureNodes.BlueprintMaterialTextureNodesBPLibrary.SetMICBlendMode_EditorOnly
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UMaterialInstanceConstant*        Material                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EBlendMode                              BlendMode                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBlueprintMaterialTextureNodesBPLibrary::SetMICBlendMode_EditorOnly(class UMaterialInstanceConstant* Material, EBlendMode BlendMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BlueprintMaterialTextureNodesBPLibrary", "SetMICBlendMode_EditorOnly");

	Params::BlueprintMaterialTextureNodesBPLibrary_SetMICBlendMode_EditorOnly Parms{};

	Parms.Material = Material;
	Parms.BlendMode = BlendMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintMaterialTextureNodes.BlueprintMaterialTextureNodesBPLibrary.SetMICDitheredLODTransition_EditorOnly
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UMaterialInstanceConstant*        Material                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DitheredLODTransition                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBlueprintMaterialTextureNodesBPLibrary::SetMICDitheredLODTransition_EditorOnly(class UMaterialInstanceConstant* Material, bool DitheredLODTransition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BlueprintMaterialTextureNodesBPLibrary", "SetMICDitheredLODTransition_EditorOnly");

	Params::BlueprintMaterialTextureNodesBPLibrary_SetMICDitheredLODTransition_EditorOnly Parms{};

	Parms.Material = Material;
	Parms.DitheredLODTransition = DitheredLODTransition;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintMaterialTextureNodes.BlueprintMaterialTextureNodesBPLibrary.SetMICIsThinSurface_EditorOnly
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UMaterialInstanceConstant*        Material                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsThinSurface                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBlueprintMaterialTextureNodesBPLibrary::SetMICIsThinSurface_EditorOnly(class UMaterialInstanceConstant* Material, bool bIsThinSurface)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BlueprintMaterialTextureNodesBPLibrary", "SetMICIsThinSurface_EditorOnly");

	Params::BlueprintMaterialTextureNodesBPLibrary_SetMICIsThinSurface_EditorOnly Parms{};

	Parms.Material = Material;
	Parms.bIsThinSurface = bIsThinSurface;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintMaterialTextureNodes.BlueprintMaterialTextureNodesBPLibrary.SetMICScalarParam_EditorOnly
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UMaterialInstanceConstant*        Material                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ParamName                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBlueprintMaterialTextureNodesBPLibrary::SetMICScalarParam_EditorOnly(class UMaterialInstanceConstant* Material, const class FString& ParamName, float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BlueprintMaterialTextureNodesBPLibrary", "SetMICScalarParam_EditorOnly");

	Params::BlueprintMaterialTextureNodesBPLibrary_SetMICScalarParam_EditorOnly Parms{};

	Parms.Material = Material;
	Parms.ParamName = std::move(ParamName);
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintMaterialTextureNodes.BlueprintMaterialTextureNodesBPLibrary.SetMICShadingModel_EditorOnly
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UMaterialInstanceConstant*        Material                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EMaterialShadingModel                   ShadingModel                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBlueprintMaterialTextureNodesBPLibrary::SetMICShadingModel_EditorOnly(class UMaterialInstanceConstant* Material, EMaterialShadingModel ShadingModel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BlueprintMaterialTextureNodesBPLibrary", "SetMICShadingModel_EditorOnly");

	Params::BlueprintMaterialTextureNodesBPLibrary_SetMICShadingModel_EditorOnly Parms{};

	Parms.Material = Material;
	Parms.ShadingModel = ShadingModel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintMaterialTextureNodes.BlueprintMaterialTextureNodesBPLibrary.SetMICTextureParam_EditorOnly
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UMaterialInstanceConstant*        Material                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ParamName                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTexture2D*                       Texture                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBlueprintMaterialTextureNodesBPLibrary::SetMICTextureParam_EditorOnly(class UMaterialInstanceConstant* Material, const class FString& ParamName, class UTexture2D* Texture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BlueprintMaterialTextureNodesBPLibrary", "SetMICTextureParam_EditorOnly");

	Params::BlueprintMaterialTextureNodesBPLibrary_SetMICTextureParam_EditorOnly Parms{};

	Parms.Material = Material;
	Parms.ParamName = std::move(ParamName);
	Parms.Texture = Texture;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintMaterialTextureNodes.BlueprintMaterialTextureNodesBPLibrary.SetMICTwoSided_EditorOnly
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UMaterialInstanceConstant*        Material                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TwoSided                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBlueprintMaterialTextureNodesBPLibrary::SetMICTwoSided_EditorOnly(class UMaterialInstanceConstant* Material, bool TwoSided)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BlueprintMaterialTextureNodesBPLibrary", "SetMICTwoSided_EditorOnly");

	Params::BlueprintMaterialTextureNodesBPLibrary_SetMICTwoSided_EditorOnly Parms{};

	Parms.Material = Material;
	Parms.TwoSided = TwoSided;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintMaterialTextureNodes.BlueprintMaterialTextureNodesBPLibrary.SetMICVectorParam_EditorOnly
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UMaterialInstanceConstant*        Material                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ParamName                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBlueprintMaterialTextureNodesBPLibrary::SetMICVectorParam_EditorOnly(class UMaterialInstanceConstant* Material, const class FString& ParamName, const struct FLinearColor& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BlueprintMaterialTextureNodesBPLibrary", "SetMICVectorParam_EditorOnly");

	Params::BlueprintMaterialTextureNodesBPLibrary_SetMICVectorParam_EditorOnly Parms{};

	Parms.Material = Material;
	Parms.ParamName = std::move(ParamName);
	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintMaterialTextureNodes.BlueprintMaterialTextureNodesBPLibrary.Texture2D_SampleUV_EditorOnly
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class UTexture2D*                       Texture                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        UV                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FLinearColor UBlueprintMaterialTextureNodesBPLibrary::Texture2D_SampleUV_EditorOnly(class UTexture2D* Texture, const struct FVector2D& UV)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BlueprintMaterialTextureNodesBPLibrary", "Texture2D_SampleUV_EditorOnly");

	Params::BlueprintMaterialTextureNodesBPLibrary_Texture2D_SampleUV_EditorOnly Parms{};

	Parms.Texture = Texture;
	Parms.UV = std::move(UV);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintMaterialTextureNodes.BlueprintMaterialTextureNodesBPLibrary.UpdateMIC
// (Final, Native, Static, Public)
// Parameters:
// class UMaterialInstanceConstant*        MIC                                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBlueprintMaterialTextureNodesBPLibrary::UpdateMIC(class UMaterialInstanceConstant* MIC)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BlueprintMaterialTextureNodesBPLibrary", "UpdateMIC");

	Params::BlueprintMaterialTextureNodesBPLibrary_UpdateMIC Parms{};

	Parms.MIC = MIC;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

