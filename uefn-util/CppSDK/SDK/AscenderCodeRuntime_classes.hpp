#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AscenderCodeRuntime

#include "Basic.hpp"

#include "FortniteGame_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "ModularGameplay_classes.hpp"
#include "GameplayAbilities_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// Class AscenderCodeRuntime.FortCheatManager_AscenderZipline
// 0x0000 (0x0030 - 0x0030)
class UFortCheatManager_AscenderZipline final : public UChildCheatManager
{
public:
	void RemoveAscenders(const bool bRemoveAscendersOn);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortCheatManager_AscenderZipline">();
	}
	static class UFortCheatManager_AscenderZipline* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortCheatManager_AscenderZipline>();
	}
};

// Class AscenderCodeRuntime.FortPawnComponent_AscenderMontageProvider
// 0x0020 (0x00F8 - 0x00D8)
class UFortPawnComponent_AscenderMontageProvider final : public UPawnComponent
{
public:
	class UAnimMontage*                           M_Ascending;                                       // 0x00D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                           M_Descending;                                      // 0x00E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                           F_Ascending;                                       // 0x00E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                           F_Descending;                                      // 0x00F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	class UAnimMontage* GetSuitableMontage(const bool bAscending);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortPawnComponent_AscenderMontageProvider">();
	}
	static class UFortPawnComponent_AscenderMontageProvider* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortPawnComponent_AscenderMontageProvider>();
	}
};

// Class AscenderCodeRuntime.FortAscenderZipline
// 0x0410 (0x1548 - 0x1138)
class AFortAscenderZipline final : public AFortAthenaSplineZipline
{
public:
	TMulticastInlineDelegate<void()>              OnAscenderSetupComplete;                           // 0x1138(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class FName                                   SplineTopAttachPointName;                          // 0x1148(0x000C)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bAutoFindSplineEndLocation;                        // 0x1154(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_1155[0x3];                                     // 0x1155(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         SplineOffsetFromGround;                            // 0x1158(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         CableOffsetFromSplineEnd;                          // 0x115C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         SplineLength;                                      // 0x1160(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_1164[0x4];                                     // 0x1164(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            SplineStaticMesh;                                  // 0x1168(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	ESplineMeshAxis                               MeshForwardAxis;                                   // 0x1170(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bHandleReturning;                                  // 0x1171(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_1172[0x2];                                     // 0x1172(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         HandleReturnSpeed;                                 // 0x1174(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bCableDropping;                                    // 0x1178(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_1179[0x3];                                     // 0x1179(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CableDropSpeed;                                    // 0x117C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         YawRotationOffsetWhileUsingHandle;                 // 0x1180(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         YawRotationOffsetWhileSlidingDown;                 // 0x1184(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bUseComplexSplineCollision;                        // 0x1188(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_1189[0x3];                                     // 0x1189(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         SimpleSplineCollisionRadius;                       // 0x118C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         SimpleSplineCollisionHeightExtension;              // 0x1190(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_1194[0x4];                                     // 0x1194(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         DescendMinDistanceFromBottom;                      // 0x1198(0x0038)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         AscendReachedEndHorizontalLaunchSpeed;             // 0x11D0(0x0038)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         AscendReachedEndVerticalLaunchSpeed;               // 0x1208(0x0038)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         AscendJumpedOffHorizontalLaunchSpeed;              // 0x1240(0x0038)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         AscendJumpedOffVerticalLaunchSpeed;                // 0x1278(0x0038)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         DescendReachedEndHorizontalLaunchSpeed;            // 0x12B0(0x0038)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         DescendReachedEndVerticalLaunchSpeed;              // 0x12E8(0x0038)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         DescendJumpedOffHorizontalLaunchSpeed;             // 0x1320(0x0038)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         DescendJumpedOffVerticalLaunchSpeed;               // 0x1358(0x0038)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         HandleActorHitPlayerHorizontalLaunchSpeed;         // 0x1390(0x0038)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         HandleActorHitPlayerVerticalLaunchSpeed;           // 0x13C8(0x0038)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FVector                                HandleDestroyBuildingsOverlapExtents;              // 0x1400(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                PlayerDestroyBuildingsOverlapExtents;              // 0x1418(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                InitialSplineEndLocation;                          // 0x1430(0x0018)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                CurrentSplineEndLocation;                          // 0x1448(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                TargetSplineEndLocation;                           // 0x1460(0x0018)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                CurrentHandleLocation;                             // 0x1478(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UPrimitiveComponent>     CurrentInteractComponent;                          // 0x1490(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class AFortPlayerPawn>         PawnUsingHandle;                                   // 0x1498(0x0008)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class AFortPlayerPawn>         PreviousPawnUsingHandle;                           // 0x14A0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USplineMeshComponent*                   SplineMesh;                                        // 0x14A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCapsuleComponent*                      SimpleSplineMeshCollision;                         // 0x14B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class ABuildingActor>          FloorActor;                                        // 0x14B8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<TWeakObjectPtr<class AFortPlayerPawn>> RotationLockedPawns;                               // 0x14C0(0x0010)(ZeroConstructor, Transient, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	uint8                                         Pad_14D0[0x68];                                    // 0x14D0(0x0068)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortLinkToActorComponent*              LinkToActorComponent;                              // 0x1538(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortZiplineLinkComponent*              ZiplineLinkComponent;                              // 0x1540(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void BP_HandlePlayerStartedUsingHandle(class AFortPlayerPawn* Player);
	void BP_HandlePlayerStoppedUsingHandle(class AFortPlayerPawn* Player);
	void BP_HandleStartedLoweringCable();
	void BP_HandleStartedLoweringHandle();
	void BP_HandleStoppedLoweringCable();
	void BP_HandleStoppedLoweringHandle();
	void BP_HandleUpdatedLoweringCable();
	void BP_HandleUpdatedLoweringHandle();
	void BP_OnVolumeReady();
	void FindNewFloor();
	void HandleFloorActorDestroyed(class AActor* Actor);
	void HandleFloorActorHealthChanged();
	void HandlePawnUsingHandleDied(class AFortPawn* DeadPawn);
	void OnRep_InitialSplineEndLocation();
	void OnRep_PawnUsingHandle();
	void OnRep_TargetSplineEndLocation();
	void OnSpawningFromSaveFinish();
	void SetupAscender(const bool bFromConstruction, const bool bFromReplication);
	void SetupEventForSpatialGameplayVolume();

	void ApplyStructureDamage(class ABuildingSMActor* BuildingActor, class AActor* DamageSource) const;
	class UPrimitiveComponent* GetHandleComponent() const;
	class UPrimitiveComponent* GetInteractComponentOverride(class AFortPlayerPawn* InteractingPawn, class UPrimitiveComponent* InteractComponent) const;
	class AFortPlayerPawn* GetPawnUsingHandle() const;
	class UPrimitiveComponent* GetTopComponent() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortAscenderZipline">();
	}
	static class AFortAscenderZipline* GetDefaultObj()
	{
		return GetDefaultObjImpl<AFortAscenderZipline>();
	}
};

}

